/*
================================================================================
NOM DU SERVEUR : La Vie RolePlay Final 5.0.2
UPDATE : 28/07/2017
FILE : http://sa-mp-fr.com/files/file/171-la-vie-roleplay-final/
GITHUB : https://github.com/DarkRider29/LVRP_SAMP

=> La Vie RolePlay ©
- Développeur : DarkRider
- Mappeur : Lurtz59
- Version SA:MP : 0.3.7-R2
- Base : u2c
- Mysql : R41-2
- Streamer : v2.9.1

=> Credits du GameMode :
- La Vie RôlePlay
- SA-MP forum
- Dark_Rider29
- Lurtz59
 [Respectez les crédits merci]

=> Sites Officiels :
- http://www.lvrp.eu/ & http://www.lvrp.fr/
================================================================================
*/
/*

UPDATE v5.0.2 :

Fix loading string from DataBase

*/
/*
================================================================================
									Includes
================================================================================
*/

#include <Streamer> 															// Streamer
#include <a_samp>                												// SA:MP
#include <a_mysql>               												// Gestion du sql
#include <mSelection>                                                    		// Selection
#include <Encrypt>                                                    			// Cryptage sha1
//#include <mapandreas>                                                           // Map San Andreas
//#include <TSConnector>                                                   		// TeamSpeak

/*
================================================================================
									Pragma
================================================================================
*/

#pragma dynamic 16384
//#pragma tabsize 0
//#pragma semicolon 0

/*
================================================================================
									Defines
================================================================================
*/

// Informations
#define SCRIPT_VERSION "LVRP 5.0.1" 											// Version du scripte
#define MAP_NAME "~w~San Andreas" 												// Nom de la map
#define FORUM_NAME "forum.lvrp.fr" 												// Adresse du forum
#define TS_NAME "ts.lvrp.fr"                                           		// Adresse du TeamSpeak3
#define HOST_NAME "[FR] LaVieRolePlay"											// Nom du serveur
#define NICK_NAME "LVRP"                                                        // Initiales du serveur
#define SERVER_NAME "La Vie RolePlay"                               			// Nom complet du serveur

// Identifiants MySQL
#define MYSQL_HOST "127.0.0.1"                                  			// Host (Ip) 
#define MYSQL_USER "root"                                                    	// Utilisateur
#define MYSQL_PASS ""                                                	// Mot de passe
#define MYSQL_DB   "lvrp"                                                    	// Base de données

// Identifiants TeamSpeak
#define TS_HOST "127.0.0.1"                                  				// Host (Ip)
#define TS_USER "serveradmin"                                                	// Utilisateur
#define TS_PASS ""                                                   	// Mot de passe
#define TS_PORT 9987                                                    	    // Port
#define TS_NICK "sampServer"                                                	// Nom

// Streamer
#define NAME_DISTANCE 8.0           											// Distance d'affichage des strings sur les joueurs
#define TICKRATE 100                											// Streamer Define des apparition maximum
#define LITTLE_STREAM_DISTANCE 75.0 											// Distance des petit streamers
#define STREAM_DISTANCE 200.0       											// Distance normal des sreamers
#define LABEL_STREAM_DISTANCE 40.0  											// Distance des streamers label
#define PICKUP_STREAM_DISTANCE 50.0 											// Distance des streamers Pickup

// Couleurs
#define 			COLOR_RED               0xFF6347AA              			// Couleur rouge / Color red
#define 			COLOR_YELLOW            0xDABB3EAA              			// Couleur jaune / Color yellow
#define 			COLOR_BLUE              0x2641FEAA              			// Couleur bleu / Color blue
#define 			COLOR_GREY              0xAFAFAFAA              			// Couleur gris / Color grey
#define 			COLOR_PINK              0xFFC0CBAA              			// Couleur rose / Color pink
#define 			COLOR_WHITE             0xFFFFFFAA              			// Couleur blanc / Color white
#define 			COLOR_CHOCOLATE         0xD2691EFF              			// Couleur marron / Color chocolat
#define 			COLOR_PURPLE            0xD891F6F6              			// Couleur mauve / Color purple
#define 			COLOR_ORANGE            0xFF9900AA              			// Couleur orange / Color orange
#define 			COLOR_GREEN             0x9EC73DAA              			// Couleur verte / Color green
#define             COLOR_VIP               0xFFDC00FF              			// Couleur VIP / Color VIP
#define 			COLOR_NOACCES           0xFF0069FF              			// Couleur des NoAcces aux commandes
#define 			COLOR_USAGE 			0xD2D2D2FF     						// Couleur des |Action|
#define             COLOR_VEHICLE           0x00FFA0FF              			// Couleur des » Véhicule «
#define 			COLOR_BANK 				0xAADD66FF              			// Couleur des {AADD66}» Banque «{FFFFFF}
#define 			COLOR_POLICE			0x007DFFFF              			// Couleur des |Police|
#define 			COLOR_BK 				0x0000FFFF              			// Couleur du : Besoin d'assistance
#define 			COLOR_INFO				0x3F4373F6 							// Couleur des » Info « (0x6200CCF6)
#define             COLOR_FBI               0x9999EEFF							// Couleur des |Fbi|
#define 			COLOR_STATS 			0xF6A90000      					// Couleur des |Inventaire|, |Generale| . . .
#define 			COLOR_GANG 				0x00B300F6    						// Couleur des |Gang|
#define             COLOR_MAFIA             0x464646FF              			// Couleur des |Mafia|
#define 			COLOR_BIZ 				0x70ABFEFF        					// Couleur des |Biz|
#define             COLOR_MAIRIE            0xFF6E00FF              			// Couleur des {FF6E00}» Mairie «{FFFFFF}
#define             COLOR_HOUSE             0xB400FFFF              			// Couleur des {00C600}» Maison «{FFFFFF}
#define             COLOR_JOB               0x7D0000FF              			// Couleur des {78769D}» Job «{FFFFFF}
#define             COLOR_GARAGE            0x10ce96AA              			// Couleur des {10ce96}» Garage «{FFFFFF}
#define             COLOR_SERVER            0x009FA1FF              			// Couleur des {005660}» Serveur «{C8C8C8}
#define 			COLOR_ALLDEPT           0xFF8282AA                          // Couleur des {FF8282}» Médecin «{FFFFFF}
#define 			COLOR_POMPIER           0xE600FFAA                          // Couleur des {C7006C}» Pompier «{FFFFFF}
#define 			COLOR_WT  				0x10ce96AA              			// Couleur Talki walki
#define 			JAUNE  					0xFFFF00FF              			// Couleur jaune
#define            	CMDS_LABEL			    0x484BCAEE              			// Couleur des TextLabel des commandes/aide/...
#define    			INT_LABEL_COLOR			0xB462F6EE              			// Couleur des TextLabel des Nom des interrieurs
#define             INTERACTION_COLOR       0x9EC73DF6              			// Couleur des inbteractions
#define 			PM_INCOMING_COLOR       0xBBA033AA                          // Couleur PM entrant
#define 			PM_OUTGOING_COLOR       0xE5C43EAA                          // Couleur PM sortant
#define 			COLOR_ASKQ              0xFF0000FF                          // Couleur /i /question
#define 			COLOR_CASIER         	0x8D8DFF00                          // Couleur QG Crimes Casier
#define 			COLOR_FADE1             0xE6E6E6E6                          // ProxDetector
#define 			COLOR_FADE2             0xC8C8C8C8                          // ProxDetector
#define 			COLOR_FADE3             0xAAAAAAAA                          // ProxDetector
#define 			COLOR_FADE4             0x8C8C8C8C                          // ProxDetector
#define 			COLOR_FADE5             0x6E6E6E6E                          // ProxDetector
#define 			COLOR_NEWS              0x458E1DAA                          // Couleur San News global
#define 			COLOR_GANG_1 			0xFFF68000              			// Couleur des GangWars : Orange
#define 			COLOR_GANG_2 			0xFFF6D300              			// Couleur des GangWars : Jaune
#define 			COLOR_GANG_3 			0xFFF60000              			// Couleur des GangWars : Rouge
#define 			COLOR_GANG_4 			0xFF8C750D              			// Couleur des GangWars : Marron
#define 			COLOR_GANG_5 			0xFFAA00AA              			// Couleur des GangWars : Violet
#define 			COLOR_GANG_6 			0xFF000026              			// Couleur des GangWars : Gris
#define 			COLOR_GANG_7 			0xFFF600F6              			// Couleur des GangWars : Rose
#define 			COLOR_GANG_8 			0xFF0083F6              			// Couleur des GangWars : Bleu Clair
#define 			COLOR_GANG_9 			0xFF0000F6              			// Couleur des GangWars : Bleu Foncé
#define 			COLOR_GANG_10 			0xFF00BC00              			// Couleur des GangWars : Vert Clair
#define 			COLOR_GANG_11 			0xFF006800              			// Couleur des GangWars : Vert Foncé
#define 			COLOR_DEFAULT 			0xFF888888     						// Couleur des GangWars : Non taggé
#define 			RED                     0xAA3333AA
#define 			COLOR_LIGHTRED          0xFF0000AA
#define 			COLOR_LIGHTBLUE         0x33CCFFAA
#define 			COLOR_LIGHTGREEN        0x9ACD32AA
#define 			COLOR_LIMEGREEN   		0x32CD32AA
#define 			TEAM_RADIO_COLOR        0xF2D068FF
#define 			BOX_INFO 				"{3F4373}"

// Variables (Réglages actuels pour San Andreas RolePLay v3)                    //                                              (Defaut: LVRP = LOS SANTOS)
#define MAX_CITY 13                                                             // Nombre de ville dans San Andreas             (Defaut: 13) (NE PAS MODIFIER)
#define MAX_STATION 20                                                          // Nombre de station service                    (Defaut: 20) (NE PAS MODIFIER)
#define MAX_SPRAY 9                                                             // Nombre de Pay'N Spray                        (Defaut: 9) (NE PAS MODIFIER)
#define MAX_TUNING 3                                                            // Nombre de Tunning                            (defaut: 3) (NE PAS MODIFIER)
#define MAX_OPERATOR 4                                                          // Nombre d'opérateur tel                       (defaut: 4) (NE PAS MODIFIER)
#define MAX_INTERIOR 50                                                         // Nombre d'interieurs dyn.                     (Defaut: 50)
#define MAX_DEALSHIP 50                                                         // Nombre concession.                     		(Defaut: 50)
#define MAX_SPIKE 100                   										// Nombre Max de herses                         (Defaut: 100)
#define MAX_BAR 150                     										// Nombre Max de barrages                       (Defaut: 100)
#define MAX_HOUSE 2000 															// Nombre Max de maisons                        (Defaut: 500)
#define MAX_CAR 2000                  											// Nombre Max de véhicules                      (Defaut: 2000)
#define MAX_FACTION 20                											// Nombre Max de Factions (Gang & Mafia)        (Defaut: 20)
#define MAX_BIZZ 500                    										// Nombre Max de bizz                           (Defaut: 100)
#define MAX_SBIZZ 41                                                            // Nombre de Bizz Unique                        (Defaut: 50)
#define MAX_BUSSTOP 250                  										// Nombre Max d'arrets de bus                   (Defaut: 70)
#define MAX_GPS 250                      										// Nombre Max de pos de GPS                     (Defaut: 50)
#define MAX_FURNITURES 50                                                       // Nombre Max d'object mappable par maison      (Defaut: 40)
#define MAX_GARAGE 500                  										// Nombre Max de garages                        (Defaut: 400)
#define MAX_ATM 250                      										// Nombre Max d'atms                            (Defaut: 50)
#define MAX_TRASHCAR 200                 										// Nombre Max de carc$ de voiture           	(Defaut: 100)
#define MAX_SEED 500                    										// Nombre Max de plants                         (Defaut: 250)
#define MAX_TRASH 250                     										// Nombre Max de grosses poubelles              (Defaut: 50)
#define MAX_PHONECAB 250                 										// Nombre Max de cabines téléphoniques          (Defaut: 40)
#define MAX_MAP 100                      										// Nombre Max de maps                           (Defaut: 20)
#define MAX_DISTRIB 250                  										// Nombre Max de distributeurs                  (Defaut: 60)
#define MAX_FINE 400                                                            // Nombre Max d'amendes de police               (Defaut: 100)
#define MAX_DEADBODY 500                                                        // Nombre Max de cadavres                       (Defaut: 50)
#define MAX_TREE 250                                                            // Nombre Max de sapins de noel                 (Defaut: 50)
#define MAX_SIGN 250                                                            // Nombre Max de panneaux                       (Defaut: 50)
#define MAX_ZONE 50                                                             // Nombre Max de zones Anti-DM                  (Defaut: 20)
#define MAX_CAMERA 50                                                           // Nombre Max de radars                         (Defaut: 40)
#define MAX_BIN 400                                                          	// Nombre Max de petites poubelles              (Defaut: 50)
#define MAX_GATE 100                                                          	// Nombre Max de portes              			(Defaut: 50)
#define MAX_DROPS 500               											// Nombre Max de drop                           (Defaut: 100)
#define MAX_BALL 30                                                             // Nombre Max de ballons de basket              (Defaut: 30)
#define MAX_TAG 200                                                             // Nombre Max de Tag                            (Defaut: 50)
#define MAX_HLM 30                                                              // Nombre Max de HLM                            (Defaut: 30)
#define MAX_AD 50                                                               // Nombre Max de panneaux publicitaire          (Defaut: 50)

// Car Define
#define CAR_OWN 0
#define CAR_LSPD 1
#define CAR_SFPD 2
#define CAR_LVPD 3
#define CAR_SASD 4
#define CAR_FBI 5
#define CAR_GOUVLS 6
#define CAR_GOUVSF 7
#define CAR_GOUVLV 8
#define CAR_GOUVSA 9
#define CAR_SN 10
#define CAR_LOC_MOTO 11															// Moto de location
#define CAR_LOC_CAR 12															// Voiture de location
#define CAR_LOC_BIKE 13															// Vélo de location
#define CAR_LOC_BOAT 14              											// Bateau de location
#define CAR_LOC_PLANE 15               											// Avion de location
#define CAR_SCHOOL 16        													// Auto-école
#define CAR_PIZZA 31                                                            // Job : Livreur de pizza
#define CAR_FARMER 32                  											// Job : Fermier
#define CAR_SWEEPER 33                 											// Job : Mineur
#define CAR_TRASH 34                  											// Job : Eboueur
#define CAR_WORKER 35                  											// Job : Ouvrier
#define CAR_PILOTE 36             												// Job : Pilote de ligne
#define CAR_POST 37                                                             // Job : Facteur
#define CAR_FISHER 38                  											// Job : Pecheur
#define CAR_VALET 39                  											// Job : Voiturier
#define CAR_TRUCKER 40                       									// Job : Livreur marchandises
#define CAR_MEDIC 41                        									// Job : Pilote de train
#define CAR_BUS 42                          									// Job : Chauffeur de bus
#define CAR_FUND 49                          									// Job : Mecano
#define CAR_MECANO 47                          									// Job : Transporteur de fond
#define CAR_BOT 60                                                              // Véhicule de bot
#define CAR_EVENT 61                                                            // Véhicule d'évente
#define CAR_RESERVED 998                      									// Reserve
#define CAR_SELL 999       														// Vehicule à vendre
#define CAR_CREATED -1     														// Vehicule qui vien d'etre créé

#define Car_Reserve_x 2584.3652             									// Pos x du tp de la reserve
#define Car_Reserve_y 2820.3538             									// Pos y du tp de la reserve
#define Car_Reserve_z 56.7365               									// Pos z du tp de la reserve
#define Car_Reserve_a 184.9872              									// Angle de tp de la reserve
#define MAX_SPEED 215                                                           // Vitesse Max des voitures (!=avions)
#define SPEED_HIGHT 110                                                         // Vitesse auto-route (Defaut : 110)
#define SPEED_CAMPAIGN 90                                                       // Vitesse hors agglomération  (Defaut: 90)
#define SPEED_NORMAL 70                                                         // Vitesse en ville (Defaut : 70)
#define BIKE_SPEED 40                                                           // Vitesse Max des vélos (Default : 40)
#define CAR_INT_DEATH 3999                                                      // Virtual world des véhicules en réparation après explosion (Default : 3999)
#define FOUR_PRICE 1000                                                         // Prix pour recup un véhicule à la fourrière
#define BANK_HACK_TIME 100                                                      // Temps du hack de la banque (Defaut: 100)
#define BANK_ROB_TIME 480                                                       // Temps avant de re-pouvoir braquer (Defaut : 480)
#define PING_KICK 500                                                           // Ping max avant kick
#define GANG_BIZZ_TIME 360                                                      // Durée du braquage d'un biz (gang)
#define SEED_WEED 		19473                                                   // Model Weed
#define SEED_COCA 		802                                                     // Model Coca
#define SEED_MUSHROOM 	2194                                                    // Model champignon
#define SEED_SASSAFRAS 	861                                                     // Model sassafras
#define DEALER_PRICE 20                                                         // Prix vente de weed aux bots
#define SEED_PRICE 10                                                           // Prix de la graine de weed
#define ADDTIMER 60000                                                          // Temps avant de repouvoir faire une pub au san news
#define DROP_TIME 30               												// Nombre de minutes que les objet restent sur la map.
#define WALK_DEFAULT    0
#define WALK_NORMAL     1
#define WALK_PED        2
#define WALK_GANGSTA    3
#define WALK_GANGSTA2   4
#define WALK_OLD        5
#define WALK_FAT_OLD    6
#define WALK_FAT        7
#define WALK_LADY      	8
#define WALK_LADY2      9
#define WALK_WHORE      10
#define WALK_WHORE2     11
#define WALK_DRUNK     	12
#define WALK_BLIND     	13
#define TAX_HOUSE 	50                                                          // Taxe par maison
#define TAX_BIZZ 	75                                                          // Taxe par biz
#define TAX_CAR 	25                                                          // Taxe par voiture
#define TAX_GARAGE  10                                                          // Taxe par garage
#define JOB_TIME 30                                                             // Temps de travail pour obtenir la paye (jobs)
#define DUTY_TIME 30                                                            // Temps de travail pour obtenir la paye (factions légales)
#define MAX_CHANNEL 50                                                          // Max de canaux pour TSConnector
#define MAX_ACCOUNT_IP 3                                                        // Max compte par ip
#define DIALOGID 9999                                                           //
#define NO_ONE "Aucun"                                                          // String no owner
#define CAN_ROB_TIME_POCKET 600                                                 // Temps avant de pouvoir refaire un pickpocket
#define CAN_ROB_TIME_BIZZ 7200                                                  // Temps avant de pouvoir rebraquer un biz
#define CAN_ROB_TIME_CAR 3600                                                   // Temps avant de pouvoir rebraquer une voiture
#define CAN_ROB_TIME_BANK 18000                                                 // Temps avant de pouvoir rebraquer une banque
#define DELETE_VEHICLE 10                                                   	// Temps suppréssion véhicule à la deconnexion en minutes (Useless, cf SARP v3)
#define SPECIAL_ACTION_PISSING 68
#define ANNOUNCES 14
#define MEDIC_TIME 35
#define LICENSE_POINT 100                                                       // Prix d'achat d'un point de permis

#undef MAX_PLAYERS
#define MAX_PLAYERS (100)

// Ascenseur
#define ELEVATOR_SPEED      (5.0)   				// Vitesse de mouvement de l'ascensseur.
#define DOORS_SPEED         (4.0)   				// Vitesse de mouvement des portes.
#define ELEVATOR_WAIT_TIME  (5000)
#define DIALOG_ID           (874)
#define X_DOOR_CLOSED       (1786.627685)
#define X_DOOR_R_OPENED     (1785.027685)
#define X_DOOR_L_OPENED     (1788.227685)
#define GROUND_Z_COORD      (14.511476)
#define ELEVATOR_OFFSET     (0.059523)
#define ELEVATOR_STATE_IDLE     (0)
#define ELEVATOR_STATE_WAITING  (1)
#define ELEVATOR_STATE_MOVING   (2)
#define INVALID_FLOOR           (-1)

/*
================================================================================
									Forwards
================================================================================
*/

forward SetPlayerSpawn(playerid);
forward OnPlayerLogin(playerid,pass[]);
forward car_EndTest(playerid,carid);                                            // Fin du test du véhicule d'une concess
forward uniquebizz_PaySpray(playerid, biz); 									// Apres être entré dans le pay'n sray
forward gym_TestCombatStyle(playerid,article);              					// Test d'une technique de combat
forward skill_Trainning(playerid);                                              // Entrainement d'une arme
forward bank_ResetRob();                                                        // Timer pour reset le timer de braquage
forward bank_TakeMoney(playerid);                                               // Timer d'attente lors de l'obtention de l'argent au braquage de banque
forward inscription_StartIntro(playerid);                                       // Début de l'inscription
forward inscription_EndIntro(playerid);                                         // Fin de l'inscription
forward inscription_MoveObject(playerid,type);                                  // Déplacement des objets de l'intro
forward Encore_Lights(light1, light2, light3, light4);                          // **
forward CommencementBlink(playerid);                                            // *
forward TimerBlinkingLights(carid);                                             // * CLignotants
forward TimerBlinkingLights2(carid);                                            // *
forward ShutOffBlinkingLights(playerid);                                        // **
forward anticheat_Sobeit(playerid);                                             // AntiCheat sobeit
forward anticheat_Sobeit2(playerid);                                            // ANtiCheat sobeit
forward _UpdateFadeTimer();                                                     // ** Fader
forward OnFadeComplete(playerid,beforehold);                                    // ** //
forward fire_StartFire(Float:x,Float:y,Float:z);                                // Création d'un feu pour les pompiers
forward job_ResetFreeze(playerid,other);            							// Defreeze le joueur qui peche
forward job_Apply(playerid, jobid, stepid);                                     // Job
forward mariage_Step(playerid,giveplayerid,botid,stepid);                       // Etapes du mariage
forward atm_Repair(id,phase);                                                   // Réparation ATM après vandalisme
forward boombox_Refresh();                                                      // Actualisation des boombox
forward speedometer_Blinking(playerid,type);                                    // Clignotants
forward camera_RemoveFlash(playerid);                                           // Cache le TD du flash du radar
forward camera_Update(a);                                                       // Effet doppler
forward WalkAnim(playerid);                                                     // Animation de la marche perso
forward RunAnim(playerid);                                                      // Idem pour la course
forward body_Remove(id);                                                        // Suppression du cadavre
forward npc_Bus(id);                                							// **
forward npc_Train(id);                                                          // *  NPCS
forward npc_Tram(id);                                                           // **
forward payday_HideTexts(playerid);                                             // Cache les TD du payday
forward MySQLConnect(sqlhost[], sqluser[], sqlpass[], sqldb[]);                 // Connexion a la DB
forward MySQLDisconnect();                                                      // Deconnexion de la DB
forward MySQLCheckIp(ip[]);                                                     // Check si l'ip existe deja plusieurs fois (MAX_ACCOUNT_IP)
forward MySQLCheckAccountLocked(sqlplayerid);                                   // Renvoit TRUE si le compte est lock
forward MySQLCheckAccountOther(sqlplayerid);                                    // Renvoit TRUE si le compte est lock
forward MySQLCheckIPBanned(ip[]);                                               // Renvoit TRUE si l'IP est bannie
forward MySQLCheckConnexion();                                                  // Toujours connecté à la DB ?
forward MySQLUpdatePlayerIntSingle(sqlplayerid, sqlvalname[], sqlupdateint);    // Update une seule valeur (table users)
forward MySQLUpdatePlayerCharSingle(sqlplayerid, sqlvalname[], sqlupdateint[]); // Update une seule chaine de caractère (table users)
forward MySQLAddLoginRecord(sqlplayerid, ipaddr[]);                             // Ajoute une entrée dans la table Logins
forward MySQLCheckAccount(sqlplayersname[]);                                    // Renvoit l'ID sql d'un compte s'il existe
forward MySQLFetchAcctSingle(sqlplayerid, sqlvalname[], sqlresult[]);           //                      //
forward MySQLCreateAccount(newplayersname[], newpassword[], mail[], sex, origin, lang, age, regcity);// Crée pour le compte sur un UCP
forward MySQLCheckChar(string[]);                                               //
forward MySQLBan(playerid,by,reason[],times);									// Ban Mysql
forward MySQLReloadBans();                                                      // Rechargement des bans temps
forward MySQLKick(playerid,by,reason[]);                                        // Kick Mysql
forward MySQLJail(playerid,by,reason[],times);                                  // Jail Mysql
forward MySQLGetNameWithId(sql_id,resultName[MAX_PLAYER_NAME]);                 // Renvoie le nom du joueur à partir de son SQLid
forward anime_Casque(playerid);                                                 // Annimatio du casque (/casque)
forward RemiX_Time_Tools();         											// Reboot automatique du serveur.
forward MeteoAleatoire();                                                       // Météo
forward lotto(number);                                                          // lotto !
forward defreeze(playerid);                         							// Defreeze du joueur
forward ClearAnim(playerid);                                                    // Arrêter l'annim en cours
forward CommeBackOff(playerid);                     							// Timer restant du comeback
forward TimerKick(playerid);                                                    // Kick
forward UnsetFirstSpawn(playerid);                                              // Timer fin du /comeback
forward ClearKnock(playerid);                                                   // Useless
forward server_AntiHack(playerid);                                              // Timer de connexion
forward server_TimerArmour(playerid);                                           // Timer armure
forward server_FenceRoad(fence,stat);                                           // Ouverture fermeture passage à niveau
forward player_ResetTimeRapport(playerid);                                      // Timer reset du temps d'attente des rapports et questions
forward PlayerconnectPos1(playerid);                                            //
forward TimerConnectOff(playerid);                                              // Kill le timer + Reset la vue
forward TimersInit();                                                           // Start de timers
forward timer_1s();                      										// Timer répétif toutes les 1s
forward timer_2s();                                                             // Timer répétif toutes les 2s
forward timer_5s();                                                             // Timer répétif toutes les 5s
forward timer_1mn();                      										// Timer répétif toutes les 1 mns
forward timer_90s();                      										// Timer répétif toutes les 80s (1mn 20)
forward timer_110s();                      										// Timer répétif toutes les 100s (1mn 40)
forward timer_5mns();                         									// Timer répétif toutes les 5mn
forward timer_30mns();                        									// Timer répétif toutes les 30 mins
forward timer_1h();                                                             // Timer répétif toutes les 1 heure
forward timer_Decrement(i);                                                     // Timer répétif
forward split(const strsrc[], strdest[][], delimiter);                          // Séparer un mot par un signe
forward GameModeInitExitFunc();                                                 // Raboot du Serveur
forward GameModeExitFunc();                                                     // Prépation du reboot
forward AddsOn();                                                               // Pub
forward StartingTheVehicle(playerid);                                           // Démarrage véhicule
forward StartingTheVehicleVoler(playerid);                                      // Démarrage véhicule voler (/gang voler voiture)
forward ExplodeShamal(vehicleid);                                               // Eplosion intérieur shamal si crash
forward Decodage(playerid);                                                     // Décodage de la porte de la banque
forward StopCameraEffect(playerid);                                             // Arrêt des effets des drogues et alcool
forward chargement(playerid);                                                   // Timer de chargement pour le mapping
forward CallElevator(playerid, floorid);                                        // Elevateur San News
forward ShowElevatorDialog(playerid);
forward Float:GetElevatorZCoordForFloor(floorid);
forward Float:GetDoorsZCoordForFloor(floorid);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward Elevator_Boost(floorid);
forward Elevator_TurnToIdle();
/*forward teamspeak_Connect(tshost[], tsport, tsuser[], tspass[], tsnick[]);
forward teamspeak_CreateChannel(name[64],desc[128],TSC_CHANNELTYPE:type,pass[16]);
forward teamspeak_DeleteChannel(id);
forward teamspeak_DeleteAllChannels();
forward teamspeak_IsPlayerConnected(playerid);*/
forward beta_CheckKey(playerid, betaKey);                                       // Check de la clef beta
forward CreateDynamicLvrpActor(modelid, Float:X, Float:Y, Float:Z, Float:Rotation, vworld, bool:vulnera ,type, varia, labelHead[]); // Création actor
forward DestroyDynamicLvrpActor(actorid);                                           // Sup actor
forward SetActorChatBubble(playerid, text[], color, Float:drawdistance, expiretime);// Chat

/*
================================================================================
		 							News
================================================================================
*/
new
	bool:car_Starting[MAX_PLAYERS] = false,          								// Idique si le joueur est en train de démarrer un véhicule
	car_Neon1[MAX_CAR],                   										// Neon 1 du véhicule
	car_Neon2[MAX_CAR],                   										// Neon 2 du véhicule
	bool:car_SafeStatut[MAX_CAR],                								// Si le coffre est ouvert ou fermer
	car_DialogSafe[MAX_PLAYERS],  												// Gestion du coffre d'un vehicule
	bool:car_InSafe[MAX_CAR]=false,               							// Joueur dans le coffre ?
	car_PlayerInSafe[MAX_PLAYERS],                                              // Joueur dans le coffre ?
	car_SellOffer[MAX_PLAYERS],                                                 // vente
	car_SellId[MAX_PLAYERS],                                                    // vente
	car_SellPrice[MAX_PLAYERS],                                                 // vente
	car_IndicatorStatut[MAX_CAR]=0;         									// Si les clignotants sont activés

#define BLINK_TURN_ANGLE 55.0

new Blink[MAX_VEHICLES][2];
new bool:BlinkSide[MAX_VEHICLES];
new Float:BlinkR[MAX_VEHICLES];
new BlinkTrailer[MAX_VEHICLES];
new TrailerVehicle[MAX_VEHICLES];

new bizz_Pickup[MAX_BIZZ],                  									// Pickup du biz
	Text3D:bizz_Label[MAX_BIZZ],            									// Label du biz
	bizz_MapIcon[MAX_BIZZ],                                                     // Icon du Biz
	bool:bizz_IsRob[MAX_BIZZ],                   								// Indique si le bizz est en train d'être voler
	bizz_GestionArticle[MAX_PLAYERS],                                           // Prix de l'article à changer
	bizz_SellOffer[MAX_PLAYERS],
	bizz_SellId[MAX_PLAYERS],
	bizz_SellPrice[MAX_PLAYERS],
	bool:bizz_TodayRob[MAX_BIZZ]=false,                                         // true si le biz a été volé aujourd'hui
	
	uniquebizz_Pickup[MAX_SBIZZ],                  								// Pickup des UniqueBizz
	uniquebizz_Icon[MAX_SBIZZ],                  								// icon des UniqueBizz
	Text3D:uniquebizz_Label[MAX_SBIZZ],       									// Label des Uniquebiz

	house_Pickup[MAX_HOUSE],               										// Pickupp de la maison
	Text3D:house_Label[MAX_HOUSE],         										// Label de la maison
	house_SellOffer[MAX_PLAYERS],                                               // Vente
	house_SellId[MAX_PLAYERS],                                                  // Vente
	house_SellPrice[MAX_PLAYERS],                                               // Vente
	house_ExitTenant[MAX_PLAYERS][MAX_PLAYERS],
	house_UseItem[MAX_PLAYERS],                                                 // Item
	house_FurnituresList[17],                                                   // Listes de furnitures

	gym_StyleBefore[MAX_PLAYERS],                                               // Style de combat avant le test
	gym_TempStyle[MAX_PLAYERS],                                                 // Style de combat temporaire

	skill_WeaponTrainning[MAX_PLAYERS],                                         // Arme en entrainement
	skill_WeaponPhase[MAX_PLAYERS];                                             // Phase de l'entrainement



// Banque
new bank_Blind;                                                                 // Objet porte blindée
new mdpbanque = 0;                                                              // MDP de la porte blindée
new bank_LaserObject[18];                                						// Objets laser de la banque
new JoueurPirateBanque[MAX_PLAYERS];
new JoueurPirateBanqueTemps[MAX_PLAYERS];
new PourcentPiratage[MAX_PLAYERS];
new bool:bank_Hack=false;
new bool:bank_Rob=false;
new bool:bank_Laser=false;
new bool:bank_PlayerRob[MAX_PLAYERS];
new Text:Bank_TextBackGround;
new Text:Bank_TextPourcent;
new Text:Bank_TextMsg[6];
new bank_RobMoney[MAX_PLAYERS];
new bank_RobTime[MAX_PLAYERS];
new bank_HasBeenRob=0;
new bank_Robers = 0;

new totalFactions=0,
	totalVehicles=1,
	totalHouses=0,
	totalBizz=0,
	totalSpikes=0,
	totalBusStop=0,
	totalGPS=0,
	totalDrops=0,
	totalGarages=0,
	totalATMs=0,
	totalBars=0,
	totalTrashCars=0,
	totalSeeds=0,
	totalTrash=0,
	totalPhoneCabs=0,
	totalMaps=0,
	totalDistribs=0,
	totalFines=0,
	totalBodies=0,
	totalTree=0,
	totalSigns=0,
	totalZones=0,
	totalCameras=0,
	totalFurnitures=0,
	totalBins=0,
	//totalChannels=0,
	totalInteriors=0,
	totalDealerShip=0,
	totalGates=0,
	totalTags=0,
	//totalHlms=0,
	totalAds=0,

	inscription_Step[MAX_PLAYERS],                          					// Etape de l'inscription
	inscription_Note[MAX_PLAYERS],                                              // Note du questionnaire
	inscription_Object[MAX_PLAYERS][2],                                         // Objets de l'intro
	inscription_QuestionNumber[MAX_PLAYERS],                                    // Numéro de la question
	inscription_RandomList[MAX_PLAYERS],                                        // Num. de la liste aléatoire
	inscription_ValidQuestion[MAX_PLAYERS];                                     // Nombre de questions valides
new inscription_Random[12][15] =
{
	{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},{2,5,4,7,9,10,8,6,1,3,11,12,13,14,15},{10,8,5,6,3,1,2,7,9,4,11,12,13,14,15},
	{10,9,8,7,6,5,4,3,2,1,11,12,13,14,15},{1,9,2,3,8,4,7,5,6,10,11,12,13,14,15},{10,8,3,7,4,2,1,9,6,5,11,12,13,14,15},
	{9,7,5,3,1,10,8,6,4,1,11,12,13,14,15},{2,4,6,8,10,1,3,5,7,9,11,12,13,14,15},{8,4,10,1,3,6,2,9,7,5,11,12,13,14,15},
	{1,10,2,8,3,7,4,6,5,4,11,12,13,14,15},{8,6,4,2,10,9,5,7,1,3,11,12,13,14,15},{7,2,3,1,5,4,6,9,10,8,11,12,13,14,15}
};


// Polices
new Text3D:police_Label[4][4],                                                  // Labels
	police_Pickup[4][2],                                                        // Pickups
	police_Icon[4],                                                             // Icon minimap
	police_Tazer[MAX_PLAYERS],                     								// Indique si le joueur a un tazer en main
	police_Siren[MAX_CAR],                                  					// Siren véhicule
	police_Giro[MAX_CAR],                                   					// Girophare
	bool:police_FlashBall[MAX_PLAYERS],
	police_TicketOffer[MAX_PLAYERS],                                            // Amende
	police_TicketPrice[MAX_PLAYERS],                                            // prix amende
	police_Duty[MAX_PLAYERS],                                                   // Joueur en duty
	police_Rope[MAX_PLAYERS][50],                                               // Descente en rappel
	bool:police_PlayerIsRoped[MAX_PLAYERS],                                     // Descente en rappel
	police_Swat[4]=0,                                                           // Swat activé ?
	police_DialogGestion[MAX_PLAYERS],                                          // Dialog Gestion
	police_GestionFineId[MAX_PLAYERS],                                          // Id de l'amende edit
	police_GestionCheckFineId[MAX_PLAYERS][MAX_FINE];                           // idem


// Herses
new spike_Object[MAX_SPIKE],
	spike_Area[MAX_SPIKE],
	bar_Object[MAX_BAR],
	TLI,
	TLI2;                                           

// Biker
new biker_DialogGestion[MAX_PLAYERS];
new biker_RideLeader;
new biker_RideJoined[MAX_PLAYERS];




// AntiCheat
new ScriptWeapons[MAX_PLAYERS][13];
new ScriptWeaponsAmmo[MAX_PLAYERS][13];
new ScriptWeaponUpdated[MAX_PLAYERS];
new anticheat_Warn[MAX_PLAYERS][20];
static stock const anticheat_Magazines[] = {34, 17, 7, 1, 4, 7, 100, 30, 30, 50, 100, 1, 1};



// Fader
#define _UPDATERATE 100
new _pEndColor[MAX_PLAYERS][4];
new _pCurrentColor[MAX_PLAYERS][4];
new _pRateColor[MAX_PLAYERS][4];
new _pStep[MAX_PLAYERS];
new _pHold[MAX_PLAYERS];
new _OPArray[MAX_PLAYERS];
new _OnlinePlayers;
new Text:_text;

//-----------------Gestion : Ascensseur San News--------------------------------

new Obj_Elevator, Obj_ElevatorDoors[2],
	Obj_FloorDoors[21][2];
new Text3D:Label_Elevator, Text3D:Label_Floors[21];
new ElevatorState,
	ElevatorFloor;  // If Idle or Waiting, this is the current floor. If Moving, the floor it's moving to.
new ElevatorQueue[21],  	// Floors in queue.
	FloorRequestedBy[21];   // FloorRequestedBy[floor_id] = playerid; - Points out who requested which floor.

new ElevatorBoostTimer;     // Timer that makes the elevator move faster after players start surfing the object.



// Gangs:
new faction_DialogGestion[MAX_PLAYERS];             							// Dialogue gestion
new faction_EditId[MAX_PLAYERS];                    							// Id de la faction en edition
new gang_PlayerVoleCar[MAX_PLAYERS];            								// 1 si le joueur vole un véhicule
new gang_TimerForVoleCar[MAX_PLAYERS];          								// Timer du vole
new gang_PlayerFeuilleWeed[MAX_PLAYERS];        								// Feuille de weed qu'a le joueur sur soit
new gang_PlayerIsBrakeBizz[MAX_PLAYERS];        								// Indique si le joueur vole un Biz
new gang_TimerPlayerVoleBizz[MAX_PLAYERS];      								// Temps qu'il reste au joueur de braquage

new Dialogue_Systeme_Faction[MAX_PLAYERS];      								// Création d'une faction
new Dialogue_Gestion_Faction_Gang[MAX_PLAYERS]; 								// Modifiaction de la faction du joueur
new Dialogue_Admin_Edit_Gang[MAX_PLAYERS];      								// Modification de la faction en tant qu'admin
new IdFactionEdit[MAX_PLAYERS];                 								// Id de la faction que le joueur édite
new faction_OOC[250]=1;                             							// OOC /f activé ?
new admin_EditId[MAX_PLAYERS];
new admin_Dialog[MAX_PLAYERS];
new admin_VarType[MAX_PLAYERS];


// Plants de drogue
new Text3D:seed_Label[MAX_SEED];                                                // Label
new seed_Object[MAX_SEED];                                                      // Objet

//Mafia
new mafia_PlayerCreateDrug[MAX_PLAYERS];        								// Indique si le joueur crait de la drogue
new mafia_PlayerConceptionAmount[3][MAX_PLAYERS];								// Quantité que crai le joueur en drogue + le type de drogue
new mafia_FreezeCreation[MAX_PLAYERS];          								// Temps pour que le joueur crait la drogue
new mafia_ReCreateWeaponTime[MAX_PLAYERS];      								// Temps avant de pouvoir re-créer une arme
new mafia_DialogGestion[MAX_PLAYERS];        									// gestion de mafia
new mafia_DrugBrute[MAX_PLAYERS][3];                                            // Drogue brute


//Gouvernement
new gouv_Duty[MAX_PLAYERS];                                                     // Médecin en Duty
new gouv_DialogGestion[MAX_PLAYERS];                                            // Gestion gouvernement
new mairie_DialogGestion[MAX_PLAYERS];       									// Gestion du gouvernement
new mairie_DialogPlaqueChange[MAX_PLAYERS];  									// Dialogue pour changer la plaque du véhicule
new marie_Temp[MAX_PLAYERS];


forward governement_Load();
new Text3D:governement_Label[4][6];
new governement_Pickup[4][2];
new governement_Icon[4];



// Auto Ecole
new permis_Step[MAX_PLAYERS];      												// Permis conduire
new permis_WaitTime[MAX_PLAYERS];       										// Temps d'attente avant que le joueur puisse passer à la prochaine question
new permis_Player[MAX_PLAYERS];           										// Indique les phase du permis
new permis_CheckPoints[MAX_PLAYERS];    										// Check point du test
new permis_SpecSpeed[MAX_PLAYERS];                  							// Detecte si le joueur depasse la limite
new permis_City[MAX_PLAYERS];



//Médecin                                             
new medic_PlayerNeedMedic[MAX_PLAYERS];                                         // Statue du joueur blaiss
new medic_PlayerMedicTime[MAX_PLAYERS];                                         // Temps d'attente
new medic_PlayerCity[MAX_PLAYERS];



// Pompier
new fire_Duty[MAX_PLAYERS];
new fire_DialogGestion[MAX_PLAYERS];



// Mecaniciens
new mecano_Offer[MAX_PLAYERS];                  							// Ce qu'offre le mécano
new mecano_Price[MAX_PLAYERS];                  							// Au prix qu'il offre
new mecano_Color1[MAX_PLAYERS];                 							// Couleur 1
new mecano_Color2[MAX_PLAYERS];                 							// Couleur 2
new mecano_PhoneId=-1;                										// Joueur appelant un mécano
new mecano_Duty[MAX_PLAYERS];                                                       // Si le joueur est en service Job
new mecano_DialogGestion[MAX_PLAYERS];                                          //
new bool:mecano_CarHaceTC[MAX_CAR]=false;
new mecano_TCid[MAX_CAR]=-1;



// San News
new sannews_DialogGestion[MAX_PLAYERS];
new sannews_LiveOffer[MAX_PLAYERS];
new sannews_TalkingLive[MAX_PLAYERS];





// Drops
new drop_Object[MAX_DROPS];
new Text3D:drop_Label[MAX_DROPS];



// Gestion Jobs
new job_Start[MAX_PLAYERS];
new job_City[MAX_PLAYERS];
new job_CheckPoints[MAX_PLAYERS];
new job_ExitTime[MAX_PLAYERS];
new job_CarId[MAX_PLAYERS];
new job_TempVar[MAX_PLAYERS];
new job_HoldingObjectSlot[MAX_PLAYERS];
new job_Object[MAX_PLAYERS][5];
new job_ObjectN[MAX_PLAYERS];
new Float:job_ObjectPos[MAX_PLAYERS][5][3];
new job_Area[5];
new job_Zone[2];

new Text:job_TextBox[2],Text:job_TextBar[2];            						// **
new PlayerText:job_TextInfos[MAX_PLAYERS];        							    // *
new PlayerText:job_TextBarUpdate[MAX_PLAYERS];            						// *
new Text:job_TextTitle;          												// **



// Gestion arrets de bus
new stop_EditPlayer[MAX_PLAYERS];                  							// Id del'arret que edit le joueur
new stop_DialogEdit[MAX_PLAYERS];                  							// Dialogue d'édition
new Text3D:stop_Label[MAX_BUSSTOP];             								// Label des arrets
new stop_Object[MAX_BUSSTOP];                      							// Objet arret



// Gestion GPS
new gps_Id[MAX_PLAYERS][MAX_GPS];                   							// Vois dans la liste des gps (/gps)



// Gestion garages
new garage_Pickup[MAX_GARAGE];                      							// Pickup du garage
new Text3D:garage_Label[MAX_GARAGE];                							// Label du garage



// Gestion ATMs
new Text3D:atm_Label[MAX_ATM];                      							// Label de l'atm
new atm_Object[MAX_ATM];
new atm_DialogEdit[MAX_PLAYERS];                    							// Dialogue edtion d'un atm
new atm_EditId[MAX_PLAYERS];                        							// Atm en cours d'édition
new atm_Icon[MAX_PLAYERS][MAX_ATM];                 							// Icon sur le radar de l'ATM



// Portes
new gate_Object[MAX_GATE];
new bool:gate_Statut[MAX_GATE];



// Gestion panneaux
new sign_Object[MAX_SIGN];
new sign_DialogEdit[MAX_PLAYERS];                    							
new sign_EditId[MAX_PLAYERS];

// Gestion panneaux publicitaires
new ad_Object[MAX_AD][2];

// Gestion TAg
new tag_Object[MAX_TAG];



// Gestion carcass
new trashcar_Object[MAX_TRASHCAR];
new Text3D:trashcar_Label[MAX_TRASHCAR];



// BoomBox
new boombox_Listen[MAX_PLAYERS];                                                // Id de la boombox que  le joueur écoute
new boombox_Object[MAX_PLAYERS];


// Gestion grosses poubelles
new Text3D:trash_Label[MAX_TRASH];                      						// Label de la poubelle
new trash_Object[MAX_TRASH];                            						// Objet poubelle
new trash_SaveTime=0;                                 							// Sauvegarde toutes les 15mn



// Gestion petites poubelles
new Text3D:bin_Label[MAX_BIN];
new bin_Object[MAX_BIN];



// Gestion cabines téléphoniques
new Text3D:phonecab_Label[MAX_PHONECAB];                                        // Label
new phonecab_Object[MAX_PHONECAB];                                              // Objet
new phonecab_DialogEdit[MAX_PLAYERS];                                           // Dialogue d'édition
new phonecab_EditId[MAX_PLAYERS];                                               // Id de l'édition
new phonecab_Ring[MAX_PHONECAB];                                                // Elle sonne ?



// Gestion cartes
new Text3D:map_Label[MAX_MAP];                      							// Label carte
new map_Object[MAX_MAP];                            							// Objet carte
new map_DialogEdit[MAX_PLAYERS];                    							// dialogue de l'édition
new map_EditId[MAX_PLAYERS];                        							// Id de la carte édité



// Gestion distributeurs
new Text3D:distrib_Label[MAX_DISTRIB];              							// Label du distributeur
new distrib_Object[MAX_DISTRIB];                    							// Objet distributeur
new distrib_DialogEdit[MAX_PLAYERS];                							// Dialogue de l'edition
new distrib_EditId[MAX_PLAYERS];                    							// Id du distributeur édité



// Gestion cadavre
new body_Object[MAX_DEADBODY][6];
new Text3D:body_Label[MAX_DEADBODY];



// Gestion speedometer
new Text:speedo_Box[2], Text:speedo_Gas, Text:speedo_Motor;
new PlayerText:speedo_Speed[MAX_PLAYERS], PlayerText:speedo_Health[MAX_PLAYERS];
new PlayerText:speedo_Kilometrage[MAX_PLAYERS],PlayerText:speedo_Brid[MAX_PLAYERS];
new PlayerText:speedo_LightMotor[MAX_PLAYERS],PlayerText:speedo_Cris[MAX_PLAYERS];
new PlayerText:speedo_Bar[MAX_PLAYERS], Text:speedo_BarGas[2], PlayerText:speedo_BoxSpeed[MAX_PLAYERS];
new Text:speedo_Light, PlayerText:speedo_Beat[MAX_PLAYERS][2], PlayerText:speedo_Lighting[MAX_PLAYERS][2];
new SpeedoTimer[MAX_PLAYERS], speedoInterval[MAX_PLAYERS];



// Intérieurs dynamique
new interior_Pickup[MAX_INTERIOR];
new Text3D:interior_Label[MAX_INTERIOR];
new interior_Icon[MAX_INTERIOR];

// Concession
new dealerShip_Pickup[MAX_DEALSHIP];
new Text3D:dealerShip_Label[MAX_DEALSHIP];
new dealerShip_Icon[MAX_DEALSHIP];


// Gestion Basket
new basket_HavingBall[MAX_PLAYERS];
new basket_Anim[MAX_PLAYERS];
new basket_Ball[MAX_PLAYERS];



// Gestion Sac
new bag_Dialog[MAX_PLAYERS];
new bag_Target[MAX_PLAYERS];
new bag_Object[MAX_PLAYERS];
new Text3D:bag_Label[MAX_PLAYERS];



// Gestion Spawn Civil
new Text3D:spawn_Label[MAX_CITY];



// Gestion Sapin de noel
new tree_Edit[MAX_PLAYERS];
new tree_EditId[MAX_PLAYERS];


// Radar
new Text3D:camera_Label[MAX_CAMERA];
new camera_Object[MAX_CAMERA];
new Text:flash;



// Gestion Marche
new walktime[MAX_PLAYERS];
new WalkStyle[MAX_PLAYERS];
new runtime[MAX_PLAYERS];
new RunStyle[MAX_PLAYERS];



// Zone Anti DM
new Text:zone_Text;



// AFK
new Text:afk_Text1,Text:afk_Text2;
new Float:afk_X[MAX_PLAYERS],Float:afk_Y[MAX_PLAYERS],Float:afk_Z[MAX_PLAYERS];
new afk_Check[MAX_PLAYERS];
new Float:afk_LastHealth[MAX_PLAYERS];
new afk_time[MAX_PLAYERS];

// NPC
new Text3D:npc_Label[MAX_PLAYERS];

// Gestion Payement
new pay_tempPrice[MAX_PLAYERS];             									// Prix a payer
new pay_tempType[MAX_PLAYERS];              									// Type d'achat : 1=Biz, ...
new pay_tempArticle[MAX_PLAYERS];           									// Article choisi
new pay_tempProducts[MAX_PLAYERS];          									// Nombre de produits décomptés
new pay_tempOther[MAX_PLAYERS];                                                 // Autre
new Text:pay_TextDesigne1;
new Text:pay_TextDesigne2;
new Text:pay_TextDesigne3;
new Text:pay_TextExit;
new Text:pay_TextTitle;
new PlayerText:pay_TextArticle[MAX_PLAYERS];
new PlayerText:pay_TextPrice[MAX_PLAYERS];
new Text:pay_TextDesigne4;
new Text:pay_TextDesigne5;
new PlayerText:pay_TextBank[MAX_PLAYERS];
new PlayerText:pay_TextCash[MAX_PLAYERS];
new Text:pay_TextInfo;
new Text:pay_TextButton1;
new Text:pay_TextButton2;
new Text:pay_TextButton3;
new Text:pay_TextDesigne6;
new Text:pay_TextDesigne7;
new Text:pay_TextDesigne8;


// Gestion telephone
new phone_ContactChosen[MAX_PLAYERS];
new phone_Active[MAX_PLAYERS];
new phone_TempNum[MAX_PLAYERS][5];
new phone_Type[MAX_PLAYERS];
new phone_Time[MAX_PLAYERS][2];
new phone_Text[MAX_PLAYERS];
new Text:phone_Designe1;
new Text:phone_Designe2;
new Text:phone_Designe3;
new Text:phone_BackGround;
new Text:phone_Speaker;
new Text:phone_Buton1;
new Text:phone_Buton2;
new Text:phone_Buton3;
new Text:phone_Designe4;
new Text:phone_Designe5;
new PlayerText:phone_Hours[MAX_PLAYERS];
new PlayerText:phone_Operator[MAX_PLAYERS];
new Text:phone_Designe6;
new Text:phone_Menu;
new Text:phone_Call;
new Text:phone_Hang;
new Text:phone_MenuClavier;
new Text:phone_MenuSMS;
new Text:phone_MenuMP3;
new Text:phone_MenuRadio;
new Text:phone_MenuMap;
new Text:phone_MenuConso;
new Text:phone_MenuRep;
new Text:phone_MenuMessagerie;
new PlayerText:phone_Title[MAX_PLAYERS];
new PlayerText:phone_WrittenNum[MAX_PLAYERS];
new Text:phone_Num[13];
new PlayerText:phone_CallTime[MAX_PLAYERS];
new Text:phone_CallFrom;
new PlayerText:phone_CallFromNum[MAX_PLAYERS];
new Text:phone_Radio[7];
new Text:phone_Map;
new Text:phone_MP3[2];
new PlayerText:phone_ConsoTime[MAX_PLAYERS];
new PlayerText:phone_ConsoSMS[MAX_PLAYERS];
new PlayerText:phone_BackSMS[MAX_PLAYERS][5];
new Text:phone_BackGroundSMS;
new Text:phone_SMSReceived;
new Text:phone_SMSSent;
new PlayerText:phone_Contact[MAX_PLAYERS][13];
new Text:phone_CreateContact;
new Text:phone_CreateContactBack;

// Payday
new Text:payday_Design[3];
new PlayerText:payday_Infos[MAX_PLAYERS];

new PlayerText:zoneLocation[MAX_PLAYERS];


// MySQL
new MySQL:MYSQL;
new sql[1024],Field[65],result[256];



// TeamSpeak
//new bool:teamspeak_use=true;

//new intro_ActorGare[15];
new Text3D:actorChatLabel[MAX_ACTORS];
new actorChatTimer[MAX_ACTORS];

//-------------------------Gestion stats joueur --------------------------------
new PlayerText:TextVie[MAX_PLAYERS];
new PlayerText:TextArmure[MAX_PLAYERS];
new Text:DisigFaim1;
new Text:DisigFaim2;
new PlayerText:BarUpdateFaim[MAX_PLAYERS];
new PlayerText:TextFaim[MAX_PLAYERS];
new Text:DisigSoif1;
new Text:DisigSoif2;
new PlayerText:BarUpdateSoif[MAX_PLAYERS];
new PlayerText:TextSoif[MAX_PLAYERS];
new Text:DisigEndurance1;
new Text:DisigEndurance2;
new PlayerText:BarUpdateEndurance[MAX_PLAYERS];
new PlayerText:TextEndurance[MAX_PLAYERS];
new PlayerText:TextMaladie[MAX_PLAYERS];



// Portes/grilles/Garages
new fenceTrain[14];
new zoneTrain[7];
new BankDoors[2];

new // gPlayer
	gPlayerCheckpoint[MAX_PLAYERS],           									// Destination du GPS
	gPlayerSpawn[MAX_PLAYERS],                                                  // Spawn
	gPlayerLogged[MAX_PLAYERS],                                                 // Loggé ou non
	gPlayerLogTries[MAX_PLAYERS],                                               // Nombre de fois le mot de passe éroné
	gPlayerSpawned[MAX_PLAYERS],                                                // Spawn ?
	gPlayerAccount[MAX_PLAYERS],                                                // Compte détecté ?
	gPlayerInventory[MAX_PLAYERS],                                              // Inventaire
	gPlayerMask[MAX_PLAYERS],                                                   // Cagoule
	gPlayerFreq[MAX_PLAYERS],                                                   // Fréquence talkie
	gPlayerInBizz[MAX_PLAYERS],                                                 // Dans un biz ?
	gPlayerInSBizz[MAX_PLAYERS],                                                // Dans un biz unique ?
	gPlayerInGarage[MAX_PLAYERS],                                               // Dans un garage ?
	gPlayerInFaction[MAX_PLAYERS],                                              // Dans un QG faction ?
	gPlayerInInterior[MAX_PLAYERS],                                             // Dan sun interieur ?
	gPlayerInHouse[MAX_PLAYERS],                                                // Dans une maison ?
	gPlayerMuteOOC[MAX_PLAYERS],                                                // Mute OOC
	gPlayerMuteIC[MAX_PLAYERS],                                                 // Mute IC
	gPlayerTrailer[MAX_PLAYERS],
	gPlayerLoad[MAX_PLAYERS],
	gPlayerEvent[MAX_PLAYERS],
	bool:gPlayerDriveBy[MAX_PLAYERS],
	bool:gPlayerFPS[MAX_PLAYERS],
	// gServer
	gServerReload=0,                                                            // Reload
	gServerOOC=1,                                                               // Cannal OOC
	gServerBas=0,                                                               // Canal /b
	gServerHelp=0,
	gServerReboot=0,                                                            // Reboot
	gServerWeather=2,                                                           // Météo par défaut
	gServerPlayers=0,                                                           // Nombre de joueurs connectés
	gServerMedics=0;                                                            // Nombre de médecin en service

new player_CarryBody[MAX_PLAYERS];
new player_Lie[MAX_PLAYERS];
new bool:player_Backup[MAX_PLAYERS]=false;
new	player_Cuffed[MAX_PLAYERS];                             					// Menotté / tazé
new	player_CuffedTime[MAX_PLAYERS];                         					// Temps du taz
new player_HavePayDay[MAX_PLAYERS];
new player_Bot[MAX_PLAYERS][32];
new bool:trainTicket[MAX_PLAYERS];
new prefix[MAX_PLAYERS][16];                                                      // Message prefix
new TME[MAX_PLAYERS][128];                                                      // Message TME
new Text3D:PME[MAX_PLAYERS];                                                    // Message PME
new Text3D:VME[MAX_CAR];                                                    	// Message VME
new Text3D:player_ID[MAX_PLAYERS];                                              // Id du joueur
new lotto_Timer;                                                                // lotto Timer
new Mechanics = 0;                                                              // Nombre de mécanicien en service
new Taximans = 0;
new taxi_PhoneId=-1;
new fpsObject[MAX_PLAYERS];
new HandshakeOffer[MAX_PLAYERS];                                                // Id du joueur à qui on veut serrer la main
new MariageOffer[MAX_PLAYERS];
new MariageStep[MAX_PLAYERS];
new MariageBot[MAX_PLAYERS];
new HandshakeType[MAX_PLAYERS];                                                 // Type de d'anim
new KissOffer[MAX_PLAYERS];                                                     // Id du joueur que l'on veut embrasser
new HidePM[MAX_PLAYERS];                                                        // PMs: 0 = Désactivé - 1 = Activé
new PlayerTied[MAX_PLAYERS];                                                    // Yeux : 0 = Non bandé - 1 = bandé
new HireCar[MAX_PLAYERS];                                                       // Id de la voiture de location
new GettingJob[MAX_PLAYERS];                                                    // Job que le joueur veut prendre
new TimeRapport[MAX_PLAYERS];                                                   // Temps avant que le joueur puisse /rapport /i
new langLearn[MAX_PLAYERS];                                                     // Langue qu'il apprend
new langTime[MAX_PLAYERS];                                                      // Temps restant pour l'apprentissage
new GlassSlotObject[MAX_PLAYERS];                                               // Slot Player Object
new BandanaSlotObject[MAX_PLAYERS];                                             // Slot Player Object
new CapSlotObject[MAX_PLAYERS];                                                 // Slot Player Object
new BagSlotObject[MAX_PLAYERS];                                                 // Slot Player Object
new HelmetSlotObject[MAX_PLAYERS];                                              // Slot Player Object
new HandCuffsSlotObject[MAX_PLAYERS];                                           // Slot Player Object
new BodySlotObject[MAX_PLAYERS];
new invited_Player[MAX_PLAYERS];                                                // Joueur inviter
new laser_Statue[MAX_PLAYERS];                                                  // Laser On-Off
new laser_Object[MAX_PLAYERS];                                                  // Slot Player Object
new laser_Colour[MAX_PLAYERS];
new player_ArmourVip[MAX_PLAYERS];                                              // Temps avant que je joueur VIp puisse /vip armure
new UsingDrugs[MAX_PLAYERS];                                                    // Si le joueur a utilisé de la drogue
new UsingDrugsTime[MAX_PLAYERS];                                                // Temps restant de la drogue
new AdminDuty[MAX_PLAYERS];                                                     // Si le joueur est en Admin service
new Dialogue_Admin_Panel[MAX_PLAYERS];              							// Dialogue du panel admin
new admin_CarDialog[MAX_PLAYERS];                   							// Dialogue d'édition d'une voiture
new aide_Dialog[MAX_PLAYERS];                       							// Dialogue aide
new tel_DialogUrgence[MAX_PLAYERS];                 							// Dilaogue du '911'
new player_InAreaAntiDM[MAX_PLAYERS];               							// Si le joueur est dans une zone non dm
new player_ActiveDM[MAX_PLAYERS];                   							// Si le joueur tape dans une zone anti DM
new Text3D:DutyAdmin[MAX_PLAYERS];                  							// Label d'un admin en duty
new Clicked[MAX_PLAYERS] = -1; 													// Panel admin
new MAX_PLAYERS_CURRENT = 0;                        							// Max de joueurs conencté actuellement
new PlayerComeBack[MAX_PLAYERS];                    							// Le /comeBack
new NoPM[MAX_PLAYERS];                                                          // Pm activé ou désactivé
new NoRapport[MAX_PLAYERS];                                                     // Rapport activé ou désactivé
new NoOOC[MAX_PLAYERS];                                                         // OOC activé ou désactivé
new NoNews[MAX_PLAYERS];                                                        // News activé ou désactivé
new NoRQ[MAX_PLAYERS];                                                          // RQ activé ou désactivé
new admin_Timer[MAX_PLAYERS]=1;                                                 // Timer débug
new Text:Text_Safe;                                                             // Text Intro
new tactical[MAX_PLAYERS];                                                      // tactique fbi
//new authorizetactical;                                                          // Idem
new Jackpot = 0;                                                                // Jackpot lotto
new WatchingTV[MAX_PLAYERS];                                                    // Spec
new PlayerStoned[MAX_PLAYERS];                                                  // Utilisation de drogue
new PlayerDrunk[MAX_PLAYERS];                                                   // Joueur bourré ?
new PlayerDrunkTime[MAX_PLAYERS];                                               // Temps restant de l'ivresse
new Condom[MAX_PLAYERS];                                                        // Préservatif
new swat[MAX_PLAYERS];                                                          // Swat police
new Spectate[MAX_PLAYERS];                                                      // Spec
new CellTime[MAX_PLAYERS];                                                      // Temps d'appel
new Mobile[MAX_PLAYERS];                                                        // Id du joueur au tel
new RingTone[MAX_PLAYERS];                                                      // Sonnerie tel
new adds = 1;                                                                   // Pub
new PosConnectJ1[MAX_PLAYERS];                                                  // Ambiance connexion
new KnockedDown[MAX_PLAYERS];                                                   // KO ?
new BlindFold[MAX_PLAYERS];                                                     // Yeux bandés ?
new Masturber[MAX_PLAYERS];                                                     // Hum hum
new pdtrace1 = 0;
new Float:pdtrace[3];
new emdtrace1 = 0;
new Float:emdtrace[3];
new player_antihack[MAX_PLAYERS];                                               // 30 secs login
new AdminSpec[MAX_PLAYERS];                                                     // Spec
new IsSmoking[MAX_PLAYERS];                                                     // En traint de fumer
new UsingSmokeAnim[MAX_PLAYERS];                                                // Anim
new Flicservice = 0;                                                            // Flic en services connecté
new ceinture[MAX_PLAYERS] = 0;                                                  // Ceinture
new casque[MAX_PLAYERS] = 0;                                                    // Casque
new InShamal[MAX_PLAYERS];                                                      // Dans un shamal ?
new InAndro[MAX_PLAYERS];                                                       // Dans un Andromada ?
new Float:ShamalPos[MAX_VEHICLES][3];                                           // Pos Shamal
new Float:AndroPos[MAX_VEHICLES][3];                                            // Pos Andromada
new sExplode[MAX_VEHICLES], tCount[MAX_VEHICLES];                               // Shamal, andromada système
new frapATM[MAX_PLAYERS];
new UsePiedBiche[MAX_PLAYERS];
new player_SellOffer[MAX_PLAYERS];
new player_SellId[MAX_PLAYERS];
new player_SellOther[MAX_PLAYERS];
new player_Dialog[MAX_PLAYERS];
new player_Variable[MAX_PLAYERS];
new player_TaxiLicense[MAX_PLAYERS];
new taxi_Duty[MAX_PLAYERS];
new Float:LastHealth[MAX_PLAYERS];
new Float:LastSpeed[MAX_PLAYERS];
new ArmorSlotObject[MAX_PLAYERS];
new playerRoot[MAX_PLAYERS][64];

new Text:text_Intro[7];
new tentativeconexionrcon = 0;

new Text:infoBox[2];
new PlayerText:infoText[MAX_PLAYERS];
new infoBoxTimer[MAX_PLAYERS];

new Float:buycar_pos[3][4] =             	// Positions des spawns des voitures achetées
{
	{2308.6560,-1992.9777,13.2617,269.5106}, {-1576.0115,127.0075,3.2565,187.9822}, {1463.6990,2327.3416,10.5259,358.6438}
};
new Float:buyplane_pos[3][4] =             	// Positions des spawns des avions achetés
{
	{1554.2797,-2636.7129,13.2724,359.8439}, {-1293.3965,-0.3290,15.0705,134.2761}, {1328.3392,1585.8988,11.7420,268.1481}
};
new Float:buyboat_pos[3][4] =             	// Positions des spawns des bateaux achetés
{
	{860.3051,-1979.1169,-0.6543,271.2381}, {-1631.8468,160.5995,-0.6049,316.1017}, {2295.3750,518.8284,-0.3876,91.5610}
};

new Float:four_pos[6][4] =             	// Positions fourrière
{
	{2228.9783,-1985.0216,13.2740,90.0}, {2229.2012,-1989.0009,13.2740,90.0}, {2229.3081,-1993.9832,13.2740,90.0},
	{2229.3804,-1999.0479,13.2740,90.0}, {2229.1074,-2004.3138,13.2818,90.0}, {2229.5117,-2008.3169,13.2818,90.0}
};


new announce[ANNOUNCES][600] =// 10 mns
{
	{"~ Vous êtes nouveau et vous avez besoin d'aide ? Pas de problèmes, utilisez /i et /aide ~"},
	{"~ Vous avez vu un NO RP ou un cheater ? Utilisez /report ~"},
	{"~ Allez sur notre forum en cas de besoin : forum.lvrp.fr ~"},
	{"~ Cheat, Insultes OOC, Non respect des règles = Sanctions ~"},
	{"~ Des packs VIP sont en vente sur notre site ! ~"},
	{"~ Rappel: Roulez de façon RolePlay (Roulez à droite et ralentissez aux intersections) ~"},
	{"~ N'oubliez pas le /afk quand vous êtes absent! ~"},
	{"~ Nous disposons d'un panel : lvrp.fr ~"},
	{"~ N'hésitez pas à aller voter sur le root-top : www.lvrp.fr ~"},
	{"~ En cas de bug script prévenez un Administrateur en /i ~"},
	{"~ Noubliez pas les actions RP /me /do ! ~"},
	{"~ Noubliez pas de vous nourrir, faites attention à votre faim et soif. ~"},
	{"~ Pour connaître le nombre de policiers en service tapez /policiers. ~"},
	{"~ Mauvaise météo ? Tapez /nometeo. ~"}
};

enum e_Weather
{
	IDMeteo,
	DescriptionMeteo[128]
};

new DescriptionIdMeteo[][e_Weather] =
{
	/* Indiquez ici l'id de la météo et sa description. */
	{2,"Profitez, de ce beau temps !"},
	{4,"Le vent se lève !"},
	{9,"Le brouillard se lève. Roulez prudemment !"},
	{30,"Ciel noir, risque d'orages important."},
	{12,"Ciel couvert !"},
    {8,"Un lourd brouillard, visibilité reduite."},
	{19,"Vent violent ! Circulation aérienne pérturbée."}
};

new Float:difc[13][4] = {
{1.13, 0.05, 1.10, 0.0},
{1.13, 2.35, 1.10, 180.0},
{1.13, 4.65, 1.10, 180.0},
{1.13, 1.05, 1.10, 0.0},
{1.13, 3.45, 1.10, 180.0},
{1.13, 5.85, 1.10, 180.0},
{1.13, 0.39, 0.56, 0.0},
{1.13, 2.69, 0.56, 180.0},
{1.13, 4.99, 0.56, 180.0},
{1.13, 0.71, 0.56, 0.0},
{1.13, 3.79, 0.56, 180.0},
{1.13, 6.19, 0.56, 180.0},
{0.00, 0.30, 1.10, 0.0}
};

new Float:gSchoolDriveLS[11][3] = {
{2084.1519,-1832.8333,13.3828},
{2240.8486,-1734.8621,13.3828},
{2344.7759,-1455.0579,23.8281},
{2373.3938,-1219.0432,27.4297},
{2098.1938,-1099.5831,24.9869},
{1864.7384,-1161.1768,23.6809},
{1829.8428,-1544.9235,13.3828},
{1845.5168,-1934.6461,13.3770},
{2084.1030,-1927.4124,13.2719},
{2058.5989,-1911.7489,13.5469},
{0.0,0.0,0.0}
};

new Float:gSchoolDriveSF[11][3] = {
{-2195.0481,-67.1972,34.7246},
{-2418.9360,-41.7081,34.7361},
{-2408.9949,290.3009,34.5473},
{-2357.9631,484.0468,30.2343},
{-2368.4399,665.8951,34.5901},
{-2232.9924,728.7166,48.8289},
{-2062.2983,729.4260,62.5869},
{-2007.8694,594.5656,34.5788},
{-2009.4423,159.1676,27.1023},
{-2046.9945,-90.6472,34.7225},
{0.0,0.0,0.0}
};

new Float:gSchoolDriveLV[13][3] = {
{1167.7534,1405.7366,7.5752},
{1010.2119,1405.3429,10.2351},
{1009.9563,1883.2852,10.2372},
{1053.9950,2050.6514,10.2360},
{1385.3217,2029.7195,10.2360},
{1504.5992,1970.9221,10.2451},
{1705.1639,2000.9623,10.2376},
{1454.0228,1875.7341,10.2354},
{1207.8573,1815.4045,13.2741},
{1005.0103,1771.8256,10.3367},
{1048.4852,1371.5375,10.2429},
{1165.8248,1427.7083,5.3835},
{0.0,0.0,0.0}
};

new Float:gMinerPoints[9][4] = {
{-1338.3872,2470.2651,87.0469,341.1411},
{-1354.0422,2475.4409,87.0979,222.7000},
{-1334.4465,2482.2434,87.0469,136.5325},
{-1332.5786,2443.0713,88.1009,222.3866},
{-1355.6104,2441.4153,89.9140,300.7207},
{-1328.2083,2426.9539,90.3066,65.4285},
{-1293.0156,2437.2615,88.5585,232.4134},
{-1297.3899,2456.7610,88.0148,210.8166},
{-1304.0951,2453.0144,87.7392,187.9431}
};

new Float:gWorkerPoints[11][4] = {
{2460.5784,1863.5825,10.8222,118.2475},
{2480.7168,1843.9976,10.8203,130.4676},
{2423.7830,1884.7522,10.9535,87.8539},
{2487.5825,1821.9840,10.8203,44.3002},
{2494.8582,1831.3590,13.6379,140.7841},
{2877.0896,934.9066,10.7500,278.5207},
{2877.7063,927.0401,10.7500,268.4940},
{2877.2839,915.2462,10.7500,269.4340},
{2876.9573,904.1690,10.7500,263.4807},
{2869.1311,942.1937,10.7500,359.8717},
{0.0,0.0,0.0,0.0}
};

new Float:gServerMedicspawns[6][4] = {
{-3451.7954,498.3031,58.0620,83.2303},
{-3447.3347,495.5712,58.0541,358.6529},
{-3444.0701,498.4526,58.0772,95.8105},
{-3430.5762,497.0062,58.5490,115.5743},
{-3439.6362,492.1081,58.1390,181.9783},
{-3447.3613,492.1266,58.0522,177.5682}
};

new Float:gBedPoints[4][4] = {
{-3441.3884,479.9655,58.0620,90.0},
{-3439.8772,474.8265,58.0620,0.0},
{-3447.7444,479.4580,58.0620,270.0},
{-3451.2290,476.0050,58.0620,180.0}
};

new Float:gValetPointsSf[6][4] = {
{-1687.6088,999.7651,17.4609,270.0},
{-1702.1935,1012.0259,17.4609,270.0},
{-1694.0934,1058.8901,17.4609,0.0},
{-1687.3400,1049.1782,17.4609,90.0},
{-1696.8650,978.0312,17.4609,180.0},
{-1753.4178,954.5569,24.6172,270.0}
};

new Float:gValetPointsLs[6][4] = {
{301.0683,-1504.4807,24.1864,235.4811},
{294.5847,-1513.4740,24.2161,54.9147},
{288.3050,-1522.4767,24.1800,234.8807},
{281.6232,-1530.8364,24.1709,57.4951},
{291.4316,-1544.3843,24.1819,51.1663},
{298.4492,-1536.1008,24.1708,235.5255}
};

new Float:gDozerPoints[5][3] = {
{555.8182,909.6615,-42.9609},
{609.0176,925.9668,-41.3296},
{643.1570,866.3867,-42.7451},
{636.7181,835.1523,-42.9609},
{609.4597,874.3006,-42.9609}
};

new Float:gFirePoints[7][4] = {
{1169.9421,-1690.0322,22.2344,5.0},
{287.8614,-1601.8013,32.7729,5.0},
{853.6345,-825.6038,89.5017,8.0},
{1728.9540,-1118.0663,24.0859,10.0},
{2521.6184,-1464.7555,23.9723,10.0},
{2753.7156,-1580.0955,16.7692,5.0},
{1671.3799,-2113.4316,13.5469,5.0}
};

enum eBO {
    bM, Float:bX, Float:bY, Float:bZ, Float:brX, Float:brY, Float:brZ
};

new Float:BlinkOffset[][eBO] = {
    {400, -0.9001, 2.0490, -0.0965, -0.9605, -2.2404, -0.0965},
    {401, -0.9686, 2.5393, 0.0235, -0.9970, -2.2863, 0.0235},
    {402, -0.8788, 2.5160, -0.0565, -0.9208, -2.5936, 0.0435},
    {403, -1.3897, 3.6007, -0.2194, -1.1904, -0.9415, 1.8389},
    {404, -0.7236, 2.1715, -0.0365, -0.7906, -2.7052, 0.0635},
    {405, -0.9127, 2.2766, -0.0565, -0.8723, -2.6526, -0.0565},
    {406, -2.2165, 4.9242, -0.0332, -2.0785, -5.2054, 0.5468},
    {407, -0.9887, 4.0622, -0.0913, -1.0141, -3.4034, -0.0913},
    {408, -0.9659, 4.7615, -0.2513, -0.8430, -3.9722, -0.5113},
    {409, -0.7859, 3.5522, -0.0313, -0.8027, -3.8228, -0.0313},
    {410, -0.825, 2.105, 0.0635, -0.8723, -2.1926, 0.1235},
    {411, -0.9405, 2.6710, -0.1825, -0.9636, -2.4525, 0.0825},
    {412, -0.8965, 2.6478, -0.0575, -0.9592, -3.4870, -0.1575},
    {413, -0.8669, 2.5464, -0.0913, -0.8209, -2.5829, 0.0687},
    {414, -0.8069, 2.7473, 0.0087, -0.9058, -3.2050, 0.1094},
    {415, -0.8738, 2.4866, -0.2357, -0.7792, -2.3501, 0.0450},
    {416, -0.8469, 2.9073, 0.0087, -1.0352, -3.5937, 1.4522},
    {417, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {418, -0.9511, 2.3820, -0.2357, -1.0081, -2.4904, -0.1557},
    {419, -1.0742, 2.3978, -0.1757, -0.8127, -2.8620, -0.1557},
    {420, -1.0142, 2.2978, -0.0157, -0.9637, -2.6744, 0.0043},
    {421, -0.9013, 2.5343, -0.1357, -0.5921, -2.9228, -0.1957},
    {422, -0.7813, 2.1543, -0.2657, -0.8985, -2.4349, -0.1057},
    {423, -0.7817, 2.2093, -0.0313, -0.8340, -2.1794, 0.0596},
    {424, -0.7350, 1.4505, 0.1087, -0.7062, -1.4778, 0.2996},
    {425, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {426, -1.0006, 2.3164, -0.0100, -0.9627, -2.6930, -0.0100},
    {427, -0.8728, 2.5856, 0.1887, -0.9831, -3.8383, -0.3495},
    {428, -0.8728, 2.5856, -0.2103, -0.9045, -2.8871, 1.2466},
    {429, -0.7942, 2.2846, -0.2500, -0.8397, -2.3849, -0.0070},
    {430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {431, -0.9771, 5.8479, 0.3497, -1.0300, -5.7043, -0.1041},
    {432, -1.7168, 4.0330, 0.4497, -1.5830, -4.3414, 0.7039},
    {433, -1.2619, 3.7708, -0.2163, -1.2966, -4.6534, -0.1051},
    {434, 0.0, 0.0, 0.0, -0.4811, -1.9838, -0.0670},
    {435, 0.0000, 0.0000, 0.0000, -1.0697, -3.9690, -1.1053}, //trailer
    {436, -0.8495, 2.2519, -0.0070, -0.8948, -2.4838, 0.1130},
    {437, -1.1156, 5.5395, -0.2163, -0.9856, -5.3099, 1.6458},
    {438, -1.1128, 2.3675, -0.2870, -1.0992, -2.4601, -0.2870},
    {439, -0.8381, 2.3101, -0.1470, -0.8221, -2.6534, -0.1070},
    {440, -0.8270, 2.5573, -0.3173, -0.8676, -2.5376, -0.0149},
    {441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {442, -1.0354, 2.8278, -0.1870, -1.0226, -3.0877, -0.1270},
    {443, -1.0610, 5.7528, -0.9573, -1.2388, -7.1392, -0.8250},
    {444, -0.9880, 2.7188, 0.6140, -1.0722, -3.0184, 0.7248},
    {445, -0.9590, 2.3460, -0.0840, -0.9773, -2.8049, -0.0840},
    {446, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {447, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {448,  -0.1992, -0.9229, -0.1270},
    {449, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {450,  0.0000, 0.0000, 0.0000, -1.0697, -3.9690, -1.1053}, //trailer
    {451, -0.9826, 1.9642, -0.1399, -0.8894, -2.3991, -0.0199},
    {452, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {453, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {454, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {455, 0.0000, 0.0000, 0.0000, -1.3866, -4.5162, -0.7399},
    {456, 0.0000, 0.0000, 0.0000, -1.3045, -4.6123, 0.4601},
    {457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {458, -0.9513, 2.4197, -0.1399, -0.9703, -2.7779, 0.0201},
    {459, -0.8214, 2.5716, -0.1274, -0.8760, -2.5775, 0.1127},
    {460, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {462, 0.0000, 0.0000, 0.0000, -0.2054, -0.9359, -0.1399},
    {463, -0.2276, 0.7185, 0.3201, -0.1952, -1.0037, 0.1601},
    {464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {466, 0.0000, 0.0000, 0.0000, -1.0201, -2.7994, 0.0401},
    {467, 0.0000, 0.0000, 0.0000, -0.9401, -3.0594, 0.1601},
    {468, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {470, -1.0259, 2.1382, 0.2001, -1.0433, -2.5463, 0.1201},
    {471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {472, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {473, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {474, 0.0000, 0.0000, 0.0000, -0.9833, -2.7663, -0.0599},
    {475, -0.8681, 2.4086, -0.3399, -0.8632, -2.7629, -0.2399},
    {476, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {477, -0.8081, 2.6686, -0.1999, -0.9945, -2.6987, 0.0801},
    {478, -1.0938, 2.0255, 0.1001, -1.0579, -2.5378, -0.2799},
    {479, -0.9671, 2.4844, 0.0201, -0.9578, -2.7556, 0.0601},
    {480, -0.5897, 2.2607, -0.4399, -0.9183, -2.3388, -0.1399},
    {481, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {482, -0.8841, 2.4094, -0.3399, -0.8685, -2.5676, 0.0201},
    {483, -0.7770, 2.6235, -0.0199, -0.6709, -2.7712, -0.1999},
    {484,  0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {485, -0.6104, 1.7180, 0.2201, -0.7074, -1.3681, 0.1201},
    {486, 0.0000, 0.0000, 0.0000, -0.5919, -3.2353, 0.9601},
    {487, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {488, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {489, -1.1024, 2.5796, 0.0401, -1.1261, -2.6473, 0.1601},
    {490, -1.0971, 3.1462, 0.0401, -1.1327, -3.1055, 0.1601},
    {491, -0.8495, 2.5284, -0.0799, -0.8870, -2.7776, 0.0001},
    {492, -0.7905, 2.4656, -0.0599, -0.9075, -2.8130, 0.0001},
    {493, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {494, -0.8513, 2.3630, -0.2199, -0.8275, -2.8485, 0.1401},
    {495, -1.0909, 2.3818, 0.0001, -1.1540, -2.1156, -0.0399},
    {496, -0.9219, 2.1787, 0.0401, -0.7095, -2.1087, 0.0801},
    {497, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000},
    {498, -0.8915, 3.0670, 0.2201, -0.9740, -3.0460, 0.3601},
    {499, -0.7725, 2.4576, -0.1999, -1.1318, -3.4186, 0.1401},
    {500, -0.9152, 1.9097, -0.0355, -0.7552, -1.9266, -0.0355},
    {501, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {502, -0.8723, 2.5986, -0.1770, 0.0, 0.0, 0.0},
    {503, -0.8579, 2.3582, -0.0213, 0.0, 0.0, 0.0},
    {504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {505, -1.1068, 2.5744, 0.0086, -1.1365, -2.6250, 0.1679},
    {506, -0.7672, 2.2106, -0.3185, -0.9113, -2.3474, -0.0273},
    {507, -1.1143, 2.6057, -0.0456, -1.1410, -2.9714, -0.0456},
    {508, -0.7012, 3.0199, -0.6678, -1.3807, -3.3356, 1.2628},
    {509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {510, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {511, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {513, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {514, -1.2341, 4.2204, 0.0806, 0.0, 0.0, 0.0},
    {515, -1.4241, 4.4811, -0.7354, -1.2973, -4.8274, -0.8974},
    {516, -0.9512, 2.7208, -0.0543, -0.9926, -2.7809, -0.0348},
    {517, -0.9401, 2.7868, -0.0726, -1.0208, -2.7461, -0.1324},
    {518, -0.9166, 2.6548, -0.0487, -1.0124, -2.8219, -0.0487}, //fake
    {519, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {520, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {522, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {523, -0.2607, 0.6038, 0.2881, -0.1973, -0.9958, 0.0638},
    {524, -0.9279, 3.6538, -0.0473, -1.3003, -3.9309, -1.0661}, //fake back
    {525, -0.8576, 2.9431, 0.1425, -1.0428, -2.9851, -0.1486}, //fake back
    {526, -0.9421, 2.3087, -0.1128, -0.9559, -2.2882, -0.0411},
    {527, -0.9351, 2.4078, -0.0242, -0.9825, -2.2344, 0.0844},
    {528, -0.8783, 2.5102, -0.1526, -0.8133, -2.5965, -0.3237}, //fake back
    {529, -1.0177, 2.5256, 0.0698, -1.0505, -2.5713, 0.2047},
    {530, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {531, -0.4216, 1.5030, -0.1191, -0.5225, -1.0517, 0.4484}, //fake
    {532, -4.0331, 3.9619, -0.9118, -1.5976, -0.3739, 0.4484}, //fake!
    {533, -0.9410, 2.3774, 0.0985, -0.9852, -2.4663, -0.0020},
    {534, -1.0159, 2.9278, -0.1698, -0.8236, -2.7548, -0.0574},
    {535, -0.8265, 2.5014, -0.2084, -0.9267, -2.6058, -0.1784},
    {536, -0.8577, 2.3943, -0.1248, -0.8736, -3.0999, -0.0900},
    {537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {538, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {539, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {540, -0.9827, 2.5810, -0.1248, -1.0597, -2.7121, -0.0842},
    {541, -0.6055, 2.3378, -0.2108, -0.7826, -2.1992, 0.0913},
    {542, -0.9712, 2.6252, -0.0064, -0.8281, -2.9729, -0.0577},
    {543, -0.8414, 2.2904, 0.0719, -0.9831, -2.6214, -0.0116}, //fake front
    {544, -0.7346, 3.5720, 0.0200, -0.8597, -3.2242, -0.5918},
    {545, -0.4372, 1.6776, -0.0400, -0.7955, -2.0453, -0.2888},
    {546, -1.1294, 1.0702, 0.0719, -1.0580, -2.6948, 0.0719},
    {547, -0.9582, 2.5222, 0.0271, -0.9937, -2.5915, 0.0719},
    {548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {549, -0.9264, 2.4914, 0.0271, -0.9070, -2.5802, 0.0271},
    {550, -1.0477, 2.5642, -0.1807, -1.0302, -2.6549, -0.1297},
    {551, -0.9334, 2.6344, -0.0448, -0.9785, -3.0524, 0.0366},
    {552, -0.8757, 3.0634, 0.3600, -0.9933, -2.9119, 0.4752},
    {553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {554, -0.9409, 2.5345, 0.0600, -1.1112, -2.8095, 0.0651},
    {555, -0.9236, 1.1282, -0.0462, 0.0, 0.0, 0.0},
    {556, -0.9686, 2.5396, 0.5800, -1.1128, -2.8895, 0.7691},
    {557, -0.9886, 2.4796, 0.7000, -1.0904, -2.7699, 0.6871},
    {558, -0.9452, 2.0854, 0.0836, -0.9187, -2.4047, 0.3185},
    {559, -0.9037, 2.4333, -0.0168, -0.8819, -2.2910, 0.1482},
    {560, -0.9347, 2.5097, -0.2644, -0.9639, -2.2337, 0.1259},
    {561, -0.9157, 2.5754, -0.0857, -0.9317, -2.5444, -0.0191},
    {562, -0.9299, 2.3759, 0.0201, -0.8575, -2.2773, 0.1659},
    {563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {564, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {565, -0.8503, 2.0545, 0.0346, -0.9249, -1.9224, 0.0816},
    {566, -0.9539, 2.7226, 0.0346, -0.9506, -2.9199, 0.0346},
    {567, -0.9942, 2.9212, -0.1543, -1.0077, -2.9164, -0.1543},
    {568, -0.2962, 2.0729, -0.0171, -0.2384, -1.2180, 0.0720},
    {569, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {570, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {571, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {572, -0.3095, 0.7291, -0.0971, -0.4318, -0.8940, -0.0510},
    {573, -0.7949, 3.0624, -0.3371, -0.8727, -3.0917, -0.4540},
    {574, -0.4348, 1.6912, -0.2171, -0.4277, -1.1358, -0.2069},
    {575, -0.9483, 2.3252, 0.1334, -0.9173, -2.7359, -0.0291},
    {576, -0.9948, 2.4505, 0.1883, -0.9983, -3.1357, -0.0291},
    {577, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {578, -1.0478, 4.3687, -0.1800, -1.1188, -5.3472, -0.5099},
    {579, -1.0598, 2.3634, 0.1013, -1.0873, -2.7596, 0.1013},
    {580, -0.7970, 2.6313, -0.2429, -1.0776, -2.8302, 0.1013},
    {581, 0.0, 0.0, 0.0, -0.1975, -1.0375, 0.3448},
    {582, -0.8583, 2.4404, -0.0571, -0.9214, -3.3625, 0.0521},
    {583, -0.5225, 1.3799, 0.2429, -0.5486, -1.5684, 0.2462},
    {584, 0.0, 0.0, 0.0, -1.0452, -4.3338, -0.7298}, //trailer
    {585, -1.0068, 2.7905, 0.0907, -0.9760, -3.0160, 0.2088},
    {586, -0.2872, 0.5383, 0.2009, -0.1703, -1.3533, 0.2784},
    {587, -1.0236, 2.1415, -0.2834, -1.0832, -2.4851, 0.1047},
    {588, -1.0116, 3.3590, 0.1029, -1.0679, -3.9639, -0.3029},
    {589, -0.8107, 2.3905, 0.1834, -0.9605, -2.2799, 0.3761},
    {590, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {591, 0.0, 0.0, 0.0, -1.0590, -3.9902, -1.0809}, //trailer
    {592, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {593, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {595, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {596, -1.0419, 2.2929, -0.0255, -1.0332, -2.6951, 0.0005},
    {597, -1.0419, 2.2929, -0.0255, -1.0332, -2.6951, 0.0005},
    {598, -1.0423, 2.3495, 0.0600, -1.0326, -2.6930, 0.0600},
    {599, -1.0837, 2.5663, 0.0301, -1.1267, -2.6290, 0.1451},
    {600, -0.8782, 2.6525, -0.0344, -1.0586, -2.6696, 0.0596},
    {601, -0.8094, 3.0084, 0.5429, -0.9321, -3.0808, 0.9071},
    {602, -1.0297, 2.0487, -0.0543, -0.8907, -2.5334, -0.3228},
    {603, -0.9069, 2.6672, -0.1335, -0.8647, -2.5991, -0.1335},
    {604, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {605, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {606, 0.0, 0.0, 0.0, -0.5702, -1.5842, 0.7956}, //trailer
    {607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {608, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {609, -0.8972, 3.0244, 0.2629, -0.9349, -2.9809, 0.2791},
    {610, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {611, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
    //END GTA CARS
};

static const Float: CheatPositions [][3] =
{
	{-1935.77, 228.79, 34.16}, //Transfender near Wang Cars in Doherty
	{-2707.48, 218.65, 4.93}, //Wheel Archangels in Ocean Flats
	{2645.61, -2029.15, 14.28}, //LowRider Tuning Garage in Willowfield
	{1041.26, -1036.77, 32.48}, //Transfender in Temple
	{2387.55, 1035.70, 11.56}, //Transfender in come-a-lot
	{1836.93, -1856.28, 14.13}, //Eight Ball Autos near El Corona
	{2006.11, 2292.87, 11.57}, //Welding Wedding Bomb-workshop in Emerald Isle
	{-1787.25, 1202.00, 25.84}, //Michelles Pay 'n' Spray in Downtown
	{720.10, -470.93, 17.07}, //Pay 'n' Spray in Dillimore
	{-1420.21, 2599.45, 56.43}, //Pay 'n' Spray in El Quebrados
	{-100.16, 1100.79, 20.34}, //Pay 'n' Spray in Fort Carson
	{2078.44, -1831.44, 14.13}, //Pay 'n' Spray in Idlewood
	{-2426.89, 1036.61, 51.14}, //Pay 'n' Spray in Juniper Hollow
	{1957.96, 2161.96, 11.56}, //Pay 'n' Spray in Redsands East
	{488.29, -1724.85, 12.01}, //Pay 'n' Spray in Santa Maria Beach
	{1025.08, -1037.28, 32.28}, //Pay 'n' Spray in Temple
	{2393.70, 1472.80, 11.42}, //Pay 'n' Spray near Royal Casino
	{-1904.97, 268.51, 41.04}, //Pay 'n' Spray near Wang Cars in Doherty
	{403.58, 2486.33, 17.23}, //Player Garage: Verdant Meadows
	{1578.24, 1245.20, 11.57}, //Player Garage: Las Venturas Airport
	{-2105.79, 905.11, 77.07}, //Player Garage: Calton Heights
	{423.69, 2545.99, 17.07}, //Player Garage: Derdant Meadows
	{785.79, -513.12, 17.44}, //Player Garage: Dillimore
	{-2027.34, 141.02, 29.57}, //Player Garage: Doherty
	{1698.10, -2095.88, 14.29}, //Player Garage: El Corona
	{-361.10, 1185.23, 20.49}, //Player Garage: Fort Carson
	{-2463.27, -124.86, 26.41}, //Player Garage: Hashbury
	{2505.64, -1683.72, 14.25}, //Player Garage: Johnson House
	{1350.76, -615.56, 109.88}, //Player Garage: Mulholland
	{2231.64, 156.93, 27.63}, //Player Garage: Palomino Creek
	{-2695.51, 810.70, 50.57}, //Player Garage: Paradiso
	{1293.61, 2529.54, 11.42}, //Player Garage: Prickle Pine
	{1401.34, 1903.08, 11.99}, //Player Garage: Redland West
	{2436.50, 698.43, 11.60}, //Player Garage: Rockshore West
	{322.65, -1780.30, 5.55}, //Player Garage: Santa Maria Beach
	{917.46, 2012.14, 11.65}, //Player Garage: Whitewood Estates
	{1641.14, -1526.87, 14.30}, //Commerce Region Loading Bay
	{-1617.58, 688.69, -4.50}, //San Fierro Police Garage
	{837.05, -1101.93, 23.98}, //Los Santos Cemetery
	{2338.32, -1180.61, 1027.98}, //Interior: Burning Desire House
	{-975.5766, 1061.1312, 1345.6719}, //Interior: RC Zero's Battlefield
	{-750.80, 491.00, 1371.70}, //Interior: Liberty City
	{-1400.2138, 106.8926, 1032.2779}, //Interior: Unknown Stadium
	{-2015.6638, 147.2069, 29.3127}, //Interior: Secret San Fierro Chunk
	{2220.26, -1148.01, 1025.80}, //Interior: Jefferson Motel
	{-2660.6185, 1426.8320, 907.3626}, //Interior: Jizzy's Pleasure Dome
	{-1394.20, 987.62, 1023.96}, //Stadium: Bloodbowl
	{-1410.72, 1591.16, 1052.53}, //Stadium: Kickstart
	{-1417.8720, -276.4260, 1051.1910}, //Stadium: 8-Track Stadium
	{-25.8844, -185.8689, 1003.5499}, //24/7 Store: Big-L-Shaped
	{6.0911, -29.2718, 1003.5499}, //24/7 Store: Big-Oblong
	{-30.9469, -89.6095, 1003.5499}, //24/7 Store: Med-Square
	{-25.1329, -139.0669, 1003.5499}, //24/7 Store: Med-Square
	{-27.3, -29.2775, 1003.5499}, //24/7 Store: Sml-Long
	{-26.6915, -55.7148, 1003.5499}, //24/7 Store: Sml-Square
	{-1827.1473, 7.2074, 1061.1435}, //Airport: Ticket Sales
	{-1855.5687, 41.2631, 1061.1435}, //Airport: Baggage Claim
	{2.3848, 33.1033, 1199.8499}, //Airplane: Shamal Cabin
	{315.8561, 1024.4964, 1949.7973}, //Airplane: Andromada Cargo hold
	{2536.08, -1632.98, 13.79}, // Grove Street
	{1992.93, 1047.31, 10.82}, //Four Dragons Casino
	{2033.00, -1416.02, 16.99}, // LS Hospital
	{-2653.11, 634.78, 14.45}, // SF Hospital
	{1580.22, 1768.93, 10.82}, //LV Hospital
	{-1550.73, 99.29, 17.33}, //SF Export
	//Positions given to me by SureShot :O
 	{-2057.8000, 229.9000, 35.6204}, // San Fierro
 	{-2366.0000, -1667.4000, 484.1011}, // Mount Chiliad
 	{2503.7000, -1705.8000, 13.5480}, // Grove Street
 	{1997.9000, 1056.3000, 10.8203}, // Las Venturas
 	{-2872.7000, 2712.6001, 275.2690}, // BaySide
 	{904.1000, 608.0000, -32.3281}, // Unterwasser
 	{-236.9000, 2663.8000, 73.6513} // The big Cock
};

enum e_saZone
{
	tmpName[28],
	Float:pos[6]
};

static const sanAndreasZone[][e_saZone] = {

	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial",         {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"Ultra San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Citys Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

new Float:HelmetPos[][6] =
{
    {0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}, //skin 0
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 1
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 2
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 3
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 4
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 5
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 6
	{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 7
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 8
	{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 9
	{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 10
	{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 11
	{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 12
	{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 13
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 14
	{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 15
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 16
	{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 17
	{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 18
	{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 19
	{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 20
	{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 21
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 22
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 23
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 24
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 25
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 26
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 27
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 28
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 29
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 30
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 31
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 32
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 33
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 34
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 35
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 36
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 37
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 38
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 39
	{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 40
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 41
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 42
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 43
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 44
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 45
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 46
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 47
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 48
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 49
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 50
	{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 51
	{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 52
	{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 53
	{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 54
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 55
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 56
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 57
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 58
	{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 59
	{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 60
	{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 61
	{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 62
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 63
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 64
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 66
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 67
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 68
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 69
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 70
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 71
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 72
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 73
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 75
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 76
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 78
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 79
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 80
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 81
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 82
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 83
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 84
	{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 85
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 86
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 87
	{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 88
	{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 89
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 90
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 91
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 92
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 93
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 94
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 95
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 96
	{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 97
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 98
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 99
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 100
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 101
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 102
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 103
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 104
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 105
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 106
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 107
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 108
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 109
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 110
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 111
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 112
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 113
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 114
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 115
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 116
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 117
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 118
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 119
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 120
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 121
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 122
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 123
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 124
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 125
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 126
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 127
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 128
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 129
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 130
	{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 131
	{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 132
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 133
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 134
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 135
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 136
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 137
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 138
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 139
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 140
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 141
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 142
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 143
	{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 144
	{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 145
	{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 146
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 147
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 148
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 150
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 151
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 152
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 153
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 154
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 155
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 156
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 157
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 158
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 159
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 160
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 161
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 162
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 163
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 164
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 165
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 166
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 167
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 168
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 169
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 170
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 171
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 172
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 173
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 174
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 175
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 176
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 177
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 178
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 179
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 180
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 181
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 182
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 183
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 184
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 185
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 186
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 187
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 188
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 189
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 190
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 191
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 192
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 193
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 194
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 195
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 196
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 197
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 198
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 199
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 200
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 201
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 202
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 203
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 204
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 205
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 206
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 207
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 209
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 210
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 211
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 212
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 213
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 214
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 215
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 216
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 217
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 218
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 219
	{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 220
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 221
	{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 222
	{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 223
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 224
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 225
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 226
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 227
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 228
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 229
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 230
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 231
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 232
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 233
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 234
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 235
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 236
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 237
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 238
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 239
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 240
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 241
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 242
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 243
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 244
	{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 245
	{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 246
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 247
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 248
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 249
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 250
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 251
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 252
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 253
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 254
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 255
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 256
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 257
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 258
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 259
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 260
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 261
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 262
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 263
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 264
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 265
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 266
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 267
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 268
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 269
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 270
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 271
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 272
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 274
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 275
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 276
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 277
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 278
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 279
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 280
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 281
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 282
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 283
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 284
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 285
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 286
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 287
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 288
	{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 289
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 290
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 291
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 292
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 293
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 294
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 295
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 296
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 297
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 298
	{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000} //skin 299
};



static FloorNames[21][] =
{
	"Rez de chaussé",
	"1er étage",
	"2ieme étage",
	"3ieme étage",
	"4ieme étage",
	"5ieme étage",
	"6ieme étage",
	"7ieme étage",
	"8ieme étage",
	"9ieme étage",
	"10ieme étage",
	"11ieme étage",
	"12ieme étage",
	"13ieme étage",
	"14ieme étage",
	"15ieme étage",
	"16ieme étage",
	"17ieme étage",
	"18ieme étage",
	"19ieme étage",
	"Grenier"
};

static Float:FloorZOffsets[21] =
{
    0.0,		// 0.0,
    8.5479,		// 8.5479,
    13.99945,   // 8.5479 + (5.45155 * 1.0),
    19.45100,   // 8.5479 + (5.45155 * 2.0),
    24.90255,   // 8.5479 + (5.45155 * 3.0),
    30.35410,   // 8.5479 + (5.45155 * 4.0),
    35.80565,   // 8.5479 + (5.45155 * 5.0),
    41.25720,   // 8.5479 + (5.45155 * 6.0),
    46.70875,   // 8.5479 + (5.45155 * 7.0),
    52.16030,   // 8.5479 + (5.45155 * 8.0),
    57.61185,   // 8.5479 + (5.45155 * 9.0),
    63.06340,   // 8.5479 + (5.45155 * 10.0),
    68.51495,   // 8.5479 + (5.45155 * 11.0),
    73.96650,   // 8.5479 + (5.45155 * 12.0),
    79.41805,   // 8.5479 + (5.45155 * 13.0),
    84.86960,   // 8.5479 + (5.45155 * 14.0),
    90.32115,   // 8.5479 + (5.45155 * 15.0),
    95.77270,   // 8.5479 + (5.45155 * 16.0),
    101.22425,  // 8.5479 + (5.45155 * 17.0),
    106.67580,	// 8.5479 + (5.45155 * 18.0),
    112.12735	// 8.5479 + (5.45155 * 19.0)
};

enum e_Setting
{
	bool:anticheat,
	bool:inscription,
	bool:beta,
	bool:bot,
};
new setting[e_Setting];

enum e_Faction
{
    Float:fEntrance[3],       	// Entré de la faction
	Float:fExit[3],       		// Sortie de la faction
	Float:fSafe[3],     		// Positions du coffre ( si c'est un gang )
	Float:fArmour,              // Armure
	fCash,                   	// Argent dans le coffre
	fItemM[10],                 // Objets/armes du coffre
	fItemQ[10],                 // Quantité de l'objet/arme
	fInt,              			// Id de l'entrrieur de la faction
	fRobTime,                	// Temps d'attente avent de pouvoir re-braquer
	fRobCar,                    // Temps avant que la faction re-vole unvéhicule
	fName[32],                	// Nom de la faction
	fLock,                   	// 1 si le QG est fermé
	fOwned,                  	// 1 si la faction est crée
	fType,                   	// Le type de faction ( 1 = gang , 2 = mafia )
	fColor,                		// Couleur du gang ( si c'est un gang )
	fChoseColor,           		// 0 = non choisi - 1 = choisi ( Si la couleur a été choisi) ( si c'est un gang )
	fWV,                  		// Virtual world de l'interrieur du QG
	fRank1[32],              	// *********************************************
	fRank2[32],              	// *                                           *
	fRank3[32],              	// ** 		          Rang de                 **
	fRank4[32],              	// **               la faction                **
	fRank5[32],              	// *                                           *
	fRank6[32],              	// *********************************************
	fCreate,					// Si la faction est créée
	FNO_Mats,                   // Mats dans le coffre ( si c'est une mafia )
 	FNO_Hero,                   // Heroïne dans le coffre ( si c'est une mafia )
 	FNO_Coca,                   // Cocaïne dans le coffre ( si c'est une mafia )
 	FNO_Exta,                   // Ecstasi dans le coffre ( si c'est une mafia )
 	FNO_Arme1,                  // *********************************************
 	FNO_Amo1,                   // *                                           *
 	FNO_Arme2,                  // *                                           *
 	FNO_Amo2,                   // *                                           *
 	FNO_Arme3,                  // *                                           *
 	FNO_Amo3,                   // *                                           *
 	FNO_Arme4,                  // *                                           *
 	FNO_Amo4,                   // *                                           *
 	FNO_Arme5,                  // **   		  Armes et munitions          **
 	FNO_Amo5,                   // **     			dans le coffre            **
 	FNO_Arme6,                  // *                (Non optimisé)             *
 	FNO_Amo6,                   // *                   fGun[10],               *
 	FNO_Arme7,                  // *                   fAmmo[10],              *
 	FNO_Amo7,                   // *                                           *
 	FNO_Arme8,                  // *                                           *
 	FNO_Amo8,                   // *                                           *
 	FNO_Arme9,                  // *                                           *
 	FNO_Amo9,                   // *                                           *
 	FNO_Arme10,                 // *                                           *
 	FNO_Amo10,                  // *********************************************
};
new FactionInfo[MAX_FACTION][e_Faction];
new Text3D:FactionLabel[MAX_FACTION];
new FactionPickup[MAX_FACTION];
new Text3D:FactionCoffreLabel[MAX_FACTION];
new FactionCoffrePickup[MAX_FACTION];

enum e_Governement
{
	rank1[32],
	rank2[32],
	rank3[32],
	rank4[32],
	rank5[32],
	rank6[32],
	skin[6],
	interior,
	Float:pos[12],
	Float:cmds[12],
	world,
	license[7],
	salaryJob[20],
	salaryPolice[8],
	salaryFbi[6],
	salaryCia[6],
	salaryGovernement[6],
	tax[6],
	safe,
	ticket,
	unemployment,
};
new governement[4][e_Governement];


enum e_Police
{
	rank1[32],
	rank2[32],
	rank3[32],
	rank4[32],
	rank5[32],
	rank6[32],
	rank7[32],
	rank8[32],
	skin[8],
	interior,
	world,
	Float:pos[12], // Enter - Exit - Spawn
	Float:cmds[6], // Duty - Equip
};
new police[4][e_Police];

enum e_Fine
{
	tmpName[64],
	price,
	bool:used,
	city,
}
new fine[MAX_FINE][e_Fine];

enum e_Fbi
{
    rank1[32],
	rank2[32],
	rank3[32],
	rank4[32],
	rank5[32],
	rank6[32],
	rank7[32],
	skin[7],
	Float:Spawn[4],
	Interior,
	Float:Arrested[3],
	Float:Entrance[4],
	Float:Exit[4],
	entrancePickup,
	exitPickup,
	Text3D:entranceLabel,
	Text3D:exitLabel,
	arrestedPickup,
	Text3D:arrestedLabel,
	icon,
}
new FBIInfo[e_Fbi];

enum e_Fire
{
	rank1[32],
	rank2[32],
	rank3[32],
	rank4[32],
	rank5[32],
	rank6[32],
	skin[6],
	Float:Spawn[4],
	Interior,
	VW,
	Float:Duty[3],
	Float:Equip[3],
	Float:Bell[3],
	Float:Entrance[4],
	Float:Exit[4],
	entrancePickup,
	bellPickup,
	healthPickup,
	exitPickup,
	Text3D:entranceLabel,
	Text3D:exitLabel,
	Text3D:cmdLabel[4],
	icon,
}
new FireInfo[e_Fire];

enum e_Biker
{
	rank1[32],
	rank2[32],
	rank3[32],
	rank4[32],
	rank5[32],
	rank6[32],
	skin[6],
	Float:Spawn[4],
	Interior,
	Float:Entrance[4],
	Float:Exit[4],
	entrancePickup,
	exitPickup,
	Text3D:entranceLabel,
	Text3D:exitLabel,
	biCash,
	biItemM[10],
	biItemQ[10],
}
new BikerInfo[e_Biker];

enum e_Mecano
{
	rank1[32],
	rank2[32],
	rank3[32],
	rank4[32],
	rank5[32],
	rank6[32],
	skin[6],
	Interior,
	VW,
	Float:Entrance[4],
	Float:Exit[4],
	Float:Duty[3],
	Float:Equip[3],
	Float:Bell[3],
	Float:Spawn[4],
	Text3D:cmdLabel[3],
	bellPickup,
	exitPickup,
	entrancePickup,
	Text3D:entranceLabel,
	Text3D:exitLabel,
	icon,
}
new MecanoInfo[e_Mecano];

enum e_SanNews
{
	abc_Cash,
	abc_SMS,
	rank1[32],
	rank2[32],
	rank3[32],
	rank4[32],
	rank5[32],
	rank6[32],
};
new sanNews[e_SanNews];

enum e_Spike
{
	used,
	Float:pos[3],
	faction,
};
new spike[MAX_SPIKE][e_Spike];

enum e_Bar
{
	used,
	faction,
	Float:pos[3],
};
new bar[MAX_BAR][e_Bar];

enum e_TrashCar
{
	Float:pos[3],
	used,
};
new trashCar[MAX_TRASHCAR][e_TrashCar];

enum e_Tree
{
	XmasTreeX,
    Float:XmasX,
    Float:XmasY,
    Float:XmasZ,
    XmasObject[10],
};
new SapinInfo[MAX_TREE][e_Tree];

enum e_Player
{
	pKey[64],      			// Mot de passe du joueur
	pName[MAX_PLAYER_NAME+1],// Nom du joueur (Afficher dans les phrases) - En fonction de la cagoule, etc ..
	pRealName[MAX_PLAYER_NAME+1],// Vrai nom
	pCity,                  // Ville de résidense
	pTs[32],                // identité TeamSpeak
	pLevel,         		// Level du joueur = Age
	pAdmin,         		// Niveau admin du joueur
	pDonateRank,    		// Niveau V.I.P ou nan
	pHelper,                // Niveau helpeur
	pAnimator,              // Niveau Animateur
	pVipTime,               // Temps V.I.P
	pConnectTime,   		// Temps au total connecté sur le serveur
	pSex,           		// LE sexe du joueur
	pAge,           		// L'age du joueur
	pOrigin,        		// L'origine du joueur
    pWarnings,      		// Le nombre d'avertissement du joueur
	pExp,           		// Point de respect du joueur
	pCash,          		// L'argent du joueur
	pAccount,       		// Compte en banque du joueur
	pCheck,                 // A un chèquier
	pCheckNumber,           // Nombre de check restant
	probbank,       		// Temps avant que le joueur puisse re-braquer la banque
	pHotel,         		// SI le joueur est à l'hotel
	pPointPermis,   		// Le nombre de point de permis que détient le joueur
	pDeaths,                // Nombre de fois que le joueur est mort
	pWanted,          		// Recherché pour avoir tué quelqu'un
	plottoNr,       		// Le numero lotto du joueur
	pFishes,
	pJob,           		// Le job du joueur
	pJobTime,               // Temps de travail du joueur
	pJobBonus,              // Bonus Job
	pJobLvl,                // Niveau du job du joueur
	pJobExp,                // Xp du job du joueur
	pJobRemain,             // temps de travail avant un nouveau job
	pPayCheck,              // Argent ajouter au payday (en fonction du job)
	pJailed,        		// SI le joueur est jail
	pJailTime,      		// Le nombre de minute ou il est jail
	pDrugs,         		// Le nombre de drogue que detient le joueur
	pLeader,        		// Si le joueur est leader d'un faction
	pMember,        		// SI le joueur est membre d'un faction
	pRank,          		// Le rank du joueur dans la faction
	pDutyTime,
	pChar,          		// Le skin du joueur
	pRename,                // Nombre de Rename que dispose le joueur
	pChangeNum,             // 1 si le joueur peut changer de numéro
	pChangePlaque,
	pChangeSex,
	pChangeAge,
	Float:pArmour,  		// Armure du joueur
	Float:pHealth,
	pEnveloppe,
	pStamp,
	pLetter,
	pSpawn,                 // Spawn du joueur
	pFaim,            		// Faim du joueur
	pSoif,                  // Soif du joueur
	pDisease,               // Maladie du joueur
	pInt,           		// L'interrieur du joueur
	pNumber,       			// Le numero de tel du joueur
	pOperator,              // Operateur du joueur
	pFormul,                // Formul du joueur
	pPhoneTime,             // Temps d'appel qu'a le joueur
	pLendCar,               // Id du véhicule preter
	pCar[6],
	pPcarkey,       		// Le véhicule n°1 du joueur
	pPcarkey2,      		// Le véhicule n°2 du joueur
	pPcarkey3,      		// Le véhicule n°3 du joueur
	pPcarkey4,      		// Le véhicule n°4 du joueur (pour VIP)
	pPcarkey5,      		// Le véhicule n°5 du joueur (pour VIP)
	pPcarkey6,      		// Le véhicule n°6 du joueur (pour VIP)
	pCarDev4,               // Indique si le slot 4 du joueur est deverouiller
	pCarDev5,               // Indique si le slot 5 du joueur est deverouiller
	pCarDev6,               // Indique si le slot 6 du joueur est deverouiller
	pPbiskey,       		// L'id de la clef du biz du joueur
	pBizkey1,               // Clef Biz 1
	pBizkey2,               // Clef Biz 2
	pBizkey3,               // Clef Biz 3
	pHousekey1,             // Clef Maison 1
	pHousekey2,             // Clef Maison 2
	pHousekey3,             // Clef Maison 3
	pGarageKey1,            // Clef Garage 1
	pGarageKey2,            // Clef Garage 2
	pGarageKey3,            // Clef Garage 3
	Float:pPos_x,   		//**
	Float:pPos_y,   		//**** Les dernières positions du joueur (En cas de crash)
	Float:pPos_z,   		//**
	pCarLic,        		// Si le joueur a le permis de conduire
	pFlyLic,        		// Si le joueur a le permis de vol
	pBoatLic,       		// SI le joueur a le permis de navigation
	pFishLic,       		// Si le joueur a le permis de peche
	pLourdLic,     		 	// Si le joueur a le permis poid lourd
	pMotoLic,       		// Si le joueur a le permis de moto
	pGunLic,        		// SI le joueur a le permis D'arme
	pTrainLic,      		// SI le joueur a le permis de train
	pGun1,                  // Arme 1 stocké dans l'inventaire(en cas de crash)
	pGun2,                  // Arme 2 stocké dans l'inventaire(en cas de crash)
	pGun3,                  // Arme 3 stocké dans l'inventaire(en cas de crash)
	pGun4,                  // Arme 4 stocké dans l'inventaire(en cas de crash)
	pAmmo1,					// Amo 1 stocké dans l'inventaire(en cas de crash)
	pAmmo2,					// Amo 2 stocké dans l'inventaire(en cas de crash)
	pAmmo3,					// Amo 3 stocké dans l'inventaire(en cas de crash)
	pAmmo4,					// Amo 4 stocké dans l'inventaire(en cas de crash)
  	pHeroine,               // Nombre d'héroïne qu'a le joueur
  	pCocaine,               // Nombre de cocaïne qu'a le joueur
  	pEcstasy,               // Nombre d'ecstasy qu'a le joueur
  	pIdentie,               // Indique si le joueur à une carte d'identité
	pPayDay,
	pPayDayHad,
	pCrashed,       		// Si le joueur a crashé
	pSkinCrash,
	pDutyCrash,
	pVirWorld,              // Virtualworld du joueur
	pMarried,               // Si le joueur est marrié
	pMarriedTo,        		// Nom du joueur a qui il est marrié
	pFishTool,              // Si le joueur a du matériel de peche
	pNote1[128],            // Note 1 du joueur
	pNote1s,
	pNote2[128],            // Note 2 du joueur
	pNote2s,
	pNote3[128],            // Note 3 du joueur
	pNote3s,
	pNote4[128],            // Note 4 du joueur
	pNote4s,
	pNote5[128],            // Note 5 du joueur
	pNote5s,
	pInvWeapon[6],            // Id de l'arme dans l'inventaire
	pInvAmmo[6],              // Munition de l'arme dans l'inventaire
	pInvDev5,               // Déverouillage slot arme 5 vip
	pInvDev6,               // Déverouillage slot arme 6 vip
	pMask,                  // Si le joueur a une cagoule
	pHideNumber,            // 1 si le joueur cache son numero
	pJerricainFuel,         // Si le jerricain est rempli
	pSkill[10],             // Skill du joueur
	pWepTrainTime,          // Teamps avant que le joueur puisse se ré-entrainer
	pLocked,                // Si le compte du joueur est blocké
	pLang1,                 // Langue n°1 du joueur
	pLang2,                 // Langue N°2 du joueur
	pLang1State,
	pLang2State,
	pLangTrainTime,
	pEmail[32],         	// L'email du joueur
	pCombatStyle,      		// Style de combat du joueur
	pTicket,        		// SI je joueur a un ticket de parking
	pRobTime,               // Temps avant que le joueur puisse re-braquer
	pRobTimeCar,       		// Temps avant que le joueur puisse re-voler un véhicule
	pRobTimeBizz,       	// Temps avant que le joueur puisse re-voler un Biz
	pRobTimePocket,         // Temps avant que le joueur puisse re-voler un joueur
	pRobTimeATM,            //
	pRobTimeTrunk,
	pMod_sa,                // Indique si le joueur utilise 'Sobeit'
	pMod_sa_Spawn,          // Si c'est le 1er spawn
	pIP[16],                // Ip du joueur
	pBag,                   // Type de sac du joueur
	pMobi[5],               // Mobi stockés
	pSQLID,                 // Id SQL dans la DB
	Float:pCurrentPos[3],
	Float:pSetPos[3],
	pInvModel[55],
	pInvQuant[55],
	pShots[15],
	pLastShotTick,
	pLastUpdate,
	pSpetacte,
	pLastCar,
	pRecup,
	pTaxi,
	pActive,
	pConnected              // Indique si le joueur est connecté
};
new PlayerInfo[MAX_PLAYERS][e_Player];

enum e_Accessory
{
    Float:pos_x[5],
    Float:pos_y[5],
    Float:pos_z[5],
    Float:pos_rx[5],
    Float:pos_ry[5],
    Float:pos_rz[5],
    Float:pos_ox[5],
    Float:pos_oy[5],
    Float:pos_oz[5],
    model[5],
	bone[5],
};
new accessory[MAX_PLAYERS][e_Accessory];

enum e_Basket
{
	used,
	owner,
	object,
	statut,
	shooting,
	bounce,
};
new basket[MAX_BALL][e_Basket];

enum e_BoomBox
{
    Float:pos[3],
	url[256],
	used,
};
new boomBox[MAX_PLAYERS][e_BoomBox];

/*enum e_TeamSpeak
{
	tmpName[64],
	description[128],
	passwords[16],
	TSC_CHANNELTYPE:tmpType,
	talk,
	used,
	chanelId,
}
new teamspeak[MAX_CHANNEL][e_TeamSpeak];*/

enum e_Event
{
    tmpName[64],
    description[128],
    jacpot[64],
	maxParticipent,
	parcitipents,
	Float:teleport[3],
	step,
};
new event[e_Event];

enum e_Npc
{
	typeZ,
	variable,
};
new npc[MAX_PLAYERS][e_Npc];

enum e_Actor
{
	typeZ,
	variable,
	world,
	Text3D:label,
	Float:pos[3]
};
new actor[MAX_ACTORS][e_Actor];

enum e_House
{
	Float:pos[6],
	owner[MAX_PLAYER_NAME],
	owned,
	description[36],
	showDesc,
	price,
	talking,
	insurance,
	rentPrice,
	rentState,
	rentNb,
	rentMax,
	lock,
	interior,
	world,
	cash,
	Float:armour,
	hItemM[15],
	hItemQ[15],
	hObject[MAX_FURNITURES],
	hItem[MAX_FURNITURES],
	Float:hFurPos_x[MAX_FURNITURES],
	Float:hFurPos_y[MAX_FURNITURES],
	Float:hFurPos_z[MAX_FURNITURES],
	Float:hFurPos_rx[MAX_FURNITURES],
	Float:hFurPos_ry[MAX_FURNITURES],
	Float:hFurPos_rz[MAX_FURNITURES],
	fFurSQLid[MAX_FURNITURES],
	used,
};
new house[MAX_HOUSE][e_House];

enum e_Vehicle
{
	used,
	cModel,                         // Model du vehicule
	Float:cLocationx,               // Position X
	Float:cLocationy,               // Position Y
	Float:cLocationz,               // Position Z
	Float:cAngle,                   // Position R (Rotation)
	cColorOne,                      // Couleur 1 du véhicule
	cColorTwo,                      // Couleur 2 du véhicule
	cOwner[MAX_PLAYER_NAME],        // Le nom du propriétaire du véhicule
	cDescription[32],               // La description du véhicule
	cValue,                         // Le prix du véhicule
	cLicense[14],                   // La plaque du vehicule
	cOwned,                         // Indique si la voiture est à quelqu'un ou non
	cLock,                          // Indique si la voiture est fermée
	cStatut,                        // Indique si la voiture est en fourrière
	cType,                          // S'il y s'agit d'un vehicule de faction, job, autre ..
	cInt,                           // Intérrieur auquelle il est attaché
	cVW,                            // Wirtual World au quelle il est attaché
	cItemM[15],                     // Objets
	cItemQ[15],                     // Quantité des objets
	cWep[10],                       // Armes
	cAmmo[10],                      // Munitions
	Float:cArmour,                  // Armure situer dans le coffre
	cCash,                          // Argent dans le coffre
	cNeon,                          // Id des neons que possede la voiture
	cRob,                           // 0 = non volé, 1 = volé
	cGas,                           // Essence du véhicule
	cBody,                          // Cadavre dans le coffre
	Float:cHealth,                  // Moteur
	cBrid,                          // Bridage
	cMeter,                         // Mettres parcourus
	cKiloMeter,                     // kilomètres parcourus
	cRank,                          // Rang faction
	cJobCity,
	paintjob,
	stream[128],
	tExhausts,                     	// Tuning.
	tFrontBumper,                  	// Tuning.
	tRearBumper,                   	// Tuning.
	tRoof,                     		// Tuning.
	tSpoilers,                     	// Tuning.
	tSideBumper,                   	// Tuning.
	tWheels,                     	// Tuning.
	tHydraulics,                   	// Tuning.
	tNitro,                     	// Tuning.
	tSideBumper2,                   // Tuning.
	cTires,                         // Etat des pneux
	cDoors,                         // Etat des portes
	cPanels,                        // Etat de la carroserie
	cLights,                        // Etat des phares
	SQLID,
	ownerSQLID,
	bool:sabot,
	sabotDesc[64],
	bool:cWindows[4],
	bool:cLight,
	bool:cEngine,
};
new vehicle[MAX_CAR][e_Vehicle];

enum e_Garage
{
	owned,                     
 	used,                       
 	price,                      
 	lock,                          
	Float:pos[6],
	owner[MAX_PLAYER_NAME],  
};
new garage[MAX_GARAGE][e_Garage];

enum e_Atm
{
	used,
	cash,
	Float:pos[4],
	rob,
};
new atm[MAX_ATM][e_Atm];

enum e_Bin
{
    Float:pos[4],
	used,
	itemM[10],
	itemQ[10],
};
new bin[MAX_BIN][e_Bin];

enum e_Camera
{
	Float:pos[4],
	limit,
	price,
	range,
	used,
};
new camera[MAX_CAMERA][e_Camera];

enum e_Sign
{
	used,
	model,
	Float:pos[6],
	description[128],
	size,
	indexNum,
	bold,
	alignement,
	fontName[128],
	fontSize,
	textColor,
	backColor,
};
new sign[MAX_SIGN][e_Sign];

enum e_Ad
{
	Float:pos[6],
	used,
};
new ad[MAX_AD][e_Ad];

enum e_Drop
{
	Float:pos[3],
	model,
	quantity,
	time,
};
new drop[MAX_DROPS][e_Drop];

enum e_Tag
{
	Float:pos[6],
	description[128],
	fontSize,
	faction,
	used,
};
new tag[MAX_TAG][e_Tag];

/*enum e_Hlm
{
	pos[6],
	rentPrice,
	used,
};
new hlm[MAX_HLM][e_Hlm];*/

enum e_Stop
{
	Float:pos[4],
	description[32],
	used,
	actorId,
};
new stop[MAX_BUSSTOP][e_Stop];

enum e_GPS
{
	Float:pos[3],
	description[32],
	city,
	used,
};
new gps[MAX_GPS][e_GPS];

enum e_Gate
{
	Float:pos[12],
	typeZ,
	action,
	bool:used,
	model,
	variable,
	Float:distanceZ,
	useTimer,
	description[32],
};
new gate[MAX_GATE][e_Gate];

enum e_Trash
{
	used,
	quantity,
	Float:pos[4],
};
new trash[MAX_TRASH][e_Trash];

enum e_Phone
{
	used,
	Float:pos[4],
};
new phone[MAX_PHONECAB][e_Phone];

enum e_Map
{
	used,
	Float:pos[4],
};
new map[MAX_MAP][e_Map];

enum e_Distrib
{
	used,
	Float:pos[4],
};
new distributor[MAX_DISTRIB][e_Distrib];

enum e_Body
{
	used,
	Float:pos[3],
	description,
	time[32],
	killer[32],
	playerZ[32],
	bool:fire,
};
new body[MAX_DEADBODY][e_Body];

enum e_Bag
{
	Float:pos[4],
	statut,
	show,
};
new bag[MAX_PLAYERS][e_Bag];

enum e_Spawn
{
	Float:pos[4],
	icon,
};
new spawn[MAX_CITY][e_Spawn];

enum e_Zone
{
	Float:zMin[2],
	Float:zMax[2],
	zZone,
	zSQLid,
}
new ZoneInfo[MAX_ZONE][e_Zone];

enum e_Seed
{
	sqlid,
 	step,
 	time,
 	Float:pos[3],
 	used,
 	model,
};
new seed[MAX_SEED][e_Seed];

enum e_Interior
{
	Float:pos[8],
	typeZ,
	city,
	interior,
	used,
	actorId[3],
};
new interiors[MAX_INTERIOR][e_Interior];

enum e_DealerShip
{
	Float:pos[3],
	typeZ,
	city,
	used,
};
new dealerShip[MAX_DEALSHIP][e_DealerShip];

enum e_Bizz
{
	owned,                      	// 0 = a vendre , 1 = acheté
	Float:pos[6],               	// Pos
	owner[MAX_PLAYER_NAME],     	// Propriétaire du bizz
	description[64],                // Message d'acceuildu bizz
	fund,                     		// Argent dans la caisse du bizz
	enterCost,                 		// Prix d'entré du bizz
	price,                       	// Prix d'achat du bizz
	prodCost,                  		// Prix d'un produit
	lock,                       	// 0 = ouvert , 1 = fermé
 	typeZ,                       	// Type de bizz : 24/7, tabac. . .
 	interior,                       // Interrieur du bizz
	products,                   		// Produits du bizz
	prodMax,                		// Max de produit du bizz
	world,                     		// Virtual world du bizz
	variable,                           // S'il est dffinie
	itemCost[20],              		// Prix des articles
	used,                       	// Indique si le bizz est difini
	actorId[3],
};
new bizz[MAX_BIZZ][e_Bizz];

enum e_SBizz
{
    ubOwned,                      	// 0 = a vendre , 1 = acheté
    Float:ubEntrance_x,           	// Entré x du bizz
    Float:ubEntrance_y,           	// Entré y du bizz
    Float:ubEntrance_z,           	// Entré z du bizz
    Float:ubExit_x,               	// Sortie x du bizz
	Float:ubExit_y,               	// Sortie y du bizz
	Float:ubExit_z,               	// Sortie z du bizz
	ubOwner[MAX_PLAYER_NAME],     	// Propriétaire du bizz
	ubMessage[64],                	// Message d'acceuildu bizz
	ubCaisse,                     	// Argent dans la caisse du bizz
	ubEnterPrice,                 	// Prix d'entré du bizz
	ubPrix,                       	// Prix d'achat du bizz
	ubPrix_Prod,                  	// Prix d'un produit
	ubLock,                       	// 0 = ouvert , 1 = fermé
	ubInt,                       	// Interrieur du bizz
	ubProduits,                   	// Produits du bizz
	ubMaxProduits,                	// Max de produit du bizz
	ubWV,                     		// Virtual world du bizz
	Float:ubSpecial_pos_x,          // Special pos x
	Float:ubSpecial_pos_y,          // Special pos y
	Float:ubSpecial_pos_z,          // Special pos z
	ubPriceArticle[5],
	ubHasInt,                       // 1 = a un interrieur, 0 = n'en a pas
};
new sbizz[MAX_SBIZZ][e_SBizz];

new vehName[][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper",
	"Camion LSFD","Trashmaster","Limousine","Manana","Infernus","Voodoo","Pony",
	"Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington",
	"Bobcat","Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar",
	"Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon",
	"Coach","Cabbie","Stallion","Rumpo","RC Bandit","Romero","Packer","Monster",
	"Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkleys RC Van","Skimmer",
	"PCJ-600","Scooteur","Freeway","RC Baron","RC Raider","Glendale","Oceanic",
	"Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre",
	"Rustler","ZR-350","Walton","Regina","Comet","BMX","Burrito","Camper","Marquis",
	"Baggage","Dozer","Maverick","News Chopper","4x4","4x4","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Helico LSPD","Boxvillde","Benson",
	"Mesa","RC Goblin","Hotring Racer A","Hotring Racer B","Bloodring Banger","4x4",
	"Super GT","Elegant","Journey","Velo","VTT","Beagle","Cropduster","Stunt","Tanker",
	"Roadtrain","Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500",
	"HPV1000","Cement Truck","Depanneuse","Fortune","Cadrona","Truck","Willard",
	"Forklift","Tracteur","Combine","Feltzer","Remington","Slamvan","Blade","Freight",
	"Streak","Vortex","Vincent","Bullet","Clover","Sadler","Camion LSFD","Hustler",
	"Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada",
	"Jeep","Windsor","Monster","Monster","Uranus","Jester","Sultan","Stratum",
	"Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight Flat",
	"Streak Carriage","Kart","Mower","Dune","Sweeper","Broadway","Tornado","AT-400",
	"DFT-30","Huntley","Stafford","BF-400","San News Van","Tug","Trailer","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Freight Box","Trailer","Andromada","Dodo",
	"RC Cam","Launch","LSPD","SFPD","LVPD","Police 4x4","Picador","S.W.A.T","Alpha",
	"Phoenix","Glendale","Sadler","Luggage","Luggage","Stairs","Boxville","Tiller",
	"Utility Trailer"
};

new GunObjects[47] = {
	0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,344,
	0,0,0,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,
	363,364,365,366,367,368,368,371
};
//
//==============================================================================
//                          GameMode - Scripts
//==============================================================================
//																	Dark_Rider29
main()
{
	new Inistring[64],mapini[32];
    SetGameModeText(SCRIPT_VERSION);
    format(mapini, sizeof(mapini), "%s",MAP_NAME); strdel(mapini, 0, 3);
	format(Inistring, sizeof(Inistring), "mapname %s",mapini);
	SendRconCommand(Inistring);
	format(Inistring, sizeof(Inistring), "weburl %s",FORUM_NAME);
	SendRconCommand(Inistring);
	format(Inistring, sizeof(Inistring), "hostname %s",HOST_NAME);
	SendRconCommand(Inistring);
	print("Informations");
	print("--------------");
	printf("Gamemode pour SAMP 0.3.7 R2|| Version GM %s",SCRIPT_VERSION);
	print ("- Developped by Dark_Rider29 (Samp Forum)");
	print ("- Mapped by Lurtz59");
	print (" ");
	print("Logs");
	print("------");
	if(setting[bot]==true)
		{npc_Join();}
	start_Timers();
	//teamspeak_CreateChannel("IC #1","Channel IC #1 Test",SEMI_PERMANENT,"test");
}

public timer_30mns()
{
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(gPlayerLogged[i]!=0)
			{
				if(PlayerInfo[i][pWanted] > 0)
					{PlayerInfo[i][pWanted]--; SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);}
			}
		}
	}
	for(new i=0; i<totalSeeds; i++)
	{
		if(seed[i][used]==1)
			{seed_Save(i);}
	}
}

public timer_1h()
{
    for(new car=0; car<=totalVehicles; car++)
	{
		if(vehicle[car][cRob]> 0)
	    	{vehicle[car][cRob]--;}
	}
	for(new fac=1; fac<=totalFactions; fac++)
	{
		if(FactionInfo[fac][fRobCar]>0)
	    	{FactionInfo[fac][fRobCar]--;}
		if(FactionInfo[fac][fRobTime] > 0)
		    {FactionInfo[fac][fRobTime]--;}
	}
    MySQLReloadBans();
}

stock MySQLReloadBans()
{
    new bantemps_number, bantemps_time, bantemps_sqlid;
    mysql_format(MYSQL, sql, sizeof(sql), "SELECT * FROM lvrp_users_bans");
	mysql_query(MYSQL, sql, true);
 	cache_get_row_count(bantemps_number);
	for(new i=0; i<bantemps_number; i++)
	{
		mysql_format(MYSQL, sql, sizeof(sql), "SELECT * FROM lvrp_users_bans ORDER BY SQLid LIMIT %d,1",i);
  		mysql_query(MYSQL,sql, true);

		new count = 0;
        if(cache_get_row_count(count) && count ==  1)
		{
		    cache_get_value_name_int(0, "SQLid", bantemps_sqlid);
		    cache_get_value_name_int(0, "Time", bantemps_time);
			if(bantemps_time == -1) // BAN Perm
				{continue;}
            bantemps_time-=1;
			if(bantemps_time > 0)
			{
				format(sql, sizeof(sql), "UPDATE lvrp_users_bans SET Time=%d WHERE SQLid=%d",bantemps_time,bantemps_sqlid);
				mysql_pquery(MYSQL,sql);
			}
			else if(bantemps_time == 0)
			{
				format(sql,sizeof(sql),"UPDATE lvrp_users SET Locked=0 WHERE id=%d",bantemps_sqlid);
				mysql_pquery(MYSQL,sql);

				format(sql,sizeof(sql),"DELETE FROM lvrp_users_bans WHERE SQLid=%d",bantemps_sqlid);
				mysql_pquery(MYSQL,sql);
			}
	    }
	}
}

stock faction_CheckReload()
{
    //new hasedited=0;
    // LSPD
    /*format(sql, sizeof(sql), "SELECT EditedBySite FROM lvrp_factions_polices WHERE id=1");
	mysql_query(MYSQL,sql);
	hasedited = cache_get_value_name_int(0,"EditedBySite");
	if(hasedited==1)
	    {police_Load(); mysql_tquery(MYSQL,"UPDATE lvrp_factions_polices SET EditedBySite=0 WHERE id=1"); hasedited=0;}
	    
    format(sql, sizeof(sql), "SELECT EditedBySite FROM lvrp_factions_fbi WHERE id=1");
	mysql_query(MYSQL,sql);
	hasedited = cache_get_value_name_int(0,"EditedBySite");
	if(hasedited==1)
	    {fbi_Load(); mysql_tquery(MYSQL,"UPDATE lvrp_factions_fbi SET EditedBySite=0 WHERE id=1"); hasedited=0;}
	    
    format(sql, sizeof(sql), "SELECT EditedBySite FROM lvrp_factions_pompier WHERE id=1");
	mysql_query(MYSQL,sql);
	hasedited = cache_get_value_name_int(0,"EditedBySite");
	if(hasedited==1)
	    {fire_Load(); mysql_tquery(MYSQL,"UPDATE lvrp_factions_pompier SET EditedBySite=0 WHERE id=1"); hasedited=0;}
	    
    format(sql, sizeof(sql), "SELECT EditedBySite FROM lvrp_factions_biker WHERE id=1");
	mysql_query(MYSQL,sql);
	hasedited = cache_get_value_name_int(0,"EditedBySite");
	if(hasedited==1)
	    {biker_Load(); mysql_tquery(MYSQL,"UPDATE lvrp_factions_biker SET EditedBySite=0 WHERE id=1"); hasedited=0;}
	    
    format(sql, sizeof(sql), "SELECT EditedBySite FROM lvrp_factions_mecano WHERE id=1");
	mysql_query(MYSQL,sql);
	hasedited = cache_get_value_name_int(0,"EditedBySite");
	if(hasedited==1)
	    {mecano_Load(); mysql_tquery(MYSQL,"UPDATE lvrp_factions_mecano SET EditedBySite=0 WHERE id=1"); hasedited=0;}*/
	    
	return 1;
}

public timer_5mns()
{
    new string[128];
    SendClientMessageToAll(COLOR_WHITE, announce[random(ANNOUNCES)]);
    faction_CheckReload();
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(gPlayerLogged[i]!=0)
				{anticheat_AFK(i);}
		}
	}
	for(new i=0;i<totalTrash;i++)
	{
	    if(trash[i][used]==1)
	    {
	        for(new hId=0;hId<totalHouses;hId++)
	        {
	            if(house[hId][used]==1)
	            {
	        		if(ProxDetectorTrashHouse(45.0,i,hId))
	        		{
	        		    trash_SaveTime++;
	        		    trash[i][quantity]+=2;
	        		    if(trash[i][quantity]>100) trash[i][quantity]=100;
	        		    // Mieux vos Update un Text3D que le Text3D + L'Object
	        		    format(string, sizeof(string), "{00D36A}[Poubelle]\nOrdures : {FFFFFF}%d/100",trash[i][quantity]);
	        		    UpdateDynamic3DTextLabelText(trash_Label[i],0x00FFFAF6,string);
						if(trash_SaveTime==5){trash_Save(i);trash_SaveTime=0;}// Sauvegarde toutes les 25 mins
	        		}
				}
	        }
	    }
	}
	new totalcrack,times,tmp_sqlid;
	format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_crackhouses");
	mysql_query(MYSQL,sql);
	cache_get_row_count(totalcrack);
	for(new i=0; i<totalcrack; i++)
	{
	    format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_crackhouses ORDER BY SQLid LIMIT %d,1",i);
	    mysql_query(MYSQL,sql);
	    cache_get_value_name_int(0, "Time", times);
     	cache_get_value_name_int(0, "SQLid", tmp_sqlid);
		if(times == 0)
			{continue;}
        times--;
        format(sql,sizeof(sql),"UPDATE lvrp_factions_illegals_crackhouses SET Time=%d WHERE SQLid=%d",times,tmp_sqlid);
		mysql_pquery(MYSQL,sql);
        if(times == 0)
		{
			for(new p = 0; p <MAX_PLAYERS_CURRENT+1; p++)
			{
				if(IsPlayerConnected(p))
				{
					if(PlayerInfo[p][pSQLID]==tmp_sqlid && PlayerInfo[p][pMember]>=200 && FactionInfo[PlayerInfo[p][pMember]-200][fType] == 1)
					{
					   	format(string, sizeof(string), "{006500}» Récolte «{FFFFFF} Votre Weed est découpée, aller la récuperer au Crack House.");
						msg_Client(p, COLOR_GANG, string);
					}
					else if(PlayerInfo[p][pSQLID]==tmp_sqlid)
					{
					    format(sql,sizeof(sql),"DELETE FROM lvrp_factions_illegals_crackhouses WHERE SQLid=%d",tmp_sqlid);
						mysql_pquery(MYSQL,sql);
					}
				}
			}
		}
	}
}

stock seed_Timer()
{
	//seed_Load();
	for(new i=0; i<totalSeeds; i++)
	{
	    if(seed[i][used]==1)
	    {
	        //new string[256],seedname[MAX_PLAYER_NAME];
		    if(seed[i][time] >= 1)
			{
				seed[i][time] -= 1; seed[i][step]++;
				/*MySQLGetNameWithId(seed[seed][sqlid],seedname);
				if(seed[seed][model] == SEED_WEED)
					{format(string,sizeof(string),"[Plant de weed]\nProprio : %s\nTemps restant : %d min(s)",seedname,seed[seed][time]);}
				else if(seed[seed][model] == SEED_COCA)
				    {format(string,sizeof(string),"[Plant de coca]\nProprio : %s\nTemps restant : %d min(s)",seedname,seed[seed][time]);}
				UpdateDynamic3DTextLabelText(seed_Label[seed],0x00FFFAF6,string);*/
				seed_UpdateInfos(i);
			}
		}
	}
	for(new i=0; i<totalDrops; i++)
	{
	    if(drop[i][model] != -1 && drop[i][time] > 0)
	    {
	        drop[i][time]-=1;
	        if(drop[i][time] <= 0)
	            {drop_Remove(i);}
	    }
	}
}


public timer_2s()
{
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(setting[anticheat] == true)
    			{anticheat_Check(i);}
			if(gPlayerLogged[i]!=0)
			{
		        timer_Decrement(i);
			    Streamer_Update(i);
			    atm_CheckRob(i);
		    }
		}
	}
}

public timer_5s()
{
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(gPlayerLogged[i]!=0)
			{
			    if(strcmp(TME[i], "Aucun", true) == 0){}
			    else
					{SetPlayerChatBubble(i,TME[i],COLOR_PINK,NAME_DISTANCE,5000);}

			    if(anticheat_Warn[i][3] > 0)
					{anticheat_Warn[i][3] --;}
				if(anticheat_Warn[i][4] > 0)
					{anticheat_Warn[i][4] --;}
                if(anticheat_Warn[i][7] > 0)
					{anticheat_Warn[i][7] --;}
					
				if(job_Start[i] == 1)
				{
				    if(PlayerInfo[i][pJob] == 2)
				    {
				        if(IsPlayerInVehicle(i,job_CarId[i]) && GetVehicleModel(job_CarId[i]) == 532 && (IsPlayerInDynamicArea(i,job_Area[0]) || IsPlayerInDynamicArea(i,job_Area[1]) || IsPlayerInDynamicArea(i,job_Area[2]) || IsPlayerInDynamicArea(i,job_Area[3]) || IsPlayerInDynamicArea(i,job_Area[4])))
				        {
				            new Float:X,Float:Y,Float:Z;
							GetVehicleShiftPos(job_CarId[i], 1, X, Y, Z, 6);
							for(new o=0; o<5; o++)
							{
							    if(!IsValidDynamicObject(job_Object[i][o]))
						    	{
						    	    job_Object[i][o] = CreateDynamicObject(1454,X,Y,Z-1.5,0,0,0,0,0,i,400.0);
									job_ObjectPos[i][o][0]=X; job_ObjectPos[i][o][1]=Y; job_ObjectPos[i][o][2]=Z;
									job_ObjectN[i]++;
									if(job_ObjectN[i]==5)
								    	{msg_Client(i,COLOR_JOB,"{78769D}» Job «{FFFFFF} Ramasser les bottes de paile à l'aide de la camionette.");}
		 							break;
								}
							}
				        }
				    }
				    else if(PlayerInfo[i][pJob] == 8)
				    {
				        if(IsPlayerInVehicle(i,job_CarId[i]) && GetVehicleModel(job_CarId[i]) == 453)
				        {
				            if(job_ObjectN[i] == 1)
				            {
					            new Float:X,Float:Y,Float:Z;
					            GetVehiclePos(job_CarId[i],X,Y,Z);
					            #pragma unused Z
					            if(X >= -2557.00 && X < -2109.00 && Y >= 1798.21 && Y < 2134.21 || X >= 718.123474 && X < 914.123474 && Y >= -2238.123291 && Y < -2098.123291)
		    					{
								    job_TempVar[i]++;
								    if(job_TempVar[i]==2)
								    	{job_Object[i][3] = CreateDynamicObject(1605,0,0,0,0,0,0,0,0,-1,200.0);AttachDynamicObjectToVehicle( job_Object[i][3], GetPlayerVehicleID(i), 0.000000, -11.800008, -0.499999, 0.000000, 0.000000, 52.000000 );}
								    else if(job_TempVar[i]==4)
								    	{job_Object[i][4] = CreateDynamicObject(1606,0,0,0,0,0,0,0,0,-1,200.0);AttachDynamicObjectToVehicle( job_Object[i][4], GetPlayerVehicleID(i), 0.000000, -9.600000, -0.599999, 0.000000, 0.000000, 340.000000 );}
                                    else if(job_TempVar[i]==5)
								    {
								        msg_Client(i,COLOR_JOB,"{78769D}» Job «{FFFFFF} Remonter votre fillet 'Y', et allez déposer le poisson. (Point rouge minimap).");
								        msg_Client(i,COLOR_JOB,"{78769D}» Job «{FFFFFF} Un fois au port descendez de votre bâteau et prenez le poisson. Touche 'Y'.");
										if(job_City[i] == 0)
										    {SetPlayerCheckpoint(i,894.2875,-1911.7617,1.1277,2.5);}
										else
											{SetPlayerCheckpoint(i,-2186.6272,2414.9634,5.1563,2.5);}
									}
								}
								else
								    {msg_Client(i,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez être dans la zone bleue pour pêcher.");}
	    					}
				        }
				    }
				}
			    SetPlayerScore(i, PlayerInfo[i][pLevel]);
			    anticheat_Ping(i);
		    }
	    }
    }
    boombox_Refresh();
}

public timer_110s()
{
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(!IsPlayerConnected(i) || IsPlayerNPC(i) || gPlayerLogged[i]==0 || AdminDuty[i] != 0 || afk_Check[i]==-1)
			{continue;}
		new string[128];
		PlayerInfo[i][pFaim]--;
		UpdateStatsTextsPlayers(i,1);
		if(PlayerInfo[i][pFaim] == 15)
		{
			format(string,sizeof(string),"* %s commence à avoir faim.",PlayerInfo[i][pName]);
			ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(PlayerInfo[i][pFaim] == 10)
		{
			format(string,sizeof(string),"* Le ventre de %s gargouille.",PlayerInfo[i][pName]);
			ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(PlayerInfo[i][pFaim] == 5)
		{
			format(string,sizeof(string),"* %s meurt de faim.",PlayerInfo[i][pName]);
			ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Si vous ne mangez pas, vous allez perdre de la vie!");
		}
		else if(PlayerInfo[i][pFaim] < 2)
			{SafeSetPlayerHealth(i,PlayerInfo[i][pHealth]-8);}
	}
}

public timer_90s()
{
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(!IsPlayerConnected(i) || IsPlayerNPC(i) || gPlayerLogged[i]==0 || AdminDuty[i] != 0 || afk_Check[i]==-1)
			{continue;}
		new string[128];
		PlayerInfo[i][pSoif]--;
		UpdateStatsTextsPlayers(i,2);
		if(PlayerInfo[i][pSoif] == 15)
		{
			format(string,sizeof(string),"* %s commence à avoir soif.",PlayerInfo[i][pName]);
			ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(PlayerInfo[i][pSoif] == 10)
		{
			format(string,sizeof(string),"* %s commence à avoir la gorge sèche.",PlayerInfo[i][pName]);
			ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(PlayerInfo[i][pSoif] == 5)
		{
			format(string,sizeof(string),"* %s meurt de soif.",PlayerInfo[i][pName]);
			ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Si vous ne buvez pas, vous allez perdre de la vie!");
		}
		else if(PlayerInfo[i][pSoif] < 2)
			{SafeSetPlayerHealth(i,PlayerInfo[i][pHealth]-10);}
	}
}

public timer_1mn()
{
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(gPlayerLogged[i]!=0)
			{
				// Bonus PayDay
				if(afk_Check[i]!=-1)
				{
	                PlayerInfo[i][pPayCheck]+=PlayerInfo[i][pLevel]*8;
	                PlayerInfo[i][pPayDayHad]++;
	    			if(PlayerInfo[i][pPayDayHad]>= 60)
						{PayDay(i);}
				}

			    if(PlayerInfo[i][pWepTrainTime] > 0)
					{PlayerInfo[i][pWepTrainTime]--;}
					
                if(PlayerInfo[i][pJobRemain] > 0)
					{PlayerInfo[i][pJobRemain]--;}

				if(PlayerInfo[i][pLangTrainTime] >0)
				    {PlayerInfo[i][pLangTrainTime]--;}

				if(PlayerInfo[i][pVipTime] > 0)
					{PlayerInfo[i][pVipTime]--;}
					
				if(PlayerInfo[i][pVipTime]==0 && PlayerInfo[i][pDonateRank] > 0)
				{
					PlayerInfo[i][pDonateRank]=0;
					msg_Client(i,COLOR_VIP,"{96009C}» V.I.P «{FFFFFF} Votre durée de temps VIP a expiré. Vous n'êtes plus VIP.");
				}

				if(job_Start[i] != 0 || mecano_Duty[i] == 1)
					{PlayerInfo[i][pJobTime]++;}
				    
				if(police_Duty[i]==1 || gouv_Duty[i]==1 || fire_Duty[i] == 1)
				    {PlayerInfo[i][pDutyTime]++;}

				new hour, minute, second;
				gettime(hour, minute, second);
				if(AdminDuty[i] == 0)
					{SetPlayerTime(i, hour, minute);}
				if(phone_Active[i]==1)
				{
				    new tmp[16];
				    format(tmp,sizeof(tmp),"%02dh%02d",hour,minute);
				    PlayerTextDrawSetString(i,phone_Hours[i],tmp);
				}
			}
		}
	}
    seed_Timer();
    RemiX_Time_Tools();
    car_CheckGas();
}

public timer_1s()
{
    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(gPlayerLogged[i]!=0)
			{
			    //player_UpdateLabel(i);
				if(IsPlayerInAnyVehicle(i))
					{camera_Update(i);}
				else
				    {CustomPickups(i);}
			}
		}
	}
}

public boombox_Refresh()
{
    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    for(new p=0; p<MAX_PLAYERS_CURRENT+1; p++)
		{
		    if(IsPlayerInRangeOfPoint(i, 30.0, boomBox[p][pos][0], boomBox[p][pos][1], boomBox[p][pos][2]))
			{
			    if(boomBox[p][used]==1 && boombox_Listen[i]!=p) // si la radio i est lancé
		        {
		            PlayAudioStreamForPlayer(i, boomBox[p][url], boomBox[p][pos][0], boomBox[p][pos][1], boomBox[p][pos][2], 25.0, 1);
		            boombox_Listen[i]=p;
		        }
			}
		}
	}
}

public job_ResetFreeze(playerid,other)
{
	if(PlayerInfo[playerid][pJob]==19)
	{
	    job_CheckPoints[playerid]++;
	    if(job_CheckPoints[playerid]==3)
	    	{job_TakePay(playerid,PlayerInfo[playerid][pJob]);job_CheckPoints[playerid]=0;}
	    PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
		atm[other][cash]=30000;
		atm_UpdateInfos(other);
		atm_Save(other);
		job_TempVar[playerid]=0;
		DestroyDynamicMapIcon(atm_Icon[playerid][other]);
		msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} ATM remplie.");
	}
	if(PlayerInfo[playerid][pJob]==10)
		{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous pouvez y aller.");}
	if(PlayerInfo[playerid][pJob]==11)
		{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous pouvez y aller.");}
		
	TogglePlayerControllable(playerid,true);
	return 1;
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp,1);
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp,1);
}

IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new posR = 0;
	while (text[posR] < 0x21) // Strip out leading spaces
	{
		if (text[posR] == 0) return INVALID_PLAYER_ID; // No passed text
		posR++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[posR])) // Check whole passed string
	{
		// If they have a numeric name you have a problem (although names are checked on id failure)
		userid = strval(text[posR]);
		if(userid >= 1000) // Cagoule
		{
		    for(new i = 0; i<MAX_PLAYERS_CURRENT+1; i++)
			{
			    if(IsPlayerConnected(i) && gPlayerMask[i] == userid)
			    	{userid = i; return userid;}
			}
		}
		if (userid >=0 && userid <MAX_PLAYERS_CURRENT+1)
		{
			if(!IsPlayerConnected(userid))
				{userid = INVALID_PLAYER_ID;}
			else
				{return userid;}
		}
	}
	// They entered [part of] a name or the id search failed (check names just incase)
	new len = strlen(text[posR]);
	new count = 0;
	new name[MAX_PLAYER_NAME];
	for (new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof (name));
			if (strcmp(name, text[posR], true, len) == 0) // Check segment of name
			{
				if (len == strlen(name)) // Exact match
					{return i;}
				else // Partial match
					{count++;userid = i;}
			}
		}
	}
	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
				{msg_Client(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");}
			else
				{msg_Client(playerid, 0xFF0000AA, "No matching user found");}
		}
		userid = INVALID_PLAYER_ID;
	}
	return userid; // INVALID_USER_ID for bad return
}


stock SetPlayerFacingPlayer(playerid, giveplayerid)
{
	new Float:angle,
		Float:misc = 5.0,
		Float:x, Float:y, Float:z,
		Float:ix, Float:iy, Float:iz;
	GetPlayerPos(giveplayerid, x, y, z);
	GetPlayerPos(playerid, ix, iy, iz);
	angle = 180.0-atan2(ix-x,iy-y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
}

stock SetPlayerFacingActor(playerid, giveplayerid)
{
	new Float:angle,
		Float:misc = 5.0,
		Float:ix, Float:iy, Float:iz;
	GetPlayerPos(playerid, ix, iy, iz);
	angle = 180.0-atan2(ix-actor[giveplayerid][pos][0],iy-actor[giveplayerid][pos][1]);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
}

stock house_CheckUnusedFurniture(id)
{
	for(new i=0; i<MAX_FURNITURES; i++)
	{
	    if(house[id][hItem][i]<=0)
	        {return i;}
	}
	return -1;
}

stock interior_GetActorInfos(id, &Float:x, &Float:y, &Float:z, &Float:a, &sk, botid, &stepp)
{
    switch(id)
	{
	    case 1:
		{
		    if(botid==0) 		{x=1489.0400; y=1305.7096; z=1093.2964; a=270; sk=219; stepp=1;}
			else if(botid==1) 	{x=1490.7449; y=1308.9606; z=1093.2891; a=180; sk=219; stepp=1;}
			else stepp=-1;
		}
	    case 2:
		{
			if(botid==0)	{x=1199.3754; y=-87.0234; z=1006.2589; a=0; sk=150; stepp=1;}
		    else stepp=-1;
		}
	    case 3:
		{
			if(botid==0) 		{x=-3429.8108; y=480.2127; z=57.6132; a=0; sk=228; stepp=1;}
			else if(botid==1) 	{x=-3432.3916; y=474.5814; z=57.6204; a=90; sk=228; stepp=1;}
			else stepp=-1;
		}
	    case 4:
		{
			if(botid==0)		{x=314.1592; y=291.7566; z=998.4849; a=0; sk=216; stepp=1;}
			else if(botid==1)	{x=312.3302; y=291.7443; z=998.4849; a=0; sk=216; stepp=1;}
			else if(botid==2)	{x=311.5704; y=290.5138; z=998.4849; a=90; sk=216; stepp=1;}
		}
	    case 5:
		{
			if(botid==0) 		{x=2307.1313; y=-11.0131; z=26.7422; a=170; sk=184; stepp=1;}
			else if(botid==1) 	{x=2310.8828; y=-11.0131; z=26.7422; a=170; sk=184; stepp=1;}
			else stepp=-1;
		}
	    case 6:
		{
			if(botid==0) 		{x=-1016.6187; y=1953.0320; z=3001.0859; a=90; sk=56; stepp=1;}
			else if(botid==1) 	{x=-1016.6273; y=1982.0299; z=3001.0859; a=90; sk=56; stepp=1;}
			else stepp=-1;
		}
	    case 7:
		{
			if(botid==0)	{x=1963.9323; y=-371.7006; z=1093.7289; a=0; sk=68; stepp=1;}
		    else stepp=-1;
		}
	    default:    {x=0.0; y=0.0; z=0.0; a=0; sk=150;}
	}
}

stock bizz_GetActorInfos(id, &Float:x, &Float:y, &Float:z, &Float:a, &sk, botid, &stepp)
{
    switch(id)
	{
	    case 1:
		{
		    if(botid==0)	{x=-27.8560; y=-91.6362; z=1003.5469; a=0; sk=150; stepp=1;}
		    else stepp=-1;
		}
	    case 2:
		{
			if(botid==0) 		{x=208.8546; y=-98.70110; z=1005.2578; a=180; sk=7; stepp=1;}
			else if(botid==1) 	{x=206.3611; y=-98.7052; z=1005.2578; a=180; sk=7; stepp=1;}
			else stepp=-1;
		}
	    case 3:
		{
			if(botid==0)	{x=-23.4371; y=-57.3231; z=1003.5573; a=0; sk=141; stepp=1;}
		    else stepp=-1;
		}
	    case 4:
		{
			if(botid==0)	{x=-30.8197; y=-30.7027; z=1003.5469; a=0; sk=76; stepp=1;}
		    else stepp=-1;
		}
	    case 5:
		{
			if(botid==0)	{x=380.7700; y=-189.1130; z=1000.6328; a=180; sk=209; stepp=1;}
		    else stepp=-1;
		}
	    case 6:
		{
			if(botid==0)		{x=376.7081; y=-117.2766; z=1001.4922; a=180; sk=155; stepp=1;}
			else if(botid==1)	{x=374.7185; y=-117.2773; z=1001.4922; a=180; sk=155; stepp=1;}
			else if(botid==2)	{x=372.7245; y=-117.2787; z=1001.4922; a=180; sk=155; stepp=1;}
		}
	    case 7:
		{
			if(botid==0)		{x=375.2834; y=-65.5453; z=1001.5078; a=90; sk=205; stepp=1;}
			else if(botid==1)	{x=376.4925; y=-65.8493; z=1001.5078; a=180; sk=205; stepp=1;}
			else stepp=-1;
		}
	    case 8:
		{
			if(botid==0)		{x=370.9076; y=-4.4926; z=1001.8589; a=180; sk=167; stepp=1;}
			else if(botid==1)	{x=368.1042; y=-4.4925; z=1001.8516; a=180; sk=167; stepp=1;}
			else stepp=-1;
		}
	    case 10:
		{
			if(botid==0)	{x=312.1405; y=-167.7639; z=999.5938; a=0; sk=101; stepp=1;}
		    else stepp=-1;
		}
	    case 11:
		{
			if(botid==0)	{x=-103.8259; y=-24.2026; z=1000.7188; a=0; sk=178; stepp=1;}
		    else stepp=-1;
		}
	    case 12:
		{
			if(botid==0)		{x=497.6998; y=-77.4622; z=998.7651; a=0; sk=67; stepp=1;}
			else if(botid==1)	{x=494.7653; y=-77.4616; z=998.7578; a=0; sk=67; stepp=1;}
			else if(botid==2)	{x=493.4681; y=-80.1381; z=998.7578; a=90; sk=67; stepp=1;}
		}
	    case 13:
		{
			if(botid==0)		{x=501.8279; y=-18.6181; z=1000.6719; a=90; sk=67; stepp=1;}
			else if(botid==1)	{x=501.8279; y=-22.0364; z=1000.6797; a=90; sk=67; stepp=1;}
			else stepp=-1;
		}
	    case 14:
		{
			if(botid==0)	{x=769.1721; y=10.7154; z=1000.7056; a=180; sk=80; stepp=1;}
		    else stepp=-1;
		}
	    case 15:
		{
			if(botid==0)	{x=204.3452; y=-157.8302; z=1000.5234; a=180; sk=7; stepp=1;}
		    else stepp=-1;
		}
	    case 16:
		{
			if(botid==0)		{x=206.3242; y=-127.8071; z=1003.5078; a=180; sk=7; stepp=1;}
			else if(botid==1)	{x=207.7496; y=-127.8069; z=1003.5078; a=180; sk=7; stepp=1;}
			else stepp=-1;
		}
	    case 17:
		{
			if(botid==0)		{x=203.1478; y=-41.6710; z=1001.8047; a=180; sk=7; stepp=1;}
			else if(botid==1)	{x=204.9523; y=-41.2727; z=1001.8047; a=270; sk=7; stepp=1;}
			else if(botid==2)	{x=202.6340; y=-40.0896; z=1001.8047; a=90; sk=7; stepp=1;}
		}
	    case 18:
		{
			if(botid==0)	{x=204.8538; y=-8.9752; z=1001.2109; a=270; sk=7; stepp=1;}
		    else stepp=-1;
		}
	    case 19:
		{
			if(botid==0)		{x=162.7852; y=-81.1852; z=1001.8047; a=177.7967; sk=7; stepp=1;}
			else if(botid==1)	{x=159.7618; y=-81.1911; z=1001.8120; a=177; sk=7; stepp=1;}
			else stepp=-1;
		}
	    case 20:
		{
			if(botid==0)	{x=446.3221; y=-9.1926; z=1000.7344; a=180; sk=150; stepp=1;}
		    else stepp=-1;
		}
	    default:    {x=0.0; y=0.0; z=0.0; a=0; sk=150;}
	}
}

stock house_GetCreateInfos(id, &Int, &Float:x, &Float:y, &Float:z, &Float:a, desc[64])
{
    switch(id)
	{
	    case 1:
	    	{Int=1; x=164.1932; y=1345.2394; z=1021.0020; a=0; strmid(desc, "Appartement 1 pièce", 0,  64, 64);}
        case 2:
	    	{Int=1; x=144.1638; y=1345.2391; z=1021.0020; a=0; strmid(desc, "Appartement 1 pièce", 0,  64, 64);}
        case 3:
	    	{Int=1; x=124.2009; y=1345.2394; z=1021.0020; a=0; strmid(desc, "Appartement 1 pièce", 0,  64, 64);}
        case 4:
	    	{Int=1; x=104.2058; y=1345.2394; z=1021.0020; a=0; strmid(desc, "Appartement 1 pièce", 0,  64, 64);}
        case 5:
	    	{Int=1; x=124.1831; y=1325.2389; z=1021.0020; a=0; strmid(desc, "Appartement 1 pièce", 0,  64, 64);}
        case 6:
	    	{Int=1; x=144.1897; y=1325.2389; z=1021.0020; a=0; strmid(desc, "Appartement 1 pièce", 0,  64, 64);}
        case 7:
	    	{Int=1; x=164.1756; y=1325.2389; z=1021.0020; a=0; strmid(desc, "Appartement 1 pièce", 0,  64, 64);}
        case 8:
	    	{Int=2; x=128.70500183105; y=1369.7819824219; z=1215.1130371094; a=0; strmid(desc, "Appartement 2 pièces R", 0,  64, 64);}
        case 9:
	    	{Int=2; x=262.94100952148; y=1430.4720458984; z=1144.0949707031; a=0; strmid(desc, "Appartement 3 pièces R", 0,  64, 64);}
        case 10:
	    	{Int=2; x=225.11500549316; y=1434.9439697266; z=1020.7069702148; a=0; strmid(desc, "Appartement 3 pièces R", 0,  64, 64);}
        case 11:
	    	{Int=2; x=205.90100097656; y=1236.8800048828; z=1020.7420043945; a=0; strmid(desc, "Appartement 3 pièces R", 0,  64, 64);}
        case 12:
	    	{Int=2; x=258.8330078125; y=1432.9169921875; z=1149.4709472656; a=0; strmid(desc, "Appartement 4 pièces R", 0,  64, 64);}
        case 13:
	    	{Int=2; x=221.28999328613; y=1447.3139648438; z=1020.9420166016; a=0; strmid(desc, "Appartement 5 pièces R", 0,  64, 64);}
        case 14:
	    	{Int=2; x=211.30700683594; y=1403.25; z=1020.7550048828; a=0; strmid(desc, "Maison 2 pièces", 0,  64, 64);}
        case 15:
	    	{Int=1; x=104.1967; y=1365.2394; z=1021.0020; a=0; strmid(desc, "Maison 2 pièces", 0,  64, 64);}
        case 16:
	    	{Int=1; x=124.2008; y=1365.2394; z=1021.0020; a=0; strmid(desc, "Maison 2 pièces", 0,  64, 64);}
        case 17:
	    	{Int=1; x=100.7044; y=1385.2712; z=1021.0020; a=0; strmid(desc, "Maison 2 pièces", 0,  64, 64);}
        case 18:
	    	{Int=1; x=120.6212; y=1385.2712; z=1021.0020; a=0; strmid(desc, "Maison 2 pièces", 0,  64, 64);}
        case 19:
	    	{Int=1; x=144.1898; y=1365.2389; z=1021.0020; a=0; strmid(desc, "Maison 3 pièces", 0,  64, 64);}
        case 20:
	    	{Int=1; x=164.2007; y=1365.2389; z=1021.0020; a=0; strmid(desc, "Maison 3 pièces", 0,  64, 64);}
        case 21:
	    	{Int=1; x=99.0128; y=1429.1952; z=1021.0020; a=270; strmid(desc, "Maison 4 pièces", 0,  64, 64);}
        case 22:
	    	{Int=1; x=119.0119; y=1429.1665; z=1021.0020; a=270; strmid(desc, "Maison 4 pièces", 0,  64, 64);}
        case 23:
	    	{Int=1; x=144.2169; y=1395.2402; z=1021.0020; a=0; strmid(desc, "Maison 4 pièces", 0,  64, 64);}
        case 24:
	    	{Int=1; x=174.1004; y=1395.2402; z=1021.0020; a=0; strmid(desc, "Maison 4 pièces", 0,  64, 64);}
        case 25:
	    	{Int=1; x=158.3596; y=1429.0482; z=1021.0020; a=90; strmid(desc, "Maison avec étage 4 pièces", 0,  64, 64);}
        case 26:
	    	{Int=1; x=188.4616; y=1429.0482; z=1021.0020; a=90; strmid(desc, "Maison avec étage 4 pièces", 0,  64, 64);}
        case 27:
	    	{Int=2; x=121.95700073242; y=1568.8089599609; z=1215.0550537109; a=0; strmid(desc, "Maison 4 pièces R", 0,  64, 64);}
        case 28:
	    	{Int=2; x=281.75; y=1430.2490234375; z=1020.7420043945; a=0; strmid(desc, "Maison 7 pièces R", 0,  64, 64);}
        case 29:
	    	{Int=1; x=223.1871; y=1287.1978; z=1082.1406; a=0.0; strmid(desc, "Appartement HLM", 0,  64, 64);}
	}
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if (GetVehicleModel(vehicleid) == 519 && ispassenger) // Quand on appuis sur 'G' à côté d'un shamal .
 	{
	    if (!ShamalExists(vehicleid))
	    	{CreateShamalInt(vehicleid, float(randomEx(3000)), float(randomEx(3000)), float(random(100)+800));}
	    TogglePlayerControllable(playerid, 0);
		SetTimerEx("chargement",3000,0,"i",playerid);
        SetPlayerPosInShamal(playerid, vehicleid);
        InShamal[playerid] = vehicleid;
 	}
 	if (GetVehicleModel(vehicleid) == 592 && ispassenger) // Quand on appuis sur 'G' à côté d'un andromada .
 	{
	    if (!AndroExists(vehicleid))
	    	{CreateAndroInt(vehicleid, float(randomEx(3000)), float(randomEx(3000)), float(random(100)+800));}
	    TogglePlayerControllable(playerid, 0);
		SetTimerEx("chargement",3000,0,"i",playerid);
        SetPlayerPosInAndro(playerid, vehicleid);
        InAndro[playerid] = vehicleid;
 	}
 	if(player_Cuffed[playerid]==1 && !ispassenger)
 	{
 	    new string[128];
 	    format(string, sizeof(string), "* %s tente d'ouvrir la porte du conducteur mais il est menotté.", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
 	}
   	if(vehicle[vehicleid][cLock] == 1 && vehicle[vehicleid][cOwned] == 1 && IsACar(vehicleid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 2 && AdminDuty[playerid] == 1) { }
		else if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1){ }
		else
		{
		    new Float:cx, Float:cy, Float:cz;
		    GetPlayerPos(playerid, cx, cy, cz);
		    SafeSetPlayerPos(playerid, cx, cy, cz);
		    LoopingAnim(playerid,"PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);
			LoopingAnim(playerid,"PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);
		}
	}
	return 1;
}

stock IsABadWeapon(weaponid)
{
 	switch(weaponid)
 	{
 	    case 9,16,26,35..40:
 	        {return true;}
 	}
 	return false;
}

stock IsAtDealership(playerid)
{
	for(new i=0; i<totalDealerShip; i++)
	{
	    if(PlayerToPoint(50.0, playerid, dealerShip[i][pos][0],dealerShip[i][pos][1],dealerShip[i][pos][2]))
			{return 1;}
	}
	return 0;
}

stock IsAtArrestedPlace(playerid)
{
    if(PlayerToPoint(6.0, playerid, 1535.5748,-1672.8845,13.3828) || PlayerToPoint(6.0, playerid, 1528.9774,-1677.7332,5.8906) || PlayerToPoint(6.0, playerid, 220.6070,64.8025,1105.6499))
		{return 0;}
	else if(PlayerToPoint(6.0, playerid, -1605.1323,722.1053,11.9014) || PlayerToPoint(6.0, playerid, -1606.3580,677.3879,-5.2422))
		{return 1;}
    else if(PlayerToPoint(6.0, playerid, 2289.8010,2419.3750,10.8203) || PlayerToPoint(6.0, playerid, 2281.5134,2431.1113,3.2734) || PlayerToPoint(6.0, playerid, 2281.8916,2430.8296,-7.4531) || PlayerToPoint(6.0, playerid, 2510.4873,-1512.8914,24.0000))
		{return 2;}
    else if(PlayerToPoint(6.0, playerid, -211.7334,979.2934,19.3238) || PlayerToPoint(6.0, playerid, -2164.3821,-2389.4438,30.6172) || PlayerToPoint(6.0, playerid, 611.2042,-588.4329,17.2266) || PlayerToPoint(6.0, playerid, -1396.3418,2643.1199,55.8211))
		{return 3;}
	return -1;
}

// Types de Véhicules
stock IsABoat(carid) // Tous les types de bateaux
{
    new mdv = GetVehicleModel(carid);
	if((mdv == 472) || (mdv == 473) || (mdv == 484) || (mdv == 493) || (mdv == 595) || (mdv == 430) || (mdv == 453) || (mdv == 452) || (mdv == 446) || (mdv == 454))
		{return true;}
		
	return false;
}
stock IsAPlane(carid) // Tous les types d'avions
{
    new mdv = GetVehicleModel(carid);
	if(mdv == 460 || mdv == 476 || mdv == 511 || mdv == 512 || mdv == 513 || mdv == 520 || mdv == 553 || mdv == 577 || mdv == 592 || mdv == 593)
		{return true;}
		
	return false;
}
stock IsAMoto(carid) // Tous les types de motos ( + quade )
{
	new modelveh = GetVehicleModel(carid);
	if(modelveh == 462 || modelveh == 448 || modelveh == 581 || modelveh == 522 || modelveh == 461 || modelveh == 521 || modelveh == 523 || modelveh == 463 || modelveh == 586 || modelveh == 468 || modelveh == 471)
		{return true;}
	return false;
}

stock IsABike(carid) // Tous les types de velos
{
	new modelveh = GetVehicleModel(carid);
	if(modelveh == 509 || modelveh == 481 || modelveh == 510)
		{return true;}

	return false;
}

stock IsACar(carid)
{
	switch(GetVehicleModel(carid))
	{
		 case 400,  401,  402,  404,  405, 409,  410,  411,  412,  413,  414,  415,  418,  419,
		 420,  421,  422,  423,  424,  426,  429,  434,  436,  438,  439,  440,  442,  445,
		 451,  456,  458,  459,  466,  467,  470,  474,  475,  477,  478,  479,  480 ,  482,
		 483,  489,  490,  491,  492,  494,  495,  496,  499,  500,  502,  503,  504,  506,
		 507,  516,  517,  518,  525,  526,  527,  528,  529,  533,  534,  535,  536,  540,
		 541,  542,  543,  545,  546,  547,  549,  550,  551,  552,  554,  555,  556,  557,
		 558,  559,  560,  561,  562,   565,  566,  567,  568,  575,  576,  579,   580,
		 585,  587,  589,  596,  597,  598,  599,  600,  601,  602,  603,  604,  605 , 574: return 1;
		 default: return 0;
	}
	return 0;
}

stock IsPoidLourd(carid) // Tous les types de camions
{
	new modelveh = GetVehicleModel(carid);
	if(modelveh == 403 || modelveh == 406 || modelveh == 408 || modelveh == 443 || modelveh == 455 || modelveh == 514 || modelveh == 515 || modelveh == 524 || modelveh == 573 || modelveh == 578)
		{return true;}
		
	return false;
}
stock IsARemorque(carid) // Tous les types de remorque
{
	new modelveh = GetVehicleModel(carid);
	if(modelveh == 435 || modelveh == 450 || modelveh == 591)
		{return true;}
		
	return false;
}
stock IsAHelicopter(carid) // Tous les types d'hélicopter
{
	new modelveh = GetVehicleModel(carid);
	if(modelveh == 417 || modelveh == 425 || modelveh == 447 || modelveh == 469 || modelveh == 487 || modelveh == 488 || modelveh == 497 || modelveh == 548 || modelveh == 563)
		{return true;}
		
	return false;
}
stock IsATrain(carid)
{
    new modelveh = GetVehicleModel(carid);
	if(modelveh == 537 || modelveh == 538)
		{return true;}
	return false;
}

// Jobs
stock IsAPizzaCar(carid)
{
    if (vehicle[carid][cType] == CAR_PIZZA) return 1;
	return 0;
}
stock IsAFarmerCar(carid)
{
    if (vehicle[carid][cType] == CAR_FARMER) return 1;
	return 0;
}
stock IsATrashCar(carid)
{
    if (vehicle[carid][cType] == CAR_TRASH) return 1;
	return 0;
}
stock IsAWorkerCar(carid)
{
    if (vehicle[carid][cType] == CAR_WORKER) return 1;
	return 0;
}
stock IsAPiloteCar(carid)
{
    if (vehicle[carid][cType] == CAR_PILOTE) return 1;
	return 0;
}
stock IsAPostCar(carid)
{
    if (vehicle[carid][cType] == CAR_POST) return 1;
	return 0;
}
stock IsAFisherCar(carid)
{
    if (vehicle[carid][cType] == CAR_FISHER) return 1;
	return 0;
}
stock IsAValetCar(carid)
{
    if (vehicle[carid][cType] == CAR_VALET) return 1;
	return 0;
}
stock IsATruckerCar(carid)
{
    if (vehicle[carid][cType] == CAR_TRUCKER) return 1;
	return 0;
}
stock IsAMedicCar(carid)
{
    if (vehicle[carid][cType] == CAR_MEDIC) return 1;
	return 0;
}
stock IsAMecanoCar(carid)
{
    if (vehicle[carid][cType] == CAR_MECANO) return 1;
	return 0;
}
stock IsAFundCar(carid)
{
    if (vehicle[carid][cType] == CAR_FUND) return 1;
	return 0;
}
stock IsABusCar(carid)
{
    if (vehicle[carid][cType] == CAR_BUS) return 1;
	return 0;
}

stock IsABotCar(carid)
{
	if(vehicle[carid][cType] == CAR_BOT) return 1;
	return 0;
}

// Locations
stock IsARentCar(carid)
{
	if(vehicle[carid][cType] == CAR_LOC_CAR) return 1;
	return 0;
}
stock IsARentMoto(carid)
{
	if(vehicle[carid][cType] == CAR_LOC_MOTO) return 1;
	return 0;
}
stock IsARentBike(carid)
{
	if(vehicle[carid][cType] == CAR_LOC_BIKE) return 1;
	return 0;
}
stock IsARentBoat(carid)
{
	if(vehicle[carid][cType] == CAR_LOC_BOAT) return 1;
	return 0;
}
stock IsARentPlane(carid)
{
	if(vehicle[carid][cType] == CAR_LOC_PLANE) return 1;
	return 0;
}
stock IsASchoolCar(carid)
{
	if(vehicle[carid][cType] == CAR_SCHOOL) return 1;
	return 0;
}
//------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
    new string[256], ip[64], plname[MAX_PLAYER_NAME];
    GetPlayerName(playerid,plname,sizeof(plname));
	GetPlayerIp(playerid,ip,64);
    
    MAX_PLAYERS_CURRENT = GetPlayerPoolSize() + 1;

	// Important !
	gPlayerLoad[playerid] = 0;
    gPlayerLogged[playerid] = 0;
	gPlayerLogTries[playerid] = 0;
	gPlayerAccount[playerid] = 0;
	gPlayerSpawned[playerid]=0;
    gPlayerSpawn[playerid] = 1;
	gPlayerInventory[playerid] = 35;
	SetPlayerColor(playerid,0xFFFFFF00);
	PlayAudioStreamForPlayer(playerid,"http://sanandreas-rp.fr/music/intro.mp3");
	
	if(IsPlayerNPC(playerid))
	{
		if(strcmp(ip,"127.0.0.1", true) !=0)
			{Ban(playerid);return 1;}
	}

    if (MySQLCheckIPBanned(ip) != 0)
		{MySQLKick(playerid,-1,"IP bannie");return 0;}

	if(gServerReboot==1)
	{
		msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Le serveur est en cours de redémarage.");
		msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Utilisez '/q' pour quitter.");
		SetTimerEx("TimerKick", 1000, 0, "i", playerid);
		return 0;
	}

	ClearChatbox(playerid,10);
	format(string,sizeof(string),"{005660}» Serveur «{C8C8C8} Chargement de %s ... Merci de patientez .",NICK_NAME);
    msg_Client(playerid, COLOR_SERVER, string);
	
    server_DefaultStats(playerid);

    if(!IsPlayerNPC(playerid))
	{
	    format(string,sizeof(string),"{A98500}» Connexion «{FFFFFF} %s[%d] connecté avec l'ip : {FF0000}%s",plname,playerid,ip);
	    msg_Admin(COLOR_LIGHTGREEN,string,3);
	    gServerPlayers++;
	    format(string,sizeof(string),"%d joueurs",gServerPlayers);
		TextDrawSetString(text_Intro[5],string);
    }
    
    // Texts Draw
    server_ShowIntroTexts(playerid);
	init_PlayerTexts(playerid);
	payday_HideTexts(playerid);
	job_HideTexts(playerid);
	
        
    // Inspection du nom
	if(server_SpecName(plname) == 0 && !IsPlayerNPC(playerid))
	{
	    format(string,sizeof(string),"{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické pour nom NO-RP.",plname);
		msg_Admin(COLOR_RED,string,3);
		return MySQLKick(playerid,-1,"Nom Non-RP");
	}
    server_BadNames(playerid);
	
	// Variables
	server_DefaultVariables(playerid);
	FadePlayerConnect(playerid);

	// Véhicules
	for(new h = 1; h <=totalVehicles; h++)
		{SetVehicleParamsForPlayer(h,playerid,0,vehicle[h][cLock]);}
	
	// Inscrit ?
	new sqlaccountstatus = MySQLCheckAccount(plname);
	if(sqlaccountstatus != 0)
	{
	    if (MySQLCheckAccountLocked(sqlaccountstatus) != 0)
		{
			msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Votre compte est locké - Veuillez contacter un administrateur.");
			msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Utilisez '/q' pour quitter.");
            MySQLBan(playerid,-1,"Compte locké",-1);
			return 0;
		}
		gPlayerAccount[playerid] = 1;
		PlayerInfo[playerid][pSQLID]=sqlaccountstatus;
	}
	else
		{gPlayerAccount[playerid] = 0;}
    gPlayerLoad[playerid] = 1;
	return 1;
}
stock server_SpecName(newName[])
{
    new ValideName=true;
	if(strlen(newName) < 6 || strlen(newName) > MAX_PLAYER_NAME)
		{ValideName=false;}
	else if(MySQLCheckChar(newName))
		{ValideName=false;}
	else if(strfind(newName,"²",true) != -1 || strfind(newName,",",true) != -1 || strfind(newName,";",true) != -1)
		{ValideName=false;}
   	else if(strfind(newName,"!",true) != -1 || strfind(newName,"?",true) != -1 || strfind(newName,".",true) != -1)
	   	{ValideName=false;}
   	else if(strfind(newName,"§",true) != -1 || strfind(newName,"+",true) != -1 || strfind(newName,"=",true) != -1)
	   	{ValideName=false;}
   	else if(strfind(newName,")",true) != -1 || strfind(newName,"°",true) != -1 || strfind(newName,"-",true) != -1)
	   	{ValideName=false;}
  	else if(strfind(newName,"(",true) != -1 || strfind(newName,"/",true) != -1 || strfind(newName,"&",true) != -1)
	  	{ValideName=false;}
   	else if(strfind(newName,"@",true) != -1 || strfind(newName,"~",true) != -1 || strfind(newName,"ç",true) != -1)
	   	{ValideName=false;}
    else if(strfind(newName,"}",true) != -1 || strfind(newName,"ô",true) != -1 || strfind(newName,"^",true) != -1)
		{ValideName=false;}
    else if(strfind(newName,"",true) != -1 || strfind(newName,"$",true) != -1 || strfind(newName,"*",true) != -1)
		{ValideName=false;}
	else if(strfind(newName,"%",true) != -1 || strfind(newName,"¤",true) != -1 || strfind(newName,"9",true) != -1)
		{ValideName=false;}
	else if(strfind(newName,"0",true) != -1 || strfind(newName,"1",true) != -1 || strfind(newName,"2",true) != -1)
		{ValideName=false;}
   	else if(strfind(newName,"3",true) != -1 || strfind(newName,"4",true) != -1 || strfind(newName,"5",true) != -1)
	   	{ValideName=false;}
    else if(strfind(newName,"6",true) != -1 || strfind(newName,"7",true) != -1 || strfind(newName,"8",true) != -1)
		{ValideName=false;}
	else if(strfind(newName,"ù",true) != -1 || strfind(newName,"à",true) != -1 || strfind(newName,"é",true) != -1)
		{ValideName=false;}
    else if(strfind(newName,"è",true) != -1 || strfind(newName,"ê",true) != -1 || strfind(newName,"â",true) != -1)
		{ValideName=false;}
    else if(strfind(newName,"û",true) != -1 || strfind(newName,"î",true) != -1 || strfind(newName,"ã",true) != -1)
		{ValideName=false;}
    else if(strfind(newName,"ä",true) != -1 || strfind(newName,"ë",true) != -1 || strfind(newName,"ï",true) != -1)
		{ValideName=false;}
    else if(strfind(newName,"ö",true) != -1 || strfind(newName,"ü",true) != -1 || strfind(newName,"ÿ",true) != -1)
		{ValideName=false;}
    else if(strfind(newName,"ñ",true) != -1 || strfind(newName,"õ",true) != -1 || strfind(newName,"tamere",true) != -1)
		{ValideName=false;}
	else if(strfind(newName," ",true) != -1)
		{ValideName=false;}
    else if(strfind(newName,"_",true) == -1)
		{ValideName=false;}

	if(ValideName)
		{return true;}
	return false;
}

stock server_PreloadAnims(playerid)
{
    LoopingAnim(playerid, "PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);
	LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
	LoopingAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
	LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	LoopingAnim(playerid, "PED","ATM",4.0,0,0,0,0,0);
	LoopingAnim(playerid, "KISSING", "Grlfrd_Kiss_02", 3.0, 0, 0, 0, 0, 0);
	LoopingAnim(playerid, "PED", "getup_front",3.0,0,0,0,0,0);
	LoopingAnim(playerid, "GANGS","prtial_gngtlkA",4.0,0,0,0,0,0);
	LoopingAnim(playerid, "ROB_BANK","SHP_HandsUp_Scr", 4.0, 0, 1, 1, 1, 0);
	LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
	LoopingAnim(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0);
	LoopingAnim(playerid, "SWORD","SWORD_3",4.1, 0, 1, 1, 0, 0);
	LoopingAnim(playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0);
	LoopingAnim(playerid, "DEALER","shop_pay",4.1,0,0,0,0,0);
	LoopingAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.1, 0, 1, 1, 1, 1, 1);
	ApplyAnimation(playerid,"ped","abseil",4.0,1,1,1,1,0,1);
	ClearAnimations(playerid);
}

stock IsPlayerFacingPoint(playerid, Float:dOffset, Float:pX, Float:pY, Float:pZ)
{
        #pragma unused pZ
        new
                Float:X,
                Float:Y,
                Float:Z,
                Float:pA,
                Float:ang;

        if(!IsPlayerConnected(playerid)) return 0;

        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, pA);

        if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
        else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
        else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);

        if(AngleInRangeOfAngle(-ang, pA, dOffset)) return true;

        return false;

}

stock car_IndicatorArray(modelid)
{
	new tmp = 0;
	switch (modelid)
	{
	    case 400: tmp = 0;
	    case 401: tmp = 1;
	    case 402, 560, 411: tmp = 2;
	    case 403: tmp = 3;
		default: tmp = 0;
	}
	return tmp;
}

stock body_Create(playerid,Float:x,Float:y,Float:z,reason,killerid)
{
    for(new i = 0; i < MAX_DEADBODY; i++)
  	{
  	    if(body[i][used] == 0)
  	    {
  	        new string[64],hour,minute,seconde;
  	        if(killerid != INVALID_PLAYER_ID && IsPlayerConnected(killerid))
  	            {strmid(body[i][killer], PlayerInfo[killerid][pRealName], 0,  strlen(PlayerInfo[killerid][pRealName]), 32);}
			else
			    {strmid(body[i][killer], "Aucun", 0, strlen("Aucun"), 32);}

			gettime(hour,minute,seconde);
			format(string,sizeof(string),"%d h %d mn",hour,minute);
			strmid(body[i][time], string, 0, strlen(string), 32);
			strmid(body[i][playerZ], PlayerInfo[playerid][pRealName], 0, strlen(PlayerInfo[playerid][pRealName]), 32);
            body[i][used]=1;
            body[i][description]=reason;
            body[i][pos][0]=x;
            body[i][pos][1]=y;
            body[i][pos][2]=z-0.9;
            body[i][fire]=false;
            body_Object[i][0] = CreateDynamicObject(2907, x, y, (z-0.9), 0, 0, 274,-1,-1,-1,STREAM_DISTANCE);
			body_Object[i][1] = CreateDynamicObject(2905, x+0.85376, y+0.161621, (z-0.9)-0.01857662, 0, 26, 278,-1,-1,-1,STREAM_DISTANCE);
			body_Object[i][2] = CreateDynamicObject(2905, x+0.739746, y-0.158935, (z-0.9)+0.006423, 356.68469238281, 145.93511962891, 263.75891113281, -1, -1, -1, STREAM_DISTANCE);
			body_Object[i][3] = CreateDynamicObject(2906, x-0.081787, y+0.239991, (z-0.9)-0.03601265, 359.30590820313, 273.93939208984, 298.02392578125, -1, -1, -1, STREAM_DISTANCE);
			body_Object[i][4] = CreateDynamicObject(2906, x-0.024414, y-0.30957, (z-0.9)-0.03601265, 359.01071166992, 339.99688720703, 242.68936157227, -1, -1, -1, STREAM_DISTANCE);
			format(string,sizeof(string),"[Cadavre de %s]\nTouche 'N'",PlayerInfo[playerid][pRealName]);
			body_Label[i] = CreateDynamic3DTextLabel(string,0xFFFFFFEE,x, y, z-0.6,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
            totalBodies++;
	        return 1;
  	    }
  	}
  	return 1;
}

public body_Remove(id)
{
    if(body[id][used] == 1)
	{
	    strmid(body[id][killer], "Aucun", 0, strlen("Aucun"), 32);
	    strmid(body[id][playerZ], "Aucun", 0, strlen("Aucun"), 32);
	    strmid(body[id][time], "Jamais", 0, strlen("Jamais"), 32);
	    body[id][used]=0;
        body[id][description]=-1;
	    body[id][pos][0]=0.000000;
        body[id][pos][1]=0.000000;
        body[id][pos][2]=0.000000;
        body[id][fire]=false;
	    for(new i=0; i<6;i++)
     	{
     	    if(IsValidDynamicObject(body_Object[id][i]))
		 		{DestroyDynamicObject(body_Object[id][i]);}
		}
	    if(IsValidDynamic3DTextLabel(body_Label[id]))
			{DestroyDynamic3DTextLabel(body_Label[id]);}
	    totalBodies--;
	}
	return 1;
}

stock body_Carry(playerid,id)
{
	new string[128];
    for(new i = 0; i < 5; i++)
    {
        if(IsValidDynamicObject(body_Object[id][i]))
       		{DestroyDynamicObject(body_Object[id][i]);}
	}
	if(IsValidDynamic3DTextLabel(body_Label[id]))
    	{DestroyDynamic3DTextLabel(body_Label[id]);}
    if(player_GetSlotObject(playerid) != -1)
		{BodySlotObject[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject(playerid, BodySlotObject[playerid], 2907, 6);}

    player_CarryBody[playerid] = id;
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
	msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous êtes en train de porter ce cadavre. (Touche 'N' pour le poser)");
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_Out", 2.0, 0, 0, 0, 0, 0);
    format(string, sizeof(string), "* %s attrape le cadavre à l'aide de ses deux mains.", PlayerInfo[playerid][pName]);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
    return 1;
}

stock body_StopCarry(playerid,fromCar)
{
	new string[128], Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	RemovePlayerAttachedObject(playerid,BodySlotObject[playerid]);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	BodySlotObject[playerid]=-1;
	if(!fromCar)
	{
		body[player_CarryBody[playerid]][pos][0]=x;
		body[player_CarryBody[playerid]][pos][1]=y;
		body[player_CarryBody[playerid]][pos][2]=z;
		format(string,sizeof(string),"[Cadavre de %s]\nTouche 'N'",body[player_CarryBody[playerid]][playerZ]);
		body_Label[player_CarryBody[playerid]] = CreateDynamic3DTextLabel(string,0xFFFFFFEE,x, y, z-0.6,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	    body_Object[player_CarryBody[playerid]][0] = CreateDynamicObject(2907, x, y, (z-0.9), 0, 0, 274,-1,-1,-1,STREAM_DISTANCE);
		body_Object[player_CarryBody[playerid]][1] = CreateDynamicObject(2905, x+0.85376, y+0.161621, (z-0.9)-0.01857662, 0, 26, 278,-1,-1,-1,STREAM_DISTANCE);
		body_Object[player_CarryBody[playerid]][2] = CreateDynamicObject(2905, x+0.739746, y-0.158935, (z-0.9)+0.006423, 356.68469238281, 145.93511962891, 263.75891113281, -1, -1, -1, STREAM_DISTANCE);
		body_Object[player_CarryBody[playerid]][3] = CreateDynamicObject(2906, x-0.081787, y+0.239991, (z-0.9)-0.03601265, 359.30590820313, 273.93939208984, 298.02392578125, -1, -1, -1, STREAM_DISTANCE);
		body_Object[player_CarryBody[playerid]][4] = CreateDynamicObject(2906, x-0.024414, y-0.30957, (z-0.9)-0.03601265, 359.01071166992, 339.99688720703, 242.68936157227, -1, -1, -1, STREAM_DISTANCE);
        format(string, sizeof(string), "* %s jette le cadavre à terre.", PlayerInfo[playerid][pName]);
	}
	else
	    {format(string, sizeof(string), "* %s met le cadavre dans le coffre du véhicule.", PlayerInfo[playerid][pName]);}
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_Out", 2.0, 0, 0, 0, 0, 0);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déposé le cadavre.");
    player_CarryBody[playerid]=-1;
	return 1;
}

stock trashcar_Create(Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < MAX_TRASHCAR; i++)
  	{
  	    if(trashCar[i][used] == 0)
  	    {
            trashCar[i][used]=1;
            trashCar[i][pos][0]=x;
            trashCar[i][pos][1]=y;
            trashCar[i][pos][2]=z;
            trashcar_Object[i] = CreateDynamicObject(3594, x, y, z, 0, 0, Angle, -1, -1, -1, STREAM_DISTANCE);
            trashcar_Label[i] = CreateDynamic3DTextLabel("[Carcasse de véhicule]\nUtilisez '/mecano rem' pour la remorquer",0xFFFF00AA,x, y, z,18.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
            totalTrashCars++;
	        return 1;
  	    }
  	}
  	return 1;
}

stock trashcar_Remove(id)
{
	if(trashCar[id][used]==1)
	{
	    if(IsValidDynamicObject(trashcar_Object[id]))
	    	{DestroyDynamicObject(trashcar_Object[id]);}
        if(IsValidDynamic3DTextLabel(trashcar_Label[id]))
	    	{DestroyDynamic3DTextLabel(trashcar_Label[id]);}
		trashCar[id][used]=0;
		trashCar[id][pos][0]=0.0;
		trashCar[id][pos][1]=0.0;
		trashCar[id][pos][2]=0.0;
		totalTrashCars--;
	}
	return 1;
}

stock bar_Create(type,Float:x,Float:y,Float:z,Float:Angle,factionid)
{
    for(new i = 0; i < MAX_BAR; i++)
  	{
  	    if(bar[i][used] == 0)
  	    {
            bar[i][used]=1;
            bar[i][pos][0]=x;
            bar[i][pos][1]=y;
            bar[i][pos][2]=z;
            bar[i][faction]=factionid;
            bar_Object[i] = CreateDynamicObject(type, x, y, z, 0, 0, Angle, -1, -1, -1, STREAM_DISTANCE);
            totalBars++;
	        return 1;
  	    }
  	}
  	return 1;
}
stock bar_Remove(playerid)
{
    for(new i = 0; i < MAX_BAR; i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 2.0, bar[i][pos][0], bar[i][pos][1], bar[i][pos][2]))
        {
  	        if(bar[i][used] == 1)
            {
                if(PlayerInfo[playerid][pMember] == bar[i][faction])
                {
	                bar[i][used]=0;
	                bar[i][pos][0]=0.0;
	                bar[i][pos][1]=0.0;
	                bar[i][pos][2]=0.0;
	                bar[i][faction]=0;
	                if(IsValidDynamicObject(bar_Object[i]))
	                	{DestroyDynamicObject(bar_Object[i]);}
	                totalBars--;
	                return 1;
                }
                else return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce barrage n'appartient pas à votre faction");
  	        }
  	    }
  	}
	return 1;
}
stock bar_RemoveAll(playerid)
{
    for(new i = 0; i < MAX_BAR; i++)
  	{
  	    if(bar[i][used] == 1)
  	    {
  	        if(PlayerInfo[playerid][pMember] == bar[i][faction])
           	{
	  	        bar[i][used]=0;
	            bar[i][pos][0]=0.0;
	            bar[i][pos][1]=0.0;
	            bar[i][pos][2]=0.0;
	            bar[i][faction]=0;
	            if(IsValidDynamicObject(bar_Object[i]))
	                {DestroyDynamicObject(bar_Object[i]);}
	            totalBars--;
			}
  	    }
	}
	return 1;
}
stock spike_Create(Float:x,Float:y,Float:z,Float:Angle,factionid)
{
    for(new i = 0; i < MAX_SPIKE; i++)
  	{
  	    if(spike[i][used] == 0)
  	    {
            spike[i][used]=1;
            spike[i][pos][0]=x;
            spike[i][pos][1]=y;
            spike[i][pos][2]=z-0.7;
            spike[i][faction]=factionid;
            spike_Object[i] = CreateDynamicObject(2899, x, y, z-0.9, 0, 0, Angle-90, -1, -1, -1, STREAM_DISTANCE);
            spike_Area[i] = CreateDynamicCircle(x,y,3.0,-1,-1,-1);
            totalSpikes++;
	        return 1;
  	    }
  	}
  	return 1;
}
stock spike_Remove(playerid)
{
    for(new i = 0; i < MAX_SPIKE; i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 2.0, spike[i][pos][0], spike[i][pos][1], spike[i][pos][2]))
        {
  	        if(spike[i][used] == 1)
            {
                if(PlayerInfo[playerid][pMember] == spike[i][faction])
                {
	                spike[i][used]=0;
	                spike[i][pos][0]=0.0;
	                spike[i][pos][1]=0.0;
	                spike[i][pos][2]=0.0;
	                spike[i][faction]=0;
	                if(IsValidDynamicObject(spike_Object[i]))
	                	{DestroyDynamicObject(spike_Object[i]);}
					if(IsValidDynamicArea(spike_Area[i]))
	                	{DestroyDynamicArea(spike_Area[i]);}
	                totalSpikes--;
	                return 1;
                }
                else
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cette herse n'appartient pas à votre faction");}
  	        }
  	    }
  	}
	return 1;
}
stock spike_RemoveAll(playerid)
{
    for(new i = 0; i < MAX_SPIKE; i++)
  	{
  	    if(spike[i][used] == 1)
  	    {
  	    	if(PlayerInfo[playerid][pMember] == spike[i][faction])
           	{
	  	        spike[i][used]=0;
	            spike[i][pos][0]=0.0;
	            spike[i][pos][1]=0.0;
	            spike[i][pos][2]=0.0;
	            spike[i][faction]=0;
	            if(IsValidDynamicObject(spike_Object[i]))
	                {DestroyDynamicObject(spike_Object[i]);}
				if(IsValidDynamicArea(spike_Area[i]))
	                {DestroyDynamicArea(spike_Area[i]);}
	            totalSpikes--;
		 	}
  	    }
	}
	return 1;
}
stock spike_PlayerIn(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
 	{
		new p, d, l, t;
		GetVehicleDamageStatus(GetPlayerVehicleID(playerid), p, d, l, t);
		t = encode_tires(1, 1, 1, 1);
 		UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), p, d, l, t);
	}
}
encode_tires(tire1, tire2, tire3, tire4) return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
encode_panels(flp, frp, rlp, rrp, windshield, front_bumper, rear_bumper)
{
    return flp | (frp << 4) | (rlp << 8) | (rrp << 12) | (windshield << 16) | (front_bumper << 20) | (rear_bumper << 24);
}
encode_doors(bonnet, boot, driver_door, passenger_door, behind_driver_door, behind_passenger_door)
{
    #pragma unused behind_driver_door
    #pragma unused behind_passenger_door
    return bonnet | (boot << 8) | (driver_door << 16) | (passenger_door << 24);
}
encode_lights(light1, light2, light3, light4)
{
    return light1 | (light2 << 1) | (light3 << 2) | (light4 << 3);
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(areaid==zoneTrain[0])
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
	    	{server_FenceRoad(0,1); SetTimerEx("server_FenceRoad",10000,0,"ii",0,0);}
	}
	else if(areaid==zoneTrain[1])
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
	    	{server_FenceRoad(1,1); SetTimerEx("server_FenceRoad",10000,0,"ii",1,0);}
	}
	else if(areaid==zoneTrain[2])
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
	    	{server_FenceRoad(2,1); SetTimerEx("server_FenceRoad",10000,0,"ii",2,0);}
	}
	else if(areaid==zoneTrain[3])
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
	    	{server_FenceRoad(3,1); SetTimerEx("server_FenceRoad",10000,0,"ii",3,0);}
	}
	else if(areaid==zoneTrain[4])
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
	    	{server_FenceRoad(4,1); SetTimerEx("server_FenceRoad",10000,0,"ii",4,0);}
	}
	else if(areaid==zoneTrain[5])
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
	    	{server_FenceRoad(5,1); SetTimerEx("server_FenceRoad",10000,0,"ii",5,0);}
	}
	else if(areaid==zoneTrain[6])
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
	    	{server_FenceRoad(6,1); SetTimerEx("server_FenceRoad",10000,0,"ii",6,0);}
	}
	for(new i=0; i<totalZones; i++)
	{
	    if(areaid==ZoneInfo[i][zZone])
	    	{TextDrawShowForPlayer(playerid,zone_Text);player_InAreaAntiDM[playerid]=1; break;}
	}
	for(new i=0; i<totalSpikes; i++)
	{
		if(areaid==spike_Area[i] && spike[i][used]==1)
	    	{spike_PlayerIn(playerid);break;}
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    for(new i=0; i<totalZones; i++)
	{
	    if(areaid==ZoneInfo[i][zZone])
	    	{TextDrawHideForPlayer(playerid,zone_Text); player_InAreaAntiDM[playerid]=0; break;}
	}
}

public inscription_MoveObject(playerid,type)
{
	if(type==1)
		{MovePlayerObject(playerid,inscription_Object[playerid][0],1806.69995, -2592.8999, 14.9 ,30.0);}
	else if(type==2)
  		{MovePlayerObject(playerid,inscription_Object[playerid][0],-2046.9689, 1396.44104, 6.57 ,30.0);}
	else if(type==3)
		{MovePlayerObject(playerid,inscription_Object[playerid][1],-2045.514038, 1395.4799, 6.25 ,30.0);}
	return 1;
}

public inscription_StartIntro(playerid)
{
    server_TogglePlayerSpectating(playerid, 1);
	if(PlayerInfo[playerid][pCity] == 0)
	{
		inscription_Object[playerid][0] = CreatePlayerObject(playerid,14553, 1111.30005, -2591.69995, 47.8, 16, 0, 90,1000);
		InterpolateCameraPos(playerid, 1047.1572, -2570.6267, 79.0469, 1883.7250, -2554.1042, 46.9474, 20000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1056.3498, -2573.2626, 76.1232, 1874.8150, -2558.6440, 45.7287, 20000, CAMERA_MOVE);
		SetTimerEx("inscription_MoveObject",400,0,"ii",playerid,1);
		msg_Client(playerid,COLOR_WHITE,"Chef de bord : Mesdames et Monsieurs, nous commençons notre descente à l'aéroport de Los Santos");
		msg_Client(playerid,COLOR_WHITE,"Chef de bord : Nous vous prions de rester assis durant la descente et d'attacher votre ceinture.");
	}
	else if(PlayerInfo[playerid][pCity] == 1)
	{
		inscription_Object[playerid][0] = CreatePlayerObject(playerid,10230, -2046.9689, 1696.44104, 6.57, 0, 0, 90,1000);
		inscription_Object[playerid][1] = CreatePlayerObject(playerid,10231, -2045.514038, 1695.4799, 6.25, 0, 0, 90,1000);
		InterpolateCameraPos(playerid, -2011.8336, 1745.1064, 56.7006, -2088.5502, 1329.3159, 40.6008, 15000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -2013.5700, 1735.2584, 52.1607, -2081.0031, 1335.8764, 36.0609, 15000, CAMERA_MOVE);
		SetTimerEx("inscription_MoveObject",400,0,"ii",playerid,2);
		SetTimerEx("inscription_MoveObject",400,0,"ii",playerid,3);
		msg_Client(playerid,COLOR_WHITE,"Chef de bord : Ici le command de bord, nous arrivons au port de San Fierro d'ici 5 minutes.");
		msg_Client(playerid,COLOR_WHITE,"Chef de bord : Merci de rester dans votre cabine et de préparer vos affaire afin de ne rien oublier.");
	}
	else
		{OnPlayerRegister(playerid, PlayerInfo[playerid][pKey]); server_TogglePlayerSpectating(playerid, 0); return 1;}
	SetTimerEx("inscription_EndIntro",20000,0,"i",playerid);
	return 1;
}

public inscription_EndIntro(playerid)
{
    if(PlayerInfo[playerid][pCity] == 0)
	{
	    ClearChatbox(playerid,10);
	    msg_Client(playerid,COLOR_WHITE,"Chef de bord : Nous sommes arrivés à destination, assurez-vous de ne rien oublier à votre place.");
		msg_Client(playerid,COLOR_WHITE,"Chef de bord : San Andreas Air Line vous souhaite une bonne journée.");
		FadeColorForPlayer(playerid,0,0,0,0,0,0,0,255,15,0);
        SetTimerEx("FadeColorForPlayer",1500,0,"iiiiiiiiiii",playerid,0,0,0,255,0,0,0,0,15,0);
	}
	else if(PlayerInfo[playerid][pCity] == 1)
	{
	    ClearChatbox(playerid,10);
	    msg_Client(playerid,COLOR_WHITE,"Chef de bord : Nous sommes arrivé à destination, assurez vous de ne rien oublier à votre place.");
		msg_Client(playerid,COLOR_WHITE,"Chef de bord : San Andreas Oceane Line vous souhaite une bonne journée.");
		FadeColorForPlayer(playerid,0,0,0,0,0,0,0,255,15,0);
        SetTimerEx("FadeColorForPlayer",1500,0,"iiiiiiiiiii",playerid,0,0,0,255,0,0,0,0,15,0);

	}
	server_TogglePlayerSpectating(playerid, 0);
	OnPlayerRegister(playerid, PlayerInfo[playerid][pKey]);
	return 1;
}

public lotto(number)
{
	new JackpotFallen = 0;
	new string[256];
	format(string, sizeof(string), "» Nouvelle de la Lotterie, Aujourd'hui le numero gagnant était: %d.", number);
    msg_OOC(COLOR_WHITE, string);
    for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][plottoNr] > 0)
		    {
			    if(PlayerInfo[i][plottoNr] == number)
			    {
			        JackpotFallen = 1;
					format(string, sizeof(string), "» Nouvelle de la Lotterie, %s a gagné le Jackpot de $%d avec son Ticket de lotterie.", PlayerInfo[i][pRealName], Jackpot);
					msg_OOC(COLOR_WHITE, string);
					format(string, sizeof(string), "» Vous avez gagné $%d avec votre ticket de lotterie.", Jackpot);
					msg_Client(i, COLOR_WHITE, string);
					SafeGivePlayerMoney(i, Jackpot,"Gagné au lotto");
			    }
			    else
			    	{msg_Client(i, COLOR_WHITE, "» Votre ticket de Lotterie n'était pas gagnant...");}
			}
			PlayerInfo[i][plottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(5000); rand += 10000;
	    Jackpot = rand;
	    format(string, sizeof(string), "» Nouvelle de la Lotterie, Le nouveau de Jackpot est de $%d.", Jackpot);
		msg_OOC(COLOR_WHITE, string);
	}
	else
	{
	    new rand = random(5000);
	    Jackpot += rand;
	    format(string, sizeof(string), "» Nouvelle de la Lotterie, Le Jackpot a été levé à $%d.", Jackpot);
		msg_OOC(COLOR_WHITE, string);
	}
	return 1;
}


public OnPlayerDisconnect(playerid, reason)
{
	new astring[256];
    if(gPlayerLogged[playerid] == 0)
		{KillTimer(player_antihack[playerid]); TimerConnectOff(playerid);}
	else
	{
	    format(sql, sizeof(sql), "INSERT INTO lvrp_log_disconnect (Date,Ip,SQLid) VALUES (UNIX_TIMESTAMP(),'%s',%d)",PlayerInfo[playerid][pIP], PlayerInfo[playerid][pSQLID]);
		mysql_pquery(MYSQL,sql);
	}
		
	if(IsPlayerNPC(playerid))
	{
	    if(IsValidDynamic3DTextLabel(npc_Label[playerid]))
			{DestroyDynamic3DTextLabel(npc_Label[playerid]);}
	}
		
    if(job_Start[playerid]==1)
    	{job_End(playerid);}
    	
	if(police_PlayerIsRoped[playerid] == true || PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pMember] < 5)
	{
	    for(new i=0; i<50; i++)
     	{
			if(IsValidDynamicObject(police_Rope[playerid][i]))
		 		{DestroyDynamicObject(police_Rope[playerid][i]);}
		}
	}
		
 	if(boomBox[playerid][used] != 0)
	{
	    if(IsValidDynamicObject(boombox_Object[playerid]))
			{DestroyDynamicObject(boombox_Object[playerid]);}
		boomBox[playerid][used] =0;
	}
 	if(mecano_PhoneId==playerid)
	 	{mecano_PhoneId=-1;}
    if(taxi_PhoneId==playerid)
	 	{taxi_PhoneId=-1;}

    if(player_CarryBody[playerid] != -1)
	    {body_StopCarry(playerid,0);}
	 	
	if(bag[playerid][statut]==1)
	{
	    if(IsValidDynamicObject(bag_Object[playerid]))
			{DestroyDynamicObject(bag_Object[playerid]);}
		if(IsValidDynamic3DTextLabel(bag_Label[playerid]))
			{DestroyDynamic3DTextLabel(bag_Label[playerid]);}
	}
	
	if(basket_Ball[playerid] != -1)
	{
	    if(IsValidDynamicObject(basket[basket_Ball[playerid]][object]))
	    	{DestroyDynamicObject(basket[basket_Ball[playerid]][object]);}
	    basket[basket_Ball[playerid]][used]=0; basket_Ball[playerid]=-1;
	}
	
	if(gPlayerFPS[playerid] == true && IsValidObject(fpsObject[playerid]))
		{DestroyObject(fpsObject[playerid]);}
	 	
	if(car_PlayerInSafe[playerid] != 0)
	    {car_InSafe[car_PlayerInSafe[playerid]]=false; car_PlayerInSafe[playerid]=0;}
	 	
	PlayerInfo[playerid][pConnected]=0;
	RemovePlayerAttachedObject(playerid,BagSlotObject[playerid]);
	FadePlayerDisconnect(playerid);

	if(IsValidDynamic3DTextLabel(DutyAdmin[playerid]))
		{DestroyDynamic3DTextLabel(DutyAdmin[playerid]);}
	if(IsValidDynamic3DTextLabel(PME[playerid]))
		{DestroyDynamic3DTextLabel(PME[playerid]);}
    if(IsValidDynamic3DTextLabel(player_ID[playerid]))
		{DestroyDynamic3DTextLabel(player_ID[playerid]);}
	//Delete3DTextLabel(player_ID[playerid]);
	if(IsValidDynamicObject(player_TaxiLicense[playerid]))
		{DestroyDynamicObject(player_TaxiLicense[playerid]);}
		
	if(laser_Statue[playerid]==1)
	    {RemovePlayerAttachedObject(playerid,laser_Object[playerid]);}
	    
    if(ArmorSlotObject[playerid]!=-1)
	    {RemovePlayerAttachedObject(playerid,ArmorSlotObject[playerid]);}
	    
	/*for(new i=0; i<5; i++)
	{
	    if(PlayerInfo[playerid][pCar][i] != -1 && !IsPlayerNPC(playerid))
	        {SetTimerEx("vehicle_DeletePlayer",DELETE_VEHICLE*60000,false,"dd",PlayerInfo[playerid][pSQLID],PlayerInfo[playerid][pCar][i]); }
	}*/
    	
	if(reason == 0)
	{
	    PlayerInfo[playerid][pCrashed] = 1; PlayerInfo[playerid][pSkinCrash] = GetPlayerSkin(playerid);
	    format(astring, sizeof(astring), "> %s(%d) a quitté %s [Crash]",PlayerInfo[playerid][pRealName],playerid,SERVER_NAME);
	    if(police_Duty[playerid] == 0)
	    {
		    for(new slot = 0; slot != 12; slot++)
		    {
		        new wep, ammo;
		        GetPlayerWeaponData(playerid, slot, wep, ammo);
		        if(wep != 0 && ammo != 0)
		        {
		            if(PlayerInfo[playerid][pGun1] == 0) { PlayerInfo[playerid][pGun1] = wep; PlayerInfo[playerid][pAmmo1] = ammo; }
		            else if(PlayerInfo[playerid][pGun2] == 0) { PlayerInfo[playerid][pGun2] = wep; PlayerInfo[playerid][pAmmo2] = ammo; }
		            else if(PlayerInfo[playerid][pGun3] == 0) { PlayerInfo[playerid][pGun3] = wep; PlayerInfo[playerid][pAmmo3] = ammo; }
		            else if(PlayerInfo[playerid][pGun4] == 0) { PlayerInfo[playerid][pGun4] = wep; PlayerInfo[playerid][pAmmo4] = ammo; }
		        }
		    }
	    }
	    else
	        {PlayerInfo[playerid][pDutyCrash]=1;}
	}
	else if(reason == 2 && !IsPlayerNPC(playerid))
		{format(astring, sizeof(astring), "> %s(%d) a quitté %s [Kick]",PlayerInfo[playerid][pRealName],playerid,SERVER_NAME);}
	else
		{format(astring, sizeof(astring), "> %s(%d) a quitté %s [Déconnexion]",PlayerInfo[playerid][pRealName],playerid,SERVER_NAME);}
	if(!IsPlayerNPC(playerid))
		{ProxDetector(30.0, playerid, astring, 0xA8AFC8FF, 0xA8AFC8FF, 0xA8AFC8FF, 0xA8AFC8FF, 0xA8AFC8FF,false);}
	
	if(gServerReboot==0)
		{OnPlayerUpdateSQL(playerid);}
		
    if(police_Duty[playerid]==1)
    	{Flicservice --; police_Duty[playerid] = 0;}
	if(mecano_Duty[playerid] == 1)
	    {mecano_Duty[playerid]=0; Mechanics--;}
    if(taxi_Duty[playerid] != 0)
	    {taxi_Duty[playerid]=0; Taximans--;}
    	
	if(!IsPlayerNPC(playerid))
		{gServerPlayers--; format(astring,sizeof(astring),"%d joueurs",gServerPlayers); TextDrawSetString(text_Intro[5],astring);}
	
	new caller = Mobile[playerid];
	if(caller != -1)
	{
		if(caller != -1)
		{
			msg_Client(caller,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Votre correspondant s'est déconnecté.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = -1;
			phone_Type[caller]=0;
			phone_Show(caller);
			SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		}
		Mobile[playerid] = -1;
		CellTime[playerid] = 0;
		phone_Hide(playerid);
		phone_Type[playerid]=0;
		phone_Active[playerid]=0;
	}
	if(gPlayerEvent[playerid] != 0)
		{event[parcitipents]--;}
	if(bank_PlayerRob[playerid] == true)
	{
		if(bank_Rob == true)
		{
		    RemovePlayerAttachedObject(playerid,9);
			bank_RobMoney[playerid] = 0;
			bank_PlayerRob[playerid] = false;
			bank_RobTime[playerid] = 0;
			format(astring, sizeof(astring), "*** A TOUTES LES UNITES : %s est mort, un sac a été remis à la banque. ! ***",PlayerInfo[playerid][pRealName]);
			msg_Radio(1, TEAM_RADIO_COLOR, astring);
			msg_Radio(3, TEAM_RADIO_COLOR, astring);
			msg_Radio(4, TEAM_RADIO_COLOR, astring);
		}
	}
	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i))
		{
		    if(Spectate[i] == playerid)
		    {
			    server_TogglePlayerSpectating(i, false);
				WatchingTV[i] = 0;
				SetPlayerColor(i, 0xFF000000);
				DutyAdmin[i] = CreateDynamic3DTextLabel("[Admin En Service]",0xFF000099,0,0,0.3,NAME_DISTANCE,i,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
				SafeSetPlayerPos(i,1514.6956,-1674.7020,14.0469);
				SafeSetPlayerArmour(i, 200);
				SafeSetPlayerHealth(i, 200);
				SetPlayerSkin(i, 217);
				server_SetPlayerInterior(i, 0);
				server_SetPlayerVirtualWorld(i, 0);
				Spectate[i] = -1;
			}
	    }
	}
	if(Spectate[playerid] != -1)
 		{server_TogglePlayerSpectating(playerid, 0);}
	
	if(HireCar[playerid] != -1) // Véhicule de location
		{vehicle[HireCar[playerid]][cLock]=0; vehicle_Save(HireCar[playerid],0,0); SetVehicleToRespawn(HireCar[playerid]); HireCar[playerid]=-1;}
		
    MAX_PLAYERS_CURRENT = GetPlayerPoolSize() + 1;
	PlayerInfo[playerid][pSQLID]=-1;
    return 1;
}

public PlayerconnectPos1(playerid)
{
	new id = random(13);
	if(id==0)
	{
	    InterpolateCameraPos(playerid,1302.6265, -1634.4765, 131.0140, 1829.6105, -1388.1568, 269.0140,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,1310.2869, -1628.0487, 130.1425, 1820.6226, -1383.7731, 266.0903,10000,CAMERA_MOVE);
	}
	if(id==1)
	{
	    InterpolateCameraPos(playerid,-1483.8518, 517.0530, 128.7875, -1992.7163, 946.9514, 193.7875,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,-1484.5493, 527.0286, 127.2231, -1985.1691, 940.3908, 191.8794,10000,CAMERA_MOVE);
	}
	if(id==2)
	{
	    InterpolateCameraPos(playerid,1931.6184, 1209.2723, 94.3684, 1973.0476, 1689.8981, 130.3684,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,1940.3392, 1204.6353, 92.8041,1978.7833, 1698.0897, 128.2893,10000,CAMERA_MOVE);
	}
	if(id==3)
	{
	    InterpolateCameraPos(playerid,50.9276, 928.4386, 101.3181, -382.1372, 946.2114, 125.3181,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,52.6641, 938.2867, 98.3944,-374.4768, 952.6393, 121.2507,10000,CAMERA_MOVE);
	}
	if(id==4)
	{
	    InterpolateCameraPos(playerid,-2578.3212, 2156.2734, 61.9217, -2257.9067, 2243.3999, 20.9217,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,-2572.5854, 2164.4648, 57.8544,-2264.4672, 2250.9470, 20.5728,10000,CAMERA_MOVE);
	}
	if(id==5)
	{
	    InterpolateCameraPos(playerid,-2020.6744, -2614.4707, 65.2249, -2168.5043, -2211.3222, 130.2250,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,-2025.6744, -2605.8105, 64.0063,-2168.6540, -2219.8925, 125.0746,10000,CAMERA_MOVE);
	}
	if(id==6)
	{
	    InterpolateCameraPos(playerid,565.4426, -464.5917, 62.0359, 812.5812, -672.3975, 138.0359,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,572.9898, -471.1523, 57.6522,807.2821, -663.9170, 129.2897,10000,CAMERA_MOVE);
	}
	if(id==7)
	{
	    InterpolateCameraPos(playerid,358.5794, -243.6963, 46.1703, -64.6104, -235.9905, 86.4703,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,352.5613, -235.7100, 43.2466,-64.9594, -225.9966, 83.3801,10000,CAMERA_MOVE);
	}
	if(id==8)
	{
	    InterpolateCameraPos(playerid,1179.3291, 137.7164, 50.1546, 1200.3259, 428.9639, 81.1546,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,1187.5206, 142.8350, 47.5664,1206.6191, 421.1925, 78.2309,10000,CAMERA_MOVE);
	}
	if(id==9)
	{
	    InterpolateCameraPos(playerid,2159.3762, -137.2896, 48.0843, 2117.9492, 141.3848, 82.0843,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,2168.0363, -132.2896, 46.6926,2126.7976, 137.6288, 79.3280,10000,CAMERA_MOVE);
	}
	if(id==10)
	{
	    InterpolateCameraPos(playerid,-130.0187, 2562.6379, 76.6361, -356.6772, 2588.8781, 76.6361,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,-136.0368, 2570.6242, 76.4616,-349.2457, 2595.5695, 76.4616,10000,CAMERA_MOVE);
	}
	if(id==11)
	{
	    InterpolateCameraPos(playerid,-685.6061, 1647.8879, 60.7244, -919.9761, 1641.2834, 79.7244,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,-693.4862, 1641.7313, 57.9680,-914.5297, 1632.8967, 76.9680,10000,CAMERA_MOVE);
	}
	if(id==12)
	{
	    InterpolateCameraPos(playerid,-1640.7971, 2724.1643, 103.5812, -1583.5372, 2529.6049, 103.5812,10000,CAMERA_MOVE);
	    InterpolateCameraLookAt(playerid,-1633.0211, 2719.1145, 99.8351,-1576.3438, 2536.5515, 99.8351,10000,CAMERA_MOVE);
	}
	SafeSetPlayerPos(playerid,spawn[id][pos][0],spawn[id][pos][1],spawn[id][pos][2]);
	PosConnectJ1[playerid] = SetTimerEx("PlayerconnectPos1", 10000, 0, "i", playerid);
	return 1;
}

public TimerConnectOff(playerid)
{
	server_TogglePlayerSpectating(playerid,false);
    KillTimer(PosConnectJ1[playerid]);
	return 1;
}

public gym_TestCombatStyle(playerid, article)
{
	new string[512];
	new bizid = gPlayerInBizz[playerid];
    if(gym_TempStyle[playerid] == 0) return 1;
    else if(gym_TempStyle[playerid] == 1)
	{
		PlayerInfo[playerid][pCombatStyle] = gym_StyleBefore[playerid];
		gym_SetCombatStyle(playerid, PlayerInfo[playerid][pCombatStyle], true);
		format(string, sizeof(string),"Voulez-vous acheter la technique Elbow pour $%d",bizz[bizid][itemCost][0]);
		ShowPlayerDialog(playerid,85,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Gym «{FFFFFF} Achats",string,"Acheter","Annuler");
		player_Dialog[playerid] = 1;
	}
	else if(gym_TempStyle[playerid] == 2)
	{
		PlayerInfo[playerid][pCombatStyle] = gym_StyleBefore[playerid];
		gym_SetCombatStyle(playerid, PlayerInfo[playerid][pCombatStyle], true);
        format(string, sizeof(string),"Voulez-vous acheter la technique Boxing pour $%d",bizz[bizid][itemCost][1]);
		ShowPlayerDialog(playerid,85,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Gym «{FFFFFF} Achats",string,"Acheter","Annuler");
		player_Dialog[playerid] = 2;
	}
	else if(gym_TempStyle[playerid] == 3)
	{
		PlayerInfo[playerid][pCombatStyle] = gym_StyleBefore[playerid];
		gym_SetCombatStyle(playerid, PlayerInfo[playerid][pCombatStyle], true);
        format(string, sizeof(string),"Voulez-vous acheter la technique Grabkick pour $%d",bizz[bizid][itemCost][2]);
		ShowPlayerDialog(playerid,85,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Gym «{FFFFFF} Achats",string,"Acheter","Annuler");
		player_Dialog[playerid] = 3;
	}
	else if(gym_TempStyle[playerid] == 4)
	{
		PlayerInfo[playerid][pCombatStyle] = gym_StyleBefore[playerid];
		gym_SetCombatStyle(playerid, PlayerInfo[playerid][pCombatStyle], true);
        format(string, sizeof(string),"Voulez-vous acheter la technique Kneehead pour $%d",bizz[bizid][itemCost][3]);
		ShowPlayerDialog(playerid,85,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Gym «{FFFFFF} Achats",string,"Acheter","Annuler");
		player_Dialog[playerid] = 4;
	}
	else if(gym_TempStyle[playerid] == 5)
	{
		PlayerInfo[playerid][pCombatStyle] = gym_StyleBefore[playerid];
		gym_SetCombatStyle(playerid, PlayerInfo[playerid][pCombatStyle], true);
        format(string, sizeof(string),"Voulez-vous acheter la technique Kungfu pour $%d",bizz[bizid][itemCost][4]);
		ShowPlayerDialog(playerid,85,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Gym «{FFFFFF} Achats",string,"Acheter","Annuler");
		player_Dialog[playerid] = 5;
	}
    gym_TempStyle[playerid] = 0;
	return 1;
}
stock faction_UpdateInfos(factionid)
{
	if(FactionInfo[factionid][fCreate] != 1)
	    {return 1;}
    new string[64];
    if(IsValidDynamicPickup(FactionPickup[factionid]))
    	{DestroyDynamicPickup(FactionPickup[factionid]);}
	if(IsValidDynamic3DTextLabel(FactionLabel[factionid]))
		{DestroyDynamic3DTextLabel(FactionLabel[factionid]);}
	format(string, sizeof(string), "[%s QG]",FactionInfo[factionid][fName]);
	if(FactionInfo[factionid][fType] == 2)
	{
	    FactionLabel[factionid] = CreateDynamic3DTextLabel(string,0x464646F6,FactionInfo[factionid][fEntrance][0], FactionInfo[factionid][fEntrance][1], FactionInfo[factionid][fEntrance][2]+1,12.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
		FactionPickup[factionid] = CreateDynamicPickup(1239, 1, FactionInfo[factionid][fEntrance][0], FactionInfo[factionid][fEntrance][1], FactionInfo[factionid][fEntrance][2],0,0,-1,PICKUP_STREAM_DISTANCE);
	}
	else if(FactionInfo[factionid][fType] == 1)
	{
	    FactionLabel[factionid] = CreateDynamic3DTextLabel(string,0x00B300F6,FactionInfo[factionid][fEntrance][0], FactionInfo[factionid][fEntrance][1], FactionInfo[factionid][fEntrance][2]+1,12.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
        if(IsValidDynamicPickup(FactionCoffrePickup[factionid]))
			{DestroyDynamicPickup(FactionCoffrePickup[factionid]);}
		if(IsValidDynamic3DTextLabel(FactionCoffreLabel[factionid]))
	    	{DestroyDynamic3DTextLabel(FactionCoffreLabel[factionid]);}
	    FactionPickup[factionid] = CreateDynamicPickup(1254, 1, FactionInfo[factionid][fEntrance][0], FactionInfo[factionid][fEntrance][1], FactionInfo[factionid][fEntrance][2],0,0,-1,PICKUP_STREAM_DISTANCE);
		FactionCoffrePickup[factionid] = CreateDynamicPickup(1318, 1, FactionInfo[factionid][fSafe][0], FactionInfo[factionid][fSafe][1], FactionInfo[factionid][fSafe][2],0,0,-1,PICKUP_STREAM_DISTANCE);
		format(string, sizeof(string), "[Coffre : %s]",FactionInfo[factionid][fName]);
		FactionCoffreLabel[factionid] = CreateDynamic3DTextLabel(string,0x00B300F6,FactionInfo[factionid][fSafe][0], FactionInfo[factionid][fSafe][1], FactionInfo[factionid][fSafe][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	}
	return 1;
}

stock uniquebizz_UpdateInfos(bizzid)
{
    new string[256];
    if(IsValidDynamicPickup(uniquebizz_Pickup[bizzid]))
    	{DestroyDynamicPickup(uniquebizz_Pickup[bizzid]);}
	if(IsValidDynamic3DTextLabel(uniquebizz_Label[bizzid]))
		{DestroyDynamic3DTextLabel(uniquebizz_Label[bizzid]);}
	if(sbizz[bizzid][ubOwned] == 1) // Acheté
    {
        if(bizzid >= MAX_STATION && bizzid < MAX_STATION+MAX_SPRAY)
        	{format(string, sizeof(string), "[%s]\n{6E65FF}Prix d'entrée :{FFFFFF} $%d\n{6E65FF}Commande : {FFFFFF}/entrer",sbizz[bizzid][ubMessage],sbizz[bizzid][ubEnterPrice]);}
        else if(bizzid >= MAX_STATION+MAX_SPRAY && bizzid < MAX_STATION+MAX_SPRAY+MAX_TUNING)
        	{format(string, sizeof(string), "[%s]\n{6E65FF}Commande : {FFFFFF}/entrer",sbizz[bizzid][ubMessage]);}
		else if(bizzid >= MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR)
        	{format(string, sizeof(string), "[%s]\n{6E65FF}Prix location véhicule :{FFFFFF} $%d",sbizz[bizzid][ubMessage],sbizz[bizzid][ubEnterPrice]);}
        else
		{
			if(sbizz[bizzid][ubEnterPrice] <= 0)
			    {format(string, sizeof(string), "[%s]\n{FFFFFF}Touche 'F'",sbizz[bizzid][ubMessage]);}
			else
				{format(string, sizeof(string), "[%s]\n{6E65FF}Prix d'entrée :{FFFFFF} $%d\n{FFFFFF}Touche 'F'",sbizz[bizzid][ubMessage],sbizz[bizzid][ubEnterPrice]);}
		}
		uniquebizz_Pickup[bizzid] = CreateDynamicPickup(1239, 1, sbizz[bizzid][ubEntrance_x], sbizz[bizzid][ubEntrance_y], sbizz[bizzid][ubEntrance_z],0,0,-1,PICKUP_STREAM_DISTANCE);
		uniquebizz_Label[bizzid] = CreateDynamic3DTextLabel(string,0x6E65FFF6,sbizz[bizzid][ubEntrance_x], sbizz[bizzid][ubEntrance_y], sbizz[bizzid][ubEntrance_z],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    }
    else // A vendre
    {
        uniquebizz_Pickup[bizzid] = CreateDynamicPickup(19524, 1, sbizz[bizzid][ubEntrance_x], sbizz[bizzid][ubEntrance_y], sbizz[bizzid][ubEntrance_z],0,0,-1,PICKUP_STREAM_DISTANCE);
	    format(string, sizeof(string), "{FFFFFF}%s à vendre\n{6E65FF}Prix d'achat : {FFFFFF}$%d",sbizz[bizzid][ubMessage],sbizz[bizzid][ubPrix]);
	    uniquebizz_Label[bizzid] = CreateDynamic3DTextLabel(string,0x6E65FFF6,sbizz[bizzid][ubEntrance_x], sbizz[bizzid][ubEntrance_y], sbizz[bizzid][ubEntrance_z],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    }
	uniquebizz_CreateIcon(bizzid);
	return 1;
}

stock uniquebizz_CreateIcon(bizzid)
{
	if(IsValidDynamicMapIcon(uniquebizz_Icon[bizzid]))
	    {DestroyDynamicMapIcon(uniquebizz_Icon[bizzid]);}
	new tmpicon = 0;
	if(bizzid >= 0 && bizzid < MAX_STATION)
        {tmpicon = 55;}
	else if(bizzid >= MAX_STATION && bizzid < MAX_STATION+MAX_SPRAY)
	    {tmpicon = 63;}
	else if(bizzid >= MAX_STATION+MAX_SPRAY && bizzid < MAX_STATION+MAX_SPRAY+MAX_TUNING)
	    {tmpicon = 27;}
    if(tmpicon != 0)
		{uniquebizz_Icon[bizzid] = CreateDynamicMapIcon(sbizz[bizzid][ubEntrance_x], sbizz[bizzid][ubEntrance_y], sbizz[bizzid][ubEntrance_z],tmpicon,COLOR_WHITE,-1,-1,-1,500.0);}
	return 1;
}

stock bizz_UpdateInfos(BizzID)
{
    new string[256];
    if(IsValidDynamicPickup(bizz_Pickup[BizzID]))
    	{DestroyDynamicPickup(bizz_Pickup[BizzID]);}
	if(IsValidDynamic3DTextLabel(bizz_Label[BizzID]))
		{DestroyDynamic3DTextLabel(bizz_Label[BizzID]);}
	if(IsValidDynamicMapIcon(bizz_MapIcon[BizzID]))
		{DestroyDynamicMapIcon(bizz_MapIcon[BizzID]);}
	if(bizz[BizzID][actorId][0] != 0)
		{DestroyDynamicLvrpActor(bizz[BizzID][actorId][0]);}
	if(bizz[BizzID][actorId][1] != 0)
		{DestroyDynamicLvrpActor(bizz[BizzID][actorId][1]);}
	if(bizz[BizzID][actorId][2] != 0)
		{DestroyDynamicLvrpActor(bizz[BizzID][actorId][2]);}
	if(bizz[BizzID][used] == 1)
 	{
		if(bizz[BizzID][owned] == 0 && bizz[BizzID][variable] == 0)
		{
		    bizz_Pickup[BizzID] = CreateDynamicPickup(1272, 1, bizz[BizzID][pos][0], bizz[BizzID][pos][1], bizz[BizzID][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
		    format(string, sizeof(string), "[Entreprise à vendre]\nPrix d'achat : {FFFFFF}$%d",bizz[BizzID][price]);
		    bizz_Label[BizzID] = CreateDynamic3DTextLabel(string,0x6E65FFF6,bizz[BizzID][pos][0], bizz[BizzID][pos][1], bizz[BizzID][pos][2]+1,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
		}
		else if(bizz[BizzID][owned] == 1 && bizz[BizzID][variable] == 1)
		{
		    if(bizz[BizzID][enterCost] <= 0)
		    	{format(string, sizeof(string), "[%s]\n{FFFFFF}Touche 'F'",bizz[BizzID][description]);}
		    else
		    	{format(string, sizeof(string), "[%s]\nPrix d'entrée :{FFFFFF} $%d\nTouche 'F'",bizz[BizzID][description],bizz[BizzID][enterCost]);}
		    bizz_Pickup[BizzID] = CreateDynamicPickup(1239, 1, bizz[BizzID][pos][0], bizz[BizzID][pos][1], bizz[BizzID][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
			bizz_Label[BizzID] = CreateDynamic3DTextLabel(string,0x6E65FFF6,bizz[BizzID][pos][0], bizz[BizzID][pos][1], bizz[BizzID][pos][2]+1,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
		    bizz_CreateIcon(BizzID);
		    for(new i=0; i<3; i++)
		    {
			    new Float:x1,Float:y1,Float:z1,Float:a1, skinb,stepb;
			    bizz_GetActorInfos(bizz[BizzID][typeZ], x1, y1, z1, a1, skinb, i, stepb);
			    if(stepb != -1)
			    	{bizz[BizzID][actorId][i] = CreateDynamicLvrpActor(skinb, x1, y1, z1, a1,BizzID,true,1,bizz[BizzID][typeZ],"(( Touche 'N' ))");}
			}
		}
		else
	    {
	    	bizz_Pickup[BizzID] = CreateDynamicPickup(1272, 1, bizz[BizzID][pos][0], bizz[BizzID][pos][1], bizz[BizzID][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
			format(string, sizeof(string), "[Entreprise en construction]");
			bizz_Label[BizzID] = CreateDynamic3DTextLabel(string,0x6E65FFF6,bizz[BizzID][pos][0], bizz[BizzID][pos][1], bizz[BizzID][pos][2]+1,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    }
	}
	return 1;
}

stock bizz_CreateIcon(bizid)
{
    if(bizz[bizid][typeZ] == 1)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],52,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 2)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],45,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 3)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],42,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 4)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],32,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 5)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],17,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 6)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],29,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 7)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],10,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 8)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],14,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 9)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],24,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 10)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],6,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 11)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],38,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 12)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],49,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 13)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],48,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 14)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],54,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 15)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],45,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 16)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],45,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 17)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],45,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 18)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],45,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 19)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],45,COLOR_WHITE,-1,-1,-1,500.0);}
	else if(bizz[bizid][typeZ] == 20)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],50,COLOR_WHITE,-1,-1,-1,500.0);}
    else if(bizz[bizid][typeZ] == 21)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],32,COLOR_WHITE,-1,-1,-1,500.0);}
    else if(bizz[bizid][typeZ] == 22)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],53,COLOR_WHITE,-1,-1,-1,500.0);}
    else if(bizz[bizid][typeZ] == 23)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],28,COLOR_WHITE,-1,-1,-1,500.0);}
    else if(bizz[bizid][typeZ] == 24)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],36,COLOR_WHITE,-1,-1,-1,500.0);}
    else if(bizz[bizid][typeZ] == 25)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],52,COLOR_WHITE,-1,-1,-1,500.0);}
    else if(bizz[bizid][typeZ] == 26)
		{bizz_MapIcon[bizid] = CreateDynamicMapIcon(bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2],31,COLOR_WHITE,-1,-1,-1,500.0);}
	return 1;
}

stock stop_UpdateInfos(id)
{
    new string[64];
    if(IsValidDynamic3DTextLabel(stop_Label[id]))
		{DestroyDynamic3DTextLabel(stop_Label[id]);}
	if(IsValidDynamicObject(stop_Object[id]))
		{DestroyDynamicObject(stop_Object[id]);}
	if(stop[id][actorId] != 0)
    	{DestroyDynamicLvrpActor(stop[id][actorId]);}
    if(stop[id][used] == 1)
	{
		format(string, sizeof(string), "{32CD32}[Arrêt de bus]\n{9999EE}%s",stop[id][description]);
		stop_Label[id] = CreateDynamic3DTextLabel(string,0x00FF00F6, stop[id][pos][0],stop[id][pos][1],stop[id][pos][2],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
		stop_Object[id] = CreateDynamicObject(1257,stop[id][pos][0],stop[id][pos][1],stop[id][pos][2],0.0,0.0,stop[id][pos][3],0,0,-1,STREAM_DISTANCE);
		SetDynamicObjectMaterialText(stop_Object[id],0, stop[id][description], 90, "Arial", 24, 1, -16776961, -8092540, 1);
        stop[id][actorId] = CreateDynamicLvrpActor(13, stop[id][pos][0],stop[id][pos][1],stop[id][pos][2], 90, 0, true ,0, 0,"(( Civile ))");
        ApplyDynamicActorAnimation(stop[id][actorId], "INT_HOUSE","LOU_In",4.1, 0, 1, 1, 1, 1);
	}
	return 1;
}

stock garage_UpdateInfos(id)
{
    new string[128];
    if(IsValidDynamicPickup(garage_Pickup[id]))
    	{DestroyDynamicPickup(garage_Pickup[id]);}
	if(IsValidDynamic3DTextLabel(garage_Label[id]))
		{DestroyDynamic3DTextLabel(garage_Label[id]);}
    if(garage[id][used] == 1)
	{
		if(garage[id][owned] == 1)
	    	{format(string, sizeof(string), "{610B0B}[Garage]\nPropiétaire :{FFFFFF} %s",garage[id][owner]);}
	    else
	    	{format(string, sizeof(string), "{610B0B}[Garage à vendre]\nPrix d'achat :{FFFFFF} $%d",garage[id][price]);}
		garage_Label[id] = CreateDynamic3DTextLabel(string,0x00FF00EE, garage[id][pos][0],garage[id][pos][1],garage[id][pos][2]+1,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
		garage_Pickup[id] = CreateDynamicPickup(19133, 1, garage[id][pos][0], garage[id][pos][1], garage[id][pos][2],0,0,-1,40.0);
	}
	return 1;
}

stock atm_UpdateInfos(id)
{
    new string[128];
    if(IsValidDynamic3DTextLabel(atm_Label[id]))
		{DestroyDynamic3DTextLabel(atm_Label[id]);}
	if(IsValidDynamicObject(atm_Object[id]))
		{DestroyDynamicObject(atm_Object[id]);}
	if(atm[id][used] == 1)
	{
	    format(string, sizeof(string), "{33CCFF}[ATM]\nArgent :{FFFFFF} $%d\n{FFFFFF}Touche 'N'",atm[id][cash]);
	    atm_Label[id] = CreateDynamic3DTextLabel(string,0x33CCFFEE, atm[id][pos][0],atm[id][pos][1],atm[id][pos][2],4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    atm_Object[id] = CreateDynamicObject(2942,atm[id][pos][0],atm[id][pos][1],atm[id][pos][2],0.0,0.0,atm[id][pos][3],0,0,-1,STREAM_DISTANCE);
	}
	return 1;
}

stock Float:GetItemZ(modelid)
{
    switch(modelid)
	{
        case 2751, 1718, 1210, 19006 .. 19035, 19138 .. 19140, 18926 .. 18935, 18636, 19093, 19160, 18939 .. 18943, 18955 .. 18959, 18944 .. 18951, 18970 .. 18971, 18969, 19095 .. 19098, 18639, 18962, 18921 .. 18924, 19099, 19100 : {return 0.9;}
        case 1851, 1950, 1946, 328, 18645, 18976 .. 18979 :  {return 0.8;}
	}
	return 1.0;
}

stock Float:GetItemY(modelid)
{
    switch(modelid)
	{
        case 19087,18634 :
		    {return 90.0;}
        case 18944 .. 18951, 18970 .. 18971, 18969, 19095 .. 19098, 18639, 18962, 19099, 19100, 18921 .. 18924 :
		    {return 270.0;}
	}
	return 0.0;
}

stock Float:GetItemX(modelid)
{
    switch(modelid)
	{
        case 328, 1210 :
		    {return 90.0;}
	}
	return 0.0;
}


stock drop_Update(id)
{
    if(IsValidDynamicObject(drop_Object[id]))
		{DestroyDynamicObject(drop_Object[id]);}
	if(IsValidDynamic3DTextLabel(drop_Label[id]))
		{DestroyDynamic3DTextLabel(drop_Label[id]);}
	if(drop[id][model] != -1)
	{
	    if(drop[id][model] > 0 && drop[id][model] <50) // Arme
			{drop_Object[id] = CreateDynamicObject(GunObjects[drop[id][model]], drop[id][pos][0], drop[id][pos][1], drop[id][pos][2]-0.9,93.7, 120.0, 120.0, -1, -1, -1,LITTLE_STREAM_DISTANCE);}
		else
		   {drop_Object[id] = CreateDynamicObject(drop[id][model], drop[id][pos][0], drop[id][pos][1], drop[id][pos][2]-GetItemZ(drop[id][model]), GetItemX(drop[id][model]),GetItemY(drop[id][model]),0, -1, -1, -1,LITTLE_STREAM_DISTANCE);}
        drop_Label[id]=CreateDynamic3DTextLabel("[C]",0xFFFF00F6, drop[id][pos][0], drop[id][pos][1], drop[id][pos][2]-0.9,4,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	}
	return 1;
}

stock gate_Update(id)
{
	if(IsValidDynamicObject(gate_Object[id]))
		{DestroyDynamicObject(gate_Object[id]);}
	if(gate[id][used] == true)
		{gate_Object[id] = CreateDynamicObject(gate[id][model],gate[id][pos][0],gate[id][pos][1],gate[id][pos][2],gate[id][pos][3],gate[id][pos][4],gate[id][pos][5],-1,-1,-1,STREAM_DISTANCE);}
	return 1;
}


stock camera_UpdateInfos(id)
{
    new string[128];
    if(IsValidDynamic3DTextLabel(camera_Label[id]))
		{DestroyDynamic3DTextLabel(camera_Label[id]);}
	if(IsValidDynamicObject(camera_Object[id]))
		{DestroyDynamicObject(camera_Object[id]);}
	if(camera[id][used] == 1)
	{
	    format(string, sizeof(string), "{853FB0}[Limite : %d Km/h]",camera[id][limit]);
		camera_Label[id] = CreateDynamic3DTextLabel(string,0x33CCFFEE, camera[id][pos][0],camera[id][pos][1],camera[id][pos][2]+7,50.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
		camera_Object[id] = CreateDynamicObject(18880,camera[id][pos][0],camera[id][pos][1],camera[id][pos][2],0.0,0.0,camera[id][pos][3],0,0,-1,STREAM_DISTANCE);
	}
	return 1;
}

stock sign_UpdateInfos(id)
{
	if(IsValidDynamicObject(sign_Object[id]))
		{DestroyDynamicObject(sign_Object[id]);}
	if(sign[id][used] == 1)
	{
	    sign_Object[id] = CreateDynamicObject(sign[id][model],sign[id][pos][0],sign[id][pos][1],sign[id][pos][2],sign[id][pos][3],sign[id][pos][4],sign[id][pos][5],0,0,-1,STREAM_DISTANCE);
		SetDynamicObjectMaterialText(sign_Object[id],sign[id][indexNum],sign[id][description],sign[id][size],sign[id][fontName],sign[id][fontSize],sign[id][bold],sign[id][textColor],sign[id][backColor],sign[id][alignement]);
	}
	return 1;
}

stock ad_Update(id)
{
	if(IsValidDynamicObject(ad_Object[id][0]))
		{DestroyDynamicObject(ad_Object[id][0]);}
    if(IsValidDynamicObject(ad_Object[id][1]))
		{DestroyDynamicObject(ad_Object[id][1]);}
	if(ad[id][used] == 1)
	{
	    ad_Object[id][0] = CreateDynamicObject(1260,ad[id][pos][0],ad[id][pos][1],ad[id][pos][2],ad[id][pos][3],ad[id][pos][4],ad[id][pos][5],0,0,-1,STREAM_DISTANCE);
	    ad_Object[id][1] = CreateDynamicObject(4732,ad[id][pos][0],ad[id][pos][1],ad[id][pos][2]+5.5,ad[id][pos][3],ad[id][pos][4],ad[id][pos][5]+55,0,0,-1,STREAM_DISTANCE);
		SetDynamicObjectMaterialText(ad_Object[id][1],0,"Panneau publicitaire libre\ndisponible au San News",90,"Impact",24,0,0xFF000000,0xFFFFFFFF,1);
	}
	return 1;
}

stock tag_Update(id)
{
	if(IsValidDynamicObject(tag_Object[id]))
		{DestroyDynamicObject(tag_Object[id]);}
	if(tag[id][used] == 1)
	{
	    tag_Object[id] = CreateDynamicObject(19353,tag[id][pos][0],tag[id][pos][1],tag[id][pos][2],tag[id][pos][3],tag[id][pos][4],tag[id][pos][5],0,0,-1,STREAM_DISTANCE);
		SetDynamicObjectMaterialText(tag_Object[id],0,tag[id][description],50,"Arial",tag[id][fontSize],1,GetGangColor(tag[id][faction]),0,1);
	}
	return 1;
}

stock bin_UpdateInfos(id)
{
    if(IsValidDynamic3DTextLabel(bin_Label[id]))
    	{DestroyDynamic3DTextLabel(bin_Label[id]);}
	if(IsValidDynamicObject(bin_Object[id]))
		{DestroyDynamicObject(bin_Object[id]);}
 	if(bin[id][used] == 1)
	{
	    bin_Label[id] = CreateDynamic3DTextLabel("{8BFF90}[Poubelle]\n{FFFFFF}Touche 'N'",0x33CCFFF6, bin[id][pos][0],bin[id][pos][1],bin[id][pos][2],4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    bin_Object[id] = CreateDynamicObject(1359,bin[id][pos][0],bin[id][pos][1],bin[id][pos][2],0.0,0.0,bin[id][pos][3],0,0,-1,STREAM_DISTANCE);
	}
	return 1;
}

stock trash_UpdateInfos(id)
{
    new string[128];
    if(IsValidDynamic3DTextLabel(trash_Label[id]))
    	{DestroyDynamic3DTextLabel(trash_Label[id]);}
	if(IsValidDynamicObject(trash_Object[id]))
		{DestroyDynamicObject(trash_Object[id]);}
 	if(trash[id][used] == 1)
	{
	    format(string, sizeof(string), "{00D36A}[Poubelle]\nOrdures : {FFFFFF}%d/100",trash[id][quantity]);
	    trash_Label[id] = CreateDynamic3DTextLabel(string,0x33CCFFF6, trash[id][pos][0],trash[id][pos][1],trash[id][pos][2],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    trash_Object[id] = CreateDynamicObject(3035,trash[id][pos][0],trash[id][pos][1],trash[id][pos][2],0.0,0.0,trash[id][pos][3],0,0,-1,STREAM_DISTANCE);
	}
	return 1;
}

stock phonecab_UpdateInfos(id)
{
    new string[128];
    if(IsValidDynamic3DTextLabel(phonecab_Label[id]))
    	{DestroyDynamic3DTextLabel(phonecab_Label[id]);}
	if(IsValidDynamicObject(phonecab_Object[id]))
		{DestroyDynamicObject(phonecab_Object[id]);}
 	if(phone[id][used] == 1)
	{
	    format(string, sizeof(string), "{FFEE00}[Téléphone]\nNuméro : {FFFFFF}%d\n{FFFFFF}Touche 'N'",(100+id));
	    phonecab_Label[id] = CreateDynamic3DTextLabel(string,0x33CCFFEE, phone[id][pos][0],phone[id][pos][1],phone[id][pos][2]+0.7,4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    phonecab_Object[id] = CreateDynamicObject(1216,phone[id][pos][0],phone[id][pos][1],phone[id][pos][2],0.0,0.0,phone[id][pos][3],0,0,-1,STREAM_DISTANCE);
	}
	return 1;
}

stock map_UpdateInfos(id)
{
    if(IsValidDynamic3DTextLabel(map_Label[id]))
    	{DestroyDynamic3DTextLabel(map_Label[id]);}
	if(IsValidDynamicObject(map_Object[id]))
		{DestroyDynamicObject(map_Object[id]);}
 	if(map[id][used] == 1)
	{
	    map_Label[id] = CreateDynamic3DTextLabel("{FF002D}[Carte]\n{FFFFFF}Touche 'N'",0x33CCFFEE, map[id][pos][0],map[id][pos][1],map[id][pos][2],4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    map_Object[id] = CreateDynamicObject(19165,map[id][pos][0],map[id][pos][1],map[id][pos][2],90.0,0.0,map[id][pos][3],0,0,-1,STREAM_DISTANCE);
	}
	return 1;
}

stock distrib_UpdateInfos(id)
{
    if(IsValidDynamic3DTextLabel(distrib_Label[id]))
    	{DestroyDynamic3DTextLabel(distrib_Label[id]);}
	if(IsValidDynamicObject(distrib_Object[id]))
		{DestroyDynamicObject(distrib_Object[id]);}
 	if(distributor[id][used] == 1)
	{
	    distrib_Label[id] = CreateDynamic3DTextLabel("{FF00FF}[Distributeur]\n{FFFFFF}Touche 'N'",0x33CCFFEE, distributor[id][pos][0],distributor[id][pos][1],distributor[id][pos][2],4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	    distrib_Object[id] = CreateDynamicObject(1776,distributor[id][pos][0],distributor[id][pos][1],distributor[id][pos][2],0,0.0,distributor[id][pos][3],-1,-1,-1,STREAM_DISTANCE);
	}
	return 1;
}

stock tree_Update(i,Float:x,Float:y,Float:z)
{
	for(new ob=0; ob<10; ob++)
	{
		if(IsValidDynamicObject(SapinInfo[i][XmasObject][ob]))
		    {DestroyDynamicObject(SapinInfo[i][XmasObject][ob]);}
	}
	if(SapinInfo[i][XmasTreeX] == 1)
	{
 		SapinInfo[i][XmasObject][0] = CreateDynamicObject(19076, x, y, z-1.0,0,0,0,-1,-1,-1,STREAM_DISTANCE);// L'arbre
     	SapinInfo[i][XmasObject][1] = CreateDynamicObject(19054, x, y+1.0, z-0.4,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 1
        SapinInfo[i][XmasObject][2] = CreateDynamicObject(19058, x+1.0, y, z-0.4,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 2
        SapinInfo[i][XmasObject][3] = CreateDynamicObject(19056, x, y-1.0, z-0.4,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 3
        SapinInfo[i][XmasObject][4] = CreateDynamicObject(19057, x-1.0, y, z-0.4,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 4
        SapinInfo[i][XmasObject][5] = CreateDynamicObject(19058, x-1.5, y+1.5, z-1.0,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 5
        SapinInfo[i][XmasObject][6] = CreateDynamicObject(19055, x+1.5, y-1.5, z-1.0,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 6
        SapinInfo[i][XmasObject][7] = CreateDynamicObject(19057, x+1.5, y+1.5, z-1.0,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 7
        SapinInfo[i][XmasObject][8] = CreateDynamicObject(19054, x-1.5, y-1.5, z-1.0,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Cadeau 8
        SapinInfo[i][XmasObject][9] = CreateDynamicObject(3526, x, y, z-1.0,0,0,0,-1,-1,-1,STREAM_DISTANCE);// Lumière
  	}
  	return 1;
}

stock house_UpdateInfos(id)
{
	if(IsValidDynamicPickup(house_Pickup[id]))
    	{DestroyDynamicPickup(house_Pickup[id]);}
	if(IsValidDynamic3DTextLabel(house_Label[id]))
		{DestroyDynamic3DTextLabel(house_Label[id]);}
    new string[256];
	if(house[id][used] == 1)
	{
		    if(house[id][owned] == 1) // Acheté
	    	{
	    	    if(house[id][rentState] == 1)// Location activée
	    	    {
	    	        if(house[id][showDesc] == 1)
	    	            {format(string, sizeof(string), "{009D00}[%s]\nPropriétaire :{FFFFFF} %s\n{009D00}Locataire(s) :{FFFFFF} %d/%d\n{009D00}Prix location :{FFFFFF} $%d\nTouche 'F'",house[id][description],house[id][owner],house[id][rentNb],house[id][rentMax],house[id][rentPrice]);}
	    	        else
						{format(string, sizeof(string), "{009D00}[Maison]\nPropriétaire :{FFFFFF} %s\n{009D00}Locataire(s) :{FFFFFF} %d/%d\n{009D00}Prix location :{FFFFFF} $%d\nTouche 'F'",house[id][owner],house[id][rentNb],house[id][rentMax],house[id][rentPrice]);}
				}
		    	else
		    	{
		    	    if(house[id][showDesc] == 1)
		    	        {format(string, sizeof(string), "{009D00}[%s]\nPropriétaire :{FFFFFF} %s\nTouche 'F'",house[id][description],house[id][owner]);}
		    	    else
						{format(string, sizeof(string), "{009D00}[Maison]\nPropriétaire :{FFFFFF} %s\nTouche 'F'",house[id][owner]);}
				}
		    	house_Pickup[id] = CreateDynamicPickup(1239, 1, house[id][pos][0], house[id][pos][1], house[id][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
		    	house_Label[id] = CreateDynamic3DTextLabel(string,0x33CCFFF6,house[id][pos][0], house[id][pos][1], house[id][pos][2]+1,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
			}
	    	else
	    	{
	    	    house_Pickup[id] = CreateDynamicPickup(1273, 1, house[id][pos][0], house[id][pos][1], house[id][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
		    	format(string, sizeof(string), "{009D00}[%s à vendre]\nPrix d'achat : {FFFFFF}$%d",house[id][description],house[id][price]);
		    	house_Label[id] = CreateDynamic3DTextLabel(string,0x33CCFFF6,house[id][pos][0], house[id][pos][1], house[id][pos][2]+1,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    	}
	}
	return 1;
}

stock house_UpdateFurnitureInfos(id,objectid)
{
    if(IsValidDynamicObject(house[id][hObject][objectid]))
	    {DestroyDynamicObject(house[id][hObject][objectid]);}
    if(house[id][used] == 1 && house[id][owned] == 1 && house[id][hItem][objectid] > 0)
		{house[id][hObject][objectid] = CreateDynamicObject(house[id][hItem][objectid], house[id][hFurPos_x][objectid], house[id][hFurPos_y][objectid], house[id][hFurPos_z][objectid], house[id][hFurPos_rx][objectid], house[id][hFurPos_ry][objectid], house[id][hFurPos_rz][objectid], house[id][world], house[id][interior], -1, LITTLE_STREAM_DISTANCE);}
	return 1;
}

stock seed_UpdateInfos(id)
{
    new string[128],name[MAX_PLAYER_NAME];
    if(IsValidDynamic3DTextLabel(seed_Label[id]))
		{DestroyDynamic3DTextLabel(seed_Label[id]);}
	if(IsValidDynamicObject(seed_Object[id]))
		{DestroyDynamicObject(seed_Object[id]);}
	if(seed[id][used] == 1)
	{
	    MySQLGetNameWithId(seed[id][sqlid],name);
		if(seed[id][model] == SEED_WEED)
		{
			format(string,sizeof(string),"[Plant de weed]\nProprio : %s\nTemps restant : %d min(s)",name,seed[id][time]);
			seed_Object[id] = CreateDynamicObject(SEED_WEED, seed[id][pos][0], seed[id][pos][1], seed[id][pos][2]-3+(seed[id][step]*0.4), 0, 0, 0, 0, 0,-1,LITTLE_STREAM_DISTANCE);
		}
		else if(seed[id][model] == SEED_COCA)
		{
			format(string,sizeof(string),"[Plant de coca]\nProprio : %s\nTemps restant : %d min(s)",name,seed[id][time]);
            seed_Object[id] = CreateDynamicObject(SEED_COCA, seed[id][pos][0], seed[id][pos][1], seed[id][pos][2]-0.4, 0, 0, 0, 0, 0,-1,LITTLE_STREAM_DISTANCE);
		}
		else if(seed[id][model] == SEED_MUSHROOM)
		{
			format(string,sizeof(string),"[Champignon]\nProprio : %s\nTemps restant : %d min(s)",name,seed[id][time]);
            seed_Object[id] = CreateDynamicObject(SEED_MUSHROOM, seed[id][pos][0], seed[id][pos][1], seed[id][pos][2]-1.4, 0, 0, 0, 0, 0,-1,LITTLE_STREAM_DISTANCE);
		}
		else if(seed[id][model] == SEED_SASSAFRAS)
		{
			format(string,sizeof(string),"[Plant de sassafras]\nProprio : %s\nTemps restant : %d min(s)",name,seed[id][time]);
            seed_Object[id] = CreateDynamicObject(SEED_SASSAFRAS, seed[id][pos][0], seed[id][pos][1], seed[id][pos][2]-1.2, 0, 0, 0, 0, 0,-1,LITTLE_STREAM_DISTANCE);
		}
	    seed_Label[id] = CreateDynamic3DTextLabel(string,0x00FFFAF6, seed[id][pos][0],seed[id][pos][1],seed[id][pos][2],3,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	}
	return 1;
}

stock police_Update(id)
{
	for(new i=0; i<4; i++)
	{
	    if(IsValidDynamic3DTextLabel(police_Label[id][i]))
	    	{DestroyDynamic3DTextLabel(police_Label[id][i]);}
	    if(i<2)
	    {
	        if(IsValidDynamicPickup(police_Pickup[id][i]))
				{DestroyDynamicPickup(police_Pickup[id][i]);}
		}
	}
	DestroyDynamicMapIcon(police_Icon[id]);
	police_Icon[id] = CreateDynamicMapIcon(police[id][pos][0],police[id][pos][1],police[id][pos][2],30,COLOR_WHITE,-1,-1,-1,500.0);
    // Entré
	police_Pickup[id][0] = CreateDynamicPickup(1247, 1, police[id][pos][0],police[id][pos][1],police[id][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
	police_Label[id][0] = CreateDynamic3DTextLabel("[Police Departement]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, police[id][pos][0],police[id][pos][1],police[id][pos][2],4,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	// Sortie
	police_Pickup[id][1] = CreateDynamicPickup(1318, 1, police[id][pos][4],police[id][pos][5],police[id][pos][6],0,police[id][interior],-1,PICKUP_STREAM_DISTANCE);
	police_Label[id][1] = CreateDynamic3DTextLabel("[Sortie]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, police[id][pos][4],police[id][pos][5],police[id][pos][6],4,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,police[id][interior],-1,LABEL_STREAM_DISTANCE);
	// CMDS
	police_Label[id][2] = CreateDynamic3DTextLabel("[Service]\n{FFFFFF}Touche 'N'",CMDS_LABEL, police[id][cmds][0],police[id][cmds][1],police[id][cmds][2],6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,police[id][interior],-1,LABEL_STREAM_DISTANCE);
	police_Label[id][3] = CreateDynamic3DTextLabel("[Equipement]\n{FFFFFF}Touche 'N'",CMDS_LABEL, police[id][cmds][3],police[id][cmds][4],police[id][cmds][5],6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,police[id][interior],-1,LABEL_STREAM_DISTANCE);
	return 1;
}

stock governement_Update(id)
{
	for(new i =0; i<6; i++)
	{
	    if(IsValidDynamic3DTextLabel(governement_Label[id][i]))
	    	{DestroyDynamic3DTextLabel(governement_Label[id][i]);}
	    if(i<2)
	    {
	        if(IsValidDynamicPickup(governement_Pickup[id][i]))
				{DestroyDynamicPickup(governement_Pickup[id][i]);}
		}
	}
	DestroyDynamicMapIcon(governement_Icon[id]);
	governement_Icon[id] = CreateDynamicMapIcon(governement[id][pos][0],governement[id][pos][1],governement[id][pos][2],56,COLOR_WHITE,-1,-1,-1,500.0);
    // Entré
	governement_Pickup[id][0] = CreateDynamicPickup(1318, 1, governement[id][pos][0],governement[id][pos][1],governement[id][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
	governement_Label[id][0] = CreateDynamic3DTextLabel("[Mairie]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, governement[id][pos][0],governement[id][pos][1],governement[id][pos][2],4,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	// Sortie
	governement_Pickup[id][1] = CreateDynamicPickup(1318, 1, governement[id][pos][4],governement[id][pos][5],governement[id][pos][6],id+1,governement[id][interior],-1,PICKUP_STREAM_DISTANCE);
	governement_Label[id][1] = CreateDynamic3DTextLabel("[Sortie]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, governement[id][pos][4],governement[id][pos][5],governement[id][pos][6],4,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,id+1,governement[id][interior],-1,LABEL_STREAM_DISTANCE);
	// CMDS
	governement_Label[id][2] = CreateDynamic3DTextLabel("[Demandes]\n{FFFFFF}Touche 'N'",CMDS_LABEL, governement[id][cmds][0],governement[id][cmds][1],governement[id][cmds][2],6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,id+1,governement[id][interior],-1,LABEL_STREAM_DISTANCE);
	governement_Label[id][3] = CreateDynamic3DTextLabel("[Edition Stats]\n{FFFFFF}Touche 'N'",CMDS_LABEL, governement[id][cmds][3],governement[id][cmds][4],governement[id][cmds][5],6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,id+1,governement[id][interior],-1,LABEL_STREAM_DISTANCE);
    governement_Label[id][4] = CreateDynamic3DTextLabel("[Service]\n{FFFFFF}Touche 'N'",CMDS_LABEL, governement[id][cmds][6],governement[id][cmds][7],governement[id][cmds][8],6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,id+1,governement[id][interior],-1,LABEL_STREAM_DISTANCE);
    governement_Label[id][5] = CreateDynamic3DTextLabel("[Equipement]\n{FFFFFF}Touche 'N'",CMDS_LABEL, governement[id][cmds][9],governement[id][cmds][10],governement[id][cmds][11],6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,id+1,governement[id][interior],-1,LABEL_STREAM_DISTANCE);
	return 1;
}

stock fbi_Update()
{
	DestroyDynamicPickup(FBIInfo[arrestedPickup]);
	DestroyDynamicPickup(FBIInfo[entrancePickup]);
	DestroyDynamicPickup(FBIInfo[exitPickup]);
	DestroyDynamic3DTextLabel(FBIInfo[arrestedLabel]);
	DestroyDynamic3DTextLabel(FBIInfo[entranceLabel]);
	DestroyDynamic3DTextLabel(FBIInfo[exitLabel]);
	DestroyDynamicMapIcon(FBIInfo[icon]);

    FBIInfo[icon] = CreateDynamicMapIcon(FBIInfo[Entrance][0],FBIInfo[Entrance][1],FBIInfo[Entrance][2],30,COLOR_WHITE,-1,-1,-1,500.0);
    FBIInfo[arrestedLabel] = CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, FBIInfo[Arrested],FBIInfo[Arrested],FBIInfo[Arrested],12,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    FBIInfo[arrestedPickup] = CreateDynamicPickup(1314, 1, FBIInfo[Arrested][0],FBIInfo[Arrested][1],FBIInfo[Arrested][2],0,0,-1,PICKUP_STREAM_DISTANCE);
    FBIInfo[exitPickup] = CreateDynamicPickup(1318, 1, FBIInfo[Exit][0],FBIInfo[Exit][1],FBIInfo[Exit][2],1,FBIInfo[Interior],-1,PICKUP_STREAM_DISTANCE);
    FBIInfo[exitLabel] = CreateDynamic3DTextLabel("[Sortie]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, FBIInfo[Exit][0],FBIInfo[Exit][1],FBIInfo[Exit][2],8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1,FBIInfo[Interior],-1,LABEL_STREAM_DISTANCE);
    FBIInfo[entrancePickup] = CreateDynamicPickup(1318, 1, FBIInfo[Entrance][0],FBIInfo[Entrance][1],FBIInfo[Entrance][2],0,0,-1,PICKUP_STREAM_DISTANCE);
    FBIInfo[entranceLabel] = CreateDynamic3DTextLabel("[F.B.I]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, FBIInfo[Entrance][0],FBIInfo[Entrance][1],FBIInfo[Entrance][2],24,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	return 1;
}

stock fire_Update()
{
	DestroyDynamicPickup(FireInfo[entrancePickup]);
	DestroyDynamicPickup(FireInfo[exitPickup]);
	DestroyDynamicPickup(FireInfo[bellPickup]);
	DestroyDynamic3DTextLabel(FireInfo[entranceLabel]);
	DestroyDynamic3DTextLabel(FireInfo[exitLabel]);
	DestroyDynamicMapIcon(FireInfo[icon]);
	for(new cmd=0; cmd<3; cmd++)
		{DestroyDynamic3DTextLabel(FireInfo[cmdLabel][cmd]);}
	FireInfo[icon] = CreateDynamicMapIcon(FireInfo[Entrance][0],FireInfo[Entrance][1],FireInfo[Entrance][2],20,COLOR_WHITE,-1,-1,-1,500.0);
	// Sortie
    FireInfo[exitPickup] = CreateDynamicPickup(1318, 1, FireInfo[Exit][0],FireInfo[Exit][1],FireInfo[Exit][2],FireInfo[VW],FireInfo[Interior],-1,PICKUP_STREAM_DISTANCE);
    FireInfo[exitLabel] = CreateDynamic3DTextLabel("[Sortie]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, FireInfo[Exit][0],FireInfo[Exit][1],FireInfo[Exit][2],8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,FireInfo[VW],FireInfo[Interior],-1,LABEL_STREAM_DISTANCE);
	// Entré
  	FireInfo[entrancePickup] = CreateDynamicPickup(1318, 1, FireInfo[Entrance][0],FireInfo[Entrance][1],FireInfo[Entrance][2],0,0,-1,PICKUP_STREAM_DISTANCE);
	FireInfo[entranceLabel] = CreateDynamic3DTextLabel("[Fire Departement]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, FireInfo[Entrance][0],FireInfo[Entrance][1],FireInfo[Entrance][2],24,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);

	// CMDS
    FireInfo[cmdLabel][0] = CreateDynamic3DTextLabel("[Service]\n{FFFFFF}Touche 'N'",CMDS_LABEL, FireInfo[Duty][0],FireInfo[Duty][1],FireInfo[Duty][2],16,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,FireInfo[VW],FireInfo[Interior],-1,LABEL_STREAM_DISTANCE);
    FireInfo[cmdLabel][1] = CreateDynamic3DTextLabel("[Equipement]\n{FFFFFF}Touche 'N'",CMDS_LABEL, FireInfo[Equip][0],FireInfo[Equip][1],FireInfo[Equip][2],16,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,FireInfo[VW],FireInfo[Interior],-1,LABEL_STREAM_DISTANCE);
    FireInfo[cmdLabel][2] = CreateDynamic3DTextLabel("[Sonnette]\n{FFFFFF}Touche 'N'",0x007F00EE, FireInfo[Bell][0],FireInfo[Bell][1],FireInfo[Bell][2]+0.5,16,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,FireInfo[VW],FireInfo[Interior],-1,LABEL_STREAM_DISTANCE);
    FireInfo[bellPickup] = CreateDynamicPickup(1239, 1, FireInfo[Bell][0],FireInfo[Bell][1],FireInfo[Bell][2],FireInfo[VW],FireInfo[Interior],-1,PICKUP_STREAM_DISTANCE);
	return 1;
}

stock biker_Update()
{
    DestroyDynamicPickup(BikerInfo[entrancePickup]);
    DestroyDynamicPickup(BikerInfo[exitPickup]);
    DestroyDynamic3DTextLabel(BikerInfo[entranceLabel]);
	DestroyDynamic3DTextLabel(BikerInfo[exitLabel]);
	// Sortie
    BikerInfo[exitPickup] = CreateDynamicPickup(1318, 1, BikerInfo[Exit][0],BikerInfo[Exit][1],BikerInfo[Exit][2],0,BikerInfo[Interior],-1,PICKUP_STREAM_DISTANCE);
    BikerInfo[exitLabel] = CreateDynamic3DTextLabel("[Sortie]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, BikerInfo[Exit][0],BikerInfo[Exit][1],BikerInfo[Exit][2],8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,BikerInfo[Interior],-1,-1,LABEL_STREAM_DISTANCE);
	// Entré
  	BikerInfo[entrancePickup] = CreateDynamicPickup(1318, 1, BikerInfo[Entrance][0],BikerInfo[Entrance][1],BikerInfo[Entrance][2],0,0,-1,PICKUP_STREAM_DISTANCE);
	BikerInfo[entranceLabel] = CreateDynamic3DTextLabel("[Biker'Z]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, BikerInfo[Entrance][0],BikerInfo[Entrance][1],BikerInfo[Entrance][2],10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	return 1;
}

stock mecano_Update()
{
    DestroyDynamicPickup(MecanoInfo[entrancePickup]);
	DestroyDynamicPickup(MecanoInfo[exitPickup]);
	DestroyDynamicPickup(MecanoInfo[bellPickup]);
	DestroyDynamic3DTextLabel(MecanoInfo[entranceLabel]);
	DestroyDynamic3DTextLabel(MecanoInfo[exitLabel]);
	DestroyDynamicMapIcon(MecanoInfo[icon]);
	for(new cmd=0; cmd<2; cmd++)
		{DestroyDynamic3DTextLabel(MecanoInfo[cmdLabel][cmd]);}
	MecanoInfo[icon] = CreateDynamicMapIcon(MecanoInfo[Entrance][0],MecanoInfo[Entrance][1],MecanoInfo[Entrance][2],27,COLOR_WHITE,-1,-1,-1,500.0);
	// Sortie
    MecanoInfo[exitPickup] = CreateDynamicPickup(1318, 1, MecanoInfo[Exit][0],MecanoInfo[Exit][1],MecanoInfo[Exit][2],MecanoInfo[VW],MecanoInfo[Interior],-1,PICKUP_STREAM_DISTANCE);
    MecanoInfo[exitLabel] = CreateDynamic3DTextLabel("[Sortie]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, MecanoInfo[Exit][0],MecanoInfo[Exit][1],MecanoInfo[Exit][2],8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,MecanoInfo[VW],MecanoInfo[Interior],-1,LABEL_STREAM_DISTANCE);
	// Entré
  	MecanoInfo[entrancePickup] = CreateDynamicPickup(1318, 1, MecanoInfo[Entrance][0],MecanoInfo[Entrance][1],MecanoInfo[Entrance][2],0,0,-1,PICKUP_STREAM_DISTANCE);
	MecanoInfo[entranceLabel] = CreateDynamic3DTextLabel("[Mécanicien]\n{FFFFFF}Touche 'F'",INT_LABEL_COLOR, MecanoInfo[Entrance][0],MecanoInfo[Entrance][1],MecanoInfo[Entrance][2],24,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);

	// CMDS
    MecanoInfo[cmdLabel][0] = CreateDynamic3DTextLabel("[Service]\n{FFFFFF}Touche 'N'",CMDS_LABEL, MecanoInfo[Duty][0],MecanoInfo[Duty][1],MecanoInfo[Duty][2],16,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,MecanoInfo[VW],MecanoInfo[Interior],-1,LABEL_STREAM_DISTANCE);
    MecanoInfo[cmdLabel][1] = CreateDynamic3DTextLabel("[Sonnette]\n{FFFFFF}Touche 'N'",0x007F00EE, MecanoInfo[Bell][0],MecanoInfo[Bell][1],MecanoInfo[Bell][2]+0.5,16,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,MecanoInfo[VW],MecanoInfo[Interior],-1,LABEL_STREAM_DISTANCE);
    MecanoInfo[bellPickup] = CreateDynamicPickup(1239, 1, MecanoInfo[Bell][0],MecanoInfo[Bell][1],MecanoInfo[Bell][2],MecanoInfo[VW],MecanoInfo[Interior],-1,PICKUP_STREAM_DISTANCE);
	return 1;
}

stock spawn_Update(id)
{
	new string[64];
	if(IsValidDynamic3DTextLabel(spawn_Label[id]))
		{DestroyDynamic3DTextLabel(spawn_Label[id]);}
	if(IsValidDynamicMapIcon(spawn[id][icon]))
		{DestroyDynamicMapIcon(spawn[id][icon]);}
	format(string,sizeof(string),"[Spawn - %s]",GetCityName(id));
	spawn[id][icon] = CreateDynamicMapIcon(spawn[id][pos][0],spawn[id][pos][1],spawn[id][pos][2],38,COLOR_WHITE,-1,-1,-1,500.0);
    spawn_Label[id] = CreateDynamic3DTextLabel(string,0xFFFFFFEE, spawn[id][pos][0],spawn[id][pos][1],spawn[id][pos][2],20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	return 1;
}

stock interior_Update(id)
{
    new string[64];
    if(IsValidDynamic3DTextLabel(interior_Label[id]))
		{DestroyDynamic3DTextLabel(interior_Label[id]);}
	if(IsValidDynamicPickup(interior_Pickup[id]))
		{DestroyDynamicPickup(interior_Pickup[id]);}
    if(IsValidDynamicMapIcon(interior_Icon[id]))
	    {DestroyDynamicMapIcon(interior_Icon[id]);}
	if(interiors[id][actorId][0] != 0)
    	{DestroyDynamicLvrpActor(interiors[id][actorId][0]);}
	if(interiors[id][actorId][1] != 0)
    	{DestroyDynamicLvrpActor(interiors[id][actorId][1]);}
    if(interiors[id][actorId][2] != 0)
    	{DestroyDynamicLvrpActor(interiors[id][actorId][2]);}
	if(interiors[id][used] == 1)
	{
		new tmpicon = 0;
		if(interiors[id][typeZ]==1){tmpicon = 36;}
		else if(interiors[id][typeZ]==2){tmpicon = 56;}
		else if(interiors[id][typeZ]==3){tmpicon = 22;}
		else if(interiors[id][typeZ]==4){tmpicon = 19;}
		else if(interiors[id][typeZ]==5){tmpicon = 52;}
		else if(interiors[id][typeZ]==6){tmpicon = 36;}
		else if(interiors[id][typeZ]==7){tmpicon = 21;}
	    if(tmpicon != 0)
			{interior_Icon[id] = CreateDynamicMapIcon(interiors[id][pos][0],interiors[id][pos][1],interiors[id][pos][2],tmpicon,COLOR_WHITE,-1,-1,-1,500.0);}

	    format(string,sizeof(string),"[%s - %s]\n{FFFFFF}Touche 'F'",GetInteriorName(interiors[id][typeZ]),GetCityName(interiors[id][city]));
		interior_Pickup[id] = CreateDynamicPickup(1318, 1, interiors[id][pos][0],interiors[id][pos][1],interiors[id][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
	    interior_Label[id] = CreateDynamic3DTextLabel(string,INT_LABEL_COLOR, interiors[id][pos][0],interiors[id][pos][1],interiors[id][pos][2],10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
        for(new i=0; i<3; i++)
		{
			new Float:x1,Float:y1,Float:z1,Float:a1, skinb,stepb;
			interior_GetActorInfos(interiors[id][typeZ], x1, y1, z1, a1, skinb, i, stepb);
			if(stepb != -1)
				{interiors[id][actorId][i] = CreateDynamicLvrpActor(skinb, x1, y1, z1, a1, id+1, true, 2, interiors[id][typeZ],"(( Touche 'N' ))");}
		}
	}
	return 1;
}

stock dealerShip_Update(id)
{
    new string[64];
    if(IsValidDynamic3DTextLabel(dealerShip_Label[id]))
		{DestroyDynamic3DTextLabel(dealerShip_Label[id]);}
    if(IsValidDynamicPickup(dealerShip_Pickup[id]))
		{DestroyDynamicPickup(dealerShip_Pickup[id]);}
    if(IsValidDynamicMapIcon(dealerShip_Icon[id]))
	    {DestroyDynamicMapIcon(dealerShip_Icon[id]);}

    if(dealerShip[id][used] == 1)
	{
		format(string,sizeof(string),"[Concession %s - %s]\n{FFFFFF}Touche 'N'",GetDealerShipName(dealerShip[id][typeZ]),GetCityName(dealerShip[id][city]));
		dealerShip_Pickup[id] = CreateDynamicPickup(1239, 1, dealerShip[id][pos][0],dealerShip[id][pos][1],dealerShip[id][pos][2],0,0,-1,PICKUP_STREAM_DISTANCE);
		dealerShip_Label[id] = CreateDynamic3DTextLabel(string,0x4C0B5FEE, dealerShip[id][pos][0],dealerShip[id][pos][1],dealerShip[id][pos][2]+0.5,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
	    dealerShip_Icon[id] = CreateDynamicMapIcon(dealerShip[id][pos][0],dealerShip[id][pos][1],dealerShip[id][pos][2],16,COLOR_WHITE,-1,-1,-1,500.0);
	}
	return 1;
}

stock car_ShowDialogTrunk(playerid,carid)
{
    new string[512];
    new Float:armure = vehicle[carid][cArmour];
	DeletePVar(playerid,"trunk_ItemSlot");
	format(string,sizeof(string),"{FFFFFF}- Déposer un objet ...\n- Retirer un objet ...\n- Déposer une arme ...\n- Retirer une arme ...\n- Déposer de l'argent (Max: {00FF00}$%d{FFFFFF})\n- Retirer de l'argent (Max: {00FF00}$%d{FFFFFF})\n- Déposer du gilet par balles (Max: {00FF00}%0.0f{FFFFFF})\n- Retirer du gilet par balles (Max: {00FF00}%0.0f{FFFFFF})"
	,PlayerInfo[playerid][pCash],vehicle[carid][cCash],PlayerInfo[playerid][pArmour],armure);
	ShowPlayerDialog(playerid,95,DIALOG_STYLE_LIST, "{8BE2E2}» Véhicule «{FFFFFF} Gestion", string, "Valider", "Quitter");
	car_DialogSafe[playerid] = 0;
	return 1;
}

stock bin_ShowDialog(playerid,binid)
{
    DeletePVar(playerid,"bin_ItemSlot");
    ShowPlayerDialog(playerid,138,DIALOG_STYLE_LIST,"{00FFA0}» Poubelle «{FFFFFF}","{FFFFFF}- Jeter un objet ..\n- Jeter une arme\n- Fouiller la poubelle ..","Valider","Annuler");
	player_Dialog[playerid] = 0;
	player_Variable[playerid] = binid;
	return 1;
}

forward dealerShip_ShowDialog(playerid,dealerId);
public dealerShip_ShowDialog(playerid,dealerId)
{
	new string[2048]="{FFFFFF}Modèle\t{FFFFFF}Prix\n";
    new tmpRow = 0;
	cache_get_row_count(tmpRow);
    
    new tmpstring[44],ifx = 0;
	for(new i=0;i<tmpRow; i++)
	{
	    new tmpPrice = 0;
	    if(cache_get_value_name_int(i,"Price", tmpPrice) && tmpPrice != 0)
	    {
	        new tmpModel = 0;
	        cache_get_value_name_int(i,"Model", tmpModel);
	        cache_get_value_name_int(i,"Price", tmpPrice);
			format(tmpstring,sizeof(tmpstring),"%s\t$%d\n",vehName[tmpModel - 400], tmpPrice);
			strins(string,tmpstring,strlen(string),sizeof(string));
			cache_get_value_name_int(i, "id", gps_Id[playerid][ifx]);
			ifx++;
		}
	}
	ShowPlayerDialog(playerid,25,DIALOG_STYLE_TABLIST_HEADERS,"» Concession « Achat",string,"Valider","Annuler");
    player_Dialog[playerid]=0;
	return 1;
}

stock house_ShowDialogSafe(playerid,id)
{
	new string[256];
	DeletePVar(playerid,"house_ItemSlot");
	player_Dialog[playerid]=0;
	format(string,sizeof(string),"{FFFFFF}- Déposer un objet ..\n- Déposer un arme ..\n- Retirer un objet ou une arme ..\n- Déposer de l'argent ($%d)\n- Retirer de l'argent ($%d)\n- Déposer du gilet par balles (%0.0f)\n- Retirer du gilet par balles (%0.0f)",
	PlayerInfo[playerid][pCash],house[id][cash],PlayerInfo[playerid][pArmour],house[id][armour]);
	ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Coffre",string,"Valider","Quitter");
	return 1;
}

stock house_Gestion(playerid,id)
{
	new string[256],gat[20],rent[20],insuranceZ[32]="Aucune", sDesc[8];
	
	if(house[id][lock]==0)
		{gat="Ouverte";}
	else
		{gat="Fermée";}
	
	if(house[id][rentState]==0)
		{rent="Desactivée";}
	else
		{rent="Activée";}
		
	if(house[id][showDesc] == 0)
	    {sDesc="Non";}
	else
	    {sDesc="Oui";}
	
	if(house[id][insurance]==0)
		{insuranceZ="Aucune";}
	else if(house[id][insurance]==1)
		{insuranceZ="25% de remise";}
	else if(house[id][insurance]==2)
		{insuranceZ="50% de remise";}
	else if(house[id][insurance]==3)
		{insuranceZ="75% de remise";}
		
	format(string,sizeof(string),"{FFFFFF}Porte\t%s\nLocation\t%s\nPrix location\t$%d\nMax locataires\t%d\nRetirer l'argent de la location\t$%d\nAssurance\t%s\nVirer des locataires\nDescription\t%s\nAfficher la description\t%s",gat,rent,house[id][rentPrice],house[id][rentMax],house[id][talking],insuranceZ,house[id][description],sDesc);
	ShowPlayerDialog(playerid,130,DIALOG_STYLE_TABLIST,"{00C600}» Maison «{FFFFFF} Gestion",string,"Valider","Quitter");
	player_Dialog[playerid]=0;
	return 1;
}

stock house_AdminEdit(playerid)
{
    new string[128];
    format(string,sizeof(string),"Sauvegarder la nouvelle position\nChanger Le type d'interieur\nChanger le prix d'achat\nChanger Le propriétaire");
	ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"» Admin « Edition d'une maison",string,"Valider","Quitter");
	player_Dialog[playerid]=1;
	return 1;
}

stock gate_Dialog(playerid)
{
	new own[32], acti[32];
	
 	switch(gate[player_Variable[playerid]][typeZ])
 	{
 	    case 0: own="Joueur";
 	    case 1: own="Faction";
 	    case 2: own="Job";
 	    case 3: own="Public";
 	}
 	
 	switch(gate[player_Variable[playerid]][action])
 	{
 	    case 0: acti="Mot de passe";
 	    case 1: acti="Touche H";
 	    case 2: acti="Touche N";
 	    case 3: acti="Touche Y";
 	    case 4: acti="Touche C";
 	}
	
    new string[256];
    format(string,sizeof(string),"{FFFFFF}- Position fermée\n- Position ouverte\n- Model [%d]\n- Propriétaire [%s]\n- Action [%s]\n- Mot de passe\n- Timer\n- Distance [%0.1f]",gate[player_Variable[playerid]][model],own,acti,gate[player_Variable[playerid]][distanceZ]);
	ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"» Admin « Edition d'une porte",string,"Valider","Quitter");
	player_Dialog[playerid]=1;
	return 1;
}

stock gate_Check(playerid,act, passw[])
{
	new gateId=-1, bool:move=false;
	for(new i=0; i<totalGates; i++)
	{
	    if(gate[i][used] == true && gate[i][action] == act && IsPlayerInRangeOfPoint(playerid,gate[i][distanceZ],gate[i][pos][0],gate[i][pos][1],gate[i][pos][2]))
	    	{gateId=i; break;}
	}
	if(gateId == -1)
	    {return 1;}
	    
	switch(gate[gateId][typeZ])
	{
	    case 0:
	    	{if(strcmp(gate[gateId][description],passw, false ) == 0) move=true;}
		case 1:
		{
		    if((PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4) && gate[gateId][variable] == 1) move=true;
		    else if((PlayerInfo[playerid][pMember] == 5) && gate[gateId][variable] == 2) move=true;
		    else if((PlayerInfo[playerid][pMember] >= 6 && PlayerInfo[playerid][pMember] <= 9) && gate[gateId][variable] == 3) move=true;
		    else if((PlayerInfo[playerid][pMember] == 10) && gate[gateId][variable] == 4) move=true;
		    else if((PlayerInfo[playerid][pMember] >= 200) && gate[gateId][variable] == PlayerInfo[playerid][pMember]) move=true;
		}
		case 2:
		{
		    if(PlayerInfo[playerid][pJob] == gate[gateId][variable]) move=true;
		}
		case 3:
			{move=true;}
	}
	
	if(move == true)
	{
	    if(gate[gateId][useTimer] > 0)
	        {MoveDynamicObject(gate_Object[gateId],gate[gateId][pos][6],gate[gateId][pos][7],gate[gateId][pos][8],2.0,gate[gateId][pos][9],gate[gateId][pos][10],gate[gateId][pos][11]); SetTimerEx("gate_Close",gate[gateId][useTimer]*1000,false,"i",gateId);}
		else
		{
		    if(gate_Statut[gateId] == false) // Fermée
		    	{MoveDynamicObject(gate_Object[gateId],gate[gateId][pos][6],gate[gateId][pos][7],gate[gateId][pos][8],2.0,gate[gateId][pos][9],gate[gateId][pos][10],gate[gateId][pos][11]); gate_Statut[gateId]=true;}
			else
			    {MoveDynamicObject(gate_Object[gateId],gate[gateId][pos][0],gate[gateId][pos][1],gate[gateId][pos][2],2.0,gate[gateId][pos][3],gate[gateId][pos][4],gate[gateId][pos][5]); gate_Statut[gateId]=false;}
		}
	}
	return 1;
}

forward gate_Close(gateId);
public gate_Close(gateId)
{
    MoveDynamicObject(gate_Object[gateId],gate[gateId][pos][0],gate[gateId][pos][1],gate[gateId][pos][2],2.0,gate[gateId][pos][3],gate[gateId][pos][4],gate[gateId][pos][5]);
	return 1;
}

stock sannews_Gestion(playerid)
{
	new string[256];
	format(string,sizeof(string),"Déposer de l'argent ($%d)\nRetirer de l'argent ($%d)\nPrix SMS ($%d)\nRang 1 (%s)\nRang 2 (%s)\nRang 3 (%s)\nRang 4 (%s)\nRang 5 (%s)\nRang 6 (%s)",
	PlayerInfo[playerid][pCash],sanNews[abc_Cash],sanNews[abc_SMS],sanNews[rank1],sanNews[rank2],sanNews[rank3],sanNews[rank4],sanNews[rank5],sanNews[rank6]);
	ShowPlayerDialog(playerid,29,DIALOG_STYLE_LIST,"{00673A}» San News «{FFFFFF} Gestion",string,"Valider","Quitter");
    sannews_DialogGestion[playerid]=0;
	return 1;
}

stock police_Gestion(playerid)
{
    new string[512],
		id = PlayerInfo[playerid][pMember]-1;
	format(string,sizeof(string),"{FFFFFF}Rang 1\t%s\nRang 2\t%s\nRang 3\t%s\nRang 4\t%s\nRang 5\t%s\nRang 6\t%s\nRang 7\t%s\nRang 8\t%s\nSkin R1\t%d\nSkin R2\t%d\nSkin R3\t%d\nSkin R4\t%d\nSkin R5\t%d\nSkin R6\t%d\nSkin R7\t%d\nSkin R8\t%d\nGestion Amendes\nEntré faction\nSortie faction\nSpawn Faction\n[Service]\n[Equipement]",
	police[id][rank1],police[id][rank2],police[id][rank3],police[id][rank4],police[id][rank5],police[id][rank6],police[id][rank7],police[id][rank8],police[id][skin][0],police[id][skin][1],police[id][skin][2],police[id][skin][3],police[id][skin][4],police[id][skin][5],police[id][skin][6],police[id][skin][7]);
	ShowPlayerDialog(playerid,36,DIALOG_STYLE_TABLIST,"{007AFF}» Police «{FFFFFF} Gestion",string,"Valider","Quitter");
    player_Dialog[playerid]=0;
	return 1;
}

stock police_Jail(playerid,id)
{
	switch(id)
	{
	    case 0:
	        {SafeSetPlayerPos(playerid,264.6288,77.5742,1001.0391);}
        case 1:
	        {SafeSetPlayerPos(playerid,-1574.0242,714.5842,10.1050);}
		case 2:
	        {SafeSetPlayerPos(playerid,217.0286,72.9757,1105.6499);}
	}
	server_SetPlayerInterior(playerid, police[id][interior]);
	server_SetPlayerVirtualWorld(playerid, 0);
	TogglePlayerControllable(playerid,false);
	SetTimerEx("chargement",3000,0,"i",playerid);
	return 1;
}

stock police_TempJail(playerid)
{
	new rand = random(4);
	switch(rand)
	{
	    case 0: SafeSetPlayerPos(playerid,218.3962,68.4960,1105.6499);
	    case 1: SafeSetPlayerPos(playerid,218.3988,73.9284,1105.6499);
	    default: SafeSetPlayerPos(playerid,218.3962,68.4960,1105.6499);
	}
	server_SetPlayerInterior(playerid, police[0][interior]);
	server_SetPlayerVirtualWorld(playerid, 0);
	TogglePlayerControllable(playerid,false);
	SetTimerEx("chargement",3000,0,"i",playerid);
	return 1;
}

stock police_FineGestion(playerid)
{
    new tmpstring[64],finestring[1024],string[512],ifx=1;
	for(new fines=0;fines<totalFines; fines++)
	{
		if(fine[fines][used] == true && fine[fines][city] == PlayerInfo[playerid][pMember])
		{
			format(tmpstring,sizeof(tmpstring),"- %s ($%d)",fine[fines][tmpName],fine[fines][price]);
			strins(finestring,tmpstring,strlen(finestring),sizeof(finestring));
			strins(finestring,"\n",strlen(finestring),sizeof(finestring));
			police_GestionCheckFineId[playerid][ifx]=fines;
			ifx++;
		}
	}
	format(string,sizeof(string),"{FFFFFF}[+] Créer une amende\n%s",finestring);
	ShowPlayerDialog(playerid,36,DIALOG_STYLE_LIST,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
	player_Dialog[playerid]=50;
	return 1;
}

stock prison_Jail(playerid,id)
{
	switch(id)
	{
	    case 0:
	        {SafeSetPlayerPos(playerid,2590.2520, -1504.2607, -49.8930);} // Célulle 1
        case 1:
	        {SafeSetPlayerPos(playerid,2590.3604, -1506.3220, -49.8930);} // Célulle 2
		case 2:
	        {SafeSetPlayerPos(playerid,2590.9302, -1511.4447, -49.8930);} // Célulle 3
  	    case 3:
	        {SafeSetPlayerPos(playerid,2590.8438, -1513.8705, -49.8930);} // Célulle 4
        case 4:
	        {SafeSetPlayerPos(playerid,2590.2910, -1517.4570, -49.8930);} // Célulle 5
		case 5:
	        {SafeSetPlayerPos(playerid,2586.7673, -1524.8632, -49.8930);} // Célulle 6
  	    case 6:
	        {SafeSetPlayerPos(playerid,2585.0508, -1523.5765, -49.8930);} // Célulle 7
        case 7:
	        {SafeSetPlayerPos(playerid,2581.2700, -1523.6311, -49.8930);} // Célulle 8
		case 8:
	        {SafeSetPlayerPos(playerid,2588.8613, -1527.6036, -46.0280);} // Célulle 9
  	    case 9:
	        {SafeSetPlayerPos(playerid,2583.2314, -1526.4509, -46.0280);} // Célulle 10
        case 10:
	        {SafeSetPlayerPos(playerid,2579.7151, -1528.2705, -46.0280);} // Célulle 11
		case 11:
	        {SafeSetPlayerPos(playerid,2575.0469, -1517.7174, -49.8200);} // Célulle 12
  		case 12:
	        {SafeSetPlayerPos(playerid,2575.9563, -1514.5687, -49.8200);} // Célulle 13
  	    case 13:
	        {SafeSetPlayerPos(playerid,2576.0649, -1510.6128, -49.8200);} // Célulle 14
        case 14:
	        {SafeSetPlayerPos(playerid,2575.8926, -1507.0045, -49.8200);} // Célulle 15
		case 15:
	        {SafeSetPlayerPos(playerid,2575.8589, -1501.3562, -49.8200);} // Célulle 16
	}
	server_SetPlayerInterior(playerid, police[id][interior]);
	server_SetPlayerVirtualWorld(playerid, 0);
	TogglePlayerControllable(playerid,false);
	SetTimerEx("chargement",3000,0,"i",playerid);
	return 1;
}

stock fbi_Gestion(playerid)
{
    new string[512];
	format(string,sizeof(string),"Rang 1 (%s)\nRang 2 (%s)\nRang 3 (%s)\nRang 4 (%s)\nRang 5 (%s)\nRang 6 (%s)\nRang 7 (%s)\nSkin R1 (%d)\n\nSkin R2 (%d)\nSkin R3 (%d)\nSkin R4 (%d)\nSkin R5 (%d)\nSkin R6 (%d)\nSkin R7 (%d)\nSpawn Faction\nEntré faction\nSortie faction",
	FBIInfo[rank1],FBIInfo[rank2],FBIInfo[rank3],FBIInfo[rank4],FBIInfo[rank5],FBIInfo[rank6],FBIInfo[rank7],FBIInfo[skin][0],FBIInfo[skin][1],FBIInfo[skin][2],FBIInfo[skin][3],FBIInfo[skin][4],FBIInfo[skin][5],FBIInfo[skin][6]);
	ShowPlayerDialog(playerid,39,DIALOG_STYLE_LIST,"|FBI| Gestion",string,"Valider","Quitter");
    player_Dialog[playerid]=0;
	return 1;
}

stock governement_Gestion(playerid)
{
    new string[512],
        id = PlayerInfo[playerid][pMember]-6;
    if(5 < id+6 < 9) // LS - SF - LV
	{
		format(string,sizeof(string),"{FFFFFF}- Rang 1 (%s)\n- Rang 2 (%s)\n- Rang 3 (%s)\n- Rang 4 (%s)\n- Rang 5 (%s)\n- Rang 6 (%s)\n- Skin R1 (%d)\n- Skin R2 (%d)\n- Skin R3 (%d)\n- Skin R4 (%d)\n- Skin R5 (%d)\n- Skin R6 (%d)\n- Prix des permis\n- Salaires\n- Taxes\n- Entré faction\n- Sortie faction\n- Spawn Faction\n- [Service]\n- [Equipement]\n- [Achats]\n- [Edition Stats]",
		governement[id][rank1],governement[id][rank2],governement[id][rank3],governement[id][rank4],governement[id][rank5],governement[id][rank6],governement[id][skin][0],governement[id][skin][1],governement[id][skin][2],governement[id][skin][3],governement[id][skin][4],governement[id][skin][5]);
	}
	else // SA
	{
	    format(string,sizeof(string),"{FFFFFF}- Rang 1 (%s)\n- Rang 2 (%s)\n- Rang 3 (%s)\n- Rang 4 (%s)\n- Rang 5 (%s)\n- Rang 6 (%s)\n- Skin R1 (%d)\n- Skin R2 (%d)\n- Skin R3 (%d)\n- Skin R4 (%d)\n- Skin R5 (%d)\n- Skin R6 (%d)\n- Ticket péage ($%d)\n- Salaires\n\n- Entré faction\n- Sortie faction\n- Spawn Faction",
		governement[id][rank1],governement[id][rank2],governement[id][rank3],governement[id][rank4],governement[id][rank5],governement[id][rank6],governement[id][skin][0],governement[id][skin][1],governement[id][skin][2],governement[id][skin][3],governement[id][skin][4],governement[id][skin][5],governement[id][ticket]);
	}
	
	ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion",string,"Valider","Quitter");
    gouv_DialogGestion[playerid]=0;
	return 1;
}

stock fire_Gestion(playerid)
{
    new string[512];
	format(string,sizeof(string),"Rang 1 (%s)\nRang 2 (%s)\nRang 3 (%s)\nRang 4 (%s)\nRang 5 (%s)\nRang 6 (%s)\nSkin R1 (%d)\n\nSkin R2 (%d)\nSkin R3 (%d)\nSkin R4 (%d)\nSkin R5 (%d)\nSkin R6 (%d)\nEntré faction\nSortie faction\nSpawn Faction\n[Service]\n[Equipement]\n[Sonnette]",
	FireInfo[rank1],FireInfo[rank2],FireInfo[rank3],FireInfo[rank4],FireInfo[rank5],FireInfo[rank6],FireInfo[skin][0],FireInfo[skin][1],FireInfo[skin][2],FireInfo[skin][3],FireInfo[skin][4],FireInfo[skin][5]);
	ShowPlayerDialog(playerid,50,DIALOG_STYLE_LIST,"{C7006C}» Pompier «{FFFFFF} Gestion",string,"Valider","Quitter");
    fire_DialogGestion[playerid]=0;
	return 1;
}

stock biker_Gestion(playerid)
{
    new string[512];
	format(string,sizeof(string),"Rang 1 (%s)\nRang 2 (%s)\nRang 3 (%s)\nRang 4 (%s)\nRang 5 (%s)\nRang 6 (%s)\nSkin R1 (%d)\n\nSkin R2 (%d)\nSkin R3 (%d)\nSkin R4 (%d)\nSkin R5 (%d)\nSkin R6 (%d)\nEntré faction\nSortie faction\nSpawn Faction",
	BikerInfo[rank1],BikerInfo[rank2],BikerInfo[rank3],BikerInfo[rank4],BikerInfo[rank5],BikerInfo[rank6],BikerInfo[skin][0],BikerInfo[skin][1],BikerInfo[skin][2],BikerInfo[skin][3],BikerInfo[skin][4],BikerInfo[skin][5]);
	ShowPlayerDialog(playerid,141,DIALOG_STYLE_LIST,"{140073}» Biker'z «{FFFFFF} Gestion",string,"Valider","Quitter");
    biker_DialogGestion[playerid]=0;
	return 1;
}

stock mecano_Gestion(playerid)
{
    new string[512];
	format(string,sizeof(string),"Rang 1 (%s)\nRang 2 (%s)\nRang 3 (%s)\nRang 4 (%s)\nRang 5 (%s)\nRang 6 (%s)\nSkin R1 (%d)\n\nSkin R2 (%d)\nSkin R3 (%d)\nSkin R4 (%d)\nSkin R5 (%d)\nSkin R6 (%d)\nEntré faction\nSortie faction\nSpawn Faction\n[Service]\n[Sonnette]",
	MecanoInfo[rank1],MecanoInfo[rank2],MecanoInfo[rank3],MecanoInfo[rank4],MecanoInfo[rank5],MecanoInfo[rank6],MecanoInfo[skin][0],MecanoInfo[skin][1],MecanoInfo[skin][2],MecanoInfo[skin][3],MecanoInfo[skin][4],MecanoInfo[skin][5]);
	ShowPlayerDialog(playerid,57,DIALOG_STYLE_LIST,"{C7006C}» Pompier «{FFFFFF} Gestion",string,"Valider","Quitter");
    mecano_DialogGestion[playerid]=0;
	return 1;
}
/*
stock ChangeNameOfPlayer(playerid, nvname[])
{
 	SetPlayerName(playerid,nvname);
 	for(new biz = 0; biz<totalBizz; biz++)
 	{
		if(strcmp(bizz[biz][owner],PlayerInfo[playerid][pRealName],true) == 0)
			{strmid(bizz[biz][owner], nvname, 0, strlen(nvname), 255); bizz_Save(biz); bizz_UpdateInfos(biz);}
 	}
 	for(new gar = 0; gar<totalGarages; gar++)
 	{
		if(strcmp(garage[gar][owner],PlayerInfo[playerid][pRealName],true) == 0)
			{strmid(garage[gar][owner], nvname, 0, strlen(nvname), 32); garage_Save(gar); garage_UpdateInfos(gar);}
 	}
 	for(new ubiz = 0; ubiz<MAX_SBIZZ; ubiz++)
 	{
		if(strcmp(sbizz[ubiz][ubOwner],PlayerInfo[playerid][pRealName],true) == 0)
			{strmid(sbizz[ubiz][ubOwner], nvname, 0, strlen(nvname), 255); uniquebizz_Save(ubiz); uniquebizz_UpdateInfos(ubiz);}
 	}
 	for(new ma = 0; ma<totalHouses; ma++)
 	{
		if(strcmp(house[ma][owner],PlayerInfo[playerid][pRealName],true) == 0)
			{strmid(house[ma][owner], nvname, 0, strlen(nvname), 255); house_Save(ma); house_UpdateInfos(ma);}
 	}
    MySQLUpdatePlayerCharSingle(PlayerInfo[playerid][pSQLID],"Name",nvname);
	format(sql, sizeof(sql), "UPDATE lvrp_site_news SET Autor='%s' WHERE Autor='%s'", nvname, PlayerInfo[playerid][pRealName]);
	mysql_pquery(MYSQL,sql);
	
	format(sql, sizeof(sql), "SELECT * FROM lvrp_users_casiers WHERE SQLid=%d", PlayerInfo[playerid][pSQLID]);
	mysql_query(MYSQL,sql);
	new count = 0;
	if(cache_get_row_count(count) && count > 0)
	{
		format(sql, sizeof(sql), "DELETE FROM lvrp_users_casiers WHERE SQLid = %d",PlayerInfo[playerid][pSQLID]);
		mysql_pquery(MYSQL,sql);
	}
	
	format(sql,sizeof(sql),"INSERT INTO lvrp_log_renames (SQLid,NewName,LastName,Date,Ip)  VALUES (%d,'%s','%s',UNIX_TIMESTAMP(),'%s')",PlayerInfo[playerid][pSQLID],nvname,PlayerInfo[playerid][pRealName],PlayerInfo[playerid][pIP]);
	mysql_pquery(MYSQL,sql);
    if(setting[inscription]==false)
	{
	    // Version IPB v4.0
	    format(sql, sizeof(sql), "UPDATE forum_members SET name='%s' WHERE name='%s'", nvname, PlayerInfo[playerid][pRealName]);
		mysql_pquery(MYSQL,sql);
	 	// Version FluxBB
		format(sql, sizeof(sql), "UPDATE fluxbb_users SET username='%s' WHERE username='%s'", nvname, PlayerInfo[playerid][pRealName]);
		mysql_query(MYSQL,sql);
		format(sql, sizeof(sql), "UPDATE fluxbb_posts SET poster='%s' WHERE poster='%s'", nvname, PlayerInfo[playerid][pRealName]);
		mysql_query(MYSQL,sql);
		format(sql, sizeof(sql), "UPDATE fluxbb_topics SET poster='%s' WHERE poster='%s'", nvname, PlayerInfo[playerid][pRealName]);
		mysql_query(MYSQL,sql);
		format(sql, sizeof(sql), "UPDATE fluxbb_topics SET poster='%s' WHERE poster='%s'", nvname, PlayerInfo[playerid][pRealName]);
		mysql_query(MYSQL,sql);

	}
	strmid(PlayerInfo[playerid][pName], nvname, 0, strlen(nvname), MAX_PLAYER_NAME+1);
	strmid(PlayerInfo[playerid][pRealName], nvname, 0, strlen(nvname), MAX_PLAYER_NAME+1);
	return 1;
}*/

stock car_ChangeOffLineOwner(carid)
{
	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
	        if(PlayerInfo[i][pCar][0]==vehicle[carid][SQLID])PlayerInfo[i][pCar][0]=-1;
	        else if(PlayerInfo[i][pCar][1]==vehicle[carid][SQLID])PlayerInfo[i][pCar][1]=-1;
	        else if(PlayerInfo[i][pCar][2]==vehicle[carid][SQLID])PlayerInfo[i][pCar][2]=-1;
	        else if(PlayerInfo[i][pCar][3]==vehicle[carid][SQLID])PlayerInfo[i][pCar][3]=-1;
	        else if(PlayerInfo[i][pCar][4]==vehicle[carid][SQLID])PlayerInfo[i][pCar][4]=-1;
	        else if(PlayerInfo[i][pCar][5]==vehicle[carid][SQLID])PlayerInfo[i][pCar][5]=-1;
	        return 1;
	    }
	}
  	format(sql, sizeof(sql), "SELECT * FROM lvrp_users WHERE Name = '%s' LIMIT 1",vehicle[carid][cOwner]);
  	mysql_query(MYSQL,sql);
  	new count = 0;
	if(cache_get_row_count(count) && count > 0)
	{
		new car = cache_get_value_name_int(0,"Car1", car);
	    if(car == carid)
		{
		    format(sql, sizeof(sql), "UPDATE lvrp_users SET Car1 = -1 WHERE Name='%s'",vehicle[carid][cOwner]);
  			mysql_query(MYSQL,sql);
		}
		car = cache_get_value_name_int(0,"Car2", car);
	    if(car == carid)
	    {
	        format(sql, sizeof(sql), "UPDATE lvrp_users SET Car2 = -1 WHERE Name='%s'",vehicle[carid][cOwner]);
  			mysql_query(MYSQL,sql);
	    }
	    car = cache_get_value_name_int(0,"Car3", car);
	    if(car == carid)
	    {
	        format(sql, sizeof(sql), "UPDATE lvrp_users SET Car3 = -1 WHERE Name='%s'",vehicle[carid][cOwner]);
  			mysql_query(MYSQL,sql);
	    }
	    car = cache_get_value_name_int(0,"Car4", car);
     	if(car == carid)
	    {
	        format(sql, sizeof(sql), "UPDATE lvrp_users SET Car4 = -1 WHERE Name='%s'",vehicle[carid][cOwner]);
  			mysql_query(MYSQL,sql);
	    }
	    car = cache_get_value_name_int(0,"Car5", car);
	    if(car == carid)
	    {
	        format(sql, sizeof(sql), "UPDATE lvrp_users SET Car5 = -1 WHERE Name='%s'",vehicle[carid][cOwner]);
  			mysql_query(MYSQL,sql);
	    }
	    car = cache_get_value_name_int(0,"Car6", car);
	    if(car == carid)
	    {
	        format(sql, sizeof(sql), "UPDATE lvrp_users SET Car6 = -1 WHERE Name='%s'",vehicle[carid][cOwner]);
  			mysql_query(MYSQL,sql);
	    }
	}
	return 1;
}

stock vehicle_Transfer(oldcar,newcar)
{
	printf("Old: %d - New: %d",oldcar,newcar);
	if(newcar == oldcar)
	    {return 1;}
	vehicle[newcar][used]=1;
	vehicle[newcar][cModel]=vehicle[oldcar][cModel];
	vehicle[newcar][cLocationx]=vehicle[oldcar][cLocationx];
	vehicle[newcar][cLocationy]=vehicle[oldcar][cLocationy];
	vehicle[newcar][cLocationz]=vehicle[oldcar][cLocationz];
	vehicle[newcar][cColorOne]=vehicle[oldcar][cColorOne];
	vehicle[newcar][cColorTwo]=vehicle[oldcar][cColorTwo];
	strmid(vehicle[newcar][cOwner],vehicle[oldcar][cOwner],0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
	strmid(vehicle[newcar][cDescription],vehicle[oldcar][cDescription],0,32,32);
	vehicle[newcar][cValue]=vehicle[oldcar][cValue];
	strmid(vehicle[newcar][cLicense],vehicle[oldcar][cLicense],0,14,14);
	vehicle[newcar][cOwned]=vehicle[oldcar][cOwned];
	vehicle[newcar][cLock]=vehicle[oldcar][cLock];
	vehicle[newcar][cStatut]=vehicle[oldcar][cStatut];
	vehicle[newcar][cType]=vehicle[oldcar][cType];
	vehicle[newcar][cInt]=vehicle[oldcar][cInt];
	vehicle[newcar][cVW]=vehicle[oldcar][cVW];
	vehicle[newcar][cArmour]=vehicle[oldcar][cArmour];
	vehicle[newcar][cCash]=vehicle[oldcar][cCash];
	vehicle[newcar][cNeon]=vehicle[oldcar][cNeon];
	vehicle[newcar][cRob]=vehicle[oldcar][cRob];
	vehicle[newcar][cGas]=vehicle[oldcar][cGas];
	vehicle[newcar][cBody]=vehicle[oldcar][cBody];
	vehicle[newcar][cHealth]=vehicle[oldcar][cHealth];
	vehicle[newcar][cMeter]=vehicle[oldcar][cMeter];
	vehicle[newcar][cKiloMeter]=vehicle[oldcar][cKiloMeter];
	vehicle[newcar][cRank]=vehicle[oldcar][cRank];
	vehicle[newcar][cJobCity]=vehicle[oldcar][cJobCity];
	vehicle[newcar][paintjob]=vehicle[oldcar][paintjob];
	strmid(vehicle[newcar][stream],vehicle[oldcar][stream],0,128,128);
	vehicle[newcar][tExhausts]=vehicle[oldcar][tExhausts];
	vehicle[newcar][tFrontBumper]=vehicle[oldcar][tFrontBumper];
	vehicle[newcar][tRearBumper]=vehicle[oldcar][tRearBumper];
	vehicle[newcar][tRoof]=vehicle[oldcar][tRoof];
	vehicle[newcar][tSpoilers]=vehicle[oldcar][tSpoilers];
	vehicle[newcar][tSideBumper]=vehicle[oldcar][tSideBumper];
	vehicle[newcar][tWheels]=vehicle[oldcar][tWheels];
	vehicle[newcar][tHydraulics]=vehicle[oldcar][tHydraulics];
	vehicle[newcar][tNitro]=vehicle[oldcar][tNitro];
	vehicle[newcar][tSideBumper2]=vehicle[oldcar][tSideBumper2];
	vehicle[newcar][cTires]=vehicle[oldcar][cTires];
	vehicle[newcar][cDoors]=vehicle[oldcar][cDoors];
	vehicle[newcar][cPanels]=vehicle[oldcar][cPanels];
	vehicle[newcar][cLights]=vehicle[oldcar][cLights];
	vehicle[newcar][SQLID]=vehicle[oldcar][SQLID];
	vehicle[newcar][ownerSQLID]=vehicle[oldcar][ownerSQLID];
	
	for(new i=0; i<15; i++)
	{
	    vehicle[newcar][cItemM][i]=vehicle[oldcar][cItemM][i];
	    vehicle[newcar][cItemQ][i]=vehicle[oldcar][cItemQ][i];
	    if(i<10)
	    {
	        vehicle[newcar][cWep][i]=vehicle[oldcar][cWep][i];
	    	vehicle[newcar][cAmmo][i]=vehicle[oldcar][cAmmo][i];
	    }
	}
	
	vehicle[oldcar][ownerSQLID]=-1;
	vehicle[oldcar][SQLID]=-1;
	vehicle[oldcar][used]=0;
	return 1;
}

stock car_Recreate(playerid,carid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:XX,Float:YY,Float:ZZ,Float:AA;
	    GetVehiclePos(carid,XX,YY,ZZ);
 		GetVehicleZAngle(carid, AA);
		
		DestroyVehicle(carid);
		new thiscar;
		if(vehicle[carid][cType] > 0 && vehicle[carid][cModel] < 10)
			{thiscar = CreateVehicle(vehicle[carid][cModel],XX,YY,ZZ+1.0,AA,vehicle[carid][cColorOne],vehicle[carid][cColorTwo],-1,1);}
		else
		    {thiscar = CreateVehicle(vehicle[carid][cModel],XX,YY,ZZ+1.0,AA,vehicle[carid][cColorOne],vehicle[carid][cColorTwo],-1);}
		vehicle_Transfer(carid,thiscar);
		tuning_Load(thiscar);
		SafeSetVehicleHealth(thiscar,vehicle[thiscar][cHealth]);
		UpdateVehicleDamageStatus(thiscar,vehicle[thiscar][cPanels],vehicle[thiscar][cDoors],vehicle[thiscar][cLights],vehicle[thiscar][cTires]);
		
		PutPlayerInVehicle(playerid,thiscar,0);
		if(vehicle[carid][cEngine])
		{
	    	new engine,lights,alarm,doors,bonnet,boot,objective;
         	GetVehicleParamsEx(thiscar,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(thiscar,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
			vehicle[thiscar][cEngine] = true;
		}
	}
	return 1;
}
public anime_Casque(playerid)
{
	if(player_GetSlotObject(playerid) != -1)
	{
	    casque[playerid] = 1;
	    TogglePlayerControllable(playerid,true);
	    HelmetSlotObject[playerid]=player_GetSlotObject(playerid);
    	new HelmetSkin = GetPlayerSkin(playerid);
	    if(inventory_GetItemQuantity(playerid,18645) > 0)
	        {SetPlayerAttachedObject(playerid, HelmetSlotObject[playerid],18645, 2, HelmetPos[HelmetSkin][0], HelmetPos[HelmetSkin][1], HelmetPos[HelmetSkin][2], HelmetPos[HelmetSkin][3], HelmetPos[HelmetSkin][4], HelmetPos[HelmetSkin][5]);}
        else if(inventory_GetItemQuantity(playerid,18976) > 0)
	        {SetPlayerAttachedObject(playerid, HelmetSlotObject[playerid],18976, 2, HelmetPos[HelmetSkin][0], HelmetPos[HelmetSkin][1], HelmetPos[HelmetSkin][2], HelmetPos[HelmetSkin][3], HelmetPos[HelmetSkin][4], HelmetPos[HelmetSkin][5]);}
        else if(inventory_GetItemQuantity(playerid,18977) > 0)
	        {SetPlayerAttachedObject(playerid, HelmetSlotObject[playerid],18977, 2, HelmetPos[HelmetSkin][0], HelmetPos[HelmetSkin][1], HelmetPos[HelmetSkin][2], HelmetPos[HelmetSkin][3], HelmetPos[HelmetSkin][4], HelmetPos[HelmetSkin][5]);}
        else if(inventory_GetItemQuantity(playerid,18978) > 0)
	        {SetPlayerAttachedObject(playerid, HelmetSlotObject[playerid],18978, 2, HelmetPos[HelmetSkin][0], HelmetPos[HelmetSkin][1], HelmetPos[HelmetSkin][2], HelmetPos[HelmetSkin][3], HelmetPos[HelmetSkin][4], HelmetPos[HelmetSkin][5]);}
        else if(inventory_GetItemQuantity(playerid,18979) > 0)
	        {SetPlayerAttachedObject(playerid, HelmetSlotObject[playerid],18979, 2, HelmetPos[HelmetSkin][0], HelmetPos[HelmetSkin][1], HelmetPos[HelmetSkin][2], HelmetPos[HelmetSkin][3], HelmetPos[HelmetSkin][4], HelmetPos[HelmetSkin][5]);}
    }
	return 1;
}

public SetPlayerSpawn(playerid)
{
    if(IsPlayerNPC(playerid))
		{return 1;}
    new string[256];
    if(gPlayerSpawn[playerid] == 1)
	{
	    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i) && i != playerid)
			{
			    if(gPlayerMask[i] != 0)
			        {ShowPlayerNameTagForPlayer(playerid, i, false);}
				else
				    {ShowPlayerNameTagForPlayer(playerid, i, true);}
			}
		}
	    //player_ID[playerid] = Create3DTextLabel("playerText", 0xFFFFFF99, 0, 0, 0, NAME_DISTANCE, -1, 0);
		//Attach3DTextLabelToPlayer(player_ID[playerid], playerid, 0, 0, 0.1);
	    //player_ID[playerid] = CreateDynamic3DTextLabel("playerText",0xFFFFFF99,0,0,0.1,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	}
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	    bag_Load(playerid);
		accessory_Load(playerid);
	    if(inscription_Step[playerid]==10 || PlayerInfo[playerid][pActive] == 1)
	    {
	        SafeSetPlayerPos(playerid,spawn[PlayerInfo[playerid][pCity]][pos][0],spawn[PlayerInfo[playerid][pCity]][pos][1],spawn[PlayerInfo[playerid][pCity]][pos][2]);
			format(string,sizeof(string),"[+] Nouveau arrivant : %s.",PlayerInfo[playerid][pRealName]);
	        msg_Admin(COLOR_GREY,string,1);
			server_SetPlayerInterior(playerid, 0);
			server_SetPlayerVirtualWorld(playerid,0);
			OnPlayerUpdateSQL(playerid);
   			SetCameraBehindPlayer(playerid);
			SafeResetPlayerWeapons(playerid);
			inscription_Step[playerid]=0;
			PlayerInfo[playerid][pActive]=2;
			ClearChatbox(playerid,10);
			format(string,sizeof(string),"{D1A400}» %s",SERVER_NAME);
			msg_Client(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "{FFFFFF}Bienvenue dans la ville de %s, %s",GetCityName(PlayerInfo[playerid][pCity]),PlayerInfo[playerid][pName]);
			msg_Client(playerid, COLOR_WHITE,string);
			msg_Client(playerid, COLOR_WHITE, "N'hésitez pas à utiliser /aide /question et /rapport");
			msg_Client(playerid, COLOR_WHITE, "La carte d'identité s'obtient à la Mairie.");
			return 1;
	    }
	    StopAudioStreamForPlayer(playerid);
		if(PlayerInfo[playerid][pJailed] == 1)
		{
		    server_SetPlayerInterior(playerid, 6);
			SafeSetPlayerPos(playerid,264.6288,77.5742,1001.0391);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("chargement",3000,0,"i",playerid);
		    TogglePlayerControllable(playerid, false);
			msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Votre peine de prison n'est pas terminée, retour en prison.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
            server_SetPlayerInterior(playerid, 0);
			SafeSetPlayerPos(playerid, 7282.990234375,-1521.5159912109,2.9969999790192);
			SetTimerEx("chargement",3000,0,"i",playerid);
		    TogglePlayerControllable(playerid, false);
			msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Votre peine de prison pour comportement NO RP n'est pas terminée, retour en prison.");
			ResetPlayerIntVar(playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 3)
		{
			police_TempJail(playerid);
			msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Votre garde à vue n'est pas terminée, retour en garde à vue.");
			return 1;
		}
		if(AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] > 0)
		{
		    SafeSetPlayerPos(playerid,1514.6956,-1674.7020,14.0469);
       		server_SetPlayerInterior(playerid, 0);
       		server_SetPlayerVirtualWorld(playerid, 0);
		    SafeSetPlayerArmour(playerid, 200);
			SafeSetPlayerHealth(playerid, 200);
			if(PlayerInfo[playerid][pSex] == 1)
				{SetPlayerSkin(playerid, 217);}
			else
				{SetPlayerSkin(playerid, 211);}
			SetPlayerColor(playerid, 0xFF000000);
			ResetPlayerIntVar(playerid);
			return 1;
		}
		new rand;
		if(medic_PlayerNeedMedic[playerid] == 2)
		{
			PlayerInfo[playerid][pDeaths] += 1;
			SafeSetPlayerHealth(playerid, 100.0);
			gPlayerInInterior[playerid] = medic_PlayerCity[playerid];
		 	server_SetPlayerInterior(playerid, interiors[medic_PlayerCity[playerid]][interior]);
		 	server_SetPlayerVirtualWorld(playerid, medic_PlayerCity[playerid]+1);
	        rand = random(sizeof(gServerMedicspawns));
			SafeSetPlayerPos(playerid, gServerMedicspawns[rand][0], gServerMedicspawns[rand][1], gServerMedicspawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gServerMedicspawns[rand][3]);
			TogglePlayerControllable(playerid, false);
	        GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Veuillez patienter...", MEDIC_TIME*1000, 3);
	        ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
	        return 1;
		}
		if(medic_PlayerNeedMedic[playerid] == 3)
		{
		    new cut = 100; //PlayerInfo[playerid][pLevel]*deathcost;
			if(PlayerInfo[playerid][pLevel] >= 5){cut = 175;}
    		else{cut = PlayerInfo[playerid][pLevel]*35;}

			format(string, sizeof(string), "» Docteur « {FFFFFF}Votre facture d'hôpital est de $%d. Bonne journée !", cut);
			msg_Client(playerid, COLOR_LIGHTBLUE, string);
			TogglePlayerControllable(playerid, 1);
		    SafeGivePlayerMoney(playerid, -cut,"Facture hopital");
		    medic_PlayerNeedMedic[playerid]=0;
		    medic_PlayerMedicTime[playerid]=0;
		    SafeSetPlayerHealth(playerid, 100.0);
		    server_SetPlayerVirtualWorld(playerid, 0);
		    SafeSetPlayerPos(playerid, interiors[medic_PlayerCity[playerid]][pos][0],interiors[medic_PlayerCity[playerid]][pos][1],interiors[medic_PlayerCity[playerid]][pos][2]);
		    SetPlayerFacingAngle(playerid, interiors[medic_PlayerCity[playerid]][pos][3]);
		    gPlayerInInterior[playerid] = -1;
		    SetCameraBehindPlayer(playerid);
		    medic_PlayerCity[playerid]=-1;
		    server_SetPlayerInterior(playerid,0);
		    server_SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pFaim] = 100;
			PlayerInfo[playerid][pSoif] = 100;
			PlayerInfo[playerid][pDisease] = 0;
			PlayerInfo[playerid][pWanted] = 0;
			SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
			UpdateStatsTextsPlayers(playerid,1);
			UpdateStatsTextsPlayers(playerid,2);
			ResetPlayerIntVar(playerid);
		    return 1;
		}
		if(PlayerInfo[playerid][pCrashed] == 1)
		{
		    if(gPlayerSpawn[playerid] == 1)
		    {
		        if(PlayerInfo[playerid][pDutyCrash]==1)
		            {police_Duty[playerid] = 1; PlayerInfo[playerid][pDutyCrash]=0;}
		        server_SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pVirWorld]);
		        server_SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
		    	SafeSetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1);
		    	msg_Client(playerid, COLOR_WHITE, "» Crash « Vous retournez à votre ancienne position.");
		    	format(string, sizeof(string), "~p~Crash~n~~w~Retour ou vous avez crash");
		    	GameTextForPlayer(playerid, string, 5000, 1);
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pSkinCrash]);
		    	PlayerInfo[playerid][pCrashed] = 0;
		    	PlayerInfo[playerid][pSkinCrash]=-1;
		    	SetTimerEx("chargement",3000,0,"i",playerid);
		    	TogglePlayerControllable(playerid, false);
		    	if (PlayerInfo[playerid][pGun1] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
					PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
				}
				if (PlayerInfo[playerid][pGun2] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
					PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
				}
				if (PlayerInfo[playerid][pGun3] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
					PlayerInfo[playerid][pGun3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
				}
				if (PlayerInfo[playerid][pGun4] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
					PlayerInfo[playerid][pGun4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
				}
		    	return 1;
			}
        }
        if(PlayerInfo[playerid][pSpawn]==1 && PlayerInfo[playerid][pMember] != 0) // Spawn faction
        {
            if (PlayerInfo[playerid][pMember] >=1 && PlayerInfo[playerid][pMember] <= 4)//Polices Départementales
			{
				server_SetPlayerInterior(playerid,police[PlayerInfo[playerid][pMember]-1][interior]);
				server_SetPlayerVirtualWorld(playerid,0); TogglePlayerControllable(playerid, false);
			    SafeSetPlayerPos(playerid, police[PlayerInfo[playerid][pMember]-1][pos][8],police[PlayerInfo[playerid][pMember]-1][pos][9],police[PlayerInfo[playerid][pMember]-1][pos][10]);
				SetPlayerFacingAngle(playerid, police[PlayerInfo[playerid][pMember]-1][pos][11]);
				SetTimerEx("chargement",4000,0,"i",playerid);
				return 1;
		    }
		    if (PlayerInfo[playerid][pMember] == 5)//FBI 
			{
				server_SetPlayerInterior(playerid,3);
				server_SetPlayerVirtualWorld(playerid,0);
				SafeSetPlayerPos(playerid, 299.7097,183.1322,1007.1719);
				SetPlayerFacingAngle(playerid, 90);
				return 1;
		    }
		    if (PlayerInfo[playerid][pMember] >=6 && PlayerInfo[playerid][pMember] <= 9)//Gouvernements
			{
			    server_SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pMember]-5);
				server_SetPlayerInterior(playerid,governement[PlayerInfo[playerid][pMember]-6][interior]);
			    SafeSetPlayerPos(playerid, governement[PlayerInfo[playerid][pMember]-6][pos][8],governement[PlayerInfo[playerid][pMember]-6][pos][9],governement[PlayerInfo[playerid][pMember]-6][pos][10]);
				SetPlayerFacingAngle(playerid, governement[PlayerInfo[playerid][pMember]-6][pos][11]);
				SetTimerEx("chargement",4000,0,"i",playerid);
				TogglePlayerControllable(playerid, false);
				return 1;
		    }
		    if (PlayerInfo[playerid][pMember] == 10) // L.A News Spawn
		    {
				SetPlayerPos(playerid, 1802.5034,-1292.7516,13.5085);
				server_SetPlayerInterior(playerid,0);
				server_SetPlayerVirtualWorld(playerid,0);
				SafeGivePlayerWeapon(playerid, 43, 50);
		        return 1;
		    }
		    if(PlayerInfo[playerid][pMember] >= 200 || PlayerInfo[playerid][pLeader] >= 200) // Gang - Mafia
		    {
		        new facID = PlayerInfo[playerid][pMember]-200;
		        if(FactionInfo[facID][fCreate] == 1)
			    {
			        SetTimerEx("chargement",3000,0,"i",playerid);
		    		TogglePlayerControllable(playerid, 0);
			    	server_SetPlayerVirtualWorld(playerid,0); server_SetPlayerInterior(playerid,0);
			    	SafeSetPlayerPos(playerid, FactionInfo[facID][fEntrance][0],FactionInfo[facID][fEntrance][1],FactionInfo[facID][fEntrance][2]);
			    	return 1;
			    }
			    else
				{
					msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} La faction ou vous étiez a été supprimé.");
					SafeSetPlayerPos(playerid,spawn[PlayerInfo[playerid][pCity]][pos][0],spawn[PlayerInfo[playerid][pCity]][pos][1],spawn[PlayerInfo[playerid][pCity]][pos][2]);
					SetPlayerFacingAngle(playerid, 0);
					server_SetPlayerInterior(playerid,0);
					server_SetPlayerVirtualWorld(playerid,0);
					PlayerInfo[playerid][pMember] = 0;
					PlayerInfo[playerid][pLeader] = 0;
					PlayerInfo[playerid][pRank] = 0;
					PlayerInfo[playerid][pSpawn]=0;
					OnPlayerUpdateSQL(playerid);
				    return 1;
				}
		    }
	    }
	    else if(PlayerInfo[playerid][pSpawn]==2) // Spawn Maison 1
        {
            ResetPlayerIntVar(playerid);
            if(house[PlayerInfo[playerid][pHousekey1]][owned] == 0)
            {
                SafeSetPlayerPos(playerid,spawn[PlayerInfo[playerid][pCity]][pos][0],spawn[PlayerInfo[playerid][pCity]][pos][1],spawn[PlayerInfo[playerid][pCity]][pos][2]);
				SetPlayerFacingAngle(playerid, 0);
				server_SetPlayerInterior(playerid,0);
				server_SetPlayerVirtualWorld(playerid,0);
                msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Votre maison a été suprimée.");
                PlayerInfo[playerid][pSpawn]=0;
                PlayerInfo[playerid][pHousekey1]=-1;
                OnPlayerUpdateSQL(playerid);
                return 1;
            }
            SafeSetPlayerPos(playerid, house[PlayerInfo[playerid][pHousekey1]][pos][0], house[PlayerInfo[playerid][pHousekey1]][pos][1], house[PlayerInfo[playerid][pHousekey1]][pos][2]);
			server_SetPlayerVirtualWorld(playerid,0);
            return 1;
        }
        else if(PlayerInfo[playerid][pSpawn]==3) // Spawn Maison 2
        {
            ResetPlayerIntVar(playerid);
            if(house[PlayerInfo[playerid][pHousekey2]][owned] == 0)
            {
                SafeSetPlayerPos(playerid,spawn[PlayerInfo[playerid][pCity]][pos][0],spawn[PlayerInfo[playerid][pCity]][pos][1],spawn[PlayerInfo[playerid][pCity]][pos][2]);
				SetPlayerFacingAngle(playerid, 0);
				server_SetPlayerInterior(playerid,0);
				server_SetPlayerVirtualWorld(playerid,0);
                msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Votre maison a été suprimée.");
                PlayerInfo[playerid][pSpawn]=0;
                PlayerInfo[playerid][pHousekey2]=-1;
                OnPlayerUpdateSQL(playerid);
                return 1;
            }
            SafeSetPlayerPos(playerid, house[PlayerInfo[playerid][pHousekey2]][pos][0], house[PlayerInfo[playerid][pHousekey2]][pos][1], house[PlayerInfo[playerid][pHousekey2]][pos][2]);
            server_SetPlayerVirtualWorld(playerid,0);
			return 1;
        }
        else if(PlayerInfo[playerid][pSpawn]==4) // Spawn Maison 3
        {
            ResetPlayerIntVar(playerid);
            if(house[PlayerInfo[playerid][pHousekey3]][owned] == 0)
            {
                SafeSetPlayerPos(playerid,spawn[PlayerInfo[playerid][pCity]][pos][0],spawn[PlayerInfo[playerid][pCity]][pos][1],spawn[PlayerInfo[playerid][pCity]][pos][2]);
				SetPlayerFacingAngle(playerid, 0);
				server_SetPlayerInterior(playerid,0);
				server_SetPlayerVirtualWorld(playerid,0);
                msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Votre maison a été suprimée.");
                PlayerInfo[playerid][pSpawn]=0;
                PlayerInfo[playerid][pHousekey3]=-1;
                OnPlayerUpdateSQL(playerid);
                return 1;
            }
            SafeSetPlayerPos(playerid, house[PlayerInfo[playerid][pHousekey3]][pos][0], house[PlayerInfo[playerid][pHousekey3]][pos][1], house[PlayerInfo[playerid][pHousekey3]][pos][2]);
            server_SetPlayerVirtualWorld(playerid,0);
			return 1;
        }
	    else
        {
            server_SetPlayerInterior(playerid,0);
            server_SetPlayerVirtualWorld(playerid,0);
            ResetPlayerIntVar(playerid);
			SafeSetPlayerPos(playerid,spawn[PlayerInfo[playerid][pCity]][pos][0],spawn[PlayerInfo[playerid][pCity]][pos][1],spawn[PlayerInfo[playerid][pCity]][pos][2]);
			SetPlayerFacingAngle(playerid, spawn[PlayerInfo[playerid][pCity]][pos][3]);
			SetTimerEx("chargement",3000,0,"i",playerid);
		    TogglePlayerControllable(playerid, false);
			return 1;
		}
	}
	return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
    new string[128],weapon[46];
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    
    InShamal[playerid] = 0;
    InAndro[playerid] = 0;
	gPlayerInBizz[playerid] = -1;
	gPlayerInFaction[playerid] = -1;
	gPlayerInInterior[playerid] = -1;
	gPlayerInSBizz[playerid] = -1;
	gPlayerInHouse[playerid] = -1;
	gPlayerInGarage[playerid] = -1;
	PlayerInfo[playerid][pArmour]=0.000000;
	PlayerDrunk[playerid]=0;
	for(new i=0; i<6; i++)
	    {PlayerInfo[playerid][pInvWeapon][i]=0;PlayerInfo[playerid][pInvAmmo][i]=0;}
	
	if(AdminDuty[playerid]==0)
	{
	    body_Create(playerid,x,y,z,reason,killerid);
		medic_PlayerNeedMedic[playerid]=2;
		if(PlayerInfo[playerid][pDonateRank]< 3)
			{medic_PlayerMedicTime[playerid]=MEDIC_TIME;}// 35 s
		else
		    {medic_PlayerMedicTime[playerid]=8;}// 8 - Evite des bugs
	}
	drop_PlayerWeapon(playerid);
	drop_PlayerCash(playerid);
	job_HideTexts(playerid);
	
	if(player_CarryBody[playerid] != -1)
	    {body_StopCarry(playerid,0);}
	    
    if(police_PlayerIsRoped[playerid] == true || PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pMember] < 5)
	{
	    for(new i=0; i<50; i++)
     	{
			if(IsValidDynamicObject(police_Rope[playerid][i]))
		 		{DestroyDynamicObject(police_Rope[playerid][i]);}
		}
		DisablePlayerCheckpoint(playerid);
	}
		
	if(AdminDuty[playerid] == 1)
		{return 1;}
		
	if(job_Start[playerid]==1)
	    {job_End(playerid);}
		
	if(police_Tazer[playerid] == 1)
		{RemovePlayerAttachedObject(playerid, 9); police_Tazer[playerid] = 0;}

    if(laser_Statue[playerid]==1)
	    {RemovePlayerAttachedObject(playerid,laser_Object[playerid]);}
	    
    if(ArmorSlotObject[playerid]!=-1)
	    {RemovePlayerAttachedObject(playerid,ArmorSlotObject[playerid]);}
	    
    if(gPlayerEvent[playerid] != 0)
		{event[parcitipents]--;}

  	if(reason == 0)
	  	{weapon = "Coup de Poing.";}
  	if(reason>0 && reason<48)
	  	{GetWeaponName(reason,weapon,sizeof(weapon));}
	  	

	if(killerid == INVALID_PLAYER_ID)
		{format(sql, sizeof(sql), "INSERT INTO lvrp_log_death (Date,Ip,SQLid,KillerSQLid,KillerIp,Reason) VALUES (UNIX_TIMESTAMP(),'%s',%d,'-1','0.0.0.0','%s')",PlayerInfo[playerid][pIP], PlayerInfo[playerid][pSQLID], weapon);}
	else
		{format(sql, sizeof(sql), "INSERT INTO lvrp_log_death (Date,Ip,SQLid,KillerSQLid,KillerIp,Reason) VALUES (UNIX_TIMESTAMP(),'%s',%d,'%d','%s','%s')",PlayerInfo[playerid][pIP], PlayerInfo[playerid][pSQLID], PlayerInfo[killerid][pSQLID], PlayerInfo[killerid][pIP], weapon);}
	mysql_pquery(MYSQL,sql);

    if(killerid != INVALID_PLAYER_ID)
    {
        new weapons[13], ammo, slot;
        slot = GetWeaponSlot(reason);
        for(new s = 0; s < 13; s++) GetPlayerWeaponData(killerid, s, weapons[s], ammo);
        if(weapons[slot] != reason) 
            {OnPlayerCheat(playerid,8);}
        
		if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER)
			{MySQLJail(killerid,-2,"Drive By",30);}

	    if (PlayerInfo[killerid][pMember] > -1)
	    {
	   		new tueurid[MAX_PLAYER_NAME];
	    	GetPlayerName(killerid, tueurid, sizeof(tueurid));
	    	format(string, sizeof(string), "[Mort Civile] %s[%d] a tué %s[%d] avec un(e) %s",tueurid, killerid, PlayerInfo[playerid][pRealName],playerid,weapon);
			msg_Admin(COLOR_LIMEGREEN, string, 2);
	    }
	    for(new i = 0; i<MAX_PLAYERS_CURRENT+1; i++) // Le(s) témoin(s)
		{
		    if(IsPlayerConnected(i) && police_Duty[i]==0 && !IsPlayerNPC(i))
		    {
		        if(ProxDetectorS(10.0, killerid, i))
					{SetPlayerCriminal(killerid,i,playerid,"Meutre 1er Degré",3);break;}
			}
		}
	}

	new caller = Mobile[playerid];
	if(caller != -1)
	{
		if(caller > -1)
		{
			msg_Client(caller,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Arghh arghhh *CHHHHHHH* La ligne racroche.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = -1;
			phone_Type[caller]=0;
			phone_Show(caller);
			SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		}
		Mobile[playerid] = -1;
		CellTime[playerid] = 0;
		phone_Hide(playerid);
		phone_Type[playerid]=0;
		phone_Active[playerid]=0;
	}

	if(bank_PlayerRob[playerid] == true)
	{
		if(bank_Rob == true)
		{
		    RemovePlayerAttachedObject(playerid,9);
			msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous êtes mort, tout l'argent que vous avez gagné vous a été retiré.");
			bank_RobMoney[playerid] = 0;
			bank_PlayerRob[playerid] = false;
			bank_RobTime[playerid] = 0;
			format(string, sizeof(string), "*** A TOUTES LES UNITES : %s est mort, un sac a été remis à la banque. ! ***",PlayerInfo[playerid][pRealName]);
			msg_Radio(1, TEAM_RADIO_COLOR, string);
			msg_Radio(3, TEAM_RADIO_COLOR, string);
			msg_Radio(4, TEAM_RADIO_COLOR, string);
		}
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,0xFFFFFF00);
	return 1;
}

public OnPlayerSpawn(playerid)
{
	if(IsPlayerNPC(playerid))
	{
	    new npcname[MAX_PLAYER_NAME+1];
		GetPlayerName(playerid, npcname, sizeof(npcname));
		npc_Spawn(playerid,npcname);
		return 1;
	}
	if(inscription_Step[playerid]>=1 && inscription_Step[playerid]<=9 || gPlayerLogged[playerid] != 1)
		{return 1;}
		
	//anticheat_Sobeit2(playerid);
	UpdateStatsTextsPlayers(playerid,1);
	UpdateStatsTextsPlayers(playerid,2);
	UpdateStatsTextsPlayers(playerid,4);
	
	AntiDeAMX();
	
	if(PlayerInfo[playerid][pChar] > 0 && PlayerInfo[playerid][pChar] < 312)
		{SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);}
	else
	    {SetPlayerSkin(playerid, 299);}
	SetPlayerColor(playerid,0xFFFFFF00);
	SafeSetPlayerHealth(playerid,100.0);
	SetPlayerSpawn(playerid);
	return 1;
}

stock log_Admin(string[])
{
	MySQLCheckConnexion();
	format(sql,sizeof(sql),"INSERT INTO lvrp_log_admins (Date,Value)  VALUES (UNIX_TIMESTAMP(),'%s')",string);
	mysql_pquery(MYSQL,sql);
}

stock log_Commands(playerid,string[])
{
	if(IsPlayerNPC(playerid))
	    {return 1;}
	new tmp[188];
	format(tmp,sizeof(tmp),"%s[%d] %s",PlayerInfo[playerid][pRealName],playerid,string);
	print(tmp);
    format(sql,sizeof(sql),"INSERT INTO lvrp_log_commands (Date,value)  VALUES (UNIX_TIMESTAMP(),'%s')",tmp);
	mysql_pquery(MYSQL,sql);
	return 1;
}

stock log_Chat(string[])
{
    format(sql,sizeof(sql),"INSERT INTO lvrp_log_chat (Date,Chat)  VALUES (UNIX_TIMESTAMP(),'%s')",string);
	mysql_pquery(MYSQL,sql);
	return 1;
}

stock log_Governement(playerid,montant,string[])
{
    format(sql,sizeof(sql),"INSERT INTO lvrp_log_governements (SQLid,Date,City,Ip,Montant,Reason)  VALUES ('%d',UNIX_TIMESTAMP(),'%d','%s','%d','%s')",PlayerInfo[playerid][pSQLID],PlayerInfo[playerid][pCity],PlayerInfo[playerid][pIP],montant,string);
	mysql_pquery(MYSQL,sql);
	return 1;
}

stock player_GetSlotObject(playerid)
{
	for(new slot=5; slot<10; slot++)
	{
	    if(!IsPlayerAttachedObjectSlotUsed(playerid,slot))
	    	{return slot;}
	}
	return -1;
}

public player_ResetTimeRapport(playerid)
{
    TimeRapport[playerid]=0;
}

public OnPlayerEnterCheckpoint(playerid)
{
	new string[128];
	new carid = GetPlayerVehicleID(playerid);
	// GPS
	if(gPlayerCheckpoint[playerid] == 1)
		{msg_Client(playerid,COLOR_STATS,"» Gps « Vous êtes arrivé.");gPlayerCheckpoint[playerid] = 0;}
	// Carte
	if(gPlayerCheckpoint[playerid] == 12)
		{msg_Client(playerid,COLOR_STATS,"» Carte « Vous êtes arrivé.");gPlayerCheckpoint[playerid] = 0;}
		
	// Descente en rappel
	if(gPlayerCheckpoint[playerid] == 13)
	{
	    police_PlayerIsRoped[playerid] = false;
	    ClearAnimations(playerid);
	    TogglePlayerControllable(playerid,true);
	    for(new i=0;i<50;i++)
			{DestroyDynamicObject(police_Rope[playerid][i]);}
	}

	if(gPlayerCheckpoint[playerid] == 3)
 	{
 	    if(PlayerToPoint(6.0,playerid,1054.8140,2148.3220,10.8203) && bank_PlayerRob[playerid] == true)
 	    {
	 	    SafeGivePlayerMoney(playerid,bank_RobMoney[playerid],"Braquage banque reussi");
 	     	format(string,sizeof(string),"{AADD66}» Banque «{FFFFFF} Vous avez blanchi l'argent du sac (+ $%d)",bank_RobMoney[playerid]);
	 	    msg_Client(playerid,COLOR_BANK,string);
	 	    RemovePlayerAttachedObject(playerid,9);
	 	    bank_RobMoney[playerid]=0; bank_PlayerRob[playerid]=false;
	 	    format(string, sizeof(string), "*** A TOUTES LES UNITES : Un sac a été blanchis ! ***");
			msg_Radio(1, TEAM_RADIO_COLOR, string);
			msg_Radio(3, TEAM_RADIO_COLOR, string);
			msg_Radio(4, TEAM_RADIO_COLOR, string);
 	    }
 	    else
 	    	{msg_Client(playerid,COLOR_BANK,"{AADD66}» Banque «{FFFFFF} Une erreur s'est produite lors du blanchissage. (Bon checkpoint ?)");}
 	}
    if(gPlayerCheckpoint[playerid] == 9)
	{
	    if(PlayerInfo[playerid][pJob] != 9 && job_Start[playerid]!=1)
	    	{return DisablePlayerCheckpoint(playerid);}
        if(!IsPlayerInAnyVehicle(playerid) && !IsAValetCar(carid))
		    {return DisablePlayerCheckpoint(playerid);}
		    
		if(job_TempVar[playerid] == 1)
			{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez garé cette voiture, retourner en haut.");}
        else if(job_TempVar[playerid] == 2)
		{
		    SetTimerEx("job_Apply",1000,0,"iii",playerid,9,2);
			msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez ramené cette voiture à son propriétaire.");
		}
		RemovePlayerFromVehicle(playerid);
		SetTimerEx("job_Apply",25000,0,"iii",playerid,9,1);
		SetVehicleToRespawn(job_CarId[playerid]);
		job_CarId[playerid]=-1;
		PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid); job_CheckPoints[playerid]++;
        if(job_CheckPoints[playerid]==3)
           {job_TakePay(playerid,PlayerInfo[playerid][pJob]);job_CheckPoints[playerid]=0;}
	}
	else if(gPlayerCheckpoint[playerid] == 10)
	{
	    if(PlayerInfo[playerid][pJob] != 10 && job_Start[playerid]!=1)
	    	{return DisablePlayerCheckpoint(playerid);}
        if(!IsPlayerInAnyVehicle(playerid) && !IsATruckerCar(carid))
		    {return DisablePlayerCheckpoint(playerid);}

        TogglePlayerControllable(playerid,false);
		if(job_CheckPoints[playerid] == 0)
		{
			GameTextForPlayer(playerid,"~w~Chargement ...",8000,6);
	        SetTimerEx("job_Apply",8000,0,"iii",playerid,10,1);
	        job_CheckPoints[playerid]=1;
        }
        else if(job_CheckPoints[playerid] == 1)
		{
		    GameTextForPlayer(playerid,"~w~Dechargement ...",8000,6);
		    SetTimerEx("job_Apply",8000,0,"iii",playerid,10,2);
		    PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
		    job_TakePay(playerid,PlayerInfo[playerid][pJob]);job_CheckPoints[playerid]=0;
		}
	}
	else if(gPlayerCheckpoint[playerid] == 15)
	{
	    if(PlayerInfo[playerid][pJob] != 10 && job_Start[playerid]!=1)
	    	{return DisablePlayerCheckpoint(playerid);}
		if((job_CheckPoints[playerid] >= 0 && job_CheckPoints[playerid] <= 4) && IsPlayerInAnyVehicle(playerid))
		    {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Déscendez de votre véhicule.");}
		else if((job_CheckPoints[playerid] >= 0 && job_CheckPoints[playerid] <= 4) && !IsPlayerInAnyVehicle(playerid))
		{
		    if(player_GetSlotObject(playerid) != -1)
                {job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid);}
			switch(job_CheckPoints[playerid])
			{
			    case 0: SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 914, 1, -0.003553, 0.444999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
			    case 1: SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 919, 1, 0.406271, 0.728156, 0.011738, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
			    case 2: SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 2912, 1, -0.069945, 0.649293, 0.000000, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				case 3: SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 3014, 1, 0.089511, 0.629350, 0.071828, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				case 4: SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 935, 1, 0.184976, 0.586401, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
			}
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY); job_ObjectN[playerid] = 1 ;
		    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Déposer ce materiau sur le véhicule. (Touche 'Y')");
		}
		else if(job_CheckPoints[playerid] >= 5 && !IsPlayerInAnyVehicle(playerid) && job_ObjectN[playerid] == 1)
		{
		    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous installer ce materiau.");
		    RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
			new rand = random(5);
			SetPlayerCheckpoint(playerid,gWorkerPoints[rand][0],gWorkerPoints[rand][1],gWorkerPoints[rand][2],3.0);
			job_ObjectN[playerid]=0; job_CheckPoints[playerid]++;
		    PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
        	if(job_CheckPoints[playerid]==10)
           	{
			   job_TakePay(playerid,PlayerInfo[playerid][pJob]);
			   job_CheckPoints[playerid]=0;
			   SetPlayerCheckpoint(playerid, gWorkerPoints[5][0],gWorkerPoints[5][1],gWorkerPoints[5][2], 3.0);
			   msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez chercher les materiaux au lieu indiqué. (Touche 'Y')");
  			}
  			return 1;
		}
		else if(job_CheckPoints[playerid] >= 5 && !IsPlayerInAnyVehicle(playerid) && job_ObjectN[playerid] == 0)
			{return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez avoir un materiau.");}
	}
		
    if(gPlayerCheckpoint[playerid] == 20)
	{
	    if(PlayerInfo[playerid][pJob] == 1 && job_Start[playerid]==1)
	    {
		    if(IsPlayerInAnyVehicle(playerid) && IsAPizzaCar(carid))
		    	{return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Déscendez de votre scooter.");}
			else
			{
			    if(job_ObjectN[playerid]==0)
			        {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Aucune pizza en main.");}
    
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
				msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Pizza livré, retourné sur votre scooter.");
				PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
				RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
				job_ObjectN[playerid]=0; job_CheckPoints[playerid]++;
				if(job_CheckPoints[playerid]==3)
                    {job_TakePay(playerid,PlayerInfo[playerid][pJob]);job_CheckPoints[playerid]=0;}
				new hId = job_GetRandomVar(1,job_City[playerid]);
				SetPlayerCheckpoint(playerid,house[hId][pos][0],house[hId][pos][1],house[hId][pos][2],2.5);
                return 1;
			}
	    }
	}
	if(gPlayerCheckpoint[playerid] == 21)
	{
	    if(PlayerInfo[playerid][pJob] == 2 && job_Start[playerid]==1)
	    {
	        if(IsPlayerInAnyVehicle(playerid) && IsAFarmerCar(carid) && GetVehicleModel(carid) == 478)
			{
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Chargez une autre botte ou récolter en d'autres.");
			    PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
			    job_ObjectN[playerid]--;
			    if(IsValidDynamicObject(job_Object[playerid][job_HoldingObjectSlot[playerid]]))
					{DestroyDynamicObject(job_Object[playerid][job_HoldingObjectSlot[playerid]]);}
                job_TempVar[playerid]++;
			    if(job_TempVar[playerid]==4)
			    	{job_TakePay(playerid,PlayerInfo[playerid][pJob]); job_TempVar[playerid]=0;}
			}
	    }
	}
	if(gPlayerCheckpoint[playerid] == 22)
	{
	    if(PlayerInfo[playerid][pJob] == 3 && job_Start[playerid]==1)
	    {
	        if(!IsPlayerInAnyVehicle(playerid))
	        {
	            if(job_City[playerid]==4)
	            	{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Appuyez sur la touche 'Y' pour déposer le minerai.");}
	            else
	            {
		            if(player_GetSlotObject(playerid) != -1)
	                	{job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 18634, 5, 0.104315, 0.024154, -0.002412, 351.485473, 284.184387, 85.579017, 1.000000, 1.000000, 1.000000 );}
					job_ObjectN[playerid]=random(4);
					job_City[playerid]=0;
					format(string,sizeof(string),"~y~Appuyez sur la touche : ~n~~w~%s",GetKeyJobName(job_ObjectN[playerid]));
					GameTextForPlayer(playerid,string,5000,6);
					SafeSetPlayerPos(playerid,gMinerPoints[job_CheckPoints[playerid]][0],gMinerPoints[job_CheckPoints[playerid]][1],gMinerPoints[job_CheckPoints[playerid]][2]);
					SetPlayerFacingAngle(playerid,gMinerPoints[job_CheckPoints[playerid]][3]);
					TogglePlayerControllable(playerid,false);
				}
			}
		}
	}
	if(gPlayerCheckpoint[playerid] == 23)
	{
	    if(PlayerInfo[playerid][pJob] == 4 && job_Start[playerid]==1)
	    {
		    if(IsPlayerInAnyVehicle(playerid) && IsATrashCar(carid))
		    	{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Appuyez sur la touche 'Y'.");}
	    }
	}
	if(gPlayerCheckpoint[playerid] == 24)
	{
	    if(PlayerInfo[playerid][pJob] == 5 && job_Start[playerid]==1)
	    {
	        if(IsAWorkerCar(carid))
			{
			    if(job_CheckPoints[playerid]==0)
			    {
			        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Déchargez la marchandise au lieu indiqué.");
			        job_HoldingObjectSlot[playerid] = CreateDynamicObject(749,0,0,-1000,0,0,0,-1,-1,-1,200);
			        SetPlayerCheckpoint(playerid, 555.8182,909.6615,-42.9609, 8.0);
                    AttachDynamicObjectToVehicle(job_HoldingObjectSlot[playerid], job_CarId[playerid], 0.000000,1.049999,1.350000,-272.699890,0.000000,0.000000);
                    job_CheckPoints[playerid]=1;
			    }
			    else if(job_CheckPoints[playerid]==1)
			    {
			        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Chargez la marchandise du lieu indiqué.");
			        job_CheckPoints[playerid]=0;
			        PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
			        job_TempVar[playerid]++;
			        if(job_TempVar[playerid]==3)
			        	{job_TakePay(playerid,PlayerInfo[playerid][pJob]); job_TempVar[playerid]=0;}
					if(IsValidDynamicObject(job_HoldingObjectSlot[playerid]))
						{DestroyDynamicObject(job_HoldingObjectSlot[playerid]);}
					new rand = random(5);
			        SetPlayerCheckpoint(playerid, gDozerPoints[rand][0],gDozerPoints[rand][1],gDozerPoints[rand][2], 8.0);
			    }
			    return 1;
			}
	    }
	}
	if(gPlayerCheckpoint[playerid] == 27)
	{
	    if(PlayerInfo[playerid][pJob] == 8 && job_Start[playerid]==1)
	    {
	        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || job_ObjectN[playerid] != 3)
	            {return 1;}
			msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Touche 'Y' pour décharger le poisson.");
	    }
	}
	if(gPlayerCheckpoint[playerid] == 28)
	{
	    if(PlayerInfo[playerid][pJob] == 10 && job_Start[playerid]==1)
	    {
	        if(IsATruckerCar(carid))
	        {
	            if(job_CheckPoints[playerid]==0)
	            {
	                if(IsValidDynamicObject(job_HoldingObjectSlot[playerid]))
	            		{DestroyDynamicObject(job_HoldingObjectSlot[playerid]);}
					job_CheckPoints[playerid]=1;
					job_HoldingObjectSlot[playerid] = CreateDynamicObject(2991,0,0,-1000,0,0,0,-1,-1,-1,400);
					AttachDynamicObjectToVehicle(job_HoldingObjectSlot[playerid], job_CarId[playerid], 0.000000,-1.425000,0.375000,0.000000,0.000000,-89.099983);
					SetPlayerCheckpoint(playerid, 2121.4033,-2161.1477,13.5469, 8.0);
				}
				else if(job_CheckPoints[playerid]==1)
	            {
	                job_CheckPoints[playerid]=0;
	                if(IsValidDynamicObject(job_HoldingObjectSlot[playerid]))
	            		{DestroyDynamicObject(job_HoldingObjectSlot[playerid]);}
					job_TakePay(playerid,PlayerInfo[playerid][pJob]);
					job_HoldingObjectSlot[playerid] = CreateDynamicObject(3631,0,0,-1000,0,0,0,-1,-1,-1,400);
					AttachDynamicObjectToVehicle(job_HoldingObjectSlot[playerid], job_CarId[playerid], 0.000000,-1.650000,0.300000,0.000000,0.000000,89.819984);
					new rand = random(3);
					if(rand==0)
						{SetPlayerCheckpoint(playerid,1630.2732,721.9963,10.8203,8);}
	                else if(rand==1)
						{SetPlayerCheckpoint(playerid,-1836.2363,143.5305,15.1172,8);}
	                else if(rand==2)
						{SetPlayerCheckpoint(playerid,-183.2642,1016.0228,19.6573,8);}
				}
				PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
				GameTextForPlayer(playerid,"Dechargement/chargement",6000,4);
				SetTimerEx("job_ResetFreeze",6000,0,"i",playerid); // 6 secondes
				TogglePlayerControllable(playerid,false);
				return 1;
	        }
	    }
	}
	if(gPlayerCheckpoint[playerid] == 29)
	{
	}
	if(gPlayerCheckpoint[playerid] == 30)
	{
	    if(PlayerInfo[playerid][pJob] == 12 && job_Start[playerid]==1)
	    {
	        if(IsABusCar(carid))
			{
			    PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
			    job_CheckPoints[playerid]++;
				job_TempVar[playerid] = random(totalBusStop);
                SetPlayerCheckpoint(playerid, stop[job_TempVar[playerid]][pos][0], stop[job_TempVar[playerid]][pos][1], stop[job_TempVar[playerid]][pos][2], 8.0);
                if(job_CheckPoints[playerid]==5)
                    {job_TakePay(playerid,PlayerInfo[playerid][pJob]);job_CheckPoints[playerid]=0;}
			    return 1;
			}
	    }
	}
	if(gPlayerCheckpoint[playerid] == 25)
	{
	    if(!IsAPiloteCar(carid))
	        {return 1;}
		if(!IsPlayerInAnyVehicle(playerid))
		    {return msg_Client(playerid, COLOR_JOB, "{78769D}» Job «{FFFFFF} Vous devez être dans votre avion.");}
	    PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
	    job_CheckPoints[playerid]++;
	    PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
		if(job_CheckPoints[playerid] == 1 && job_City[playerid] == 0 || job_CheckPoints[playerid] == 3 && job_City[playerid] == 2 || job_CheckPoints[playerid] == 2 && job_City[playerid] == 1)
			{SetPlayerCheckpoint(playerid, 1477.9502,1638.8958,11.5501, 10.0);return 1;}
        else if(job_CheckPoints[playerid] == 2 && job_City[playerid] == 0 || job_CheckPoints[playerid] == 1 && job_City[playerid] == 2 || job_CheckPoints[playerid] == 3 && job_City[playerid] == 1)
			{SetPlayerCheckpoint(playerid, -1609.6440,-115.5528,14.8879, 10.0);return 1;}
        else if(job_CheckPoints[playerid] == 3 && job_City[playerid] == 0 || job_CheckPoints[playerid] == 1 && job_City[playerid] == 1 || job_CheckPoints[playerid] == 2 && job_City[playerid] == 2)
			{SetPlayerCheckpoint(playerid,1950.9128,-2592.9001,13.5469, 10.0);return 1;}
		else if(job_CheckPoints[playerid] == 4)
		{
		    job_CheckPoints[playerid]=0;
		    OnPlayerEnterCheckpoint(playerid);
		    job_TakePay(playerid,PlayerInfo[playerid][pJob]);
		}
		return 1;
    }
    if(gPlayerCheckpoint[playerid] == 26)
	{
	    if(PlayerInfo[playerid][pJob] == 7 && job_Start[playerid]==1)
	    {
		    if(IsPlayerInAnyVehicle(playerid) && IsAPostCar(carid))
		    	{return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Déscendez de votre scooter.");}
			else
			{
			    if(job_ObjectN[playerid]==0)
			        {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Aucune lettre en main.");}

				msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Lettre postée, retourner sur votre scooter.");
				PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
				RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
				job_ObjectN[playerid]=0; job_CheckPoints[playerid]++;
				if(job_CheckPoints[playerid]==3)
                    {job_TakePay(playerid,PlayerInfo[playerid][pJob]);job_CheckPoints[playerid]=0;}
				new hId = job_GetRandomVar(1,job_City[playerid]);
				SetPlayerCheckpoint(playerid,house[hId][pos][0],house[hId][pos][1],house[hId][pos][2],2.5);
                return 1;
			}
	    }
	}
    // Vol de véhicule
	if(gang_PlayerVoleCar[playerid] == 1)
	{
	    new gain = 1000;
	    if(vehicle[carid][cValue] >= 10)
  			{gain += vehicle[carid][cValue]/100;}
  			
 		SafeGivePlayerMoney(playerid, gain,"Gang, vol de véhicule");
 		format(string,sizeof(string),"{006500}» Gang «{FFFFFF} Voiture revendu, vous gagnez %d (%d + %d/100) !",gain,1000,vehicle[carid][cValue]);
		msg_Client(playerid,COLOR_WHITE,string);
		gang_PlayerVoleCar[playerid] = 0;
		RemovePlayerFromVehicle(playerid);
		new engine,lights,alarm,doors,bonnet,boot,objective;
  		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(carid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
        vehicle[carid][cEngine]=false;
		gang_TimerForVoleCar[playerid]=0;
	}
	if(permis_Player[playerid] == 2)
	{
	    if(IsASchoolCar(carid))
	    {
	    	permis_CheckPoints[playerid]++;
	    	
	    	if(ceinture[playerid] != 1)
	    	    {permis_End(playerid,0,"Non port de la ceinture");return 1;}
			if(permis_City[playerid] == 0)
				{SetPlayerCheckpoint(playerid, gSchoolDriveLS[permis_CheckPoints[playerid]][0], gSchoolDriveLS[permis_CheckPoints[playerid]][1], gSchoolDriveLS[permis_CheckPoints[playerid]][2], 5.0);}
            else if(permis_City[playerid] == 1)
				{SetPlayerCheckpoint(playerid, gSchoolDriveSF[permis_CheckPoints[playerid]][0], gSchoolDriveSF[permis_CheckPoints[playerid]][1], gSchoolDriveSF[permis_CheckPoints[playerid]][2], 5.0);}
            else if(permis_City[playerid] == 2)
				{SetPlayerCheckpoint(playerid, gSchoolDriveLV[permis_CheckPoints[playerid]][0], gSchoolDriveLV[permis_CheckPoints[playerid]][1], gSchoolDriveLV[permis_CheckPoints[playerid]][2], 5.0);}
			if(permis_CheckPoints[playerid] == 10)
			{
				if(ceinture[playerid] == 1)
				{
				    new Float:health;
                    GetVehicleHealth(carid,health);
					if (health >= 950)
                    	{permis_End(playerid,2,"");return 1;}
                    else
                    	{permis_End(playerid,0,"Véhicule endomagé");return 1;}
				}
				else
				    {permis_End(playerid,0,"Non port de la ceinture");return 1;}
			}
			return 1;
		}
	}
	return DisablePlayerCheckpoint(playerid);
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

stock car_GetBridVehicle(carid)
{
	new vmodel = GetVehicleModel(carid);
	if(vmodel == 448 || vmodel == 462 || vmodel == 406 || vmodel == 486 || vmodel == 530 || vmodel == 532 || vmodel == 572 || vmodel == 574)
	    {return 60;}
    else if(vmodel == 468 || vmodel == 471)
	    {return 80;}
    else if(vmodel == 403 || vmodel == 588 || vmodel == 428 || vmodel == 423 || vmodel == 408 ||vmodel == 433 || vmodel == 443 || vmodel == 455 || vmodel == 456 || vmodel == 498 || vmodel == 514 || vmodel == 515 || vmodel == 524 || vmodel == 578 ||vmodel == 609 || vmodel == 431 || vmodel == 437)
	    {return 90;}
    else if(vmodel == 461 || vmodel == 463 || vmodel == 586)
	    {return 110;}
	else
	    {return 0;}
}

stock car_Reset(carid,save,bool:recreate=true,bool:sqlidd=false)
{
	if(save==1)
	{
		vehicle[carid][cLocationx] = Car_Reserve_x;
		vehicle[carid][cLocationy] = Car_Reserve_y;
		vehicle[carid][cLocationz] = Car_Reserve_z;
		vehicle[carid][cAngle] = Car_Reserve_a;
	}
	strmid(vehicle[carid][cOwner], "Personne", 0, strlen("Personne"), 25);
	strmid(vehicle[carid][cLicense], "Reserve", 0, strlen("Reserve"), 14);
	vehicle[carid][cOwned] = 2;
	vehicle[carid][ownerSQLID] = -1;
	vehicle[carid][cLock] = 0;
	vehicle[carid][cStatut] = 0;
	vehicle[carid][cType] = CAR_RESERVED;
	for(new i=0; i<15; i++)
	    {vehicle[carid][cItemM][i]=-1; vehicle[carid][cItemQ][i]=0;}
	for(new i=0; i<10; i++)
	    {vehicle[carid][cWep][i]=0; vehicle[carid][cAmmo][i]=0;}
    vehicle[carid][cNeon] = 0;
    vehicle[carid][cArmour] = 0.000000;
    vehicle[carid][cRob] = 0;
    vehicle[carid][tExhausts] = 0;
    vehicle[carid][tFrontBumper] = 0;
    vehicle[carid][tRearBumper] = 0;
    vehicle[carid][tRoof] = 0;
    format(vehicle[carid][stream],128,"Aucun");
    vehicle[carid][tSpoilers] = 0;
    vehicle[carid][tSideBumper] = 0;
    vehicle[carid][tWheels] = 0;
    vehicle[carid][tHydraulics] = 0;
    vehicle[carid][tNitro] = 0;
    vehicle[carid][tSideBumper2] = 0;
    vehicle[carid][paintjob] = -1;
    vehicle[carid][cRank] = 0;
    vehicle[carid][cKiloMeter] = 0;
    vehicle[carid][cMeter] = 0;
    vehicle[carid][cGas] = 100;
    vehicle[carid][cRob] = 0;
    vehicle[carid][cVW] = 0;
    vehicle[carid][cInt] = 0;
    vehicle[carid][cBrid] = car_GetBridVehicle(carid);
    if(sqlidd == true)
    	{vehicle[carid][SQLID] = -1;}
    else
    	{vehicle_Save(carid,1,1);}
	if(recreate==true)
	{
	    DestroyVehicle(carid);
		new thiscar = CreateVehicle(vehicle[carid][cModel],vehicle[carid][cLocationx],vehicle[carid][cLocationy],vehicle[carid][cLocationz]+8.0,vehicle[carid][cAngle],vehicle[carid][cColorOne],vehicle[carid][cColorTwo],-1);
		tuning_Load(thiscar);
	}
	return 1;
}

stock car_Engine(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	new bool:engine=false, Float:health, string[128];
	GetVehicleHealth(carid,health);
	
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER || car_Starting[playerid] == true || vehicle[carid][cEngine] || IsABike(carid) || vehicle[carid][sabot] == true && AdminDuty[playerid]==0)
		{return 1;}
	if(health <= 450)
		{return msg_Box(playerid, "~g~", "Véhicule", "Ce véhicule est Hors Service.", 5000);}
	if(vehicle[carid][cGas]==0)
   		{return msg_Box(playerid, "~g~", "Véhicule", "Ce véhicule n'a plus d'essence.", 5000);}

    if(AdminDuty[playerid]==1)
		{engine=true;}
	else if(vehicle[carid][cType] == CAR_LOC_CAR || vehicle[carid][cType] == CAR_LOC_MOTO || vehicle[carid][cType] == CAR_LOC_BOAT || vehicle[carid][cType] == CAR_LOC_PLANE || vehicle[carid][cType] == CAR_LOC_BIKE)
	{
	    if(HireCar[playerid] == carid)
			{engine=true;}
	}
	else if(vehicle[carid][cType] == CAR_SCHOOL)
	{
	    if(permis_Player[playerid] == 2)
	    	{engine=true;}
	}
	else if(vehicle[carid][cType] == CAR_EVENT && gPlayerEvent[playerid] == 1 || vehicle[carid][cType] == CAR_EVENT && PlayerInfo[playerid][pAnimator] == 1)
		{engine=true;}
	else if(vehicle[carid][cType] == PlayerInfo[playerid][pMember] && (vehicle[carid][cType]>0 && vehicle[carid][cType] < 11 || vehicle[carid][cType] >= 200))
	{
	    if(PlayerInfo[playerid][pRank] >= vehicle[carid][cRank])
	    	 {engine=true;}
		else
		    {format(string,sizeof(string),"Vous devez être rang %d minimum.",vehicle[carid][cRank]);msg_Box(playerid, "~g~", "Véhicule", string, 5000); return 1;}
	}
	else if(job_Start[playerid] == 1 && job_CarId[playerid] == carid && IsPlayerInVehicle(playerid,job_CarId[playerid]) && vehicle[carid][cOwned] == 3 || PlayerInfo[playerid][pJob] == vehicle[carid][cType]-30)
		{engine=true;}
	else if(PlayerInfo[playerid][pCar][0] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][1] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][2] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][3] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][4] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][5] == vehicle[carid][SQLID])
		{engine=true;}

	if(engine==true)
	{
	    if(IsACar(carid))
			{LoopingAnim(playerid,"PED","CAR_tune_radio",4.0,0,0,0,0,0);}
        format(string, sizeof(string), "* %s essaye de démarrer le moteur de son véhicule.", PlayerInfo[playerid][pName]);
		SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
		msg_Box(playerid, "~g~", "Véhicule", "Vous essayez de démarer le moteur ...", 5000);
		car_Starting[playerid] = true;
		if(AdminDuty[playerid] == 0)
			{SetTimerEx("StartingTheVehicle",4000,0,"i",playerid);}
		else
		{
		    vehicle[carid][cEngine] = true;
		    new engine2,lights,alarm,doors,bonnet,boot,objective;
         	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine2,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
            speedometer_Update(playerid,1,0);
		}
	}
	else
		{msg_Box(playerid, "~g~", "Véhicule", "Vous n'avez pas les clefs du véhicule.", 5000);}
	return 1;
}

stock gang_PlayerTimerVoleBizz(playerid)
{
	if(gang_TimerPlayerVoleBizz[playerid] == 0)
	{
		if(gang_PlayerIsBrakeBizz[playerid] == 1)
		{
			new string[128];
			new prix = 13000;
			new bonus;
			new rand=random(100);
			//new playername[MAX_PLAYER_NAME];
			
			if(rand == 1 || rand == 100 || rand == 50)
				{bonus = 1500;}
			else if(rand > 1 && rand <= 50)
				{bonus = 255;}
			else if(rand > 50 && rand <= 100)
				{bonus = 453;}
				
			new bizid = gPlayerInBizz[playerid];
			new toto=prix+bonus;
			gang_PlayerIsBrakeBizz[playerid] = 0;
			SafeGivePlayerMoney(playerid,toto,"Gang, braquage de biz");
			format(string,sizeof(string),"{006500}» Gang «{FFFFFF} Vous avez gagné $%d lors du braquage du biz.",toto);
			msg_Client(playerid,COLOR_GANG,string);
			bizz_IsRob[bizid]=false;
			ClearDynamicActorAnimations(bizz[bizid][actorId][0]);
		}
	}
	return 1;
}

stock garage_Reset(id)
{
	garage[id][owned] = 0;
	garage[id][used] = 1;
	garage[id][lock] = 1;
	strmid(garage[id][owner], NO_ONE, 0, strlen(NO_ONE), 32);
	garage_UpdateInfos(id);
	garage_Save(id);
}

stock house_Reset(id)
{
    house[id][owned] = 0;
    strmid(house[id][owner], NO_ONE, 0, strlen(NO_ONE), 32);
    house[id][talking] = 0;
    house[id][insurance] = 0;
    house[id][rentPrice] = 0;
    house[id][rentState] = 0;
    house[id][rentNb] = 0;
    house[id][showDesc] = 0;
    house[id][rentMax] = 0;
    house[id][lock] = 0;
    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
    {
        if(PlayerInfo[i][pHousekey1] == id)
            {PlayerInfo[i][pHousekey1]=-1;}
        else if(PlayerInfo[i][pHousekey2] == id)
            {PlayerInfo[i][pHousekey2]=-1;}
        else if(PlayerInfo[i][pHousekey3] == id)
            {PlayerInfo[i][pHousekey3]=-1;}
    }
    for(new i=0; i<MAX_FURNITURES; i++)
		{house[id][hItem][i]=0; house[id][fFurSQLid][i]=-1; house[id][hFurPos_x][i]=0; house[id][hFurPos_y][i]=0; house[id][hFurPos_z][i]=0; house[id][hFurPos_rx][i]=0; house[id][hFurPos_ry][i]=0; house[id][hFurPos_rz][i]=0; house_UpdateFurnitureInfos(id,i);}
	format(sql, sizeof(sql), "DELETE FROM lvrp_server_houses_furnitures WHERE HouseId=%d",id);
	mysql_pquery(MYSQL,sql);
	format(sql, sizeof(sql), "UPDATE lvrp_users SET House1=-1 WHERE House1=%d AND Connected=0",id);
	mysql_pquery(MYSQL,sql);
	format(sql, sizeof(sql), "UPDATE lvrp_users SET House2=-1 WHERE House2=%d AND Connected=0",id);
	mysql_pquery(MYSQL,sql);
	format(sql, sizeof(sql), "UPDATE lvrp_users SET House3=-1 WHERE House3=%d AND Connected=0",id);
	mysql_pquery(MYSQL,sql);
    house_Save(id);
    house_UpdateInfos(id);
	return 1;
}

stock bizz_Reset(bizid)
{
	new bizname[32];
	if(bizz[bizid][typeZ] == 1){format(bizname,sizeof(bizname),"24/7");}
	else if(bizz[bizid][typeZ] == 2){format(bizname,sizeof(bizname),"Binco");}
	else if(bizz[bizid][typeZ] == 3){format(bizname,sizeof(bizname),"Tabac");}
	else if(bizz[bizid][typeZ] == 4){format(bizname,sizeof(bizname),"Epicerie");}
	else if(bizz[bizid][typeZ] == 5){format(bizname,sizeof(bizname),"Donuts");}
	else if(bizz[bizid][typeZ] == 6){format(bizname,sizeof(bizname),"Pizza stack");}
	else if(bizz[bizid][typeZ] == 7){format(bizname,sizeof(bizname),"Burger Shot");}
	else if(bizz[bizid][typeZ] == 8){format(bizname,sizeof(bizname),"Clukin bell");}
	else if(bizz[bizid][typeZ] == 9){format(bizname,sizeof(bizname),"Disquaire");}
	else if(bizz[bizid][typeZ] == 10){format(bizname,sizeof(bizname),"Ammunation");}
	else if(bizz[bizid][typeZ] == 11){format(bizname,sizeof(bizname),"Sexe Shop");}
	else if(bizz[bizid][typeZ] == 12){format(bizname,sizeof(bizname),"Bar");}
	else if(bizz[bizid][typeZ] == 13){format(bizname,sizeof(bizname),"Discotheque");}
	else if(bizz[bizid][typeZ] == 14){format(bizname,sizeof(bizname),"Gym");}
	else if(bizz[bizid][typeZ] == 15){format(bizname,sizeof(bizname),"Didier sachs");}
	else if(bizz[bizid][typeZ] == 16){format(bizname,sizeof(bizname),"Prolaps");}
	else if(bizz[bizid][typeZ] == 17){format(bizname,sizeof(bizname),"Suburban");}
	else if(bizz[bizid][typeZ] == 18){format(bizname,sizeof(bizname),"Victim");}
	else if(bizz[bizid][typeZ] == 19){format(bizname,sizeof(bizname),"Zip");}
	else if(bizz[bizid][typeZ] == 20){format(bizname,sizeof(bizname),"Restaurant");}
	bizz[bizid][owned] = 0;
	strmid(bizz[bizid][owner], NO_ONE, 0, strlen(NO_ONE), 999);
	strmid(bizz[bizid][description], bizname, 0, strlen(bizname), 999);
	bizz[bizid][fund] = 0;
	bizz[bizid][enterCost] = 0;
	bizz[bizid][lock] = 1;
	bizz[bizid][variable] = 0;
	bizz[bizid][products] = 0;
	for(new art=0; art<20; art++)
		{bizz[bizid][itemCost][art] = 0;}
	bizz_UpdateInfos(bizid);
	bizz_Save(bizid);
	return 1;
}

stock bizz_Set(bizid,type)
{
    new bizname[32], bizzid=bizid;
    if(type == 1)
		{format(bizname,sizeof(bizname),"24/7"); bizz[bizzid][pos][3]=-30.95; bizz[bizzid][pos][4]=-91.71; bizz[bizzid][pos][5]=1003.55; bizz[bizzid][interior]=18;}
	else if(type == 2)
		{format(bizname,sizeof(bizname),"Binco"); bizz[bizzid][pos][3]=207.74; bizz[bizzid][pos][4]=-111.42; bizz[bizzid][pos][5]=1004.27; bizz[bizzid][interior]=15;}
	else if(type == 3)
		{format(bizname,sizeof(bizname),"Tabac"); bizz[bizzid][pos][3]=-26.69; bizz[bizzid][pos][4]=-57.81; bizz[bizzid][pos][5]=1003.55; bizz[bizzid][interior]=6;}
	else if(type == 4)
		{format(bizname,sizeof(bizname),"Epicerie"); bizz[bizzid][pos][3]=-27.31; bizz[bizzid][pos][4]=-31.38; bizz[bizzid][pos][5]=1003.55; bizz[bizzid][interior]=4;}
	else if(type == 5)
		{format(bizname,sizeof(bizname),"Donuts"); bizz[bizzid][pos][3]=377.1158; bizz[bizzid][pos][4]=-193.0567; bizz[bizzid][pos][5]=1000.6401; bizz[bizzid][interior]=17;}
	else if(type == 6)
		{format(bizname,sizeof(bizname),"Pizza stack"); bizz[bizzid][pos][3]=372.3382; bizz[bizzid][pos][4]=-133.3865; bizz[bizzid][pos][5]=1001.4922; bizz[bizzid][interior]=5;}
	else if(type == 7)
		{format(bizname,sizeof(bizname),"Burger Shot"); bizz[bizzid][pos][3]=362.9170; bizz[bizzid][pos][4]=-75.1140; bizz[bizzid][pos][5]=1001.5078; bizz[bizzid][interior]=10;}
	else if(type == 8)
		{format(bizname,sizeof(bizname),"Clukin bell"); bizz[bizzid][pos][3]=364.8628; bizz[bizzid][pos][4]=-11.4361; bizz[bizzid][pos][5]=1001.8516; bizz[bizzid][interior]=9;}
	else if(type == 9)
		{format(bizname,sizeof(bizname),"Disquaire"); bizz[bizzid][pos][3]=1044.16223; bizz[bizzid][pos][4]=10.22274; bizz[bizzid][pos][5]=1001.99456; bizz[bizzid][interior]=3;}
	else if(type == 10)
		{format(bizname,sizeof(bizname),"Ammunation"); bizz[bizzid][pos][3]=316.3329; bizz[bizzid][pos][4]=-170.0675; bizz[bizzid][pos][5]=999.5938; bizz[bizzid][interior]=6;}
	else if(type == 11)
		{format(bizname,sizeof(bizname),"Sexe Shop"); bizz[bizzid][pos][3]=-100.3224; bizz[bizzid][pos][4]=-24.8421; bizz[bizzid][pos][5]=1000.7188; bizz[bizzid][interior]=3;}
	else if(type == 12)
		{format(bizname,sizeof(bizname),"Bar"); bizz[bizzid][pos][3]=501.9144; bizz[bizzid][pos][4]=-67.6667; bizz[bizzid][pos][5]=998.757812; bizz[bizzid][interior]=11;}
	else if(type == 13)
		{format(bizname,sizeof(bizname),"Discotheque"); bizz[bizzid][pos][3]=493.3585; bizz[bizzid][pos][4]=-24.8313; bizz[bizzid][pos][5]=1000.679687; bizz[bizzid][interior]=17;}
	else if(type == 14)
		{format(bizname,sizeof(bizname),"Gym"); bizz[bizzid][pos][3]=772.111999; bizz[bizzid][pos][4]=-3.898649; bizz[bizzid][pos][5]=1000.728820; bizz[bizzid][interior]=5;}
	else if(type == 15)
		{format(bizname,sizeof(bizname),"Didier sachs"); bizz[bizzid][pos][3]=204.3857; bizz[bizzid][pos][4]=-168.8605; bizz[bizzid][pos][5]=1000.5234; bizz[bizzid][interior]=14;}
	else if(type == 16)
		{format(bizname,sizeof(bizname),"Prolaps"); bizz[bizzid][pos][3]=207.0741; bizz[bizzid][pos][4]=-140.3642; bizz[bizzid][pos][5]=1003.5078; bizz[bizzid][interior]=3;}
	else if(type == 17)
		{format(bizname,sizeof(bizname),"Suburban"); bizz[bizzid][pos][3]=203.8312; bizz[bizzid][pos][4]=-50.6635; bizz[bizzid][pos][5]=1001.8047; bizz[bizzid][interior]=1;}
	else if(type == 18)
		{format(bizname,sizeof(bizname),"Victim"); bizz[bizzid][pos][3]=227.5628; bizz[bizzid][pos][4]=-8.1035; bizz[bizzid][pos][5]=1002.2109; bizz[bizzid][interior]=5;}
	else if(type == 19)
		{format(bizname,sizeof(bizname),"Zip"); bizz[bizzid][pos][3]=161.4099; bizz[bizzid][pos][4]=-97.0471; bizz[bizzid][pos][5]=1001.8047; bizz[bizzid][interior]=18;}
	else if(type == 20)
		{format(bizname,sizeof(bizname),"Restaurant"); bizz[bizzid][pos][3]=453.1140; bizz[bizzid][pos][4]=-18.1420; bizz[bizzid][pos][5]=1000.5930; bizz[bizzid][interior]=1;}
	else if(type == 21)
		{format(bizname,sizeof(bizname),"Agence Immobilière"); bizz[bizzid][pos][3]=453.1140; bizz[bizzid][pos][4]=-18.1420; bizz[bizzid][pos][5]=1000.5930; bizz[bizzid][interior]=1;}
	else if(type == 22)
		{format(bizname,sizeof(bizname),"Bureau de Poste"); bizz[bizzid][pos][3]=316.7042; bizz[bizzid][pos][4]=294.6810; bizz[bizzid][pos][5]=998.4849; bizz[bizzid][interior]=5;}
	else if(type == 23)
		{format(bizname,sizeof(bizname),"Opérateur téléphonique"); bizz[bizzid][pos][3]=453.1140; bizz[bizzid][pos][4]=-18.1420; bizz[bizzid][pos][5]=1000.5930; bizz[bizzid][interior]=4;}
	else if(type == 24)
		{format(bizname,sizeof(bizname),"Ecole des Langues"); bizz[bizzid][pos][3]=1207.8934; bizz[bizzid][pos][4]=-903.6239; bizz[bizzid][pos][5]=1094.1084; bizz[bizzid][interior]=3;}
	else if(type == 25)
		{format(bizname,sizeof(bizname),"Banque"); bizz[bizzid][pos][3]=2305.688964; bizz[bizzid][pos][4]=-16.088100; bizz[bizzid][pos][5]=26.7495994; bizz[bizzid][interior]=0;}
	else if(type == 26)
		{format(bizname,sizeof(bizname),"Hotel"); bizz[bizzid][pos][3]=2215.454833; bizz[bizzid][pos][4]=-1147.475585; bizz[bizzid][pos][5]=1025.796875; bizz[bizzid][interior]=15;}
    strmid(bizz[bizid][description], bizname, 0, strlen(bizname), 64);
	bizz[bizid][typeZ] = type;
    bizz[bizid][lock] = 0;
	bizz[bizid][variable] = 1;
	bizz[bizid][products] = 2000;
    bizz_UpdateInfos(bizid);
	bizz_Save(bizid);
	return 1;
}

stock uniquebizz_Reset(bizid)
{
	sbizz[bizid][ubOwned] = 0;
    strmid(sbizz[bizid][ubOwner], NO_ONE, 0, strlen(NO_ONE), 64);
    sbizz[bizid][ubCaisse] = 0;
    sbizz[bizid][ubEnterPrice] = 0;
	sbizz[bizid][ubLock] = 1;
	sbizz[bizid][ubProduits] = 0;
	sbizz[bizid][ubPriceArticle][0] = 0;
	sbizz[bizid][ubPriceArticle][1] = 0;
	sbizz[bizid][ubPriceArticle][2] = 0;
	sbizz[bizid][ubPriceArticle][3] = 0;
	sbizz[bizid][ubPriceArticle][4] = 0;
	uniquebizz_Create(bizid);
	uniquebizz_UpdateInfos(bizid);
	uniquebizz_Save(bizid);
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public fire_StartFire(Float:x,Float:y,Float:z)
{
    CreateExplosion(x, y, z, 1, 500);
    CreateExplosion(x+2, y, z, 1, 500);
    CreateExplosion(x-2, y, z, 1, 500);
    CreateExplosion(x, y+2, z, 1, 500);
    CreateExplosion(x, y-2, z, 1, 500);
    CreateExplosion(x+4, y, z, 1, 500);
    CreateExplosion(x-4, y, z, 1, 500);
    CreateExplosion(x, y+4, z, 1, 500);
    CreateExplosion(x, y-4, z, 1, 500);
    CreateExplosion(x+2, y+2, z, 1, 500);
    CreateExplosion(x+2, y-2, z, 1, 500);
    CreateExplosion(x-2, y+2, z, 1, 500);
    CreateExplosion(x-2, y-2, z, 1, 500);
    
    CreateExplosion(x, y, z, 1, 500);
    CreateExplosion(x+2, y, z, 1, 500);
    CreateExplosion(x-2, y, z, 1, 500);
    CreateExplosion(x, y+2, z, 1, 500);
    CreateExplosion(x, y-2, z, 1, 500);
    CreateExplosion(x+4, y, z, 1, 500);
    CreateExplosion(x-4, y, z, 1, 500);
    CreateExplosion(x, y+4, z, 1, 500);
    CreateExplosion(x, y-4, z, 1, 500);
    CreateExplosion(x+2, y+2, z, 1, 500);
    CreateExplosion(x+2, y-2, z, 1, 500);
    CreateExplosion(x-2, y+2, z, 1, 500);
    CreateExplosion(x-2, y-2, z, 1, 500);
    
    CreateExplosion(x, y, z, 1, 500);
    CreateExplosion(x+2, y, z, 1, 500);
    CreateExplosion(x-2, y, z, 1, 500);
    CreateExplosion(x, y+2, z, 1, 500);
    CreateExplosion(x, y-2, z, 1, 500);
    CreateExplosion(x+4, y, z, 1, 500);
    CreateExplosion(x-4, y, z, 1, 500);
    CreateExplosion(x, y+4, z, 1, 500);
    CreateExplosion(x, y-4, z, 1, 500);
    CreateExplosion(x+2, y+2, z, 1, 500);
    CreateExplosion(x+2, y-2, z, 1, 500);
    CreateExplosion(x-2, y+2, z, 1, 500);
    CreateExplosion(x-2, y-2, z, 1, 500);
}

public OnDynamicObjectMoved(objectid)
{
    new Float:x, Float:y, Float:z;//, Float:x2, Float:y2;
    for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
		if(objectid == Obj_FloorDoors[i][0])
		{
		    GetDynamicObjectPos(Obj_FloorDoors[i][0], x, y, z);

		    if(x < X_DOOR_L_OPENED - 0.5)   // Some floor doors have shut, move the elevator to next floor in queue:
		    {
				Elevator_MoveToFloor(ElevatorQueue[0]);
				RemoveFirstQueueFloor();
			}
		}
	}

	if(objectid == Obj_Elevator)   // The elevator reached the specified floor.
	{
	    KillTimer(ElevatorBoostTimer);  // Kills the timer, in case the elevator reached the floor before boost.

	    FloorRequestedBy[ElevatorFloor] = INVALID_PLAYER_ID;

	    Elevator_OpenDoors();
	    Floor_OpenDoors(ElevatorFloor);

	    GetDynamicObjectPos(Obj_Elevator, x, y, z);
	    Label_Elevator	= CreateDynamic3DTextLabel("Appuyez sur 'F' pour utiliser l'ascensseur", 0xFFFFDD, 1784.9822, -1302.0426, z - 0.9, 4.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	    ElevatorState 	= ELEVATOR_STATE_WAITING;
	    SetTimer("Elevator_TurnToIdle", ELEVATOR_WAIT_TIME, 0);
	}
    /*for(new i=0; i<MAX_BALL+1; i++)
	{
	    if(basket[i][used] == 0)
	        {continue;}
	    if(basket[i][shooting] == 2)
	    	{BallDown2(basket[i][owner],i);return 1;}
	    else if(basket[i][shooting] == 3)
	    	{BallDown3(basket[i][owner],i);return 1;}
	    else if(basket[i][shooting] == 4)
	    	{BallDown4(basket[i][owner],i);return 1;}
	    else if(basket[i][shooting] == 5)
	    	{BallDown5(basket[i][owner],i);return 1;}
	    else if(basket[i][shooting] == 6)
	    	{ApplyAnimation(basket[i][owner],"BSKTBALL","BBALL_walk",4.1,1,1,1,1,1); basket_HavingBall[basket[i][owner]]=1; basket_Anim[basket[i][owner]] = 0;}
	    	
        if(basket[i][bounce] == 1)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z+1.2, 4);
	            basket[i][bounce] = 2;
	    }
	    else if(basket[i][bounce]  == 2)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z-1.2, 4);
	            basket[i][bounce] = 3;
	    }
	    else if(basket[i][bounce]  == 3)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z+0.8, 3);
	            basket[i][bounce] = 4;
	    }
	    else if(basket[i][bounce]  == 4)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z-0.8, 3);
	            basket[i][bounce] = 5;
	    }
	    else if(basket[i][bounce] == 5)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z+0.5, 2);
	            basket[i][bounce] = 6;
	    }
	    else if(basket[i][bounce]  == 6)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z-0.5, 2);
	            basket[i][bounce] = 7;
	    }
	    else if(basket[i][bounce]  == 7)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z+0.2, 1);
	            basket[i][bounce] = 8;
	    }
	    else if(basket[i][bounce]  == 8)
	    {
	            GetDynamicObjectPos(basket[i][object], x, y, z);
	            MoveDynamicObject(basket[i][object], x, y, z-0.2, 1);
	            basket[i][bounce] = 0;
	    }

	    if(!basket_HavingBall[basket[i][owner]])
			{return 1;}

	    new Keys, ud, lr;
	    GetPlayerKeys(i, Keys, ud, lr);

	    if(basket_Anim[basket[i][owner]])
	    {
	        GetPlayerPos(basket[i][owner], x, y, z);
			StopDynamicObject(basket[i][object]);
	        GetXYInFrontOfPlayer(basket[i][owner], x2, y2, 0.4);
	        switch(basket[i][statut])
			{
				case 0:
					{basket[i][statut] = 1;MoveDynamicObject(basket[i][object], x2, y2, z+0.1, 5.5);}
				case 1:
					{basket[i][statut] = 0;MoveDynamicObject(basket[i][object], x2, y2, z-0.8, 5.5);}
			}
			return 1;
	    }

	    if(Keys & KEY_SPRINT)
		{
	        ApplyAnimation(basket[i][owner],"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
	        GetPlayerPos(basket[i][owner], x, y, z);
	        StopDynamicObject(basket[i][object]);
	        GetXYInFrontOfPlayer(basket[i][owner], x2, y2, 1.5);
	        switch(basket[i][statut])
			{
				case 0:
					{basket[i][statut] = 1;MoveDynamicObject(basket[i][object], x2, y2, z+0.1, 8);}
	            case 1:
	            	{basket[i][statut] = 0;MoveDynamicObject(basket[i][object], x2, y2, z-0.8, 8);}
			}
			return 1;
	    }
	    else
	    	{ApplyAnimation(i,"BSKTBALL","BBALL_walk",4.1,1,1,1,1,1);}

        GetPlayerPos(basket[i][owner], x, y, z);
	    StopDynamicObject(basket[i][object]);
	    GetXYInFrontOfPlayer(basket[i][owner], x2, y2, 1.2);
		switch(basket[i][statut])
		{
			case 0:
				{basket[i][statut] = 1;MoveDynamicObject(basket[i][object], x2, y2, z+0.1, 5);}
	        case 1:
	        	{basket[i][statut] = 0;MoveDynamicObject(basket[i][object], x2, y2, z-0.8, 5);}
		}
	}*/
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
    return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public anticheat_Sobeit2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pMod_sa_Spawn]==0)
	    {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("anticheat_Sobeit", 5500, 0, "i", playerid);
			PlayerInfo[playerid][pMod_sa_Spawn]=1;
		}
	}
	return 1;
}

public anticheat_Sobeit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:x, Float:y, Float:z;
	    GetPlayerCameraFrontVector(playerid, x, y, z);
	    #pragma unused x
	    #pragma unused y
	    if(z < -0.8)
		{
	        TogglePlayerControllable(playerid, 1);
	        PlayerInfo[playerid][pMod_sa] = 1;
	        if(PlayerInfo[playerid][pMod_sa]==1 && PlayerInfo[playerid][pAdmin] < 1)
	        	{OnPlayerCheat(playerid,15);}
	    }
	    else
			{TogglePlayerControllable(playerid, 1);}
    }
    return 1;
}

stock speedometer_Show(playerid)
{
    TextDrawShowForPlayer(playerid, speedo_Box[0]);
    TextDrawShowForPlayer(playerid, speedo_Box[1]);
    TextDrawShowForPlayer(playerid, speedo_Gas);
    TextDrawShowForPlayer(playerid, speedo_Motor);
    TextDrawShowForPlayer(playerid, speedo_Light);
    TextDrawShowForPlayer(playerid, speedo_BarGas[0]);
    TextDrawShowForPlayer(playerid, speedo_BarGas[1]);
    PlayerTextDrawShow(playerid,speedo_Speed[playerid]);
    PlayerTextDrawShow(playerid,speedo_Health[playerid]);
    PlayerTextDrawShow(playerid,speedo_Kilometrage[playerid]);
    PlayerTextDrawShow(playerid,speedo_LightMotor[playerid]);
    PlayerTextDrawShow(playerid,speedo_Cris[playerid]);
    PlayerTextDrawShow(playerid,speedo_Brid[playerid]);
    PlayerTextDrawShow(playerid,speedo_BoxSpeed[playerid]);
    PlayerTextDrawShow(playerid,speedo_Beat[playerid][0]);
    PlayerTextDrawShow(playerid,speedo_Beat[playerid][1]);
    PlayerTextDrawShow(playerid,speedo_Lighting[playerid][0]);
    PlayerTextDrawShow(playerid,speedo_Lighting[playerid][1]);
    speedometer_Update(playerid,8,0);
    speedometer_Update(playerid,9,0);
    speedometer_Update(playerid,4,0);
    speedometer_Update(playerid,1,0);
    speedometer_Update(playerid,2,0);
    if(car_IndicatorStatut[GetPlayerVehicleID(playerid)]==1)
        {SpeedoTimer[playerid] = SetTimerEx("speedometer_Blinking",1000,true,"ii",playerid,1);}
	else if(car_IndicatorStatut[GetPlayerVehicleID(playerid)]==2)
        {SpeedoTimer[playerid] = SetTimerEx("speedometer_Blinking",1000,true,"ii",playerid,2);}
}

stock speedometer_Hide(playerid)
{
    KillTimer(SpeedoTimer[playerid]);
    TextDrawHideForPlayer(playerid, speedo_Box[0]);
    TextDrawHideForPlayer(playerid, speedo_Box[1]);
    TextDrawHideForPlayer(playerid, speedo_Gas);
    TextDrawHideForPlayer(playerid, speedo_Motor);
    TextDrawHideForPlayer(playerid, speedo_Light);
    TextDrawHideForPlayer(playerid, speedo_BarGas[0]);
    TextDrawHideForPlayer(playerid, speedo_BarGas[1]);
    PlayerTextDrawHide(playerid,speedo_Speed[playerid]);
    PlayerTextDrawHide(playerid,speedo_Health[playerid]);
    PlayerTextDrawHide(playerid,speedo_Kilometrage[playerid]);
    PlayerTextDrawHide(playerid,speedo_LightMotor[playerid]);
    PlayerTextDrawHide(playerid,speedo_Bar[playerid]);
    PlayerTextDrawHide(playerid,speedo_Cris[playerid]);
    PlayerTextDrawHide(playerid,speedo_Brid[playerid]);
    PlayerTextDrawHide(playerid,speedo_BoxSpeed[playerid]);
    PlayerTextDrawHide(playerid,speedo_Beat[playerid][0]);
    PlayerTextDrawHide(playerid,speedo_Beat[playerid][1]);
    PlayerTextDrawHide(playerid,speedo_Lighting[playerid][0]);
    PlayerTextDrawHide(playerid,speedo_Lighting[playerid][1]);
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(IsPlayerNPC(playerid))
		{return 1;}

	new string[128],
	 	carid = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			{if(Spectate[i]==playerid)server_PlayerSpectatePlayer(i,playerid);}
		
		speedometer_Hide(playerid);
		StopAudioStreamForPlayer(playerid);

	    ceinture[playerid] = 0;
	    casque[playerid] = 0;
	    
	    if(job_Start[playerid]==1 && job_CarId[playerid] != -1)
		{
			job_ExitTime[playerid]=120;
			if(PlayerInfo[playerid][pJob]==1)
			    {SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);}
		}
	}
	else if(newstate == PLAYER_STATE_PASSENGER)
	{
	    PlayerInfo[playerid][pLastCar]=carid;
	    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(Spectate[i]==playerid)
				{server_PlayerSpectateVehicle(i, carid);}
				
			if(IsPlayerNPC(i) && npc[i][typeZ] == 10)
				{print("ok2"); CallRemoteFunction("npc_taxiStart","");}
		}
		
		if(strcmp(vehicle[carid][stream], "Aucun", true) == 1)
			{PlayAudioStreamForPlayer(playerid, vehicle[carid][stream]);}
			
		if(GetVehicleModel(carid) == 570 && trainTicket[playerid] == true)
			{msg_Client(playerid,COLOR_WHITE,"Controlleur : Billet s'il vous plait ! Merci.  -  Passer un agréable voyage.");trainTicket[playerid]=false;}
		else if(GetVehicleModel(carid) == 570 && trainTicket[playerid] == false)
		    {msg_Client(playerid,COLOR_WHITE,"Controlleur : Billet s'il vous plait ! Merci.  -  Sortez d'ici si vous n'avez pas de billet !"); RemovePlayerFromVehicle(playerid);}
	}
	else if(newstate == PLAYER_STATE_DRIVER)
	{
	    /*new driver = INVALID_PLAYER_ID;
	    if (driver != INVALID_PLAYER_ID)
		{
		    anticheat_Warn[playerid][0]++;
			if (anticheat_Warn[playerid][0] >= 3)
				{OnPlayerCheat(playerid,11);}
		}*/
		ceinture[playerid] = 0; casque[playerid] = 0;
		PlayerInfo[playerid][pLastCar]=carid;
		
		if(strcmp(vehicle[carid][stream], "Aucun", true) == 1)
			{PlayAudioStreamForPlayer(playerid, vehicle[carid][stream]);}
		
		// Spec admin
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			{if(Spectate[i]==playerid)server_PlayerSpectateVehicle(i, carid);}
			
        if(job_Start[playerid]==1)
		{
      		if(PlayerInfo[playerid][pJob] == 2 && (GetVehicleModel(carid) == 532 || GetVehicleModel(carid) == 478))
      		{
			  	job_CarId[playerid] = carid;
			  	if(GetVehicleModel(carid) == 478)
			  	    {msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Utiliser la touche 'Y' pour charger une botte.");}
                else if(GetVehicleModel(carid) == 532)
			  	    {msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Recolter des bottes de paille dans l'un des champs.");}
	 		}
	 		if(PlayerInfo[playerid][pJob] == 9 && job_CarId[playerid] == carid)
      		{
      		    if(job_City[playerid] == 0)
      		    {
				  	if(job_TempVar[playerid] == 1)
						{new rand = random(6);SetPlayerCheckpoint(playerid,gValetPointsLs[rand][0],gValetPointsLs[rand][1],gValetPointsLs[rand][2],5.0);}
      		    	else
						{SetPlayerCheckpoint(playerid,330.7638,-1517.8726,35.8672,5.0);}
				}
				else
				{
				    if(job_TempVar[playerid] == 1)
						{new rand = random(6);SetPlayerCheckpoint(playerid,gValetPointsSf[rand][0],gValetPointsSf[rand][1],gValetPointsSf[rand][2],5.0);}
      		    	else
						{SetPlayerCheckpoint(playerid,-1753.4178,954.5569,24.6172,5.0);}
				}
      		    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez déposer la voiture.");
      		    gPlayerCheckpoint[playerid]=9;
      		}
		}
		
		// Speedometre
		if(!IsABike(carid))
		{
		    if(vehicle[carid][cEngine]==false)
				{msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Appuyez sur la touche 'N' pour démarrer.");}
            speedometer_Show(playerid);
		}

		// Permis requis
		if(IsABoat(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{return 1;}
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
			    msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas le permis de navigation. Sortez du bateau !");
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}
		else if(IsAPlane(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{return 1;}
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas le permis de vol. Sortez de l'Avion/Hélicopter !");
			    RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}
		else if(IsATrain(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{return 1;}
		    if(PlayerInfo[playerid][pTrainLic] != 1)
			{
				msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas le permis de train. Sortez du train !");
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}
		else if(IsPoidLourd(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{return 1;}
		    if(PlayerInfo[playerid][pLourdLic] < 1)
			{
			    msg_Client(playerid, COLOR_LIGHTBLUE, "{8BE2E2}» Véhicule «{FFFFFF} Fais attention à la police, tu n'as pas le permis poid lourd !");
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}

        if(vehicle[carid][sabot] == true && AdminDuty[playerid] != 1)
		{
		    format(string, sizeof(string), "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule est bloqué par un sabot, raison : %s",vehicle[carid][sabotDesc]);
			msg_Client(playerid, COLOR_RED, string);
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
		}

		if(vehicle[carid][cOwned]==0 && vehicle[carid][cType] == CAR_SELL)
		{
		    new title[128];
		    if(PlayerInfo[playerid][pAdmin] >= 4 && AdminDuty[playerid]==1)format(string,sizeof(string),"Acheter le véhicule\nTester le véhicule\nEditer le véhicule (Admin)");
		    else format(string,sizeof(string),"Acheter le véhicule\nTester le véhicule");

		    format(title,sizeof(title),"{FFFFFF} Véhicule ({FF6347}%s{FFFFFF}) à vendre pour : ${FF6347}%d",vehicle[carid][cDescription],vehicle[carid][cValue]);
		    TogglePlayerControllable(playerid, 0);
		    ShowPlayerDialog(playerid,84,DIALOG_STYLE_LIST, title, string, "Valider", "Sortir");
		}
		else if(vehicle[carid][cOwned]==1 && vehicle[carid][cType] == CAR_OWN)
		{
			if(AdminDuty[playerid] == 1)
				{return msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin.");}
			if(vehicle[carid][cStatut] > 0 && !(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <=4))
				{msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule est à la fourrière!");return RemovePlayerFromVehicle(playerid);}
			if(vehicle[carid][cEngine] || PlayerInfo[playerid][pCar][0] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][1] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][2] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][3] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][4] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][5] == vehicle[carid][SQLID])
				{return 1;}
		}
		else if(vehicle[carid][cOwned] == 2 && (vehicle[carid][cType]>= 1 && vehicle[carid][cType] <=10 || vehicle[carid][cType]>=200)) // Faction
		{
		    if(vehicle[carid][cEngine] == true || vehicle[carid][cType] == PlayerInfo[playerid][pMember])
				{return 1;}
            if(AdminDuty[playerid] == 1)
				{return msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin.");}
		    else
			{
			    format(string,sizeof(string),"{009798}» Véhicule «{FF0000} Vous ne faites pas parti de(s) %s.",GetFactionName(vehicle[carid][cType]));
				msg_Client(playerid, COLOR_LIGHTRED,string);
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicle[carid][cOwned] == 3) // Jobs
		{
		    if(AdminDuty[playerid] == 1)
				{return msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin.");}

		    if(PlayerInfo[playerid][pJob] == vehicle[carid][cType]-30)
		    {
		        if(job_Start[playerid] == 0 && PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob] != 17)
			    {
			        TogglePlayerControllable(playerid, 0);
					format(string,sizeof(string),"{FFFFFF}Commencer votre travaille ?\nUtilisez {FF0000}'/job fin'{FFFFFF} pour arrêter.");
		        	ShowPlayerDialog(playerid, 125,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Début",string,"Commencer","Sortir");
		        	return 1;
				}
				else
				{
				    if(carid == job_CarId[playerid])
				     	{job_ExitTime[playerid]=0;}
				}
		    }
		    else
		        {return msg_Client(playerid, COLOR_LIGHTRED,"{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas les clefs de ce véhicule."), RemovePlayerFromVehicle(playerid); }
		}
		if(IsASchoolCar(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin."); return 1;}
	        else if(permis_Player[playerid] == 2)
	        {
	            permis_CheckPoints[playerid] = 0;
	            msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Ne dépassez pas la limitaion de vitesse et n'oubliez pas votre ceinture.");
				if(permis_City[playerid]==0)
					{SetPlayerCheckpoint(playerid,gSchoolDriveLS[0][0],gSchoolDriveLS[0][1],gSchoolDriveLS[0][2], 5);}
				else if(permis_City[playerid]==1)
					{SetPlayerCheckpoint(playerid,gSchoolDriveSF[0][0],gSchoolDriveSF[0][1],gSchoolDriveSF[0][2], 5);}
                else if(permis_City[playerid]==2)
					{SetPlayerCheckpoint(playerid,gSchoolDriveLV[0][0],gSchoolDriveLV[0][1],gSchoolDriveLV[0][2], 5);}
	        }
		    else
				{RemovePlayerFromVehicle(playerid);msg_Client(playerid, COLOR_LIGHTRED,"{009798}» Véhicule «{FF0000} Vous ne passez pas votre permis de conduire.");}
		}
		if(IsARentCar(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin."); return 1;}
            else if (HireCar[playerid] != carid)
			{
	            format(string,sizeof(string),"{FFFFFF}Cette voiture est à louer pour 1h pour le prix de {00FF00}$%d .",sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR][ubEnterPrice]);
				ShowPlayerDialog(playerid,72,DIALOG_STYLE_MSGBOX,"» Véhicule « Location de voiture",string,"Louer","Sortir");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(IsARentMoto(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin."); return 1;}
            else if (HireCar[playerid] != carid)
			{
	            format(string,sizeof(string),"{FFFFFF}Cette moto est à louer pour 1h pour le prix de {00FF00}$%d .",sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+1][ubEnterPrice]);
				ShowPlayerDialog(playerid,72,DIALOG_STYLE_MSGBOX,"» Véhicule « Location de moto",string,"Louer","Sortir");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(IsARentBike(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin."); return 1;}
            else if (HireCar[playerid] != carid)
			{
	            format(string,sizeof(string),"{FFFFFF}Ce velo est à louer pour 1h pour le prix de {00FF00}$%d .",sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+2][ubEnterPrice]);
				ShowPlayerDialog(playerid,72,DIALOG_STYLE_MSGBOX,"» Véhicule « Location de vélo",string,"Louer","Sortir");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(IsARentBoat(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin."); return 1;}
            else if (HireCar[playerid] != carid)
			{
	            format(string,sizeof(string),"{FFFFFF}Ce bateau est à louer pour 1h pour le prix de {00FF00}$%d .",sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+3][ubEnterPrice]);
				ShowPlayerDialog(playerid,72,DIALOG_STYLE_MSGBOX,"» Véhicule « Location de bateau",string,"Louer","Sortir");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(IsARentPlane(carid))
		{
		    if(AdminDuty[playerid] == 1)
				{msg_Client(playerid, COLOR_WHITE, "{FF0000}» Admin «{8BE2E2}» Véhicule «{FFFFFF} Entrez dans un véhicule en admin."); return 1;}
            else if (HireCar[playerid] != carid)
			{
	            format(string,sizeof(string),"{FFFFFF}Cet avion est à louer pour 1h pour le prix de {00FF00}$%d .",sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+4][ubEnterPrice]);
				ShowPlayerDialog(playerid,72,DIALOG_STYLE_MSGBOX,"» Véhicule « Location d'avion",string,"Louer","Sortir");
				TogglePlayerControllable(playerid, 0);
			}
		}
	}
	return 1;
}

public OnTrailerUpdate(playerid, vehicleid)
{
	if(GetVehicleTrailer(GetPlayerVehicleID(playerid)) != 0)
	{
	    if(BlinkTrailer[GetPlayerVehicleID(playerid)] == 0)
        {
            BlinkTrailer[GetPlayerVehicleID(playerid)]=vehicleid;
            DisableCarBlinking(GetPlayerVehicleID(playerid));
    		SetCarBlinking(GetPlayerVehicleID(playerid), BlinkSide[GetPlayerVehicleID(playerid)]);
   			TrailerVehicle[vehicleid] = GetPlayerVehicleID(playerid);
        }
    }
    else
    {
        if(IsCarBlinking(GetPlayerVehicleID(playerid)))
	    {
	        DisableCarBlinking(GetPlayerVehicleID(playerid));
	        SetCarBlinking(GetPlayerVehicleID(playerid), BlinkSide[GetPlayerVehicleID(playerid)]);
	    }
	    TrailerVehicle[BlinkTrailer[GetPlayerVehicleID(playerid)]] = 0;
        BlinkTrailer[GetPlayerVehicleID(playerid)]=0;
    }
	new string[128];
	if(job_Start[playerid] == 1 && PlayerInfo[playerid][pJob] == 10 && job_TempVar[playerid] == 0)
	{
	    new trailerM = GetVehicleModel(vehicleid),
	        name[32];
	        
		switch (trailerM)
		{
		    case 591: {name="Meubles"; SetPlayerCheckpoint(playerid,-16.5987,-282.9623,5.4297,7.0);}
		    case 584: {name="Essence"; SetPlayerCheckpoint(playerid,-1044.0962,-652.2784,32.0078,7.0);}
		    case 450: {name="Gravier"; SetPlayerCheckpoint(playerid,360.3770,864.5231,20.9967,7.0);}
		    case 435: {name="Conserves"; SetPlayerCheckpoint(playerid,-525.0138,-489.7664,25.5234,7.0);}
		}
		format(string,sizeof(string),"{78769D}» Job «{FFFFFF} Allez chercher la cargaison : %s",name);
		msg_Client(playerid,COLOR_JOB,string);
		job_TempVar[playerid] = vehicleid;
	}
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	GetVehicleDamageStatus(vehicleid, vehicle[vehicleid][cPanels], vehicle[vehicleid][cDoors], vehicle[vehicleid][cLights], vehicle[vehicleid][cTires]);
	GetVehicleHealth(vehicleid,vehicle[vehicleid][cHealth]);
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    new string[128];
 	car_Starting[playerid] = false;
 	LastHealth[playerid] = 0;
 	LastSpeed[playerid] = 0;
 	if(gang_PlayerVoleCar[playerid] == 1)
 	{
 	    gang_TimerForVoleCar[playerid]=0;
		DisablePlayerCheckpoint(playerid);
		gang_PlayerVoleCar[playerid] = 0;
		msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous n'avez pas rejoint le garage.");
		new engine,lights,alarm,doors,bonnet,boot,objective;
  		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
        vehicle[vehicleid][cEngine]=false;
 	}
 	if(IsPlayerInAnyVehicle(playerid) == 1 && ceinture[playerid] == 1)
	{
		format(string, sizeof(string), "* %s retire sa ceinture de sécurité et sort de son vehicule.", PlayerInfo[playerid][pName]);
	 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
 		ceinture[playerid] = 0;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1 && casque[playerid] == 1)
	{
		format(string, sizeof(string), "* %s descend et retire son casque de sécurité.", PlayerInfo[playerid][pName]);
	 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
    	RemovePlayerAttachedObject(playerid, HelmetSlotObject[playerid]);
 		casque[playerid] = 0;
	}

	if(gPlayerDriveBy[playerid] == true)
	    {removeDriveBy(playerid);}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return true;
}

public OnPlayerRequestClass(playerid, classid)
{
	new string[512];
	if(IsPlayerNPC(playerid) || inscription_Step[playerid]>=1 && inscription_Step[playerid] <= 9)
		{return 1;}
	if (gPlayerLogged[playerid] != 1)
	{
		ClearChatbox(playerid, 10);
		if (gPlayerAccount[playerid] == 1) // Connexion
		{
		    TimerConnectOff(playerid);
		    ClearChatbox(playerid,4);
			format(string, sizeof(string), "{6E6E6E}» AntiCheat «{AAAAAA} Vous avez 60 secondes pour vous connecter.");
			msg_Client(playerid, COLOR_YELLOW, string);
			player_antihack[playerid] = SetTimerEx("server_AntiHack", 60000, 0, "i", playerid);
			format(string,sizeof(string),"{FFFFFF}Bienvenue {327632}%s{FFFFFF} sur {324376}%s{FFFFFF}.\n\nVotre compte est enregistré.\n{327675}\n\t Site : www.lvrp.fr\n\t Forum : www.forum.lvrp.fr\n\n{FFFFFF}Veuillez entrer votre mot de passe ci-dessous pour vous connecter :",PlayerInfo[playerid][pRealName],SERVER_NAME);
			ShowPlayerDialog(playerid,12346,DIALOG_STYLE_PASSWORD,"» Connexion «",string,"Valider","Quitter");
		}
		else // Inscription
		{
		    if(MySQLCheckIp(PlayerInfo[playerid][pIP]))
				{printf("[Kick] %s : 3 comptes par ip",PlayerInfo[playerid][pRealName]);MySQLKick(playerid,-1,"3 comptes par IP MAX.");return 1;}
			if(setting[inscription]==false) // Inscription par site
			{
			    format(string,sizeof(string),"{FFFFFF}Bienvenue sur %s, {33AA33}%s{FFFFFF}\n\nLes inscriptions se font depuis le site ce qui permet de limiter le nombre d'inscriptions.\nLors de votre inscription vous serez automatiquement inscrit sur le forum\navec le même nom de compte IG que vous aurez choisi.\n\nMerci de votre compréhension.",SERVER_NAME,PlayerInfo[playerid][pRealName]);
				ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX,"» Inscription « Information",string,"Valider","");
				MySQLKick(playerid,-1,"Inscription par site");
			    return 1;
			}
			else // Inscription IG
			{
			    if(setting[beta]==true) // VERSION BETA
			    {
			        format(string,sizeof(string),"{FFFFFF}Bienvenue {327632}%s{FFFFFF} sur {324376}%s{FFFFFF}.\n\n{327675}\n\t Site : www.lvrp.fr\n\t Forum : www.forum.lvrp.fr\n\n{FFFFFF}Entrez votre clée beta pour vous inscrire :",PlayerInfo[playerid][pRealName],SERVER_NAME);
				    ShowPlayerDialog(playerid,45,DIALOG_STYLE_INPUT,"» Beta Fermée «",string,"Valider","");
			    }
			    else
			    {
				    format(string,sizeof(string),"{FFFFFF}Bienvenue sur %s, {33AA33}%s{FFFFFF}\n\nVous n'avez pas encore de compte, vous allez donc procéder à l'inscription.\nLors de votre inscription différentes information vous seront demandées.\n\nVous serez automatiquement inscrit sur le site avec votre nom IG actuel.\n\n{FF0000}Les inscriptions directement IG sont temporaires.",SERVER_NAME,PlayerInfo[playerid][pRealName]);
				    ShowPlayerDialog(playerid,81,DIALOG_STYLE_MSGBOX,"» Inscription «",string,"Valider","");
				    inscription_Step[playerid]=0;
			    }
			}
		}
		server_SetPlayerVirtualWorld(playerid,1);
		if(gPlayerTrailer[playerid]==0)
		{
		    server_TogglePlayerSpectating(playerid,true);
  			TimerConnectOff(playerid);
			PlayerconnectPos1(playerid);
		}
		gPlayerTrailer[playerid]=1;
	}
	else
		{SpawnPlayer(playerid);}
	return 0;
}

public TimerKick(playerid)
{
	if(IsPlayerConnected(playerid))
		{Kick(playerid);}
	return 1;
}

public MySQLJail(playerid,by,reason[],times)
{
    new reasonSQL[256],giveplayer[MAX_PLAYER_NAME];
    new string[256], ipSQL[16];
    mysql_escape_string(reason, reasonSQL, sizeof(reasonSQL), MYSQL);
    GetPlayerIp(playerid,ipSQL,sizeof(ipSQL));

    if(by==-1)
        {giveplayer="Serveur";}
	else if(by==-2)
        {giveplayer="Anti-Cheat";}
	else
	    {GetPlayerName(by, giveplayer, sizeof(giveplayer));}

    format(sql, sizeof(sql), "INSERT INTO lvrp_log_jail (SQLid,Ip,Time,Date,Reason,JailBy) VALUES ('%d','%s','%d',UNIX_TIMESTAMP(),'%s','%s')",
	PlayerInfo[playerid][pSQLID],ipSQL,times,reasonSQL,giveplayer);
	mysql_pquery(MYSQL,sql);
	SetTimerEx("chargement",3000,0,"i",playerid);
	SafeResetPlayerWeapons(playerid);
	TogglePlayerControllable(playerid, 0);
	PlayerInfo[playerid][pJailed] = 2;
	PlayerInfo[playerid][pJailTime] = times*60;
	server_SetPlayerInterior(playerid, 0);
	SafeSetPlayerPos(playerid, 7282.990234375,-1521.5159912109,2.9969999790192);
	format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été jail pendant %d minute(s). Par : %s.",times,giveplayer);
	msg_Client(playerid,COLOR_INFO,string);
	format(string,sizeof(string),"[Jail] %s a été jail pendant %d minute(s) par %s, raison : %s ",PlayerInfo[playerid][pRealName],times,giveplayer,reasonSQL);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	format(string, sizeof(string), "%s a jail %s pendant %d mns, raison : %s.",giveplayer, PlayerInfo[playerid][pRealName],times,reasonSQL);
	log_Admin(string);
	return 1;
}


public MySQLKick(playerid,by,reason[])
{
    new reasonSQL[256],giveplayer[MAX_PLAYER_NAME];
    new string[256], ipSQL[16];
    mysql_escape_string(reason, reasonSQL, sizeof(reasonSQL), MYSQL);
    GetPlayerIp(playerid,ipSQL,sizeof(ipSQL));
    
    if(by==-1)
        {giveplayer="Serveur";}
	else if(by==-2)
        {giveplayer="Anti-Cheat";}
	else
	    {GetPlayerName(by, giveplayer, sizeof(giveplayer));}
	    
    format(sql, sizeof(sql), "INSERT INTO lvrp_log_kick (SQLid,KickedBy,Ip,Reason,Date) VALUES ('%d','%s','%s','%s',UNIX_TIMESTAMP())",
	PlayerInfo[playerid][pSQLID],giveplayer,ipSQL,reasonSQL);
	mysql_pquery(MYSQL,sql);

	format(string,sizeof(string),"{005660}» Serveur «{C8C8C8} Vous avez été kické pour la raison suivante : %s",reasonSQL);
	msg_Client(playerid,COLOR_SERVER,string);
	msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Utilisez '/q' pour quitter.");
 	SetTimerEx("TimerKick", 100, 0, "i", playerid);
	return 1;
}

public MySQLBan(playerid,by,reason[],times)
{
	new reasonSQL[128],giveplayer[MAX_PLAYER_NAME];
    new string[128], ipSQL[16];
    mysql_escape_string(reason, reasonSQL, sizeof(reasonSQL), MYSQL);
    GetPlayerIp(playerid,ipSQL,sizeof(ipSQL));
    format(sql, sizeof(sql), "SELECT id FROM lvrp_users WHERE Name='%s' LIMIT 1", PlayerInfo[playerid][pRealName]);
	mysql_query(MYSQL,sql);
	new tmp_sqlid = -1;
	cache_get_value_name_int(0,"id", tmp_sqlid);
	
    if(by==-1)
        {giveplayer="Serveur";}
	else
	    {GetPlayerName(by, giveplayer, sizeof(giveplayer));}

    format(sql, sizeof(sql), "INSERT INTO lvrp_users_bans (SQLid,BannedBy,Ip,Reason,Date,Time) VALUES ('%d','%s','%s','%s',UNIX_TIMESTAMP(),'%d')",
	tmp_sqlid,giveplayer,ipSQL,reasonSQL,times);
	mysql_pquery(MYSQL,sql);

	if(times==-1)
		{format(string,sizeof(string),"{005660}» Serveur «{C8C8C8} Vous avez été banni pour la raison suivante : %s",reasonSQL);}
	else
	    {format(string,sizeof(string),"{005660}» Serveur «{C8C8C8} Vous avez été banni temporairement %d heure(s) pour la raison suivante : %s",times,reasonSQL);}
	msg_Client(playerid,COLOR_SERVER, string);
	msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Utilisez '/q' pour quitter.");

    if(gPlayerLogged[playerid]==0)
		{SetTimerEx("TimerKick", 100, 0, "i", playerid);}
	else
	{
		format(sql, sizeof(sql), "UPDATE lvrp_users SET Locked=1 WHERE id=%d",tmp_sqlid);
		mysql_pquery(MYSQL,sql);
		SetTimerEx("TimerKick", 1000, 0, "i", playerid);
	}
	return 1;
}

stock GetWeaponSlot(weaponid)
{
    switch(weaponid)
    {
        case 0,1: return 0;
        case 2..9: return 1;
        case 10..15: return 10;
        case 16, 17, 18, 39: return 8;
        case 22..24: return 2;
        case 25..27: return 3;
        case 28, 29, 32: return 4;
        case 30, 31: return 5;
        case 33, 34: return 6;
        case 35..38: return 7;
        case 40: return 12;
        case 41..43: return 9;
        case 44..46: return 11;
    }
    return -1;
}

stock GetCheatName(cheatid)
{
	new name[32]="Aucun";
    switch(cheatid)
	{
	    case 1:	{name="Speed Hack";}
	    case 2:	{name="Block Munitions";}
	    case 3:	{name="Tir Rapide";}
	    case 4:	{name="Crash par balle";}
	    case 5:	{name="Cheat Munitions";}
	    case 6:	{name="Animations";}
	    case 7:	{name="JetPack";}
	    case 8:	{name="Fausse Arme";}
	    case 9:	{name="Cheat Arme";}
	    case 10: {name="Spec Hack";}
	    case 11: {name="CarJack Distance";}
	    case 12: {name="Cheat Vole";}
	    case 13: {name="Cheat Tuning Véhicule";}
	    case 14: {name="Wall Ride";}
	    case 15: {name="Sobeit Détecté";}
	    case 16: {name="Cheat DGUN";}
	    case 17: {name="Cheat TP";}
	}
	return name;
}

stock GetBizzActor(bizzid)
{
	new tmpId;
    switch(cheatid)
	{
	    case 1:					{tmpId=150;}
	    case 3:					{tmpId=141;}
	    case 4,20:				{tmpId=76;}
	    case 5:					{tmpId=209;}
	    case 6:					{tmpId=155;}
	    case 7:					{tmpId=205;}
	    case 8:					{tmpId=167;}
	    case 9:					{tmpId=82;}
	    case 10:				{tmpId=101;}
	    case 11:				{tmpId=178;}
	    case 12,13:				{tmpId=67;}
	    case 14:				{tmpId=80;}
	    case 2,15,16,17,18,19:	{tmpId=7;}
	}
	return name;
}

stock OnPlayerCheat(playerid, cheatid, optionid=0, bool:kick=true)
{
	new string[128],option[32]="",wep[32];
	if(optionid > 0)
	{
	    GetWeaponName(optionid,wep,sizeof(wep));
		format(option,sizeof(option),"(%s)",wep);
	}
	if(kick == true)
	{
	    format(string,sizeof(string),"{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické, raison : %s %s.",PlayerInfo[playerid][pRealName],GetCheatName(cheatid),option);
		SendClientMessageToAll(0x40FF40FF,string);
		MySQLKick(playerid,-2,GetCheatName(cheatid));
	}
	else
	{
	    format(string,sizeof(string),"{6E6E6E}» AntiCheat «{AAAAAA} Vous avez été suspectez de cheat : %s %s.",GetCheatName(cheatid),option);
	    msg_Client(playerid,COLOR_WHITE,string);
	}
	printf("[AntiCheat] %s(%d) - cheat : %s",PlayerInfo[playerid][pRealName],playerid,GetCheatName(cheatid));
	return 1;
}

stock ResetPlayerIntVar(playerid)
{
    gPlayerInBizz[playerid] = -1;
    gPlayerInSBizz[playerid] = -1;
    gPlayerInGarage[playerid] = -1;
    gPlayerInFaction[playerid] = -1;
    gPlayerInInterior[playerid] = -1;
    gPlayerInHouse[playerid] = -1;
	return 1;
}

stock SetPlayerCriminal(playerid,temoin,victim,reason[],nb)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerNPC(playerid))
			{return 1;}
        if(AdminDuty[playerid] == 1)
			{return 1;}
	    new string[128];
	    // On recherche dans la db s'il y est enregistrer
	  	format(sql, sizeof(sql), "SELECT * FROM lvrp_users_casiers WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
	  	new count = 0;
		if(cache_get_row_count(count) && count == 0)
		{
			format(sql, sizeof(sql), "INSERT INTO lvrp_users_casiers SET SQLid=%d",PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);
		}
		
		new nbarested,nbcrimes,crime1[64],crime2[64],crime3[64],crime4[64],witness[32],vic[32],ecsraison[128];
		mysql_escape_string(reason, ecsraison);
		format(sql, sizeof(sql), "SELECT * FROM lvrp_users_casiers WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
		if(cache_get_row_count(count) && count > 0)
		{
  			cache_get_value_name_int(0,"Arrested", nbarested);
		    cache_get_value_name_int(0,"Crimes", nbcrimes);
			cache_get_value_name(0,"Crime1", Field, 128);
			mysql_escape_string(Field, crime1, sizeof(crime1), MYSQL);
			cache_get_value_name(0,"Crime2",Field, 128);
			mysql_escape_string(Field, crime2, sizeof(crime2), MYSQL);
			cache_get_value_name(0,"Crime3",Field, 128);
			mysql_escape_string(Field, crime3, sizeof(crime3), MYSQL);
			cache_get_value_name(0,"Crime4",crime4, 128);
			mysql_escape_string(Field, crime4, sizeof(crime4), MYSQL);
		}
		nbcrimes++;
		if (temoin == -1) // Pas de témoin
			{strmid(witness, "Anonyme", 0, strlen("Anonyme"), 32);}
		else
		{
		    if(IsPlayerConnected(temoin))
		    	{strmid(witness, PlayerInfo[temoin][pRealName], 0, strlen(PlayerInfo[temoin][pRealName]), 32);}
		}
        if (victim == -1) // Pas de victim
			{strmid(vic, "Aucune", 0, strlen("Aucune"), 32);}
		else
		{
		    if(IsPlayerConnected(victim))
		    	{strmid(vic, PlayerInfo[victim][pRealName], 0, strlen(PlayerInfo[victim][pRealName]), 32);}
		}
		
	    format(sql, sizeof(sql), "UPDATE lvrp_users_casiers SET Crimes=%d, Arrested=%d, Crime1='%s', Crime2='%s', Crime3='%s', Crime4='%s', Crime5='%s', Witness='%s', Victim='%s' WHERE SQLid=%d",
		nbcrimes,nbarested,ecsraison,crime1,crime2,crime3,crime4,witness,vic,PlayerInfo[playerid][pSQLID]);
		mysql_pquery(MYSQL,sql);
	    
		format(string, sizeof(string), "» Suspection « Vous avez commis un crime: %s. Victime: %s. Témoin: %s.",reason,vic,witness);
		msg_Client(playerid, COLOR_LIGHTRED, string);
		if(nb>PlayerInfo[playerid][pWanted])
		    {PlayerInfo[playerid][pWanted]=nb;}
		SetPlayerWantedLevel(playerid,nb);
		format(string, sizeof(string), "» Suspection « Niveau de recherche actuel: %d", PlayerInfo[playerid][pWanted]);
		msg_Client(playerid, COLOR_YELLOW, string);
		for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
		{
		    if(IsPlayerConnected(i))
			{
			    if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 2)
				{
					format(string, sizeof(string), "QG: A Toutes les unités APB: Témoin: %s",witness);
					msg_Client(i, COLOR_CASIER, string);
					format(string, sizeof(string), "QG: Crime: %s, Victime: %s, Suspet: %s",reason,vic,PlayerInfo[playerid][pRealName]);
					msg_Client(i, COLOR_CASIER, string);
				}
			}
		}
	}
	return 1;
}

stock phone_SMS(playerid,giveplayerid,text[])
{
    if(IsPlayerConnected(playerid) && IsPlayerConnected(giveplayerid))
	{
	    if(IsPlayerNPC(playerid))
			{return 1;}
			
		new sms1[64],sms2[64],sms3[64],sms4[64],num[4],Date[4],ecssms[128];
		mysql_escape_string(text, ecssms);
		format(sql, sizeof(sql), "SELECT * FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
	  	new count = 0;
		if(cache_get_row_count(count) && count > 0)
		{
			cache_get_value_name(0,"SMS_Sent_Msg1", Field, 64);
			mysql_escape_string(Field, sms1);
			cache_get_value_name(0,"SMS_Sent_Msg2",Field, 64);
			mysql_escape_string(Field, sms2);
			cache_get_value_name(0,"SMS_Sent_Msg3",Field, 64);
			mysql_escape_string(Field, sms3);
			cache_get_value_name(0,"SMS_Sent_Msg4",Field, 64);
			mysql_escape_string(Field, sms4);
			cache_get_value_name_int(0,"SMS_Sent_Num1", num[0]);
			cache_get_value_name_int(0,"SMS_Sent_Num2", num[1]);
			cache_get_value_name_int(0,"SMS_Sent_Num3", num[2]);
			cache_get_value_name_int(0,"SMS_Sent_Num4", num[3]);
			cache_get_value_name_int(0,"SMS_Sent_Date1", Date[0]);
			cache_get_value_name_int(0,"SMS_Sent_Date2", Date[1]);
			cache_get_value_name_int(0,"SMS_Sent_Date3", Date[2]);
			cache_get_value_name_int(0,"SMS_Sent_Date4", Date[3]);
		}
		format(sql, sizeof(sql), "UPDATE lvrp_users_phones SET SMS_Sent_Msg1='%s', SMS_Sent_Msg2='%s', SMS_Sent_Msg3='%s', SMS_Sent_Msg4='%s', SMS_Sent_Msg5='%s', SMS_Sent_Num1=%d, SMS_Sent_Num2=%d, SMS_Sent_Num3=%d, SMS_Sent_Num4=%d, SMS_Sent_Num5=%d, SMS_Sent_Date1=UNIX_TIMESTAMP(), SMS_Sent_Date2=%d, SMS_Sent_Date3=%d, SMS_Sent_Date4=%d, SMS_Sent_Date5=%d WHERE SQLid=%d",
		ecssms,sms1,sms2,sms3,sms4,PlayerInfo[giveplayerid][pNumber],num[0],num[1],num[2],num[3],Date[0],Date[1],Date[2],Date[3],PlayerInfo[playerid][pSQLID]);
		mysql_pquery(MYSQL,sql);

        format(sql, sizeof(sql), "SELECT * FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",PlayerInfo[giveplayerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
		if(cache_get_row_count(count) && count > 0)
		{
			cache_get_value_name(0,"SMS_Received_Msg1",Field, 64);
			mysql_escape_string(Field, sms1);
			cache_get_value_name(0,"SMS_Received_Msg2",Field, 64);
			mysql_escape_string(Field, sms2);
			cache_get_value_name(0,"SMS_Received_Msg3",Field, 64);
			mysql_escape_string(Field, sms3);
			cache_get_value_name(0,"SMS_Received_Msg4",Field, 64);
			mysql_escape_string(Field, sms4);
			cache_get_value_name_int(0,"SMS_Received_Num1", num[0]);
			cache_get_value_name_int(0,"SMS_Received_Num2", num[1]);
			cache_get_value_name_int(0,"SMS_Received_Num3", num[2]);
			cache_get_value_name_int(0,"SMS_Received_Num4", num[3]);
			cache_get_value_name_int(0,"SMS_Received_Date1", Date[0]);
			cache_get_value_name_int(0,"SMS_Received_Date2", Date[1]);
			cache_get_value_name_int(0,"SMS_Received_Date3", Date[2]);
			cache_get_value_name_int(0,"SMS_Received_Date4", Date[3]);
		}
		format(sql, sizeof(sql), "UPDATE lvrp_users_phones SET SMS_Received_Msg1='%s', SMS_Received_Msg2='%s', SMS_Received_Msg3='%s', SMS_Received_Msg4='%s', SMS_Received_Msg5='%s', SMS_Received_Num1=%d, SMS_Received_Num2=%d, SMS_Received_Num3=%d, SMS_Received_Num4=%d, SMS_Received_Num5=%d, SMS_Received_Date1=UNIX_TIMESTAMP(), SMS_Received_Date2=%d, SMS_Received_Date3=%d, SMS_Received_Date4=%d, SMS_Received_Date5=%d WHERE SQLid=%d",
		ecssms,sms1,sms2,sms3,sms4,PlayerInfo[playerid][pNumber],num[0],num[1],num[2],num[3],Date[0],Date[1],Date[2],Date[3],PlayerInfo[giveplayerid][pSQLID]);
		mysql_pquery(MYSQL,sql);
	}
	return 1;
}

stock phone_CallTo(playerid,numero)
{
	new string[128];
    if(PlayerInfo[playerid][pNumber] == 0)
		{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de téléphone.");}
	if(PlayerInfo[playerid][pOperator] == 0)
		{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas d'opérateur téléphonique.");}
	if(PlayerInfo[playerid][pPhoneTime] <= 0)
		{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Votre temps de communication est épuisé.");}
	if(numero == 0)
		{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Entrez un numéro valide.");}

    if(numero == 911)// urgences
	{
		ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX,"{8B8B00}» Tel «{FFFFFF} Appel - Urgences","Vous désirez :","La Police","Le Samu");
		tel_DialogUrgence[playerid]=0;
	 	return 1;
	}
	else if(numero == 555)// Mécano
	{
		if(Mechanics < 1)
 			{return msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Aucun mécanicien en service.");}

		mecano_PhoneId=playerid;
		format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} %s a besoin d'un mécanicien. (utiliser /mecano (acc)epter pour accepter l'appel)", PlayerInfo[playerid][pName]);
		SendFamilyMessage(17, COLOR_JOB, string);
	    msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Mécanicien «{FFFFFF} La ligne décroche.");
		msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Mécanicien «{FFFFFF} Tous les mécaniciens ont été informés de votre appel.");
		msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Mécanicien «{FFFFFF} La ligne raccroche.");
		return 1;
	}
	else if(numero == 444)// Taxi
	{
	    if(Taximans < 1)
 			{return msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Aucun taximan en service.");}
 			
        taxi_PhoneId=playerid;
		format(string, sizeof(string), "» Taxi «{FFFFFF} %s a besoin d'un taxi. (utiliser /taxi (acc)epter pour accepter l'appel)", PlayerInfo[playerid][pName]);
		msg_Taxi(COLOR_YELLOW, string);
	    msg_Client(playerid, COLOR_YELLOW, "» Taxi «{FFFFFF} La ligne décroche.");
		msg_Client(playerid, COLOR_YELLOW, "» Taxi «{FFFFFF} Tous les taximans ont été informés de votre appel.");
		msg_Client(playerid, COLOR_YELLOW, "» Taxi «{FFFFFF} La ligne raccroche.");
	}
	if(numero==PlayerInfo[playerid][pNumber])
		{return msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Info «{FFFFFF} Impossible à vous même");}
	new bool:call=false;
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i) && i != INVALID_PLAYER_ID)
		{
			if(PlayerInfo[i][pNumber] == numero && numero != 0)
			{
				if (Mobile[i] == -1)
				{
					phone_Show(i); phone_Show(playerid);
					TextDrawHideForPlayer(i,phone_Menu);TextDrawShowForPlayer(i,phone_CallFrom);
					PlayerTextDrawSetString(i,phone_Title[i],"Appel entrant");
					PlayerTextDrawShow(i,phone_Title[i]);PlayerTextDrawShow(i,phone_CallFromNum[i]);
					if(PlayerInfo[playerid][pHideNumber] == 1){PlayerTextDrawSetString(i,phone_CallFromNum[i],"Inconnu");}
					else{PlayerTextDrawSetString(i,phone_CallFromNum[i],PlayerInfo[playerid][pNumber]);}

					PlayerTextDrawSetString(playerid,phone_Title[playerid],"Appel");
					PlayerTextDrawSetString(playerid,phone_CallFromNum[playerid],phone_TempNum[playerid]);
					for(new te=0; te<13; te++)
				    	{TextDrawHideForPlayer(playerid,phone_Num[te]);}
					PlayerTextDrawHide(playerid,phone_Title[playerid]);PlayerTextDrawHide(playerid,phone_WrittenNum[playerid]);
					PlayerTextDrawShow(playerid,phone_CallTime[playerid]);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					format(string, sizeof(string), "* Le téléphone de %s sonne.", PlayerInfo[i][pName]);
					ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					CellTime[playerid] = 1;Mobile[playerid]=i;phone_Type[i]=2;call=true;
					return 1;
				}
			}
		}
	}
	if(call==false)
		{return msg_Client(playerid,COLOR_YELLOW,"{8B8B00}» Tel «{FFFFFF} Echec de l'appelle."); }
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

stock job_UpdateTexts(playerid)
{
 	if(IsPlayerConnected(playerid))
 	{
 	    if(PlayerInfo[playerid][pJob] != 0 && (PlayerInfo[playerid][pJob] !=7 || PlayerInfo[playerid][pJob] !=9 || PlayerInfo[playerid][pJob] !=4))
 	    {
			new string[128];
			if(PlayerInfo[playerid][pJobExp]>=job_GetXp(playerid,PlayerInfo[playerid][pJob]) && PlayerInfo[playerid][pJobLvl] < 10)
			{
			    if(PlayerInfo[playerid][pJobLvl] < 10)
			    {
					PlayerInfo[playerid][pJobLvl]++;
					PlayerInfo[playerid][pJobExp]=1;
					msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous montez de niveau, vous gagnez désormais plus d'argent lors de votre job.");
				}
				else
					{PlayerInfo[playerid][pJobLvl]=10; PlayerInfo[playerid][pJobExp]=1;}
			}
			if(PlayerInfo[playerid][pJobLvl] >= 10)
   			{
   			    format(string,sizeof(string),"~b~%s~n~~w~Level : MAX~n~Experience : ~g~MAX~n~~w~Bonus paye : $%d~n~Prochain Payday : %d mins",GetJobName(PlayerInfo[playerid][pJob]),PlayerInfo[playerid][pJobBonus],60-PlayerInfo[playerid][pPayDayHad]);
				PlayerTextDrawSetString(playerid,job_TextInfos[playerid],string);
   			}
   			else
   			{
	   			format(string,sizeof(string),"~b~%s~n~~w~Level : %d~n~Experience : ~g~%d~w~/~r~%d~n~~w~Bonus paye : $%d~n~Prochain Payday : %d mins",GetJobName(PlayerInfo[playerid][pJob]),PlayerInfo[playerid][pJobLvl],PlayerInfo[playerid][pJobExp],job_GetXp(playerid,PlayerInfo[playerid][pJob]),PlayerInfo[playerid][pJobBonus],60-PlayerInfo[playerid][pPayDayHad]);
				PlayerTextDrawSetString(playerid,job_TextInfos[playerid],string);
			}
			new pourc=PlayerInfo[playerid][pJobTime];
			if(PlayerInfo[playerid][pJobTime] > 30)
			    {pourc=30;}
			new Float:totohours;
			totohours = 3.4*pourc;
			PlayerTextDrawTextSize(playerid,job_TextBarUpdate[playerid], (500.0+totohours), 0.000000);
			PlayerTextDrawShow(playerid,job_TextBarUpdate[playerid]);
		}
 	}
 	return 1;
}

stock stats_Show(playerid)
{
    PlayerTextDrawShow(playerid, TextVie[playerid]);
	TextDrawShowForPlayer(playerid, DisigFaim1);
	TextDrawShowForPlayer(playerid, DisigFaim2);
	PlayerTextDrawShow(playerid, BarUpdateFaim[playerid]);
	PlayerTextDrawShow(playerid, TextFaim[playerid]);
	TextDrawShowForPlayer(playerid, DisigSoif1);
	TextDrawShowForPlayer(playerid, DisigSoif2);
	PlayerTextDrawShow(playerid, BarUpdateSoif[playerid]);
	PlayerTextDrawShow(playerid, TextSoif[playerid]);
	PlayerTextDrawShow(playerid, zoneLocation[playerid]);
	//PlayerTextDrawShow(playerid, TextMaladie[playerid]);
	return 1;
}

stock UpdateStatsTextsPlayers(i,id)
{
    new string[128];
	if(id==1)// Faim
	{
	    if(PlayerInfo[i][pFaim] > 100)
			{PlayerInfo[i][pFaim]=100;}
	    if(PlayerInfo[i][pFaim] < 0)
			{PlayerInfo[i][pFaim]=0;}
			
	    PlayerTextDrawDestroy(i,BarUpdateFaim[i]);
	    new Float:totofaim[MAX_PLAYERS];
	    format(string,sizeof(string),"Faim:%d",PlayerInfo[i][pFaim]);
		PlayerTextDrawSetString(i,TextFaim[i],string);
		totofaim[i] = 0.58*PlayerInfo[i][pFaim];
		
		BarUpdateFaim[i] = CreatePlayerTextDraw(i,(550+totofaim[i]), 37.000000, "~n~");
		PlayerTextDrawBackgroundColor(i,BarUpdateFaim[i], 255);
		PlayerTextDrawFont(i,BarUpdateFaim[i], 1);
		PlayerTextDrawLetterSize(i,BarUpdateFaim[i], 0.469998, 0.199999);
		PlayerTextDrawColor(i,BarUpdateFaim[i], 16752895);
		PlayerTextDrawSetOutline(i,BarUpdateFaim[i], 0);
		PlayerTextDrawSetProportional(i,BarUpdateFaim[i], 1);
		PlayerTextDrawSetShadow(i,BarUpdateFaim[i], 1);
		PlayerTextDrawUseBox(i,BarUpdateFaim[i], 1);
		PlayerTextDrawBoxColor(i,BarUpdateFaim[i], 0x009000FF);
		PlayerTextDrawTextSize(i,BarUpdateFaim[i], 546.000000, 0.000000);
		PlayerTextDrawShow(i,BarUpdateFaim[i]);
		return 1;
	}
	else if(id==2)// Soif
	{
	    if(PlayerInfo[i][pSoif] > 100)
			{PlayerInfo[i][pSoif]=100;}
	    if(PlayerInfo[i][pSoif] < 0)
			{PlayerInfo[i][pSoif]=0;}
			
	    PlayerTextDrawDestroy(i,BarUpdateSoif[i]);
	    new Float:totosoif[MAX_PLAYERS];
	    
	    format(string,sizeof(string),"Soif:%d",PlayerInfo[i][pSoif]);
		PlayerTextDrawSetString(i,TextSoif[i],string);
		totosoif[i] = 0.58*PlayerInfo[i][pSoif];
		
		BarUpdateSoif[i] = CreatePlayerTextDraw(i,(550+totosoif[i]), 25.000000, "~n~");
		PlayerTextDrawBackgroundColor(i,BarUpdateSoif[i], 255);
		PlayerTextDrawFont(i,BarUpdateSoif[i], 1);
		PlayerTextDrawLetterSize(i,BarUpdateSoif[i], 0.469998, 0.199999);
		PlayerTextDrawColor(i,BarUpdateSoif[i], 16752895);
		PlayerTextDrawSetOutline(i,BarUpdateSoif[i], 0);
		PlayerTextDrawSetProportional(i,BarUpdateSoif[i], 1);
		PlayerTextDrawSetShadow(i,BarUpdateSoif[i], 1);
		PlayerTextDrawUseBox(i,BarUpdateSoif[i], 1);
		PlayerTextDrawBoxColor(i,BarUpdateSoif[i], 0x0000D1FF);
		PlayerTextDrawTextSize(i,BarUpdateSoif[i], 546.000000, 58.000000);
		PlayerTextDrawShow(i,BarUpdateSoif[i]);
		return 1;
	}
	else if(id==4)// Vie & Armure
	{
	    if(PlayerInfo[i][pArmour] > 0)
		{
			format(string,sizeof(string),"Armure:%0.0f",PlayerInfo[i][pArmour]);
			PlayerTextDrawSetString(i,TextArmure[i],string);
			PlayerTextDrawShow(i, TextArmure[i]);
			if(ArmorSlotObject[i] == -1)
			{
			    if(player_GetSlotObject(i) != -1)
	   	    	{
				   	ArmorSlotObject[i]=player_GetSlotObject(i);
					if(PlayerInfo[i][pMember] > 0 && PlayerInfo[i][pMember] < 6 && police_Duty[i] == 1)
				    	{SetPlayerAttachedObject(i, ArmorSlotObject[i], 19142, 1, 0.062276, 0.036966, 0.000346, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );}
					else if(PlayerInfo[i][pMember] > 5 && PlayerInfo[i][pMember] < 10 && gouv_Duty[i] == 1)
					    {SetPlayerAttachedObject(i, ArmorSlotObject[i], 19515, 1, 0.094432, 0.057396, -0.002879, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );}
					else
						{SetPlayerAttachedObject(i, ArmorSlotObject[i], 373, 1, 0.304563, -0.008286, -0.165960, 62.543052, 28.373506, 37.575752, 1.000000, 1.000000, 1.000000 );}
				}
			}
		}
		else
		{
			PlayerTextDrawHide(i, TextArmure[i]);
			if(ArmorSlotObject[i] != -1)
				{RemovePlayerAttachedObject(i,ArmorSlotObject[i]); ArmorSlotObject[i]=-1;}
		}
	    format(string,sizeof(string),"Vie:%0.0f",PlayerInfo[i][pHealth]);
		PlayerTextDrawSetString(i,TextVie[i],string);
		
		if(PlayerInfo[i][pHealth] < 13 && medic_PlayerNeedMedic[i] == 0 && gPlayerSpawn[i] != 1) // Blessé
		{
		    
		    TogglePlayerControllable(i,false);
		    ClearAnimations(i);
		    format(string, sizeof(string), "* %s tombe à terre.", PlayerInfo[i][pName]);
		    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    		    
		    if(gServerMedics>0)
		    	{msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Un ambulance a été appelé pour vous secourir dans les 3 minutes qui suivent.");}
			else
			{
				msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Désolé, aucun médecin n'est en service.");
				msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez accepter votre mort /accepter mort.");
			}
			    
	 		medic_PlayerNeedMedic[i]=1; medic_PlayerMedicTime[i]=180; // 3 mns
			medic_PlayerCity[i]=player_GetNearHospital(i);
	 		SetCameraBehindPlayer(i);
	 		LoopingAnim(i, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
	 		for(new med = 0; med <MAX_PLAYERS_CURRENT+1; med++)
			{
				if(IsPlayerConnected(med) && (job_Start[med]== 1 && PlayerInfo[med][pJob] == 11))
				{
					SetPlayerMarkerForPlayer(med, i, COLOR_PINK);
					msg_Client(med,COLOR_ALLDEPT,"» Urgence « Une personne gravement blessé attend une ambulance et des soins. (Point Rose)");
				}
			}
		}
	}
	return 1;
}

stock player_UpdateLabel(playerid)
{
	//if(IsValidDynamic3DTextLabel(player_ID[playerid]))
	//    {DestroyDynamic3DTextLabel(player_ID[playerid]);}
	new string[128], id[32], armour[24], health[16], afk[24], ping[20];
	
	if(gPlayerMask[playerid] != 0)					{format(id,sizeof(id),"Id d'inconnu: %d",gPlayerMask[playerid]);}
	else                                            {format(id,sizeof(id),"%s(%d)",PlayerInfo[playerid][pRealName],playerid);}
	
	if(PlayerInfo[playerid][pHealth] > 65)			{format(health,sizeof(health),"V: {58FA58}%.0f",PlayerInfo[playerid][pHealth]);}
    else if(PlayerInfo[playerid][pHealth] > 35)		{format(health,sizeof(health),"V: {FAAC58}%.0f",PlayerInfo[playerid][pHealth]);}
    else if(PlayerInfo[playerid][pHealth] > 0)		{format(health,sizeof(health),"V: {FE2E64}%.0f",PlayerInfo[playerid][pHealth]);}
	
	if(afk_time[playerid] > 10)
	    {format(afk,sizeof(afk),"{FAAC58}\nAbsent : %s",Convert(afk_time[playerid]));}
	    
	if(PlayerInfo[playerid][pArmour] > 65)			{format(armour,sizeof(armour)," - A: {58FA58}%.0f",PlayerInfo[playerid][pArmour]);}
    else if(PlayerInfo[playerid][pArmour] > 35)		{format(armour,sizeof(armour)," - A: {FAAC58}%.0f",PlayerInfo[playerid][pArmour]);}
    else if(PlayerInfo[playerid][pArmour] > 0)		{format(armour,sizeof(armour)," - A: {FE2E64}%.0f",PlayerInfo[playerid][pArmour]);}
    
    if(GetPlayerPing(playerid) > 120)				{format(ping,sizeof(ping),"Pg: {FE2E64}%d",GetPlayerPing(playerid));}
    else if(GetPlayerPing(playerid) > 70)			{format(ping,sizeof(ping),"Pg: {FAAC58}%d",GetPlayerPing(playerid));}
    else if(GetPlayerPing(playerid) > 0)			{format(ping,sizeof(ping),"Pg: {58FA58}%d",GetPlayerPing(playerid));}
    
	if(medic_PlayerNeedMedic[playerid]>0)
	    {format(string,sizeof(string),"{FFFFFF}[%s - %s{FFFFFF}]\n{F6CECE}Gravement blessé%s",id,ping,afk);}
	else
		{format(string,sizeof(string),"{FFFFFF}[%s - %s{FFFFFF}]\n%s{FFFFFF}%s%s",id,ping,health,armour,afk);}
    //player_ID[playerid] = CreateDynamic3DTextLabel(string,0xFFFFFFEE,0,0,0.1,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    //Update3DTextLabelText(player_ID[playerid], 0xFFFFFFEE, string);
	return 1;
}

stock car_CheckGas()
{
	for(new carid=1; carid<=totalVehicles; carid++)
	{
	    if(vehicle[carid][cEngine]==true)
	    {
			if(IsAPlane(carid) || IsABoat(carid) || IsARemorque(carid) || IsATrain(carid) || IsAHelicopter(carid) || IsABike(carid))
				{continue;}

			if(vehicle[carid][cGas] > 0)
				{vehicle[carid][cGas]--;}

			else if(vehicle[carid][cGas]==0)
			{
			    new engine,lights,alarm,doors,bonnet,boot,objective;
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(carid,0,lights,alarm,doors,bonnet,boot,objective);
				vehicle[carid][cEngine] = false;
			}
			for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			{
			    if(IsPlayerInVehicle(i,carid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
					{speedometer_Update(i,8,0);}
			}
		}
	}
	return 1;
}

public car_EndTest(playerid,carid)
{
	vehicle[carid][cEngine]=false;
	SetVehicleToRespawn(carid);
	SafeSetPlayerPos(playerid,vehicle[carid][cLocationx],vehicle[carid][cLocationy],vehicle[carid][cLocationz]+2);
	msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Fin du teste du véhicule");
	return 1;
}

stock ShowStats(playerid,targetid)
{
	new sexe[20],name[24]="Personne";
	if(PlayerInfo[targetid][pSex] == 1) { sexe = "Homme"; }
	else { sexe = "Femme"; }

	new level = PlayerInfo[targetid][pLevel];
	new age = PlayerInfo[targetid][pAge];
	new exp = PlayerInfo[targetid][pExp];
	new cit = PlayerInfo[targetid][pCity];
	new warns = PlayerInfo[targetid][pWarnings];
	new cashs = PlayerInfo[targetid][pCash];
	new pnumber = PlayerInfo[targetid][pNumber];
	new account = PlayerInfo[targetid][pAccount];
	new rename = PlayerInfo[targetid][pRename];
	new joblvl = PlayerInfo[targetid][pJobLvl];
	new jobxp = PlayerInfo[targetid][pJobExp];
	new jobtime = PlayerInfo[targetid][pJobTime];
	new jobbon = PlayerInfo[targetid][pJobBonus];
	new jobremain = PlayerInfo[targetid][pJobRemain];
	new viplvl = PlayerInfo[targetid][pDonateRank];
	new viptime = PlayerInfo[targetid][pVipTime];
	new changenum = PlayerInfo[targetid][pChangeNum];
	new changeplaque = PlayerInfo[targetid][pChangePlaque];
	new statel1 = PlayerInfo[targetid][pLang1State];
	new statel2 = PlayerInfo[targetid][pLang2State];
	new paydayhad = 60-PlayerInfo[targetid][pPayDayHad];
	new check = PlayerInfo[targetid][pCheckNumber];
	new origin = PlayerInfo[targetid][pOrigin];
	
	if(PlayerInfo[targetid][pMarried] > 0)
		{MySQLGetNameWithId(PlayerInfo[targetid][pMarriedTo],name);}

	new string[512],string2[512],totostring[1024];
	if(PlayerInfo[targetid][pLeader] >= 200 || PlayerInfo[targetid][pMember] >= 200)
	{
		format(string,sizeof(string),"{FF9900}[Identité]{FFFFFF}\nNom: %s\nAge: %d ans\nSexe: %s\nOrigine: %s\nVille de résidence : %s\nMarrié à %s\n\n{FF9900}[Informations]{FFFFFF}\nLevel: %d\nRespect %d/%d\nEmail: %s\nAvertissement: %d\nProchaine PayDay : %d mins\n\n{FF9900}[Job]{FFFFFF}\nNom: %s\nLevel: %d\nXp: %d/%d\nTemps de travail : %d min(s)\nBonus : %d$\nTemps d'attente : %d mins\n\n",
		PlayerInfo[targetid][pRealName],age,sexe,GetOriginName(origin),GetCityName(cit),name,level,exp,(level*4),PlayerInfo[targetid][pEmail],warns,paydayhad,GetJobName(PlayerInfo[targetid][pJob]),joblvl,jobxp,job_GetXp(targetid,PlayerInfo[targetid][pJob]),jobtime,jobbon,jobremain);
		format(string2,sizeof(string2),"{FF9900}[Faction]{FFFFFF}\nNom: %s\nRang: %s\n\n{FF9900}[Compte]{FFFFFF}\nCash: $%d\nBanque: $%d\nChèque(s) : %d\nTel: %d\nLangue 1: %s (%d/100)\nLangue 2: %s (%d/100)\n\n{FF9900}[Vip]{FFFFFF}\nLevel: %d\nTemps restant : %d\nRename Disponible : %d\nChangeNum : %d\nChangePlaque : %d",
		FactionInfo[PlayerInfo[targetid][pMember]-200][fName],GetFactionRank(PlayerInfo[targetid][pMember],PlayerInfo[targetid][pRank]),cashs,account,check,pnumber,GetLangName(PlayerInfo[targetid][pLang1]),statel1,GetLangName(PlayerInfo[targetid][pLang2]),statel2,viplvl,viptime,rename,changenum,changeplaque);
	}
	else
	{
	    format(string,sizeof(string),"{FF9900}[Identité]{FFFFFF}\nNom: %s\nAge: %d ans\nSexe: %s\nOrigine: %s\nVille de résidence : %s\nMarrié à %s\n\n{FF9900}[Informations]{FFFFFF}\nLevel: %d\nRespect %d/%d\nEmail: %s\nAvertissement: %d\nProchaine PayDay : %d mins\n\n{FF9900}[Job]{FFFFFF}\nNom: %s\nLevel: %d\nXp: %d/%d\nTemps de travail : %d min(s)\nBonus : %d$\nTemps d'attente : %d mins\n\n",
		PlayerInfo[targetid][pRealName],age,sexe,GetOriginName(origin),GetCityName(cit),name,level,exp,(level*4),PlayerInfo[targetid][pEmail],warns,paydayhad,GetJobName(PlayerInfo[targetid][pJob]),joblvl,jobxp,job_GetXp(targetid,PlayerInfo[targetid][pJob]),jobtime,jobbon,jobremain);
	    format(string2,sizeof(string2),"{FF9900}[Faction]{FFFFFF}\nNom: %s\nRang: %s\nTemps de travail : %d mins\n\n{FF9900}[Compte]{FFFFFF}\nCash: $%d\nBanque: $%d\nChèque(s) : %d\nTel: %d\nLangue 1: %s (%d/100)\nLangue 2: %s (%d/100)\n\n{FF9900}[Vip]{FFFFFF}\nLevel: %d\nTemps restant : %d\nRename Disponible : %d\nChangeNum : %d\nChangePlaque : %d",
		GetFactionName(PlayerInfo[targetid][pMember]),GetFactionRank(PlayerInfo[targetid][pMember],PlayerInfo[targetid][pRank]),PlayerInfo[playerid][pDutyTime],cashs,account,check,pnumber,GetLangName(PlayerInfo[targetid][pLang1]),statel1,GetLangName(PlayerInfo[targetid][pLang2]),statel2,viplvl,viptime,rename,changenum,changeplaque);
	}
	format(totostring,sizeof(totostring),"%s%s",string,string2);
	ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX,"» Stats «",totostring,"Valider","");
	return 1;
}

public GameModeInitExitFunc()
{
	print("[Reboot] Step 1 ...");
	gServerReboot=1;
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    msg_Client(i,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Vos informations sont en cours de sauvegarde ...");
		    OnPlayerUpdateSQL(i);
			DisablePlayerCheckpoint(i);
			GameTextForPlayer(i, "~w~Le serveur Redemarre...", 30000, 4);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
		}
	}
	print("[Reboot] Step 1 ... Done");
	SetTimer("GameModeExitFunc", 5000, 0);
	return 1;
}

public GameModeExitFunc()
{
    print("[Reboot] Step 2 ...");
	for(new i =0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerNPC(i))
	        {Kick(i);}
		KillTimer(player_antihack[i]);
	}
		
	for(new i=1; i<=totalVehicles; i++)
	    {vehicle_Save(i,1,1);}
    FadeExit();
	Streamer_DestroyAllItems(STREAMER_TYPE_OBJECT ,1);
	Streamer_DestroyAllItems(STREAMER_TYPE_PICKUP ,1);
	Streamer_DestroyAllItems(STREAMER_TYPE_CP ,1);
	Streamer_DestroyAllItems(STREAMER_TYPE_RACE_CP ,1);
	Streamer_DestroyAllItems(STREAMER_TYPE_MAP_ICON ,1);
	Streamer_DestroyAllItems(STREAMER_TYPE_3D_TEXT_LABEL ,1);
	Streamer_DestroyAllItems(STREAMER_TYPE_AREA ,1);
	Streamer_DestroyAllItems(STREAMER_TYPE_ACTOR ,1);
   	print("[Reboot ]Radars / Objets / Texts / Timers / 3DTexts / Actors / Pickups ont été supprimé");
   	Elevator_Destroy();
   	SendRconCommand("unloadfs mapping");

	print("[Reboot] Step 2 ... Done");
	GameModeExit();
    return 1;
}

forward faction_Load();
public faction_Load()
{
	cache_get_row_count(totalFactions);
	for (new i=0; i<totalFactions; i++)
	{
 		cache_get_value_name_int(i,"Created", FactionInfo[i][fCreate]);
 		cache_get_value_name_float(i,"Pos_x", FactionInfo[i][fEntrance][0]);
 		cache_get_value_name_float(i,"Pos_y", FactionInfo[i][fEntrance][1]);
 		cache_get_value_name_float(i,"Pos_z", FactionInfo[i][fEntrance][2]);
		cache_get_value_name_float(i,"Exit_x", FactionInfo[i][fExit][0]);
		cache_get_value_name_float(i,"Exit_y", FactionInfo[i][fExit][1]);
		cache_get_value_name_float(i,"Exit_z", FactionInfo[i][fExit][2]);
        cache_get_value_name_float(i,"Safe_x", FactionInfo[i][fSafe][0]);
        cache_get_value_name_float(i,"Safe_y", FactionInfo[i][fSafe][1]);
		cache_get_value_name_float(i,"Safe_z", FactionInfo[i][fSafe][2]);
        cache_get_value_name_int(i,"Cash", FactionInfo[i][fCash]);
        cache_get_value_name_float(i,"Armour", FactionInfo[i][fArmour]);
  		cache_get_value_name_int(i,"Interior", FactionInfo[i][fInt]);
        cache_get_value_name(i,"Name",FactionInfo[i][fName], 32);
        cache_get_value_name_int(i,"Locked", FactionInfo[i][fLock]);
        cache_get_value_name_int(i,"Owned", FactionInfo[i][fOwned]);
        cache_get_value_name_int(i,"Type", FactionInfo[i][fType]);
        cache_get_value_name_int(i,"Color", FactionInfo[i][fColor]);
        cache_get_value_name_int(i,"ChooseColor", FactionInfo[i][fChoseColor]);
        cache_get_value_name_int(i,"VW", FactionInfo[i][fWV]);
        cache_get_value_name(i,"Rank1",FactionInfo[i][fRank1], 32);
        cache_get_value_name(i,"Rank2",FactionInfo[i][fRank2], 32);
        cache_get_value_name(i,"Rank3",FactionInfo[i][fRank3], 32);
        cache_get_value_name(i,"Rank4",FactionInfo[i][fRank4], 32);
        cache_get_value_name(i,"Rank5",FactionInfo[i][fRank5], 32);
        cache_get_value_name(i,"Rank6",FactionInfo[i][fRank6], 32);
        cache_get_value_name_int(i,"RobTime", FactionInfo[i][fRobTime]);
        cache_get_value_name_int(i,"iM1", FactionInfo[i][fItemM][0]);
        cache_get_value_name_int(i,"iQ1", FactionInfo[i][fItemQ][0]);
        cache_get_value_name_int(i,"iM2", FactionInfo[i][fItemM][1]);
        cache_get_value_name_int(i,"iQ2", FactionInfo[i][fItemQ][1]);
        cache_get_value_name_int(i,"iM3", FactionInfo[i][fItemM][2]);
        cache_get_value_name_int(i,"iQ3", FactionInfo[i][fItemQ][2]);
        cache_get_value_name_int(i,"iM4", FactionInfo[i][fItemM][3]);
        cache_get_value_name_int(i,"iQ4", FactionInfo[i][fItemQ][3]);
        cache_get_value_name_int(i,"iM5", FactionInfo[i][fItemM][4]);
        cache_get_value_name_int(i,"iQ5", FactionInfo[i][fItemQ][4]);
        cache_get_value_name_int(i,"iM6", FactionInfo[i][fItemM][5]);
        cache_get_value_name_int(i,"iQ6", FactionInfo[i][fItemQ][5]);
        cache_get_value_name_int(i,"iM7", FactionInfo[i][fItemM][6]);
        cache_get_value_name_int(i,"iQ7", FactionInfo[i][fItemQ][6]);
        cache_get_value_name_int(i,"iM8", FactionInfo[i][fItemM][7]);
        cache_get_value_name_int(i,"iQ8", FactionInfo[i][fItemQ][7]);
        cache_get_value_name_int(i,"iM9", FactionInfo[i][fItemM][8]);
        cache_get_value_name_int(i,"iM9", FactionInfo[i][fItemQ][8]);
        cache_get_value_name_int(i,"iM10", FactionInfo[i][fItemM][9]);
       	cache_get_value_name_int(i,"iQ10", FactionInfo[i][fItemQ][9]);
        faction_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d faction(s) illégale(s) chargée(s).",totalFactions);}
}

stock faction_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_factions_illegals SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Safe_x=%f, Safe_y=%f, Safe_z=%f, Cash=%d, Armour=%f, Interior=%d, Name='%s', Locked=%d, Owned=%d, Type=%d, Color=%d, ChooseColor=%d, VW=%d, rank1='%s', rank2='%s', rank3='%s', rank4='%s', rank5='%s', rank6='%s', RobTime=%d WHERE id=%d",
	FactionInfo[id][fCreate],
	FactionInfo[id][fEntrance][0],
	FactionInfo[id][fEntrance][1],
	FactionInfo[id][fEntrance][2],
	FactionInfo[id][fExit][0],
	FactionInfo[id][fExit][1],
	FactionInfo[id][fExit][2],
    FactionInfo[id][fSafe][0],
    FactionInfo[id][fSafe][1],
    FactionInfo[id][fSafe][2],
    FactionInfo[id][fCash],
    FactionInfo[id][fArmour],
    FactionInfo[id][fInt],
    FactionInfo[id][fName],
    FactionInfo[id][fLock],
    FactionInfo[id][fOwned],
    FactionInfo[id][fType],
    FactionInfo[id][fColor],
    FactionInfo[id][fChoseColor],
    FactionInfo[id][fWV],
    FactionInfo[id][fRank1],
    FactionInfo[id][fRank2],
    FactionInfo[id][fRank3],
    FactionInfo[id][fRank4],
    FactionInfo[id][fRank5],
    FactionInfo[id][fRank6],
    FactionInfo[id][fRobTime],
	id+1);
	mysql_pquery(MYSQL,sql);
	
	format(sql,sizeof(sql),"UPDATE lvrp_factions_illegals SET iM1=%d, iQ1=%d, iM2=%d, iQ2=%d, iM3=%d, iQ3=%d, iM4=%d, iQ4=%d, iM5=%d, iQ5=%d, iM6=%d, iQ6=%d, iM7=%d, iQ7=%d, iM8=%d, iQ8=%d, iM9=%d, iQ9=%d, iM10=%d, iQ10=%d WHERE id=%d",
    FactionInfo[id][fItemM][0],FactionInfo[id][fItemQ][0],FactionInfo[id][fItemM][1],FactionInfo[id][fItemQ][1],FactionInfo[id][fItemM][2],FactionInfo[id][fItemQ][2],FactionInfo[id][fItemM][3],FactionInfo[id][fItemQ][3],FactionInfo[id][fItemM][4],FactionInfo[id][fItemQ][4],
    FactionInfo[id][fItemM][5],FactionInfo[id][fItemQ][5],FactionInfo[id][fItemM][6],FactionInfo[id][fItemQ][6],FactionInfo[id][fItemM][7],FactionInfo[id][fItemQ][7],FactionInfo[id][fItemM][8],FactionInfo[id][fItemQ][8],FactionInfo[id][fItemM][9],FactionInfo[id][fItemQ][9],id+1);
	mysql_pquery(MYSQL,sql);
}

forward seed_Load();
public seed_Load()
{
	cache_get_row_count(totalSeeds);
	for (new i=0; i<totalSeeds; i++)
	{
		cache_get_value_name_int(i,"Created", seed[i][used]);
		cache_get_value_name_int(i,"SQLid", seed[i][sqlid]);
		cache_get_value_name_int(i,"Time", seed[i][time]);
		cache_get_value_name_int(i,"Step", seed[i][step]);
		cache_get_value_name_int(i,"Model", seed[i][model]);
		cache_get_value_name_float(i,"Pos_x", seed[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", seed[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", seed[i][pos][2]);
	 	seed_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d plant(s) de weed chargé(s).",totalSeeds);}
	return 1;
}

stock seed_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_factions_illegals_seeds SET Created=%d, SQLid=%d, Time=%d, Step=%d, Model=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f WHERE id=%d",
	seed[id][used],seed[id][sqlid],seed[id][time],seed[id][step],seed[id][model],seed[id][pos][0],seed[id][pos][1],seed[id][pos][2],id+1);
	mysql_pquery(MYSQL,sql);
	return 1;
}

forward zone_Load();
public zone_Load()
{
	cache_get_row_count(totalZones);
	for (new i=0; i<totalZones; i++)
	{
		cache_get_value_name_int(i,"id", ZoneInfo[i][zSQLid]);
		cache_get_value_name_float(i,"min_X", ZoneInfo[i][zMin][0]);
		cache_get_value_name_float(i,"min_Y", ZoneInfo[i][zMin][1]);
		cache_get_value_name_float(i,"max_X", ZoneInfo[i][zMax][0]);
		cache_get_value_name_float(i,"max_Y", ZoneInfo[i][zMax][1]);
		if(gServerReload==1)
		{
		    if(IsValidDynamicArea(ZoneInfo[i][zZone]))
				{DestroyDynamicArea(ZoneInfo[i][zZone]);}
		}
		ZoneInfo[i][zZone] = CreateDynamicRectangle(ZoneInfo[i][zMin][0],ZoneInfo[i][zMin][1],ZoneInfo[i][zMax][0],ZoneInfo[i][zMax][1],0,0,-1);
	}
	if(gServerReload==0)
		{printf("    .. %d zone(s) anti-DM chargée(s).",totalZones);}
	return 1;
}

stock zone_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_zones SET min_X=%f, min_Y=%f, max_X=%f, max_Y=%f WHERE id=%d",ZoneInfo[id][zMin][0],ZoneInfo[id][zMin][1],ZoneInfo[id][zMax][0],ZoneInfo[id][zMax][1],ZoneInfo[id][zSQLid]);
	mysql_pquery(MYSQL,sql);
	return 1;
}

forward spawn_Load();
public spawn_Load()
{
	for (new i=0; i<MAX_CITY; i++)
	{
		cache_get_value_name_float(i,"Pos_x", spawn[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", spawn[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", spawn[i][pos][2]);
		cache_get_value_name_float(i,"Pos_a", spawn[i][pos][3]);
		spawn_Update(i);
	}
	if(gServerReload==0)
		{printf("    .. spawn chargés.");}
	return 1;
}

stock spawn_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_spawn SET Pos_x=%f, Pos_y=%f, Pos_z=%f, Pos_a=%f WHERE id=%d",
	spawn[id][pos][0],
	spawn[id][pos][1],
	spawn[id][pos][2],
	spawn[id][pos][3],
	id+1);
	mysql_pquery(MYSQL,sql);
	return 1;
}

forward dealerShip_Load();
public dealerShip_Load()
{
	cache_get_row_count(totalDealerShip);
	for (new i=0; i<totalDealerShip; i++)
	{
		cache_get_value_name_int(i,"Type", dealerShip[i][typeZ]);
		cache_get_value_name_int(i,"City", dealerShip[i][city]);
		cache_get_value_name_int(i,"Used", dealerShip[i][used]);
		cache_get_value_name_float(i,"Pos_x", dealerShip[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", dealerShip[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", dealerShip[i][pos][2]);
		dealerShip_Update(i);
	}
	return 1;
}

stock dealerShip_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_dealership SET Type=%d, City=%d, Used=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f WHERE id=%d",
	dealerShip[id][typeZ],
	dealerShip[id][city],
	dealerShip[id][used],
	dealerShip[id][pos][0],
	dealerShip[id][pos][1],
	dealerShip[id][pos][2],
	id+1);
	mysql_pquery(MYSQL,sql);
	return 1;
}

forward interior_Load();
public interior_Load()
{
	cache_get_row_count(totalInteriors);
	for (new i=0; i<totalInteriors; i++)
	{
		cache_get_value_name_int(i,"Type", interiors[i][typeZ]);
		cache_get_value_name_int(i,"City", interiors[i][city]);
		cache_get_value_name_int(i,"Interior", interiors[i][interior]);
		cache_get_value_name_int(i,"Used", interiors[i][used]);
		cache_get_value_name_float(i,"Pos_x", interiors[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", interiors[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", interiors[i][pos][2]);
		cache_get_value_name_float(i,"Pos_a", interiors[i][pos][3]);
		cache_get_value_name_float(i,"Exit_x", interiors[i][pos][4]);
		cache_get_value_name_float(i,"Exit_y", interiors[i][pos][5]);
		cache_get_value_name_float(i,"Exit_z", interiors[i][pos][6]);
		cache_get_value_name_float(i,"Exit_z", interiors[i][pos][7]);
		interior_Update(i);
	}
	if(gServerReload==0)
		{printf("    .. %d interieur(s) chargé(s).",totalInteriors);}
	return 1;
}

stock interior_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_interiors SET Type=%d, City=%d, Interior=%d, Used=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Pos_a=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Exit_a=%f WHERE id=%d",
	interiors[id][typeZ],
	interiors[id][city],
	interiors[id][interior],
	interiors[id][used],
	interiors[id][pos][0],
	interiors[id][pos][1],
	interiors[id][pos][2],
	interiors[id][pos][3],
	interiors[id][pos][4],
	interiors[id][pos][5],
	interiors[id][pos][6],
	interiors[id][pos][7],
	id+1);
	mysql_pquery(MYSQL,sql);
	return 1;
}

forward sannews_Load();
public sannews_Load()
{
    new count = 0;
	if(cache_get_row_count(count) && count > 0)
	{
		cache_get_value_name_int(0,"Cash", sanNews[abc_Cash]);
		cache_get_value_name_int(0,"SMS", sanNews[abc_SMS]);
	    cache_get_value_name(0,"Rank1",sanNews[rank1], 32);
	    cache_get_value_name(0,"Rank2",sanNews[rank2], 32);
	    cache_get_value_name(0,"Rank3",sanNews[rank3], 32);
	    cache_get_value_name(0,"Rank4",sanNews[rank4], 32);
	    cache_get_value_name(0,"Rank5",sanNews[rank5], 32);
	    cache_get_value_name(0,"Rank6",sanNews[rank6], 32);
	}
	return 1;
}

stock sannews_Save()
{
	format(sql, sizeof(sql), "UPDATE lvrp_factions_sannews SET Cash=%d, SMS=%d, Rank1='%s', Rank2='%s', Rank3='%s', Rank4='%s', Rank5='%s', Rank6='%s' WHERE id=1",
	sanNews[abc_Cash],
	sanNews[abc_SMS],
	sanNews[rank1],
	sanNews[rank2],
	sanNews[rank3],
	sanNews[rank4],
	sanNews[rank5],
	sanNews[rank6]);
	mysql_pquery(MYSQL,sql);
}

stock fbi_Load()
{
	format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_fbi WHERE id=1");
	mysql_query(MYSQL,sql);
	new count = 0;
	if(cache_get_row_count(count) && count > 0)
	{
	    cache_get_value_name(0,"Rank1",FBIInfo[rank1], 32);
	    cache_get_value_name(0,"Rank2",FBIInfo[rank2], 32);
	    cache_get_value_name(0,"Rank3",FBIInfo[rank3], 32);
	    cache_get_value_name(0,"Rank4",FBIInfo[rank4], 32);
	    cache_get_value_name(0,"Rank5",FBIInfo[rank5], 32);
	    cache_get_value_name(0,"Rank6",FBIInfo[rank6], 32);
	    cache_get_value_name(0,"Rank7",FBIInfo[rank7], 32);
	    cache_get_value_name_int(0,"Skin1", FBIInfo[skin][0]);
	    cache_get_value_name_int(0,"Skin2", FBIInfo[skin][1]);
	    cache_get_value_name_int(0,"Skin3", FBIInfo[skin][2]);
	    cache_get_value_name_int(0,"Skin4", FBIInfo[skin][3]);
	    cache_get_value_name_int(0,"Skin5", FBIInfo[skin][4]);
	    cache_get_value_name_int(0,"Skin6", FBIInfo[skin][5]);
	    cache_get_value_name_int(0,"Skin7", FBIInfo[skin][6]);
	    cache_get_value_name_float(0,"Spawn_x", FBIInfo[Spawn][0]);
	    cache_get_value_name_float(0,"Spawn_y", FBIInfo[Spawn][1]);
	    cache_get_value_name_float(0,"Spawn_z", FBIInfo[Spawn][2]);
 	    cache_get_value_name_float(0,"Spawn_a", FBIInfo[Spawn][3]);
	    cache_get_value_name_int(0,"Interior", FBIInfo[Interior]);
	    cache_get_value_name_float(0,"Arrested_x", FBIInfo[Arrested][0]);
	    cache_get_value_name_float(0,"Arrested_y", FBIInfo[Arrested][1]);
	    cache_get_value_name_float(0,"Arrested_z", FBIInfo[Arrested][2]);
	    cache_get_value_name_float(0,"Entrance_x", FBIInfo[Entrance][0]);
	    cache_get_value_name_float(0,"Entrance_y", FBIInfo[Entrance][1]);
	    cache_get_value_name_float(0,"Entrance_z", FBIInfo[Entrance][2]);
	    cache_get_value_name_float(0,"Entrance_a", FBIInfo[Entrance][3]);
	    cache_get_value_name_float(0,"Exit_x", FBIInfo[Exit][0]);
	    cache_get_value_name_float(0,"Exit_y", FBIInfo[Exit][1]);
	    cache_get_value_name_float(0,"Exit_z", FBIInfo[Exit][2]);
	    cache_get_value_name_float(0,"Exit_a", FBIInfo[Exit][3]);
	}
	fbi_Update();
	print("    .. FBI chargé.");
	return 1;
}

stock fbi_Save()
{
	format(sql, sizeof(sql), "UPDATE lvrp_factions_fbi SET rank1='%s', Rank2='%s', Rank3='%s', Rank4='%s', Rank5='%s', Rank6='%s', Rank7='%s', Skin1=%d, Skin2=%d, Skin3=%d, Skin4=%d, Skin5=%d, Skin6=%d, Skin7=%d, Spawn_x=%f, Spawn_y=%f, Spawn_z=%f, Spawn_a=%f, Interior=%d, Arrested1_x=%f, Arrested1_y=%f, Arrested1_z=%f, Arrested2_x=%f, Arrested2_y=%f, Arrested2_z=%f WHERE id=1",
	FBIInfo[rank1],
	FBIInfo[rank2],
	FBIInfo[rank3],
	FBIInfo[rank4],
	FBIInfo[rank5],
	FBIInfo[rank6],
	FBIInfo[rank7],
	FBIInfo[skin][0],
	FBIInfo[skin][1],
	FBIInfo[skin][2],
	FBIInfo[skin][3],
	FBIInfo[skin][4],
	FBIInfo[skin][5],
	FBIInfo[skin][6],
	FBIInfo[Spawn][0],
	FBIInfo[Spawn][1],
	FBIInfo[Spawn][2],
	FBIInfo[Spawn][3],
	FBIInfo[Interior],
	FBIInfo[Arrested][0],
	FBIInfo[Arrested][1],
	FBIInfo[Arrested][2]);
	mysql_pquery(MYSQL,sql);

	format(sql, sizeof(sql), "UPDATE lvrp_factions_fbi SET Entrance_x=%f, Entrance_y=%f, Entrance_z=%f, Entrance_a=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Exit_a=%f  WHERE id=1",
	FBIInfo[Entrance][0],
	FBIInfo[Entrance][1],
	FBIInfo[Entrance][2],
	FBIInfo[Entrance][3],
	FBIInfo[Exit][0],
	FBIInfo[Exit][1],
	FBIInfo[Exit][2],
	FBIInfo[Exit][3]);
	mysql_pquery(MYSQL,sql);
}

public governement_Load()
{
	for (new i=0; i<4; i++)
	{
		cache_get_value_name(i,"rank1",governement[i][rank1], 32);
		cache_get_value_name(i,"rank2",governement[i][rank2], 32);
		cache_get_value_name(i,"rank3",governement[i][rank3], 32);
		cache_get_value_name(i,"rank4",governement[i][rank4], 32);
		cache_get_value_name(i,"rank5",governement[i][rank5], 32);
		cache_get_value_name(i,"rank6",governement[i][rank6], 32);
	    cache_get_value_name_int(i,"interior", governement[i][interior]);
	    cache_get_value_name_int(i,"safe", governement[i][safe]);
	    cache_get_value_name_int(i,"ticket", governement[i][ticket]);
	    cache_get_value_name_int(i,"unemployment", governement[i][unemployment]);
	    for(new a=0; a<20; a++) //
	    {
			cache_get_value_index_int(i,28+a, governement[i][salaryJob][a]);
			if(a<6)
			{
			    cache_get_value_index_int(i,7+a, governement[i][skin][a]);
			    cache_get_value_index_int(i,15+a, governement[i][tax][a]);
			    cache_get_value_index_int(i,48+a, governement[i][salaryPolice][a]);
			    cache_get_value_index_int(i,56+a, governement[i][salaryFbi][a]);
			    cache_get_value_index_int(i,62+a, governement[i][salaryGovernement][a]);
   			    cache_get_value_index_int(i,68+a, governement[i][salaryCia][a]);
			}
			if(a<7)
				{cache_get_value_index_int(i,21+a, governement[i][license][a]);}
			if(a<12)
			{
			    cache_get_value_index_float(i,74+a, governement[i][pos][a]);
			    cache_get_value_index_float(i,86+a, governement[i][cmds][a]);
			}
		}
		governement_Update(i);
	}
	return 1;
}

stock governement_Save(id,bool:saveTax,bool:saveJob,bool:saveLicense,bool:savePos,bool:saveCmds,bool:saveSalary)
{
    format(sql, sizeof(sql), "UPDATE lvrp_factions_governements SET rank1='%s', rank2='%s', rank3='%s', rank4='%s', rank5='%s', rank6='%s', skin1=%d, skin2=%d, skin3=%d, skin4=%d, skin5=%d, skin6=%d, interior=%d, safe=%d, ticket=%d, unemployment=%d WHERE id=%d",
	governement[id][rank1],governement[id][rank2],governement[id][rank3],governement[id][rank4],governement[id][rank5],governement[id][rank6],governement[id][skin][0],governement[id][skin][1],governement[id][skin][2],governement[id][skin][3],governement[id][skin][4],
	governement[id][skin][5],governement[id][interior],governement[id][safe],governement[id][ticket],governement[id][unemployment],id+1);
	mysql_pquery(MYSQL,sql);

	if(saveTax==true)
	{
	    format(sql, sizeof(sql), "UPDATE lvrp_factions_governements SET tax_Impot=%d, tax_Home=%d, tax_Water=%d, tax_Electricity=%d, tax_Biz=%d, tax_Garage=%d WHERE id=%d",
		governement[id][tax][0],governement[id][tax][1],governement[id][tax][2],governement[id][tax][3],governement[id][tax][4],governement[id][tax][5],id+1);
		mysql_pquery(MYSQL,sql);
	}
	if(saveJob==true)
	{
	    format(sql, sizeof(sql), "UPDATE lvrp_factions_governements SET job1=%d, job2=%d, job3=%d, job4=%d, job5=%d, job6=%d, job7=%d, job8=%d, job9=%d, job10=%d, job11=%d, job12=%d, job13=%d, job14=%d, job15=%d, job16=%d, job17=%d, job18=%d, job19=%d, job20=%d  WHERE id=%d",
		governement[id][salaryJob][0],governement[id][salaryJob][1],governement[id][salaryJob][2],governement[id][tax][3],governement[id][salaryJob][4],governement[id][salaryJob][5],governement[id][salaryJob][6],governement[id][salaryJob][7],governement[id][salaryJob][8],governement[id][salaryJob][9],
		governement[id][salaryJob][10],governement[id][salaryJob][11],governement[id][salaryJob][12],governement[id][salaryJob][13],governement[id][salaryJob][14],governement[id][salaryJob][15],governement[id][salaryJob][16],governement[id][salaryJob][17],governement[id][salaryJob][18],governement[id][salaryJob][19],id+1);
		mysql_pquery(MYSQL,sql);
	}
	if(saveLicense==true)
	{
	    format(sql, sizeof(sql), "UPDATE lvrp_factions_governements SET licenseDrive=%d, licenseMoto=%d, licenseFly=%d, licenseTruck=%d, licenseWeapon=%d, licenseFish=%d, licenseBoat=%d WHERE id=%d",
		governement[id][license][0],governement[id][license][1],governement[id][license][2],governement[id][license][3],governement[id][license][4],governement[id][license][5],governement[id][license][6],id+1);
		mysql_pquery(MYSQL,sql);
	}
	if(savePos==true)
	{
	    format(sql, sizeof(sql), "UPDATE lvrp_factions_governements SET entrance_x=%f, entrance_y=%f, entrance_z=%f, entrance_a=%f, exit_x=%f, exit_y=%f, exit_z=%f, exit_a=%f, spawn_x=%f, spawn_y=%f, spawn_z=%f, spawn_a=%f WHERE id=%d",
		governement[id][pos][0],governement[id][pos][1],governement[id][pos][2],governement[id][pos][3],governement[id][pos][4],governement[id][pos][5],governement[id][pos][6],governement[id][pos][7],governement[id][pos][8],governement[id][pos][9],governement[id][pos][10],governement[id][pos][11],id+1);
		mysql_pquery(MYSQL,sql);
	}
	if(saveCmds==true)
	{
	    format(sql, sizeof(sql), "UPDATE lvrp_factions_governements SET buy_x=%f, buy_y=%f, buy_z=%f, edit_x=%f, edit_y=%f, edit_z=%f, duty_x=%f, duty_y=%f, duty_z=%f, equip_x=%f, equip_y=%f, equip_z=%f WHERE id=%d",
		governement[id][cmds][0],governement[id][cmds][1],governement[id][cmds][2],governement[id][cmds][3],governement[id][cmds][4],governement[id][cmds][5],governement[id][cmds][6],governement[id][cmds][7],governement[id][cmds][8],governement[id][cmds][9],governement[id][cmds][10],governement[id][cmds][11],id+1);
		mysql_pquery(MYSQL,sql);
	}
	if(saveSalary==true)
	{
	    format(sql, sizeof(sql), "UPDATE lvrp_factions_governements SET police1=%d, police2=%d, police3=%d, police4=%d, police5=%d, police6=%d, police7=%d, police8=%d, fbi1=%d, fbi2=%d, fbi3=%d, fbi4=%d, fbi5=%d, fbi6=%d, governement1=%d, governement2=%d, governement3=%d, governement4=%d, governement5=%d, governement6=%d, cia1=%d, cia2=%d, cia3=%d, cia4=%d, cia5=%d, cia6=%d WHERE id=%d",
		governement[id][salaryPolice][0],governement[id][salaryPolice][1],governement[id][salaryPolice][2],governement[id][salaryPolice][3],governement[id][salaryPolice][4],governement[id][salaryPolice][5],governement[id][salaryPolice][6],governement[id][salaryPolice][7],
		governement[id][salaryFbi][0],governement[id][salaryFbi][1],governement[id][salaryFbi][2],governement[id][salaryFbi][3],governement[id][salaryFbi][4],governement[id][salaryFbi][5],
		governement[id][salaryGovernement][0],governement[id][salaryGovernement][1],governement[id][salaryGovernement][2],governement[id][salaryGovernement][3],governement[id][salaryGovernement][4],governement[id][salaryGovernement][5],
		governement[id][salaryCia][0],governement[id][salaryCia][1],governement[id][salaryCia][2],governement[id][salaryCia][3],governement[id][salaryCia][4],governement[id][salaryCia][5],id+1);
		mysql_pquery(MYSQL,sql);
	}
}

stock fire_Load()
{
	format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_pompier WHERE id=1");
	mysql_query(MYSQL,sql);
	new count = 0;
	if(cache_get_row_count(count) && count > 0)
	{
	    cache_get_value_name(0,"Rank1",FireInfo[rank1],32);
	    cache_get_value_name(0,"Rank2",FireInfo[rank2],32);
	    cache_get_value_name(0,"Rank3",FireInfo[rank3],32);
	    cache_get_value_name(0,"Rank4",FireInfo[rank4],32);
	    cache_get_value_name(0,"Rank5",FireInfo[rank5],32);
	    cache_get_value_name(0,"Rank6",FireInfo[rank6],32);
	    FireInfo[skin][0] = cache_get_value_name_int(0,"Skin1");
	    FireInfo[skin][1] = cache_get_value_name_int(0,"Skin2");
	    FireInfo[skin][2] = cache_get_value_name_int(0,"Skin3");
	    FireInfo[skin][3] = cache_get_value_name_int(0,"Skin4");
	    FireInfo[skin][4] = cache_get_value_name_int(0,"Skin5");
	    FireInfo[skin][5] = cache_get_value_name_int(0,"Skin6");
	    FireInfo[Spawn][0] = cache_get_value_name_float(0,"Spawn_x");
	    FireInfo[Spawn][1] = cache_get_value_name_float(0,"Spawn_y");
	    FireInfo[Spawn][2] = cache_get_value_name_float(0,"Spawn_z");
	    FireInfo[Spawn][3] = cache_get_value_name_float(0,"Spawn_a");
	    FireInfo[Interior] = cache_get_value_name_int(0,"Interior");
	    FireInfo[VW] = cache_get_value_name_int(0,"id");
	    FireInfo[Entrance][0] = cache_get_value_name_float(0,"Entrance_x");
	    FireInfo[Entrance][1] = cache_get_value_name_float(0,"Entrance_y");
	    FireInfo[Entrance][2] = cache_get_value_name_float(0,"Entrance_z");
	    FireInfo[Entrance][3] = cache_get_value_name_float(0,"Entrance_a");
	    FireInfo[Exit][0] = cache_get_value_name_float(0,"Exit_x");
	    FireInfo[Exit][1] = cache_get_value_name_float(0,"Exit_y");
	    FireInfo[Exit][2] = cache_get_value_name_float(0,"Exit_z");
	    FireInfo[Exit][3] = cache_get_value_name_float(0,"Exit_a");
	    FireInfo[Duty][0] = cache_get_value_name_float(0,"Duty_x");
	    FireInfo[Duty][1] = cache_get_value_name_float(0,"Duty_y");
	    FireInfo[Duty][2] = cache_get_value_name_float(0,"Duty_z");
	    FireInfo[Equip][0] = cache_get_value_name_float(0,"Equip_x");
	    FireInfo[Equip][1] = cache_get_value_name_float(0,"Equip_y");
	    FireInfo[Equip][2] = cache_get_value_name_float(0,"Equip_z");
	    FireInfo[Bell][0] = cache_get_value_name_float(0,"Bell_x");
	    FireInfo[Bell][1] = cache_get_value_name_float(0,"Bell_y");
	    FireInfo[Bell][2] = cache_get_value_name_float(0,"Bell_z");
	}
	fire_Update();
	print("    .. Pompier chargé.");
	return 1;
}

stock fire_Save()
{
	format(sql, sizeof(sql), "UPDATE lvrp_factions_pompier SET rank1='%s', Rank2='%s', Rank3='%s', Rank4='%s', Rank5='%s', Rank6='%s', Skin1=%d, Skin2=%d, Skin3=%d, Skin4=%d, Skin5=%d, Skin6=%d, Spawn_x=%f, Spawn_y=%f, Spawn_z=%f, Spawn_a=%f, Interior=%d, Duty_x=%f, Duty_y=%f, Duty_z=%f, Equip_x=%f, Equip_y=%f, Equip_z=%f  WHERE id=1",
	FireInfo[rank1],
	FireInfo[rank2],
	FireInfo[rank3],
	FireInfo[rank4],
	FireInfo[rank5],
	FireInfo[rank6],
	FireInfo[skin][0],
	FireInfo[skin][1],
	FireInfo[skin][2],
	FireInfo[skin][3],
	FireInfo[skin][4],
	FireInfo[skin][5],
	FireInfo[Spawn][0],
	FireInfo[Spawn][1],
	FireInfo[Spawn][2],
	FireInfo[Spawn][3],
	FireInfo[Interior],
	FireInfo[Duty][0],
	FireInfo[Duty][1],
	FireInfo[Duty][2],
	FireInfo[Equip][0],
	FireInfo[Equip][1],
	FireInfo[Equip][2]);
	mysql_pquery(MYSQL,sql);

	format(sql, sizeof(sql), "UPDATE lvrp_factions_pompier SET Bell_x=%f, Bell_y=%f, Bell_z=%f, Entrance_x=%f, Entrance_y=%f, Entrance_z=%f, Entrance_a=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Exit_a=%f WHERE id=1",
	FireInfo[Bell][0],
	FireInfo[Bell][1],
	FireInfo[Bell][2],
	FireInfo[Entrance][0],
	FireInfo[Entrance][1],
	FireInfo[Entrance][2],
	FireInfo[Entrance][3],
	FireInfo[Exit][0],
	FireInfo[Exit][1],
	FireInfo[Exit][2],
	FireInfo[Exit][3]);
	mysql_pquery(MYSQL,sql);
}

stock mecano_Load()
{
	format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_mecano WHERE id=1");
	mysql_query(MYSQL,sql);
	new count = 0;
	if(cache_get_row_count(count) && count > 0)
	{
	    cache_get_value_name(0,"Rank1",MecanoInfo[rank1],32);
	    cache_get_value_name(0,"Rank2",MecanoInfo[rank2],32);
	    cache_get_value_name(0,"Rank3",MecanoInfo[rank3],32);
	    cache_get_value_name(0,"Rank4",MecanoInfo[rank4],32);
	    cache_get_value_name(0,"Rank5",MecanoInfo[rank5],32);
	    cache_get_value_name(0,"Rank6",MecanoInfo[rank6],32);
	    MecanoInfo[skin][0] = cache_get_value_name_int(0,"Skin1");
	    MecanoInfo[skin][1] = cache_get_value_name_int(0,"Skin2");
	    MecanoInfo[skin][2] = cache_get_value_name_int(0,"Skin3");
	    MecanoInfo[skin][3] = cache_get_value_name_int(0,"Skin4");
	    MecanoInfo[skin][4] = cache_get_value_name_int(0,"Skin5");
	    MecanoInfo[skin][5] = cache_get_value_name_int(0,"Skin6");
	    MecanoInfo[Spawn][0] = cache_get_value_name_float(0,"Spawn_x");
	    MecanoInfo[Spawn][1] = cache_get_value_name_float(0,"Spawn_y");
	    MecanoInfo[Spawn][2] = cache_get_value_name_float(0,"Spawn_z");
	    MecanoInfo[Spawn][3] = cache_get_value_name_float(0,"Spawn_a");
	    MecanoInfo[Interior] = cache_get_value_name_int(0,"Interior");
	    MecanoInfo[VW] = cache_get_value_name_int(0,"id");
	    MecanoInfo[Entrance][0] = cache_get_value_name_float(0,"Entrance_x");
	    MecanoInfo[Entrance][1] = cache_get_value_name_float(0,"Entrance_y");
	    MecanoInfo[Entrance][2] = cache_get_value_name_float(0,"Entrance_z");
	    MecanoInfo[Entrance][3] = cache_get_value_name_float(0,"Entrance_a");
	    MecanoInfo[Exit][0] = cache_get_value_name_float(0,"Exit_x");
	    MecanoInfo[Exit][1] = cache_get_value_name_float(0,"Exit_y");
	    MecanoInfo[Exit][2] = cache_get_value_name_float(0,"Exit_z");
	    MecanoInfo[Exit][3] = cache_get_value_name_float(0,"Exit_a");
	    MecanoInfo[Duty][0] = cache_get_value_name_float(0,"Duty_x");
	    MecanoInfo[Duty][1] = cache_get_value_name_float(0,"Duty_y");
	    MecanoInfo[Duty][2] = cache_get_value_name_float(0,"Duty_z");
	    MecanoInfo[Bell][0] = cache_get_value_name_float(0,"Bell_x");
	    MecanoInfo[Bell][1] = cache_get_value_name_float(0,"Bell_y");
	    MecanoInfo[Bell][2] = cache_get_value_name_float(0,"Bell_z");
	}
	mecano_Update();
	print("    .. Mécanicien chargé.");
	return 1;
}

stock mecano_Save()
{
	format(sql, sizeof(sql), "UPDATE lvrp_factions_mecano SET rank1='%s', Rank2='%s', Rank3='%s', Rank4='%s', Rank5='%s', Rank6='%s', Skin1=%d, Skin2=%d, Skin3=%d, Skin4=%d, Skin5=%d, Skin6=%d, Spawn_x=%f, Spawn_y=%f, Spawn_z=%f, Spawn_a=%f, Interior=%d, Duty_x=%f, Duty_y=%f, Duty_z=%f WHERE id=1",
	MecanoInfo[rank1],
	MecanoInfo[rank2],
	MecanoInfo[rank3],
	MecanoInfo[rank4],
	MecanoInfo[rank5],
	MecanoInfo[rank6],
	MecanoInfo[skin][0],
	MecanoInfo[skin][1],
	MecanoInfo[skin][2],
	MecanoInfo[skin][3],
	MecanoInfo[skin][4],
	MecanoInfo[skin][5],
	MecanoInfo[Spawn][0],
	MecanoInfo[Spawn][1],
	MecanoInfo[Spawn][2],
	MecanoInfo[Spawn][3],
	MecanoInfo[Interior],
	MecanoInfo[Duty][0],
	MecanoInfo[Duty][1],
	MecanoInfo[Duty][2]);
	mysql_pquery(MYSQL,sql);
	
	format(sql, sizeof(sql), "UPDATE lvrp_factions_mecano SET Bell_x=%f, Bell_y=%f, Bell_z=%f, Entrance_x=%f, Entrance_y=%f, Entrance_z=%f, Entrance_a=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Exit_a=%f WHERE id=1",
	MecanoInfo[Bell][0],
	MecanoInfo[Bell][1],
	MecanoInfo[Bell][2],
	MecanoInfo[Entrance][0],
	MecanoInfo[Entrance][1],
	MecanoInfo[Entrance][2],
	MecanoInfo[Entrance][3],
	MecanoInfo[Exit][0],
	MecanoInfo[Exit][1],
	MecanoInfo[Exit][2],
	MecanoInfo[Exit][3]);
	mysql_pquery(MYSQL,sql);
}

forward police_Load();
public police_Load()
{
	for (new i=0; i<4; i++)
	{
		cache_get_value_name(i,"Rank1",police[i][rank1], 32);
	    cache_get_value_name(i,"Rank2",police[i][rank2], 32);
	    cache_get_value_name(i,"Rank3",police[i][rank3], 32);
	    cache_get_value_name(i,"Rank4",police[i][rank4], 32);
	    cache_get_value_name(i,"Rank5",police[i][rank5], 32);
	    cache_get_value_name(i,"Rank6",police[i][rank6], 32);
	    cache_get_value_name(i,"Rank7",police[i][rank7], 32);
	    cache_get_value_name(i,"Rank8",police[i][rank8], 32);
	    cache_get_value_name_int(i,"Interior", police[i][interior]);
	    for(new a=0; a<12; a++)
	    {
	        if(a<8)
	        	{cache_get_value_index_int(i,a+9, police[i][skin][a]);}
	        if(a<6)
	            {cache_get_value_index_float(i,a+18, police[i][cmds][a]);}
	        cache_get_value_index_float(i,a+24, police[i][pos][a]);
	    }
	    police_Update(i);
	}
	return 1;
}

stock police_Save(id)
{
	format(sql, sizeof(sql), "UPDATE lvrp_factions_polices SET rank1='%s', Rank2='%s', Rank3='%s', Rank4='%s', Rank5='%s', Rank6='%s', Rank7='%s', Rank8='%s', Skin1=%d, Skin2=%d, Skin3=%d, Skin4=%d, Skin5=%d, Skin6=%d, Skin7=%d, Skin8=%d, Spawn_x=%f, Spawn_y=%f, Spawn_z=%f, Spawn_a=%f, Interior=%d WHERE id=%d",
	police[id][rank1],
	police[id][rank2],
	police[id][rank3],
	police[id][rank4],
	police[id][rank5],
	police[id][rank6],
	police[id][rank7],
	police[id][rank8],
	police[id][skin][0],
	police[id][skin][1],
	police[id][skin][2],
	police[id][skin][3],
	police[id][skin][4],
	police[id][skin][5],
	police[id][skin][6],
	police[id][skin][7],
	police[id][pos][8],
	police[id][pos][9],
	police[id][pos][10],
	police[id][pos][11],
	police[id][interior],
	id+1);
	mysql_pquery(MYSQL,sql);
	
	format(sql, sizeof(sql), "UPDATE lvrp_factions_polices SET Duty_x=%f, Duty_y=%f, Duty_z=%f, Equip_x=%f, Equip_y=%f, Equip_z=%f, Entrance_x=%f, Entrance_y=%f, Entrance_z=%f, Entrance_a=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Exit_a=%f  WHERE id=%d",
	police[id][cmds][0],
	police[id][cmds][1],
	police[id][cmds][2],
	police[id][cmds][3],
	police[id][cmds][4],
	police[id][cmds][5],
	police[id][pos][0],
	police[id][pos][1],
	police[id][pos][2],
	police[id][pos][3],
	police[id][pos][4],
	police[id][pos][5],
	police[id][pos][6],
	police[id][pos][7],
	id+1);
	mysql_pquery(MYSQL,sql);
}

forward police_FineLoad();
public police_FineLoad()
{
	cache_get_row_count(totalFines);
	new created = 0;
	for (new i=0; i<totalFines; i++)
	{
		created = 0;
		cache_get_value_name(i,"Name",fine[i][tmpName], 32);
	 	cache_get_value_name_int(i,"Price", fine[i][price]);
		cache_get_value_name_int(i,"Created", created);
		fine[i][used] = !!created;
		cache_get_value_name_int(i,"City", fine[i][city]);
	}
	if(gServerReload==0)
		{printf("    ... %d Amendes police chargée(s).",totalFines);}
}
stock police_FineSave(id)
{
    new name[64];
    mysql_escape_string(fine[id][tmpName], name);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_factions_polices_fines SET Name='%s', Created=%d, Price=%d, City=%d WHERE id=%d",name,fine[id][used],fine[id][price],fine[id][city],id+1);
	mysql_pquery(MYSQL,sql);
}

stock biker_Load()
{
	/*format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_biker WHERE id=1");
	mysql_query(MYSQL,sql);
	new count = 0;
	if(cache_get_row_count(count) && count > 0)
	{
	    cache_get_value_name(0,"Rank1",BikerInfo[rank1]);
	    cache_get_value_name(0,"Rank2",BikerInfo[rank2]);
	    cache_get_value_name(0,"Rank3",BikerInfo[rank3]);
	    cache_get_value_name(0,"Rank4",BikerInfo[rank4]);
	    cache_get_value_name(0,"Rank5",BikerInfo[rank5]);
	    cache_get_value_name(0,"Rank6",BikerInfo[rank6]);
	    BikerInfo[skin][0] = cache_get_value_name_int(0,"Skin1");
	    BikerInfo[skin][1] = cache_get_value_name_int(0,"Skin2");
	    BikerInfo[skin][2] = cache_get_value_name_int(0,"Skin3");
	    BikerInfo[skin][3] = cache_get_value_name_int(0,"Skin4");
	    BikerInfo[skin][4] = cache_get_value_name_int(0,"Skin5");
	    BikerInfo[skin][5] = cache_get_value_name_int(0,"Skin6");
	    BikerInfo[Spawn][0] = cache_get_value_name_float(0,"Spawn_x");
	    BikerInfo[Spawn][1] = cache_get_value_name_float(0,"Spawn_y");
	    BikerInfo[Spawn][2] = cache_get_value_name_float(0,"Spawn_z");
	    BikerInfo[Spawn][3] = cache_get_value_name_float(0,"Spawn_a");
	    BikerInfo[Interior] = cache_get_value_name_int(0,"Interior");
	    BikerInfo[Entrance][0] = cache_get_value_name_float(0,"Entrance_x");
	    BikerInfo[Entrance][1] = cache_get_value_name_float(0,"Entrance_y");
	    BikerInfo[Entrance][2] = cache_get_value_name_float(0,"Entrance_z");
	    BikerInfo[Entrance][3] = cache_get_value_name_float(0,"Entrance_a");
	    BikerInfo[Exit][0] = cache_get_value_name_float(0,"Exit_x");
	    BikerInfo[Exit][1] = cache_get_value_name_float(0,"Exit_y");
	    BikerInfo[Exit][2] = cache_get_value_name_float(0,"Exit_z");
	    BikerInfo[Exit][3] = cache_get_value_name_float(0,"Exit_a");
	    BikerInfo[biCash] = cache_get_value_name_int(0,"Cash");
	    BikerInfo[biItemM][0] = cache_get_value_name_int(0,"iM1");
	    BikerInfo[biItemQ][0] = cache_get_value_name_int(0,"iQ1");
	    BikerInfo[biItemM][1] = cache_get_value_name_int(0,"iM2");
	    BikerInfo[biItemQ][1] = cache_get_value_name_int(0,"iQ2");
	    BikerInfo[biItemM][2] = cache_get_value_name_int(0,"iM3");
	    BikerInfo[biItemQ][2] = cache_get_value_name_int(0,"iQ3");
	    BikerInfo[biItemM][3] = cache_get_value_name_int(0,"iM4");
	    BikerInfo[biItemQ][3] = cache_get_value_name_int(0,"iQ4");
	    BikerInfo[biItemM][4] = cache_get_value_name_int(0,"iM5");
	    BikerInfo[biItemQ][4] = cache_get_value_name_int(0,"iQ5");
	    BikerInfo[biItemM][5] = cache_get_value_name_int(0,"iM6");
	    BikerInfo[biItemQ][5] = cache_get_value_name_int(0,"iQ6");
	    BikerInfo[biItemM][6] = cache_get_value_name_int(0,"iM7");
	    BikerInfo[biItemQ][6] = cache_get_value_name_int(0,"iQ7");
	    BikerInfo[biItemM][7] = cache_get_value_name_int(0,"iM8");
	    BikerInfo[biItemQ][7] = cache_get_value_name_int(0,"iQ8");
	    BikerInfo[biItemM][8] = cache_get_value_name_int(0,"iM9");
	    BikerInfo[biItemQ][8] = cache_get_value_name_int(0,"iQ9");
	    BikerInfo[biItemM][9] = cache_get_value_name_int(0,"iM10");
	    BikerInfo[biItemQ][9] = cache_get_value_name_int(0,"iQ10");
	}*/
	biker_Update();
	print("    .. Biker'z chargé.");
	return 1;
}

stock biker_Save()
{
	format(sql, sizeof(sql), "UPDATE lvrp_factions_biker SET Rank1='%s', Rank2='%s', Rank3='%s', Rank4='%s', Rank5='%s', Rank6='%s', Skin1=%d, Skin2=%d, Skin3=%d, Skin4=%d, Skin5=%d, Skin6=%d, Spawn_x=%f, Spawn_y=%f, Spawn_z=%f, Spawn_a=%f, Interior=%d, Entrance_x=%f, Entrance_y=%f, Entrance_z=%f, Entrance_a=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Exit_a=%f WHERE id=1",
	BikerInfo[rank1],
	BikerInfo[rank2],
	BikerInfo[rank3],
	BikerInfo[rank4],
	BikerInfo[rank5],
	BikerInfo[rank6],
	BikerInfo[skin][0],
	BikerInfo[skin][1],
	BikerInfo[skin][2],
	BikerInfo[skin][3],
	BikerInfo[skin][4],
	BikerInfo[skin][5],
	BikerInfo[Spawn][0],
	BikerInfo[Spawn][1],
	BikerInfo[Spawn][2],
	BikerInfo[Spawn][3],
	BikerInfo[Interior],
	BikerInfo[Entrance][0],
	BikerInfo[Entrance][1],
	BikerInfo[Entrance][2],
	BikerInfo[Entrance][3],
	BikerInfo[Exit][0],
	BikerInfo[Exit][1],
	BikerInfo[Exit][2],
	BikerInfo[Exit][3]);
	mysql_pquery(MYSQL,sql);
	
	format(sql, sizeof(sql), "UPDATE lvrp_factions_biker SET Cash=%d, iM1=%d, iQ1=%d, iM2=%d, iQ2=%d, iM3=%d, iQ3=%d, iM4=%d, iQ4=%d, iM5=%d, iQ5=%d, iM6=%d, iQ6=%d, iM7=%d, iQ7=%d, iM8=%d, iQ8=%d, iM9=%d, iQ9=%d, iM10=%d, iQ10=%d WHERE id=1",
	BikerInfo[biCash],BikerInfo[biItemM][0],BikerInfo[biItemQ][0],BikerInfo[biItemM][1],BikerInfo[biItemQ][1],BikerInfo[biItemM][2],BikerInfo[biItemQ][2],BikerInfo[biItemM][3],BikerInfo[biItemQ][3],BikerInfo[biItemM][4],BikerInfo[biItemQ][4],
	BikerInfo[biItemM][5],BikerInfo[biItemQ][5],BikerInfo[biItemM][6],BikerInfo[biItemQ][6],BikerInfo[biItemM][7],BikerInfo[biItemQ][7],BikerInfo[biItemM][8],BikerInfo[biItemQ][8],BikerInfo[biItemM][9],BikerInfo[biItemQ][9]);
	mysql_pquery(MYSQL,sql);
}

stock bizz_Save(id)
{
    new esc_owner[64], message[64];
    mysql_escape_string(bizz[id][owner], esc_owner);
    mysql_escape_string(bizz[id][description], message);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_bizz SET Created=%d, Owned=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Owner='%s', Message='%s', Caisse=%d, EnterPrice=%d, Price=%d, ProdPrice=%d, Locked=%d, Interior=%d, Type=%d, Prods=%d, ProdsMax=%d, WV=%d, Varia=%d WHERE id=%d",
	bizz[id][used],
	bizz[id][owned],
	bizz[id][pos][0],
	bizz[id][pos][1],
	bizz[id][pos][2],
	bizz[id][pos][3],
	bizz[id][pos][4],
	bizz[id][pos][5],
    esc_owner,
    message,
  	bizz[id][fund],
    bizz[id][enterCost],
    bizz[id][price],
  	bizz[id][prodCost],
    bizz[id][lock],
    bizz[id][interior],
    bizz[id][typeZ],
    bizz[id][products],
    bizz[id][prodMax],
    bizz[id][world],
    bizz[id][variable],
	id+1);
	mysql_pquery(MYSQL,sql);

    MySQLCheckConnexion();
    format(sql,sizeof(sql),"UPDATE lvrp_server_bizz SET Art1=%d, Art2=%d, Art3=%d, Art4=%d, Art5=%d, Art6=%d, Art7=%d, Art8=%d, Art9=%d, Art10=%d, Art11=%d, Art12=%d, Art13=%d, Art14=%d, Art15=%d, Art16=%d, Art17=%d, Art18=%d, Art19=%d, Art20=%d WHERE id=%d",
    bizz[id][itemCost][0],
    bizz[id][itemCost][1],
    bizz[id][itemCost][2],
    bizz[id][itemCost][3],
    bizz[id][itemCost][4],
    bizz[id][itemCost][5],
    bizz[id][itemCost][6],
    bizz[id][itemCost][7],
    bizz[id][itemCost][8],
    bizz[id][itemCost][9],
    bizz[id][itemCost][10],
    bizz[id][itemCost][11],
    bizz[id][itemCost][12],
    bizz[id][itemCost][13],
    bizz[id][itemCost][14],
    bizz[id][itemCost][15],
    bizz[id][itemCost][16],
    bizz[id][itemCost][17],
    bizz[id][itemCost][18],
	bizz[id][itemCost][19],
    id+1);
    mysql_pquery(MYSQL,sql);
}

forward bizz_Load();
public bizz_Load()
{
	cache_get_row_count(totalBizz);
	for (new i=0; i<totalBizz; i++)
	{
		cache_get_value_name_int(i,"Created", bizz[i][used]);
		cache_get_value_name_int(i,"Owned", bizz[i][owned]);
		cache_get_value_name_float(i,"Pos_x", bizz[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", bizz[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", bizz[i][pos][2]);
		cache_get_value_name_float(i,"Exit_x", bizz[i][pos][3]);
		cache_get_value_name_float(i,"Exit_y", bizz[i][pos][4]);
		cache_get_value_name_float(i,"Exit_z", bizz[i][pos][5]);
		cache_get_value_name(i,"Owner",bizz[i][owner], 64);
		cache_get_value_name(i,"Message",bizz[i][description], 64);
		cache_get_value_name_int(i,"Caisse", bizz[i][fund]);
		cache_get_value_name_int(i,"EnterPrice", bizz[i][enterCost]);
		cache_get_value_name_int(i,"Price", bizz[i][price]);
		cache_get_value_name_int(i,"ProdPrice", bizz[i][prodCost]);
		cache_get_value_name_int(i,"Locked", bizz[i][lock]);
		cache_get_value_name_int(i,"Interior", bizz[i][interior]);
		cache_get_value_name_int(i,"Type", bizz[i][typeZ]);
		cache_get_value_name_int(i,"Prods", bizz[i][products]);
		cache_get_value_name_int(i,"ProdsMax", bizz[i][prodMax]);
		cache_get_value_name_int(i,"WV", bizz[i][world]);
		cache_get_value_name_int(i,"Varia",	bizz[i][variable]);
		cache_get_value_name_int(i,"Art1", bizz[i][itemCost][0]);
		cache_get_value_name_int(i,"Art2", bizz[i][itemCost][1]);
		cache_get_value_name_int(i,"Art3", bizz[i][itemCost][2]);
		cache_get_value_name_int(i,"Art4", bizz[i][itemCost][3]);
		cache_get_value_name_int(i,"Art5", bizz[i][itemCost][4]);
		cache_get_value_name_int(i,"Art6", bizz[i][itemCost][5]);
		cache_get_value_name_int(i,"Art7", bizz[i][itemCost][6]);
		cache_get_value_name_int(i,"Art8", bizz[i][itemCost][7]);
		cache_get_value_name_int(i,"Art9", bizz[i][itemCost][8]);
		cache_get_value_name_int(i,"Art10", bizz[i][itemCost][9]);
		cache_get_value_name_int(i,"Art11", bizz[i][itemCost][10]);
		cache_get_value_name_int(i,"Art12", bizz[i][itemCost][11]);
		cache_get_value_name_int(i,"Art13", bizz[i][itemCost][12]);
		cache_get_value_name_int(i,"Art14", bizz[i][itemCost][13]);
		cache_get_value_name_int(i,"Art15", bizz[i][itemCost][14]);
		cache_get_value_name_int(i,"Art16", bizz[i][itemCost][15]);
		cache_get_value_name_int(i,"Art17", bizz[i][itemCost][16]);
		cache_get_value_name_int(i,"Art18", bizz[i][itemCost][17]);
		cache_get_value_name_int(i,"Art19", bizz[i][itemCost][18]);
		cache_get_value_name_int(i,"Art20", bizz[i][itemCost][19]);
		bizz_UpdateInfos(i);
    }
    if(gServerReload==0)
		{printf("    .. %d bizz chargé(s)",totalBizz);}
}

stock setting_Load()
{
	new tmp = 0;
	mysql_query(MYSQL,"SELECT * FROM lvrp_server_settings WHERE id=1");
	cache_get_value_name_int(0,"anticheat", tmp);
	setting[anticheat] = !!tmp;
	cache_get_value_name_int(0,"inscription", tmp);
	setting[inscription] = !!tmp;
	cache_get_value_name_int(0,"beta", tmp);
	setting[beta] = !!tmp;
	cache_get_value_name_int(0,"bot", tmp);
	setting[bot] = !!tmp;
	printf("[SETTINGS] AntiCheat : %d - Inscription IG : %d - Beta : %d - Bots : %d",setting[anticheat],setting[inscription],setting[beta],setting[bot]);
}

stock setting_Save()
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_settings SET anticheat=%d, inscription=%d, beta=%d, bot=%d WHERE id=1",
    setting[anticheat],
    setting[inscription],
    setting[beta],
    setting[bot]);
    mysql_pquery(MYSQL,sql);
}

forward house_Load();
public house_Load()
{
	cache_get_row_count(totalHouses);
	for (new i=0; i<totalHouses; i++)
	{
		cache_get_value_name_int(i,"Created", house[i][used]);
		cache_get_value_name_float(i,"Pos_x", house[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", house[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", house[i][pos][2]);
		cache_get_value_name_float(i,"Exit_x", house[i][pos][3]);
		cache_get_value_name_float(i,"Exit_y", house[i][pos][4]);
		cache_get_value_name_float(i,"Exit_z", house[i][pos][5]);
		cache_get_value_name(i,"Owner",house[i][owner], 32);
		cache_get_value_name(i,"Message",house[i][description], 64);
		cache_get_value_name_int(i,"Owned", house[i][owned]);
		cache_get_value_name_int(i,"Price", house[i][price]);
		cache_get_value_name_int(i,"Assurance", house[i][insurance]);
		cache_get_value_name_int(i,"Talking", house[i][talking]);
		cache_get_value_name_int(i,"RentPrice", house[i][rentPrice]);
		cache_get_value_name_int(i,"LocActive", house[i][rentState]);
		cache_get_value_name_int(i,"ShowDesc", house[i][showDesc]);
		cache_get_value_name_int(i,"NbrLoc", house[i][rentNb]);
		cache_get_value_name_int(i,"MaxLoc", house[i][rentMax]);
		cache_get_value_name_int(i,"Locked", house[i][lock]);
		cache_get_value_name_int(i,"Interior", house[i][interior]);
		cache_get_value_name_int(i,"WV", house[i][world]);
  		cache_get_value_name_int(i,"Cash", house[i][cash]);
  		cache_get_value_name_float(i,"Armour", house[i][armour]);
  		cache_get_value_name_int(i,"iM1", house[i][hItemM][0]);
  		cache_get_value_name_int(i,"iQ1", house[i][hItemQ][0]);
  		cache_get_value_name_int(i,"iM2", house[i][hItemM][1]);
  		cache_get_value_name_int(i,"iQ2", house[i][hItemQ][1]);
  		cache_get_value_name_int(i,"iM3", house[i][hItemM][2]);
  		cache_get_value_name_int(i,"iQ3", house[i][hItemQ][2]);
  		cache_get_value_name_int(i,"iM4", house[i][hItemM][3]);
  		cache_get_value_name_int(i,"iQ4", house[i][hItemQ][3]);
  		cache_get_value_name_int(i,"iM5", house[i][hItemM][4]);
  		cache_get_value_name_int(i,"iQ5", house[i][hItemQ][4]);
  		cache_get_value_name_int(i,"iM6", house[i][hItemM][5]);
  		cache_get_value_name_int(i,"iQ6", house[i][hItemQ][5]);
  		cache_get_value_name_int(i,"iM7", house[i][hItemM][6]);
  		cache_get_value_name_int(i,"iQ7", house[i][hItemQ][6]);
  		cache_get_value_name_int(i,"iM8", house[i][hItemM][7]);
  		cache_get_value_name_int(i,"iQ8", house[i][hItemQ][7]);
  		cache_get_value_name_int(i,"iM9", house[i][hItemM][8]);
  		cache_get_value_name_int(i,"iQ9", house[i][hItemQ][8]);
  		cache_get_value_name_int(i,"iM10", house[i][hItemM][9]);
  		cache_get_value_name_int(i,"iQ10", house[i][hItemQ][9]);
  		cache_get_value_name_int(i,"iM11", house[i][hItemM][10]);
  		cache_get_value_name_int(i,"iQ11", house[i][hItemQ][10]);
  		cache_get_value_name_int(i,"iM12", house[i][hItemM][11]);
  		cache_get_value_name_int(i,"iQ12", house[i][hItemQ][11]);
  		cache_get_value_name_int(i,"iM13", house[i][hItemM][12]);
  		cache_get_value_name_int(i,"iQ13", house[i][hItemQ][12]);
  		cache_get_value_name_int(i,"iM14", house[i][hItemM][13]);
  		cache_get_value_name_int(i,"iQ14", house[i][hItemQ][13]);
  		cache_get_value_name_int(i,"iM15", house[i][hItemM][14]);
  		cache_get_value_name_int(i,"iQ15", house[i][hItemQ][14]);
		house_UpdateInfos(i);
    }
    if(gServerReload==0)
		{printf("    .. %d maison(s) chargée(s)",totalHouses);}
}
stock house_Save(id,bool:saveSafe=false)
{
    new esc_owner[64],message[64];
    mysql_escape_string(house[id][owner], esc_owner);
    mysql_escape_string(house[id][description], message);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_houses SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Owner='%s', Message='%s', Owned=%d, Price=%d, Assurance=%d, Talking=%d, RentPrice=%d, LocActive=%d, NbrLoc=%d, MaxLoc=%d, Locked=%d, Interior=%d, WV=%d, Cash=%d, Armour=%f, ShowDesc=%d WHERE id=%d",
	house[id][used],
	house[id][pos][0],
	house[id][pos][1],
	house[id][pos][2],
	house[id][pos][3],
	house[id][pos][4],
	house[id][pos][5],
	esc_owner,
	message,
	house[id][owned],
	house[id][price],
	house[id][insurance],
	house[id][talking],
	house[id][rentPrice],
	house[id][rentState],
	house[id][rentNb],
	house[id][rentMax],
	house[id][lock],
	house[id][interior],
	house[id][world],
	house[id][cash],
	house[id][armour],
	house[id][showDesc],
	id+1);
	mysql_pquery(MYSQL,sql);
	
	if(saveSafe == true)
	{
	    format(sql,sizeof(sql),"UPDATE lvrp_server_houses SET iM1=%d, iQ1=%d, iM2=%d, iQ2=%d, iM3=%d, iQ3=%d, iM4=%d, iQ4=%d, iM5=%d, iQ5=%d, iM6=%d, iQ6=%d, iM7=%d, iQ7=%d, iM8=%d, iQ8=%d, iM9=%d, iQ9=%d, iM10=%d, iQ10=%d, iM11=%d, iQ11=%d, iM12=%d, iQ12=%d, iM13=%d, iQ13=%d, iM14=%d, iQ14=%d, iM15=%d, iQ15=%d WHERE id=%d",
        house[id][hItemM][0],house[id][hItemQ][0],house[id][hItemM][1],house[id][hItemQ][1],house[id][hItemM][2],house[id][hItemQ][2],house[id][hItemM][3],house[id][hItemQ][3],house[id][hItemM][4],house[id][hItemQ][4],
        house[id][hItemM][5],house[id][hItemQ][5],house[id][hItemM][6],house[id][hItemQ][6],house[id][hItemM][7],house[id][hItemQ][7],house[id][hItemM][8],house[id][hItemQ][8],house[id][hItemM][9],house[id][hItemQ][9],
        house[id][hItemM][10],house[id][hItemQ][10],house[id][hItemM][11],house[id][hItemQ][11],house[id][hItemM][12],house[id][hItemQ][12],house[id][hItemM][13],house[id][hItemQ][13],house[id][hItemM][14],house[id][hItemQ][14],id+1);
        mysql_pquery(MYSQL,sql);
	}
}

stock house_LoadModels()
{
    house_FurnituresList[0] = LoadModelSelectionMenu("LVRP/bath.txt");
	house_FurnituresList[1] = LoadModelSelectionMenu("LVRP/beds.txt");
	house_FurnituresList[2] = LoadModelSelectionMenu("LVRP/chairs.txt");
	house_FurnituresList[3] = LoadModelSelectionMenu("LVRP/divers.txt");
	house_FurnituresList[4] = LoadModelSelectionMenu("LVRP/floors.txt");
	house_FurnituresList[5] = LoadModelSelectionMenu("LVRP/kitchen.txt");
	house_FurnituresList[6] = LoadModelSelectionMenu("LVRP/ligths.txt");
	house_FurnituresList[7] = LoadModelSelectionMenu("LVRP/pictures.txt");
	house_FurnituresList[8] = LoadModelSelectionMenu("LVRP/plants.txt");
	house_FurnituresList[9] = LoadModelSelectionMenu("LVRP/shelfs.txt");
	house_FurnituresList[10] = LoadModelSelectionMenu("LVRP/sounds.txt");
	house_FurnituresList[11] = LoadModelSelectionMenu("LVRP/tables.txt");
	house_FurnituresList[12] = LoadModelSelectionMenu("LVRP/tables_and_chairs.txt");
	house_FurnituresList[13] = LoadModelSelectionMenu("LVRP/tvs.txt");
	house_FurnituresList[14] = LoadModelSelectionMenu("LVRP/gym.txt");
	house_FurnituresList[15] = LoadModelSelectionMenu("LVRP/walls.txt");
	house_FurnituresList[16] = LoadModelSelectionMenu("LVRP/gates.txt");
	print("    .. listes models changées");
	return 1;
}

forward house_LoadFurnitures();
public house_LoadFurnitures()
{
	new mob=-1, tmp = 0;
 	cache_get_row_count(totalFurnitures);
	for (new i=0; i<totalFurnitures; i++)
	{
        cache_get_value_index_int(i,1, tmp);
	    if(house[tmp][used]!= 1)// Maison non-définie
     	{
          	cache_get_value_index_int(i,0, tmp);
			format(sql, sizeof(sql), "DELETE FROM lvrp_server_houses_furnitures WHERE id=%d LIMIT 1", tmp);
			mysql_pquery(MYSQL,sql);
			continue;
		}
  		cache_get_value_index_int(i,1, tmp);
	    mob = house_CheckUnusedFurniture(tmp);
	    cache_get_value_index_int(i,0, house[tmp][fFurSQLid][mob]);
	    cache_get_value_index_int(i,2, house[tmp][hItem][mob]);
	    cache_get_value_index_float(i,3, house[tmp][hFurPos_x][mob]);
	    cache_get_value_index_float(i,4, house[tmp][hFurPos_y][mob]);
	    cache_get_value_index_float(i,5, house[tmp][hFurPos_z][mob]);
	    cache_get_value_index_float(i,6, house[tmp][hFurPos_rx][mob]);
	    cache_get_value_index_float(i,7, house[tmp][hFurPos_ry][mob]);
	    cache_get_value_index_float(i,8, house[tmp][hFurPos_rz][mob]);
	    house_UpdateFurnitureInfos(tmp, mob);
	}
	if(gServerReload==0)
		{printf("    .. %d mobilier(s) chargé(s)",totalFurnitures);}
}

stock house_SaveFurniture(id,objectid)
{
    MySQLCheckConnexion();
    format(sql,sizeof(sql),"UPDATE lvrp_server_houses_furnitures SET ObjectId=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Rot_x=%f, Rot_y=%f, Rot_z=%f WHERE id=%d",
    house[id][hItem][objectid],
    house[id][hFurPos_x][objectid],
    house[id][hFurPos_y][objectid],
    house[id][hFurPos_z][objectid],
    house[id][hFurPos_rx][objectid],
    house[id][hFurPos_ry][objectid],
    house[id][hFurPos_rz][objectid],
    house[id][fFurSQLid][objectid]);
    mysql_pquery(MYSQL,sql);
}

stock uniquebizz_Save(id)
{
    new esc_owner[64],message[64];
    mysql_escape_string(sbizz[id][ubOwner], esc_owner);
    mysql_escape_string(sbizz[id][ubMessage], message);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_uniquebizz SET Owned=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Owner='%s', Message='%s', Caisse=%d, EnterPrice=%d, Price=%d, ProdsPrice=%d, Locked=%d, Interior=%d, Prods=%d, MaxProds=%d, WV=%d WHERE id=%d",
    sbizz[id][ubOwned],
    sbizz[id][ubEntrance_x],
    sbizz[id][ubEntrance_y],
    sbizz[id][ubEntrance_z],
    sbizz[id][ubExit_x],
    sbizz[id][ubExit_y],
    sbizz[id][ubExit_z],
    esc_owner,
    message,
    sbizz[id][ubCaisse],
    sbizz[id][ubEnterPrice],
    sbizz[id][ubPrix],
    sbizz[id][ubPrix_Prod],
    sbizz[id][ubLock],
    sbizz[id][ubInt],
    sbizz[id][ubProduits],
    sbizz[id][ubMaxProduits],
    sbizz[id][ubWV],
	id+1);
	mysql_pquery(MYSQL,sql);
	
	format(sql,sizeof(sql),"UPDATE lvrp_server_uniquebizz SET Special_Pos_x=%f, Special_Pos_y=%f, Special_Pos_z=%f, HasInt=%d, Art1=%d, Art2=%d, Art3=%d, Art4=%d, Art5=%d WHERE id=%d",
	sbizz[id][ubSpecial_pos_x],
	sbizz[id][ubSpecial_pos_y],
	sbizz[id][ubSpecial_pos_z],
	sbizz[id][ubHasInt],
	sbizz[id][ubPriceArticle][0],
	sbizz[id][ubPriceArticle][1],
	sbizz[id][ubPriceArticle][2],
	sbizz[id][ubPriceArticle][3],
	sbizz[id][ubPriceArticle][4],
    id+1);
	mysql_pquery(MYSQL,sql);
}

forward uniquebizz_Load();
public uniquebizz_Load()
{
	for (new i=0; i<MAX_SBIZZ; i++)
	{
		cache_get_value_name_int(i,"Owned", sbizz[i][ubOwned]);
	    cache_get_value_name_float(i,"Pos_x", sbizz[i][ubEntrance_x]);
	    cache_get_value_name_float(i,"Pos_y", sbizz[i][ubEntrance_y]);
	    cache_get_value_name_float(i,"Pos_z", sbizz[i][ubEntrance_z]);
	    cache_get_value_name_float(i,"Exit_x", sbizz[i][ubExit_x]);
	    cache_get_value_name_float(i,"Exit_y", sbizz[i][ubExit_y]);
	    cache_get_value_name_float(i,"Exit_z", sbizz[i][ubExit_z]);
	    cache_get_value_name(i,"Owner",sbizz[i][ubOwner], 64);
		cache_get_value_name(i,"Message",sbizz[i][ubMessage], 64);
	    cache_get_value_name_int(i,"Caisse", sbizz[i][ubCaisse]);
	    cache_get_value_name_int(i,"EnterPrice", sbizz[i][ubEnterPrice]);
	    cache_get_value_name_int(i,"Price", sbizz[i][ubPrix]);
	    cache_get_value_name_int(i,"ProdsPrice", sbizz[i][ubPrix_Prod]);
	    cache_get_value_name_int(i,"Locked", sbizz[i][ubLock]);
	    cache_get_value_name_int(i,"Interior", sbizz[i][ubInt]);
	    cache_get_value_name_int(i,"Prods", sbizz[i][ubProduits]);
	    cache_get_value_name_int(i,"MaxProds", sbizz[i][ubMaxProduits]);
	    cache_get_value_name_int(i,"WV", sbizz[i][ubWV]);
	    cache_get_value_name_float(i,"Special_Pos_x", sbizz[i][ubSpecial_pos_x]);
		cache_get_value_name_float(i,"Special_Pos_y", sbizz[i][ubSpecial_pos_y]);
		cache_get_value_name_float(i,"Special_Pos_z", sbizz[i][ubSpecial_pos_z]);
		cache_get_value_name_int(i,"HasInt", sbizz[i][ubHasInt]);
		cache_get_value_name_int(i,"Art1", sbizz[i][ubPriceArticle][0]);
		cache_get_value_name_int(i,"Art2", sbizz[i][ubPriceArticle][1]);
		cache_get_value_name_int(i,"Art3", sbizz[i][ubPriceArticle][2]);
		cache_get_value_name_int(i,"Art4", sbizz[i][ubPriceArticle][3]);
		cache_get_value_name_int(i,"Art5", sbizz[i][ubPriceArticle][4]);
        uniquebizz_UpdateInfos(i);
    }
    if(gServerReload==0)
    	{print("    .. UniqueBizz chargé(s).");}
}


stock uniquebizz_Create(id)
{
    sbizz[id][ubOwned] = 0;
    strmid(sbizz[id][ubOwner], "Personne", 0, strlen("Personne"), 255);
    sbizz[id][ubCaisse] = 0;
    if(id >= 0 && id < MAX_STATION) // Station Essence
    {
        if(id == 0)
        {
            sbizz[id][ubEntrance_x] = 1928.6683;
            sbizz[id][ubEntrance_y] = -1776.2953;
            sbizz[id][ubEntrance_z] = 13.5469;
            sbizz[id][ubSpecial_pos_x] = 1943.0566;
            sbizz[id][ubSpecial_pos_y] = -1773.0045;
            sbizz[id][ubSpecial_pos_z] = 13.5640;
        }
        if(id == 1)
        {
            sbizz[id][ubEntrance_x] = 1000.5869;
            sbizz[id][ubEntrance_y] = -919.9633;
            sbizz[id][ubEntrance_z] = 42.3281;
            sbizz[id][ubSpecial_pos_x] = 1004.0618;
            sbizz[id][ubSpecial_pos_y] = -935.3028;
            sbizz[id][ubSpecial_pos_z] = 42.1797;
        }
        if(id == 2)
        {
            sbizz[id][ubEntrance_x] = -78.3800;
            sbizz[id][ubEntrance_y] = -1169.9126;
            sbizz[id][ubEntrance_z] = 2.1355;
            sbizz[id][ubSpecial_pos_x] = -90.8188;
            sbizz[id][ubSpecial_pos_y] = -1168.9634;
            sbizz[id][ubSpecial_pos_z] = 2.4191;
        }
        if(id == 3)
        {
            sbizz[id][ubEntrance_x] = -1562.5939;
            sbizz[id][ubEntrance_y] = -2733.0085;
            sbizz[id][ubEntrance_z] = 48.7435;
            sbizz[id][ubSpecial_pos_x] = -1605.9358;
            sbizz[id][ubSpecial_pos_y] = -2713.6680;
            sbizz[id][ubSpecial_pos_z] = 48.5335;
        }
        if(id == 4)
        {
            sbizz[id][ubEntrance_x] = -2032.9739;
            sbizz[id][ubEntrance_y] = 161.4879;
            sbizz[id][ubEntrance_z] = 29.0461;
            sbizz[id][ubSpecial_pos_x] = -2026.5847;
            sbizz[id][ubSpecial_pos_y] = 156.9868;
            sbizz[id][ubSpecial_pos_z] = 29.0391;
        }
        if(id == 5)
        {
            sbizz[id][ubEntrance_x] = -2420.1563;
            sbizz[id][ubEntrance_y] = 969.9635;
            sbizz[id][ubEntrance_z] = 45.2969;
            sbizz[id][ubSpecial_pos_x] = -2410.8994;
            sbizz[id][ubSpecial_pos_y] = 973.6907;
            sbizz[id][ubSpecial_pos_z] = 45.4609;
        }
        if(id == 6)
        {
            sbizz[id][ubEntrance_x] = -1676.1442;
            sbizz[id][ubEntrance_y] = 432.2218;
            sbizz[id][ubEntrance_z] = 7.1797;
            sbizz[id][ubSpecial_pos_x] = -1675.4495;
            sbizz[id][ubSpecial_pos_y] = 413.6413;
            sbizz[id][ubSpecial_pos_z] = 7.1797;
        }
        if(id == 7)
        {
            sbizz[id][ubEntrance_x] = 661.3604;
            sbizz[id][ubEntrance_y] = -573.4373;
            sbizz[id][ubEntrance_z] = 16.3359;
            sbizz[id][ubSpecial_pos_x] = 655.6163;
            sbizz[id][ubSpecial_pos_y] = -565.2194;
            sbizz[id][ubSpecial_pos_z] = 16.3359;
        }
        if(id == 8)
        {
            sbizz[id][ubEntrance_x] = 1383.2795;
            sbizz[id][ubEntrance_y] = 465.5453;
            sbizz[id][ubEntrance_z] = 20.1919;
            sbizz[id][ubSpecial_pos_x] = 1381.6539;
            sbizz[id][ubSpecial_pos_y] = 460.0485;
            sbizz[id][ubSpecial_pos_z] = 20.3452;
        }
        if(id == 9)
        {
            sbizz[id][ubEntrance_x] = -1271.3519;
            sbizz[id][ubEntrance_y] = 2713.3049;
            sbizz[id][ubEntrance_z] = 50.2663;
            sbizz[id][ubSpecial_pos_x] = -1328.6042;
            sbizz[id][ubSpecial_pos_y] = 2677.5374;
            sbizz[id][ubSpecial_pos_z] = 50.0625;
        }
        if(id == 10)
        {
            sbizz[id][ubEntrance_x] = 58.9627;
            sbizz[id][ubEntrance_y] = 1225.1821;
            sbizz[id][ubEntrance_z] = 18.8740;
            sbizz[id][ubSpecial_pos_x] = 70.2889;
            sbizz[id][ubSpecial_pos_y] = 1218.7396;
            sbizz[id][ubSpecial_pos_z] = 18.8116;
        }
        if(id == 11)
        {
            sbizz[id][ubEntrance_x] = 663.0937;
            sbizz[id][ubEntrance_y] = 1716.3118;
            sbizz[id][ubEntrance_z] = 7.1875;
            sbizz[id][ubSpecial_pos_x] = 614.4562;
            sbizz[id][ubSpecial_pos_y] = 1692.8942;
            sbizz[id][ubSpecial_pos_z] = 7.1875;
        }
        if(id == 12)
        {
            sbizz[id][ubEntrance_x] = 2117.4360;
            sbizz[id][ubEntrance_y] = 896.7752;
            sbizz[id][ubEntrance_z] = 11.1797;
            sbizz[id][ubSpecial_pos_x] = 2115.3511;
            sbizz[id][ubSpecial_pos_y] = 919.1472;
            sbizz[id][ubSpecial_pos_z] = 10.8203;
        }
        if(id == 13)
        {
            sbizz[id][ubEntrance_x] = 2187.7153;
            sbizz[id][ubEntrance_y] = 2469.6086;
            sbizz[id][ubEntrance_z] = 11.2422;
            sbizz[id][ubSpecial_pos_x] = 2201.5627;
            sbizz[id][ubSpecial_pos_y] = 2474.4470;
            sbizz[id][ubSpecial_pos_z] = 10.8203;
        }
        if(id == 14)
        {
            sbizz[id][ubEntrance_x] = 2150.6851;
            sbizz[id][ubEntrance_y] = 2733.8660;
            sbizz[id][ubEntrance_z] = 11.1763;
            sbizz[id][ubSpecial_pos_x] = 2147.7195;
            sbizz[id][ubSpecial_pos_y] = 2747.1055;
            sbizz[id][ubSpecial_pos_z] = 10.8203;
        }
        if(id == 15)
        {
            sbizz[id][ubEntrance_x] = -2231.4653;
            sbizz[id][ubEntrance_y] = -2558.2668;
            sbizz[id][ubEntrance_z] = 31.9219;
            sbizz[id][ubSpecial_pos_x] = -2243.5117;
            sbizz[id][ubSpecial_pos_y] = -2560.8513;
            sbizz[id][ubSpecial_pos_z] = 31.9219;
        }
        if(id == 16)
        {
            sbizz[id][ubEntrance_x] = 2637.1882;
            sbizz[id][ubEntrance_y] = 1129.6758;
            sbizz[id][ubEntrance_z] = 11.1797;
            sbizz[id][ubSpecial_pos_x] = 2639.5647;
            sbizz[id][ubSpecial_pos_y] = 1106.9924;
            sbizz[id][ubSpecial_pos_z] = 10.8203;
        }
        if(id == 17)
        {
            sbizz[id][ubEntrance_x] = 1599.1149;
            sbizz[id][ubEntrance_y] = 2221.8560;
            sbizz[id][ubEntrance_z] = 11.0625;
            sbizz[id][ubSpecial_pos_x] = 1596.5222;
            sbizz[id][ubSpecial_pos_y] = 2199.8870;
            sbizz[id][ubSpecial_pos_z] = 10.8203;
        }
        if(id == 18)
        {
            sbizz[id][ubEntrance_x] = -1465.7957;
            sbizz[id][ubEntrance_y] = 1873.4174;
            sbizz[id][ubEntrance_z] = 32.6328;
            sbizz[id][ubSpecial_pos_x] = -1470.8376;
            sbizz[id][ubSpecial_pos_y] = 1864.2933;
            sbizz[id][ubSpecial_pos_z] = 32.6328;
        }
        if(id == 19)
        {
            sbizz[id][ubEntrance_x] = 0.0;
            sbizz[id][ubEntrance_y] = 0.0;
            sbizz[id][ubEntrance_z] = 0.0;
            sbizz[id][ubSpecial_pos_x] = 0.0;
            sbizz[id][ubSpecial_pos_y] = 0.0;
            sbizz[id][ubSpecial_pos_z] = 0.0;
        }
        sbizz[id][ubExit_x] = 662.6390;
        sbizz[id][ubExit_y] = -573.4044;
        sbizz[id][ubExit_z] = 16.3359;
        strmid(sbizz[id][ubMessage], "Station Essence", 0, strlen("Station Essence"), 255);
        strmid(sbizz[id][ubOwner], "Etat", 0, strlen("Etat"), 255);
        sbizz[id][ubMaxProduits] = 6000;
        sbizz[id][ubProduits] = 6000;
        sbizz[id][ubLock] = 0;
        sbizz[id][ubPrix] = 200000;
        sbizz[id][ubInt] = 0;
        sbizz[id][ubPriceArticle][0] = 2;
        sbizz[id][ubPriceArticle][1] = 300;
        sbizz[id][ubPriceArticle][2] = 50;
        sbizz[id][ubPriceArticle][3] = 125;
        sbizz[id][ubPriceArticle][4] = 0;
        sbizz[id][ubHasInt] = 1;
        sbizz[id][ubEnterPrice] = 0;
    }
    else if(id >= MAX_STATION && id < MAX_STATION+MAX_SPRAY) // Pay N Spray
    {
		switch(id)
		{
		    case MAX_STATION:
		    {
		        sbizz[id][ubEntrance_x] = 2073.9587;
		        sbizz[id][ubEntrance_y] = -1831.2415;
		        sbizz[id][ubEntrance_z] = 13.5469;
		        sbizz[id][ubExit_x] = 2063.9829;
		        sbizz[id][ubExit_y] = -1831.5638;
		        sbizz[id][ubExit_z] = 13.5469;
            }
            case MAX_STATION+1:
            {
                sbizz[id][ubEntrance_x] = 1025.0453;
		        sbizz[id][ubEntrance_y] = -1032.0465;
		        sbizz[id][ubEntrance_z] = 31.9379;
		        sbizz[id][ubExit_x] = 1025.0339;
		        sbizz[id][ubExit_y] = -1023.6304;
		        sbizz[id][ubExit_z] = 32.1016;
            }
            case MAX_STATION+2:
            {
                sbizz[id][ubEntrance_x] = 488.4265;
		        sbizz[id][ubEntrance_y] = -1730.9429;
		        sbizz[id][ubEntrance_z] = 10.8914;
		        sbizz[id][ubExit_x] = 487.6621;
		        sbizz[id][ubExit_y] = -1739.4148;
		        sbizz[id][ubExit_z] = 10.8633;
			}
			case MAX_STATION+3:
            {
                sbizz[id][ubEntrance_x] = 720.4023;
		        sbizz[id][ubEntrance_y] = -468.2444;
		        sbizz[id][ubEntrance_z] = 16.3437;
		        sbizz[id][ubExit_x] = 719.9949;
		        sbizz[id][ubExit_y] = -458.4021;
		        sbizz[id][ubExit_z] = 15.9075;
			}
			case MAX_STATION+4:
            {
                sbizz[id][ubEntrance_x] = -1904.2728;
		        sbizz[id][ubEntrance_y] = 272.7741;
		        sbizz[id][ubEntrance_z] = 41.0469;
		        sbizz[id][ubExit_x] = -1904.6588;
		        sbizz[id][ubExit_y] = 283.8800;
		        sbizz[id][ubExit_z] = 40.6159;
			}
			case MAX_STATION+5:
            {
                sbizz[id][ubEntrance_x] = -2425.7258;
		        sbizz[id][ubEntrance_y] = 1033.4700;
		        sbizz[id][ubEntrance_z] = 50.3906;
		        sbizz[id][ubExit_x] = -2425.4153;
		        sbizz[id][ubExit_y] = 1022.5644;
		        sbizz[id][ubExit_z] = 49.9605;
			}
			case MAX_STATION+6:
            {
                sbizz[id][ubEntrance_x] = -99.9543;
		        sbizz[id][ubEntrance_y] = 1106.8203;
		        sbizz[id][ubEntrance_z] = 19.7422;
		        sbizz[id][ubExit_x] = -100.2783;
		        sbizz[id][ubExit_y] = 1117.3927;
		        sbizz[id][ubExit_z] = 19.3055;
			}
			case MAX_STATION+7:
            {
                sbizz[id][ubEntrance_x] = -1420.6208;
		        sbizz[id][ubEntrance_y] = 2595.2874;
		        sbizz[id][ubEntrance_z] = 55.7147;
		        sbizz[id][ubExit_x] = -1420.5209;
		        sbizz[id][ubExit_y] = 2585.9500;
		        sbizz[id][ubExit_z] = 55.4087;
			}
			case MAX_STATION+8:
            {
                sbizz[id][ubEntrance_x] = 1963.9102;
		        sbizz[id][ubEntrance_y] = 2162.1201;
		        sbizz[id][ubEntrance_z] = 10.8203;
		        sbizz[id][ubExit_x] = 1973.9940;
		        sbizz[id][ubExit_y] = 2162.4863;
		        sbizz[id][ubExit_z] = 10.6426;
			}
        }
        strmid(sbizz[id][ubMessage], "Pay'N Spray", 0, strlen("Pay'N Spray"), 255);
        sbizz[id][ubPrix] = 200000;
        sbizz[id][ubEnterPrice] = 300;
        sbizz[id][ubLock] = 0;
    }
    else if(id >= MAX_STATION+MAX_SPRAY && id < MAX_STATION+MAX_SPRAY+MAX_TUNING) // Tunning
    {
        switch(id)
		{
		    case MAX_STATION+MAX_SPRAY:
		    {
		        sbizz[id][ubEntrance_x] = 1041.2238;
		        sbizz[id][ubEntrance_y] = -1030.1952;
		        sbizz[id][ubEntrance_z] = 32.0853;
		    }
		    case MAX_STATION+MAX_SPRAY+1:
		    {
		        sbizz[id][ubEntrance_x] = -1935.6604;
		        sbizz[id][ubEntrance_y] = 235.0078;
		        sbizz[id][ubEntrance_z] = 34.3125;
		    }
		    case MAX_STATION+MAX_SPRAY+2:
		    {
		        sbizz[id][ubEntrance_x] = 2387.0178;
		        sbizz[id][ubEntrance_y] = 1038.1277;
		        sbizz[id][ubEntrance_z] = 10.8203;
		    }
		}
        strmid(sbizz[id][ubMessage], "Tunning", 0, strlen("Tunning"), 255);
	    sbizz[id][ubPrix] = 200000;
        sbizz[id][ubHasInt] = 0;
        sbizz[id][ubEnterPrice] = 0;
        sbizz[id][ubInt] = 0;
    }
    else if(MAX_STATION+MAX_SPRAY+MAX_TUNING >= id && id < MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR)
	{
	    if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING)
	    {
	        strmid(sbizz[id][ubMessage], "BellSouth", 0, strlen("BellSouth"), 255);
	        sbizz[id][ubEntrance_x] = 2048.1528;
        	sbizz[id][ubEntrance_y] = -1092.0659;
        	sbizz[id][ubEntrance_z] = 24.5654;
	    }
	    if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+1)
	    {
	        strmid(sbizz[id][ubMessage], "AT&T Mobility", 0, strlen("AT&T Mobility"), 255);
	        sbizz[id][ubEntrance_x] = -1880.7137;
        	sbizz[id][ubEntrance_y] = 822.4429;
        	sbizz[id][ubEntrance_z] = 35.1778;
	    }
	    if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+2)
	    {
	        strmid(sbizz[id][ubMessage], "SBC Communications", 0, strlen("SBC Communications"), 255);
	        sbizz[id][ubEntrance_x] = 2369.1809;
        	sbizz[id][ubEntrance_y] = 1984.2958;
        	sbizz[id][ubEntrance_z] = 10.8203;
	    }
	    if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+3)
	    {
	        strmid(sbizz[id][ubMessage], "Verizon Communication", 0, strlen("Verizon Communication"), 255);
	        sbizz[id][ubEntrance_x] = 2026.6096;
        	sbizz[id][ubEntrance_y] = -1082.9606;
        	sbizz[id][ubEntrance_z] = 24.5625;
	    }
	    sbizz[id][ubPrix] = 225000;
        sbizz[id][ubEnterPrice] = 0;
        sbizz[id][ubExit_x] = 293.55999755859;
        sbizz[id][ubExit_y] = 1273.9849853516;
        sbizz[id][ubExit_z] = 1082.2900390625;
        sbizz[id][ubInt] = 4;
        sbizz[id][ubHasInt] = 1;
	}
    else if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR) // Location de voiture
    {
        sbizz[id][ubEntrance_x] = 1186.6416;
        sbizz[id][ubEntrance_y] = -1433.8464;
        sbizz[id][ubEntrance_z] = 13.4602;
        strmid(sbizz[id][ubMessage], "Location de voiture", 0, strlen("Location de voiture"), 255);
        sbizz[id][ubPrix] = 200000;
        sbizz[id][ubHasInt] = 0;
        sbizz[id][ubEnterPrice] = 75;
	}
	else if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+1) // Location de moto
    {
        sbizz[id][ubEntrance_x] = 1186.6084;
        sbizz[id][ubEntrance_y] = -1444.1052;
        sbizz[id][ubEntrance_z] = 13.5118;
        strmid(sbizz[id][ubMessage], "Location de moto", 0, strlen("Location de moto"), 255);
        sbizz[id][ubPrix] = 200000;
        sbizz[id][ubHasInt] = 0;
        sbizz[id][ubEnterPrice] = 50;
	}
	else if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+2) // Location de vélo
    {
        sbizz[id][ubEntrance_x] = 1186.5444;
        sbizz[id][ubEntrance_y] = -1464.3070;
        sbizz[id][ubEntrance_z] = 13.5469;
        strmid(sbizz[id][ubMessage], "Location de velo", 0, strlen("Location de velo"), 255);
        sbizz[id][ubPrix] = 200000;
        sbizz[id][ubHasInt] = 0;
        sbizz[id][ubEnterPrice] = 25;
	}
	else if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+3) // Location de bateau
    {
        sbizz[id][ubEntrance_x] = 1186.5773;
        sbizz[id][ubEntrance_y] = -1454.2999;
        sbizz[id][ubEntrance_z] = 13.5469;
        strmid(sbizz[id][ubMessage], "Location de bateau", 0, strlen("Location de bateau"), 255);
        sbizz[id][ubPrix] = 200000;
        sbizz[id][ubHasInt] = 0;
        sbizz[id][ubEnterPrice] = 200;
	}
	else if(id == MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+4) // Location d'avion
    {
        sbizz[id][ubEntrance_x] = 1186.5137;
        sbizz[id][ubEntrance_y] = -1474.4658;
        sbizz[id][ubEntrance_z] = 13.5469;
        strmid(sbizz[id][ubMessage], "Location d'avion", 0, strlen("Location d'avion"), 255);
        sbizz[id][ubPrix] = 200000;
        sbizz[id][ubHasInt] = 0;
        sbizz[id][ubEnterPrice] = 700;
	}
	sbizz[id][ubPrix_Prod] = 2;
    uniquebizz_Save(id);
	return 1;
}

forward stop_Load();
public stop_Load()
{
	cache_get_row_count(totalBusStop);
	for (new i=0; i<totalBusStop; i++)
	{
		cache_get_value_name_int(i,"Created", stop[i][used]);
		cache_get_value_name(i,"Name",stop[i][description], 64);
		cache_get_value_name_float(i,"Pos_x", stop[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", stop[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", stop[i][pos][2]);
		cache_get_value_name_float(i,"Angle", stop[i][pos][3]);
		stop_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d Arret(s) de bus chargé(s)",totalBusStop);}
}

stock stop_Save(id)
{
    new name[64];
    mysql_escape_string(stop[id][description], name);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_stop SET Created=%d, Name='%s', Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f WHERE id=%d",stop[id][used],name,stop[id][pos][0],stop[id][pos][1],stop[id][pos][2],stop[id][pos][3],id+1);
	mysql_pquery(MYSQL,sql);
}

forward gps_Load();
public gps_Load()
{
	cache_get_row_count(totalGPS);
	for (new i=0; i<totalGPS; i++)
	{
 		cache_get_value_name(i,"Name",gps[i][description], 64);
		cache_get_value_name_int(i,"Created", gps[i][used]);
		cache_get_value_name_float(i,"Pos_x", gps[i][pos][0]);
		cache_get_value_name_float(i,"Pos_y", gps[i][pos][1]);
		cache_get_value_name_float(i,"Pos_z", gps[i][pos][2]);
		cache_get_value_name_int(i,"City", gps[i][city]);
	}
	if(gServerReload==0)
		{printf("    .. %d GPS chargé(s).",totalGPS);}
}

stock gps_Save(id)
{
    new name[64];
    mysql_escape_string(gps[id][description], name);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_gps SET Name='%s', Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, City=%d WHERE id=%d",name,gps[id][used],gps[id][pos][0],gps[id][pos][1],gps[id][pos][2],gps[id][city],id+1);
	mysql_pquery(MYSQL,sql);
}

forward tree_Load();
public tree_Load()
{
	cache_get_row_count(totalTree);
	for (new i=0; i<totalTree; i++)
	{
		cache_get_value_name_int(i,"Created", SapinInfo[i][XmasTreeX]);
		cache_get_value_name_float(i,"Pos_x", SapinInfo[i][XmasX]);
		cache_get_value_name_float(i,"Pos_y", SapinInfo[i][XmasY]);
		cache_get_value_name_float(i,"Pos_z", SapinInfo[i][XmasZ]);
		tree_Update(i,SapinInfo[i][XmasX],SapinInfo[i][XmasY],SapinInfo[i][XmasZ]);
	}
}

stock tree_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_tree SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f WHERE id=%d",SapinInfo[id][XmasTreeX],SapinInfo[id][XmasX],SapinInfo[id][XmasY],SapinInfo[id][XmasZ],id+1);
	mysql_pquery(MYSQL,sql);
}

forward garage_Load();
public garage_Load()
{
	cache_get_row_count(totalGarages);
	for (new i=0; i<totalGarages; i++)
	{
		cache_get_value_name_int(i, "Created", garage[i][used]);
		cache_get_value_name(i,"Owner",garage[i][owner], 32);
		cache_get_value_name_float(i, "Pos_x", garage[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", garage[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", garage[i][pos][2]);
		cache_get_value_name_float(i, "Exit_x", garage[i][pos][3]);
		cache_get_value_name_float(i, "Exit_y", garage[i][pos][4]);
		cache_get_value_name_float(i, "Exit_z", garage[i][pos][5]);
		cache_get_value_name_int(i, "Owned", garage[i][owned]);
		cache_get_value_name_int(i, "Price", garage[i][price]);
		cache_get_value_name_int(i, "Locked", garage[i][lock]);
		garage_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d garage(s) chargé(s)",totalGarages);}
}

stock garage_Save(id)
{
    new name[64];
    mysql_escape_string(garage[id][owner], name);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_garages SET Created=%d, Owner='%s', Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Owned=%d, Price=%d, Locked=%d WHERE id=%d",
	garage[id][used],name,garage[id][pos][0],garage[id][pos][1],garage[id][pos][2],garage[id][pos][3],garage[id][pos][4],garage[id][pos][5],garage[id][owned],garage[id][price],garage[id][lock],id+1);
	mysql_pquery(MYSQL,sql);
}


forward drop_Load();
public drop_Load()
{
	cache_get_row_count(totalDrops);
	for (new i=0; i<totalDrops; i++)
	{
  		cache_get_value_name_int(i, "Model", drop[i][model]);
		cache_get_value_name_int(i, "Quantity", drop[i][quantity]);
		cache_get_value_name_int(i, "Time", drop[i][time]);
		cache_get_value_name_float(i, "Pos_x", drop[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", drop[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", drop[i][pos][2]);
		drop_Update(i);
	}
	return 1;
}

stock drop_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_drops SET Model=%d, Quantity=%d, Time=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f WHERE id=%d",drop[id][model],drop[id][quantity],drop[id][time],drop[id][pos][0],drop[id][pos][1],drop[id][pos][2],id+1);
	mysql_pquery(MYSQL,sql);
	return 1;
}

forward tag_Load();
public tag_Load()
{
	cache_get_row_count(totalTags);
	for (new i=0; i<totalTags; i++)
	{
	    cache_get_value_name(i,"Description",tag[i][description], 64);
	    cache_get_value_name_int(i, "FontSize", tag[i][fontSize]);
		cache_get_value_name_int(i, "FactionId", tag[i][faction]);
		cache_get_value_name_int(i, "Used", tag[i][used]);
		cache_get_value_name_float(i, "Pos_x", tag[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", tag[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", tag[i][pos][2]);
		cache_get_value_name_float(i, "Rot_x", tag[i][pos][3]);
		cache_get_value_name_float(i, "Rot_y", tag[i][pos][4]);
		cache_get_value_name_float(i, "Rot_z", tag[i][pos][5]);
		tag_Update(i);
	}
	return 1;
}

stock tag_Save(id)
{
    new name[128];
    mysql_escape_string(tag[id][description], name);
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_factions_illegals_tags SET Description='%s', FontSize=%d, FactionId=%d, Used=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Rot_x=%f, Rot_y=%f, Rot_z=%f WHERE id=%d",
	name,tag[id][fontSize],tag[id][faction],tag[id][used],tag[id][pos][0],tag[id][pos][1],tag[id][pos][2],tag[id][pos][3],tag[id][pos][4],tag[id][pos][5],id+1);
	mysql_pquery(MYSQL,sql);
	return 1;
}

forward atm_Load();
public atm_Load()
{
	cache_get_row_count(totalATMs);
	for (new i=0; i<totalATMs; i++)
	{
  		cache_get_value_name_int(i, "Created", atm[i][used]);
		cache_get_value_name_int(i, "Cash", atm[i][cash]);
		cache_get_value_name_float(i, "Pos_x", atm[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", atm[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", atm[i][pos][2]);
		cache_get_value_name_float(i, "Angle", atm[i][pos][3]);
		atm_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d atm(s) chargé(s)",totalATMs);}
}
stock atm_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_atms SET Created=%d, Cash=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f WHERE id=%d",atm[id][used],atm[id][cash],atm[id][pos][0],atm[id][pos][1],atm[id][pos][2],atm[id][pos][3],id+1);
	mysql_pquery(MYSQL,sql);
}

forward gate_Load();
public gate_Load()
{
	new tmp = 0;
	cache_get_row_count(totalGates);
	for (new i=0; i<totalGates; i++)
	{
        cache_get_value_name_int(i, "Used", tmp);
  		gate[i][used] = !!tmp;
		cache_get_value_name_int(i, "Model", gate[i][model]);
		cache_get_value_name_int(i, "Type", gate[i][typeZ]);
		cache_get_value_name_int(i, "ActionZ", gate[i][action]);
		cache_get_value_name(i,"Text",gate[i][description], 64);
		cache_get_value_name_int(i, "VariableZ", gate[i][variable]);
		cache_get_value_name_int(i, "UseTimer", gate[i][useTimer]);
		cache_get_value_name_float(i, "RangeZ", gate[i][distanceZ]);
		cache_get_value_name_float(i, "Close_x", gate[i][pos][0]);
		cache_get_value_name_float(i, "Close_y", gate[i][pos][1]);
		cache_get_value_name_float(i, "Close_z", gate[i][pos][2]);
		cache_get_value_name_float(i, "Close_rx", gate[i][pos][3]);
		cache_get_value_name_float(i, "Close_ry", gate[i][pos][4]);
		cache_get_value_name_float(i, "Close_rz", gate[i][pos][5]);
		cache_get_value_name_float(i, "Open_x", gate[i][pos][6]);
		cache_get_value_name_float(i, "Open_y", gate[i][pos][7]);
		cache_get_value_name_float(i, "Open_z", gate[i][pos][8]);
		cache_get_value_name_float(i, "Open_rx", gate[i][pos][9]);
		cache_get_value_name_float(i, "Open_ry", gate[i][pos][10]);
		cache_get_value_name_float(i, "Open_rz", gate[i][pos][11]);
		gate_Update(i);
	}
}
stock gate_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_gates SET Used=%d, Model=%d, Type=%d, ActionZ=%d, Text='%s', VariableZ=%d, UseTimer=%d, RangeZ=%f, Close_x=%f, Close_y=%f, Close_z=%f, Close_rx=%f, Close_ry=%f, Close_rz=%f, Open_x=%f, Open_y=%f, Open_z=%f, Open_rx=%f, Open_ry=%f, Open_rz=%f WHERE id=%d",
	gate[id][used],gate[id][model],gate[id][typeZ],gate[id][action],gate[id][description],gate[id][variable],gate[id][useTimer],gate[id][distanceZ],gate[id][pos][0],gate[id][pos][1],gate[id][pos][2],gate[id][pos][3],gate[id][pos][4],gate[id][pos][5],gate[id][pos][6],gate[id][pos][7],gate[id][pos][8],gate[id][pos][9],gate[id][pos][10],gate[id][pos][11],id+1);
	mysql_pquery(MYSQL,sql);
}

forward sign_Load();
public sign_Load()
{
	cache_get_row_count(totalSigns);
	for (new i=0; i<totalSigns; i++)
	{
		cache_get_value_name_int(i, "Created", sign[i][used]);
		cache_get_value_name_int(i, "Type", sign[i][model]);
		cache_get_value_name_float(i, "Pos_x", sign[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", sign[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", sign[i][pos][2]);
		cache_get_value_name_float(i, "Rot_x", sign[i][pos][3]);
		cache_get_value_name_float(i, "Rot_y", sign[i][pos][4]);
		cache_get_value_name_float(i, "Rot_z", sign[i][pos][5]);
		cache_get_value_name(i,"Text",sign[i][description], 64);
		cache_get_value_name_int(i, "Size", sign[i][size]);
		cache_get_value_name_int(i, "mIndex", sign[i][indexNum]);
		cache_get_value_name_int(i, "UseBold", sign[i][bold]);
		cache_get_value_name_int(i, "Align", sign[i][alignement]);
		cache_get_value_name(i,"FontName",sign[i][fontName], 32);
		cache_get_value_name_int(i, "FontSize", sign[i][fontSize]);
		cache_get_value_name_int(i, "TextColor", sign[i][textColor]);
		cache_get_value_name_int(i, "BackColor", sign[i][backColor]);
		sign_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d panneau(x) chargé(s)",totalSigns);}
}

stock sign_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_signs SET Created=%d, Type=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Rot_x=%f, Rot_y=%f, Rot_z=%f, Text='%s', Size=%d, mIndex=%d, UseBold=%d, Align=%d, FontName='%s', FontSize=%d, TextColor=%d, BackColor=%d WHERE id=%d",
	sign[id][used],sign[id][model],sign[id][pos][0],sign[id][pos][1],sign[id][pos][2],sign[id][pos][3],sign[id][pos][4],sign[id][pos][5],sign[id][description],sign[id][size],sign[id][indexNum],sign[id][bold],sign[id][alignement],sign[id][fontName],sign[id][fontSize],sign[id][textColor],sign[id][backColor],id+1);
	mysql_pquery(MYSQL,sql);
}

forward ad_Load();
public ad_Load()
{
	cache_get_row_count(totalAds);
	for (new i=0; i<totalAds; i++)
	{
		cache_get_value_name_int(i, "Created", ad[i][used]);
		cache_get_value_name_float(i, "Pos_x", ad[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", ad[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", ad[i][pos][2]);
		cache_get_value_name_float(i, "Rot_x", ad[i][pos][3]);
		cache_get_value_name_float(i, "Rot_y", ad[i][pos][4]);
		cache_get_value_name_float(i, "Rot_z", ad[i][pos][5]);
		ad_Update(i);
	}
}

stock ad_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_ads SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Rot_x=%f, Rot_y=%f, Rot_z=%f WHERE id=%d",
	ad[id][used],ad[id][pos][0],ad[id][pos][1],ad[id][pos][2],ad[id][pos][3],ad[id][pos][4],ad[id][pos][5],id+1);
	mysql_pquery(MYSQL,sql);
}

forward camera_Load();
public camera_Load()
{
	cache_get_row_count(totalCameras);
	for (new i=0; i<totalCameras; i++)
	{
		cache_get_value_name_float(i, "Pos_x", camera[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", camera[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", camera[i][pos][2]);
		cache_get_value_name_float(i, "Angle", camera[i][pos][3]);
		cache_get_value_name_int(i, "Limite", camera[i][limit]);
		cache_get_value_name_int(i, "Fine", camera[i][price]);
		cache_get_value_name_int(i, "Ranged", camera[i][range]);
		cache_get_value_name_int(i, "Created", camera[i][used]);
		camera_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d radar(s) chargé(s)",totalCameras);}
}
stock camera_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_camera SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f, Limite=%d, Fine=%d, Ranged=%d WHERE id=%d",camera[id][used],camera[id][pos][0],camera[id][pos][1],camera[id][pos][2],camera[id][pos][3],camera[id][limit],camera[id][price],camera[id][range],id+1);
	mysql_pquery(MYSQL,sql);
}

forward trash_Load();
public trash_Load()
{
	cache_get_row_count(totalTrash);
	for (new i=0; i<totalTrash; i++)
	{
		cache_get_value_name_int(i, "Created", trash[i][used]);
		cache_get_value_name_int(i, "Trash", trash[i][quantity]);
		cache_get_value_name_float(i, "Pos_x", trash[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", trash[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", trash[i][pos][2]);
		cache_get_value_name_float(i, "Angle", trash[i][pos][3]);
		trash_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d grosse(s) poubelle(s) chargée(s)",totalTrash);}
}

stock trash_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_trash SET Created=%d, Trash=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f WHERE id=%d",trash[id][used],trash[id][quantity],trash[id][pos][0],trash[id][pos][1],trash[id][pos][2],trash[id][pos][3],id+1);
	mysql_pquery(MYSQL,sql);
}

forward bin_Load();
public bin_Load()
{
	cache_get_row_count(totalBins);
	for (new i=0; i<totalBins; i++)
	{
		cache_get_value_name_int(i, "Created", bin[i][used]);
		cache_get_value_name_float(i, "Pos_x", bin[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", bin[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", bin[i][pos][2]);
		cache_get_value_name_float(i, "Pos_a", bin[i][pos][3]);
		cache_get_value_name_int(i, "iM1", bin[i][itemM][0]);
		cache_get_value_name_int(i, "iQ1", bin[i][itemQ][0]);
		cache_get_value_name_int(i, "iM2", bin[i][itemM][1]);
		cache_get_value_name_int(i, "iQ2", bin[i][itemQ][1]);
		cache_get_value_name_int(i, "iM3", bin[i][itemM][2]);
		cache_get_value_name_int(i, "iQ3", bin[i][itemQ][2]);
		cache_get_value_name_int(i, "iM4", bin[i][itemM][3]);
		cache_get_value_name_int(i, "iQ4", bin[i][itemQ][3]);
		cache_get_value_name_int(i, "iM5", bin[i][itemM][4]);
		cache_get_value_name_int(i, "iQ5", bin[i][itemQ][4]);
		cache_get_value_name_int(i, "iM6", bin[i][itemM][5]);
		cache_get_value_name_int(i, "iQ6", bin[i][itemQ][5]);
		cache_get_value_name_int(i, "iM7", bin[i][itemM][6]);
		cache_get_value_name_int(i, "iQ7", bin[i][itemQ][6]);
		cache_get_value_name_int(i, "iM8", bin[i][itemM][7]);
		cache_get_value_name_int(i, "iQ8", bin[i][itemQ][7]);
		cache_get_value_name_int(i, "iM9", bin[i][itemM][8]);
		cache_get_value_name_int(i, "iQ9", bin[i][itemQ][8]);
		cache_get_value_name_int(i, "iM10", bin[i][itemM][9]);
		cache_get_value_name_int(i, "iQ10", bin[i][itemQ][9]);
		bin_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d petite(s) poubelle(s) chargée(s)",totalBins);}
}

stock bin_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_bins SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Pos_a=%f, iM1=%d, iQ1=%d, iM2=%d, iQ2=%d, iM3=%d, iQ3=%d, iM4=%d, iQ4=%d, iM5=%d, iQ5=%d, iM6=%d, iQ6=%d, iM7=%d, iQ7=%d, iM8=%d, iQ8=%d, iM9=%d, iQ9=%d, iM10=%d, iQ10=%d WHERE id=%d",
	bin[id][used],bin[id][pos][0],bin[id][pos][1],bin[id][pos][2],bin[id][pos][3],bin[id][itemM][0],bin[id][itemQ][0],bin[id][itemM][1],bin[id][itemQ][1],bin[id][itemM][2],bin[id][itemQ][2],bin[id][itemM][3],bin[id][itemQ][3]
	,bin[id][itemM][4],bin[id][itemQ][4],bin[id][itemM][5],bin[id][itemQ][5],bin[id][itemM][6],bin[id][itemQ][6],bin[id][itemM][7],bin[id][itemQ][7],bin[id][itemM][8],bin[id][itemQ][8],bin[id][itemM][9],bin[id][itemQ][9],id+1);
	mysql_pquery(MYSQL,sql);
}

forward phonecab_Load();
public phonecab_Load()
{
	cache_get_row_count(totalPhoneCabs);
	for (new i=0; i<totalPhoneCabs; i++)
	{
		cache_get_value_name_int(i, "Created", phone[i][used]);
		cache_get_value_name_float(i, "Pos_x", phone[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", phone[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", phone[i][pos][2]);
		cache_get_value_name_float(i, "Angle", phone[i][pos][3]);
		phonecab_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d cabine(s) telephonique(s) chargée(s)",totalPhoneCabs);}
}

stock phonecab_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_phones SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f WHERE id=%d",phone[id][used],phone[id][pos][0],phone[id][pos][1],phone[id][pos][2],phone[id][pos][3],id+1);
	mysql_pquery(MYSQL,sql);
}

forward map_Load();
public map_Load()
{
	cache_get_row_count(totalMaps);
	for (new i=0; i<totalMaps; i++)
	{
		cache_get_value_name_int(i, "Created", map[i][used]);
		cache_get_value_name_float(i, "Pos_x", map[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", map[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", map[i][pos][2]);
		cache_get_value_name_float(i, "Angle", map[i][pos][3]);
		map_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d carte(s) chargée(s)",totalMaps);}
}
stock map_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_maps SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f WHERE id=%d",map[id][used],map[id][pos][0],map[id][pos][1],map[id][pos][2],map[id][pos][3],id+1);
	mysql_pquery(MYSQL,sql);
}

forward distrib_Load();
public distrib_Load()
{
	cache_get_row_count(totalDistribs);
	for (new i=0; i<totalDistribs; i++)
	{
		cache_get_value_name_int(i, "Created", distributor[i][used]);
		cache_get_value_name_float(i, "Pos_x", distributor[i][pos][0]);
		cache_get_value_name_float(i, "Pos_y", distributor[i][pos][1]);
		cache_get_value_name_float(i, "Pos_z", distributor[i][pos][2]);
		cache_get_value_name_float(i, "Angle", distributor[i][pos][3]);
		distrib_UpdateInfos(i);
	}
	if(gServerReload==0)
		{printf("    .. %d distributeur(s) chargé(s)",totalDistribs);}
}
stock distrib_Save(id)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_server_distribs SET Created=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f WHERE id=%d",distributor[id][used],distributor[id][pos][0],distributor[id][pos][1],distributor[id][pos][2],distributor[id][pos][3],id+1);
	mysql_pquery(MYSQL,sql);
}

stock inscription_Question(playerid)
{
	new question[64],reponse1[64],reponse2[64],reponse3[64];
	format(sql,sizeof(sql), "SELECT * FROM lvrp_server_questions WHERE id=%d",inscription_Random[inscription_RandomList[playerid]][inscription_QuestionNumber[playerid]]);
    mysql_query(MYSQL,sql);
	cache_get_value_name(0,"question",question, 128);
	cache_get_value_name(0,"R1",reponse1, 128);
	cache_get_value_name(0,"R2",reponse2, 128);
	cache_get_value_name(0,"R3",reponse3, 128);
	cache_get_value_name_int(0, "reponseJuste", inscription_ValidQuestion[playerid]);

	new dialogStr[256],titledialog[256];
	ClearChatbox(playerid, 10);
	format(dialogStr,sizeof(dialogStr),"{DABB3E}* Q%d. %s *{FFFFFF}\n  %s\n  %s \n  %s",inscription_QuestionNumber[playerid]+1,question,reponse1,reponse2,reponse3);
	format(titledialog,sizeof(titledialog),"{33CCFF}» Inscription «{FFFFFF} Questionnaire - Note %d/15 - Etape {FF0000}1{FFFFFF}/10",inscription_Note[playerid]);
	ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,titledialog,dialogStr,"Valider","");
}

stock IniStatsPanel(playerid)
{
    if(IsPlayerConnected(Clicked[playerid]))
	{
    			Dialogue_Admin_Panel[playerid] = 0;
				new Dark_Rider[512]; // :D C'est moi
		        new Dark_Rider2[512]; // Ba quoi ? :D
		        new Dark_Rider3[512]; // Y'en a telement .... :D
		        new Dark_Rider4[512]; // Sa devient galère ><
		        new Dark_Rider5[512]; // La fin du monde ..
		        new CompletString[2048]; // Pour finir ;)
		        new level = PlayerInfo[Clicked[playerid]][pLevel];
		        new age = PlayerInfo[Clicked[playerid]][pAge];
		        new alevel = PlayerInfo[Clicked[playerid]][pAdmin];
		        new vip[32];
		        if(PlayerInfo[Clicked[playerid]][pDonateRank] == 0){format(vip,sizeof(vip),"Membre Normal");}
		        else if(PlayerInfo[Clicked[playerid]][pDonateRank] == 1){format(vip,sizeof(vip),"Vip lvl Fer");}
		        else if(PlayerInfo[Clicked[playerid]][pDonateRank] == 2){format(vip,sizeof(vip),"Vip lvl Argent");}
		        else if(PlayerInfo[Clicked[playerid]][pDonateRank] == 3){format(vip,sizeof(vip),"Vip lvl Or");}
		        else if(PlayerInfo[Clicked[playerid]][pDonateRank] == 4){format(vip,sizeof(vip),"Vip lvl Diamant");}
		        else {vip="Membre Normal";}
		        
		        new upg = PlayerInfo[Clicked[playerid]][pExp];
		        new Sexe[16];
		        if(PlayerInfo[Clicked[playerid]][pSex] == 1){format(Sexe,sizeof(Sexe),"Homme");}
		        if(PlayerInfo[Clicked[playerid]][pSex] == 2){format(Sexe,sizeof(Sexe),"Femme");}
		        new origin = PlayerInfo[Clicked[playerid]][pOrigin];
		        new warns = PlayerInfo[Clicked[playerid]][pWarnings];
		        new cashs = PlayerInfo[Clicked[playerid]][pCash];
		        new banque = PlayerInfo[Clicked[playerid]][pAccount];
		        new pointpermis = PlayerInfo[Clicked[playerid]][pPointPermis];

		        new mats = inventory_GetItemQuantity(Clicked[playerid],1576);
		        
		        new leader[32];
		        if(PlayerInfo[Clicked[playerid]][pLeader] == 0){format(leader,sizeof(leader),"Aucun");}
		        else{ strmid(leader,GetFactionName(PlayerInfo[Clicked[playerid]][pLeader]),0,32,32);}

		        new rang = PlayerInfo[Clicked[playerid]][pRank];
		        new Skin = PlayerInfo[Clicked[playerid]][pChar];
		        new tel = PlayerInfo[Clicked[playerid]][pNumber];
		        new car1 = PlayerInfo[Clicked[playerid]][pCar][0];
		        new car2 = PlayerInfo[Clicked[playerid]][pCar][1];
		        new car3 = PlayerInfo[Clicked[playerid]][pCar][2];
		        new car4 = PlayerInfo[Clicked[playerid]][pCar][3];
		        new car5 = PlayerInfo[Clicked[playerid]][pCar][4];
		        new car6 = PlayerInfo[Clicked[playerid]][pCar][5];
		        new car4Dev[20],car5Dev[20],car6Dev[20];
		        if(PlayerInfo[Clicked[playerid]][pCarDev4] == 1){format(car4Dev,sizeof(car4Dev),"Oui");}
		        else{format(car4Dev,sizeof(car4Dev),"Non");}
		        if(PlayerInfo[Clicked[playerid]][pCarDev5] == 1){format(car5Dev,sizeof(car5Dev),"Oui");}
		        else{format(car5Dev,sizeof(car5Dev),"Non");}
		        if(PlayerInfo[Clicked[playerid]][pCarDev6] == 1){format(car6Dev,sizeof(car6Dev),"Oui");}
		        else{format(car6Dev,sizeof(car6Dev),"Non");}
		        new biz1 = PlayerInfo[Clicked[playerid]][pBizkey1];
		        new biz2 = PlayerInfo[Clicked[playerid]][pBizkey2];
		        new biz3 = PlayerInfo[Clicked[playerid]][pBizkey3];
		        new permisconduite[20], permismoto[20], permisvol[20], permiscamion[20], permispeche[20], permisarme[20], permisbateau[20];

		        if(PlayerInfo[Clicked[playerid]][pCarLic] == 0){format(permisconduite,sizeof(permisconduite),"Non passé");}
		        else if(PlayerInfo[Clicked[playerid]][pCarLic] == 1){format(permisconduite,sizeof(permisconduite),"Passé");}
		        if(PlayerInfo[Clicked[playerid]][pMotoLic] == 0){format(permismoto,sizeof(permismoto),"Non passé");}
		        else if(PlayerInfo[Clicked[playerid]][pMotoLic] == 1){format(permismoto,sizeof(permismoto),"Passé");}
		        if(PlayerInfo[Clicked[playerid]][pFlyLic] == 0){format(permisvol,sizeof(permisvol),"Non passé");}
		        else if(PlayerInfo[Clicked[playerid]][pFlyLic] == 1){format(permisvol,sizeof(permisvol),"Passé");}
		        if(PlayerInfo[Clicked[playerid]][pBoatLic] == 0){format(permisbateau,sizeof(permisbateau),"Non passé");}
		        else if(PlayerInfo[Clicked[playerid]][pBoatLic] == 1){format(permisbateau,sizeof(permisbateau),"Passé");}
		        if(PlayerInfo[Clicked[playerid]][pLourdLic] == 0){format(permiscamion,sizeof(permiscamion),"Non passé");}
		        else if(PlayerInfo[Clicked[playerid]][pLourdLic] == 1){format(permiscamion,sizeof(permiscamion),"Passé");}
		        if(PlayerInfo[Clicked[playerid]][pGunLic] == 0){format(permisarme,sizeof(permisarme),"Non passé");}
		        else if(PlayerInfo[Clicked[playerid]][pGunLic] == 1){format(permisarme,sizeof(permisarme),"Passé");}
		        if(PlayerInfo[Clicked[playerid]][pFishLic] == 0){format(permispeche,sizeof(permispeche),"Non passé");}
		        else if(PlayerInfo[Clicked[playerid]][pFishLic] == 1){format(permispeche,sizeof(permispeche),"Passé");}

		        new weed = inventory_GetItemQuantity(Clicked[playerid],1575);
		        new hero = inventory_GetItemQuantity(Clicked[playerid],1578);
		        new coca = inventory_GetItemQuantity(Clicked[playerid],1579);
		        new exta = inventory_GetItemQuantity(Clicked[playerid],1580);
		        new tabac = inventory_GetItemQuantity(Clicked[playerid],2751);
		        new feuille = inventory_GetItemQuantity(Clicked[playerid],328);
		        new ciga = inventory_GetItemQuantity(Clicked[playerid],19897);

		        new compte[24];
		        if(PlayerInfo[Clicked[playerid]][pLocked] == 0){format(compte,sizeof(compte),"De-Blocké");}
		        else if(PlayerInfo[Clicked[playerid]][pLocked] == 1){format(compte,sizeof(compte),"Blocké");}

				new Combat[16];
				if(PlayerInfo[Clicked[playerid]][pCombatStyle] == 0){format(Combat,sizeof(Combat),"Elbow");}
				else if(PlayerInfo[Clicked[playerid]][pCombatStyle] == 1){format(Combat,sizeof(Combat),"Boxing");}
				else if(PlayerInfo[Clicked[playerid]][pCombatStyle] == 2){format(Combat,sizeof(Combat),"GrabKick");}
				else if(PlayerInfo[Clicked[playerid]][pCombatStyle] == 3){format(Combat,sizeof(Combat),"KneeHeed");}
				else if(PlayerInfo[Clicked[playerid]][pCombatStyle] == 4){format(Combat,sizeof(Combat),"GungFu");}
				else if(PlayerInfo[Clicked[playerid]][pCombatStyle] == 5){format(Combat,sizeof(Combat),"Normal");}

				new vehpick = PlayerInfo[Clicked[playerid]][pRobTimeCar];
				new jpick = PlayerInfo[Clicked[playerid]][pRobTimePocket];
				new bizpick = PlayerInfo[Clicked[playerid]][pRobTimeBizz];
				
				new garage1 = PlayerInfo[Clicked[playerid]][pGarageKey1];
				new garage2 = PlayerInfo[Clicked[playerid]][pGarageKey2];
				new garage3 = PlayerInfo[Clicked[playerid]][pGarageKey3];
				
				new house1 = PlayerInfo[Clicked[playerid]][pHousekey1];
				new house2 = PlayerInfo[Clicked[playerid]][pHousekey2];
				new house3 = PlayerInfo[Clicked[playerid]][pHousekey3];
				
				new rename = PlayerInfo[Clicked[playerid]][pRename];
				new changenum = PlayerInfo[Clicked[playerid]][pChangeNum];
				new changeplaque = PlayerInfo[Clicked[playerid]][pChangePlaque];
				new changeage = PlayerInfo[Clicked[playerid]][pChangeAge];
				new changesex = PlayerInfo[Clicked[playerid]][pChangeSex];
				
				new inv5[6]="Non",inv6[6]="Non";
				if(PlayerInfo[Clicked[playerid]][pInvDev5]==1)inv5="Oui";
				if(PlayerInfo[Clicked[playerid]][pInvDev6]==1)inv6="Oui";
				
				new identie[6]="Non";
				if(PlayerInfo[Clicked[playerid]][pIdentie]==1)identie="Oui";
				
				new helper[6]="Non";
				if(PlayerInfo[Clicked[playerid]][pHelper]==1)helper="Oui";
				else helper="Non";
				
				new animator[6]="Non";
				if(PlayerInfo[Clicked[playerid]][pAnimator]==1)animator="Oui";
				else animator="Non";
				
				new licensetaxi[6]="Non";
				if(PlayerInfo[Clicked[playerid]][pTaxi]==1)licensetaxi="Oui";
				else licensetaxi="Non";

		        format(Dark_Rider,sizeof(Dark_Rider),"Level [%d]\nAdmin Level [%d]\nV.I.P Level [%s]\nPoints Respects [%d/%d]\nSexe [%s]\nOrigine [%s]\nAvertissements [%d]\nCash [$%d]\nCompte en banque [$%d]\nPoints permis [%d]\nJob [%s]\nMats [%d]\nLeader [%s]\nMembre [%s]",level,alevel,vip,upg,(level)*4,Sexe,GetOriginName(origin),warns,cashs,banque,pointpermis,GetJobName(PlayerInfo[Clicked[playerid]][pJob]),mats,leader,GetFactionName(PlayerInfo[Clicked[playerid]][pMember]));
		        format(Dark_Rider2,sizeof(Dark_Rider2),"Rang [%d]\nSkin [%d]\nTel [%d]\nClef voiture1 [%d]\nClef voiture2 [%d]\nClef voiture3 [%d]\nClef voiture4 [%d]\nClef voiture5 [%d]\nClef voiture6 [%d]\nVeh4 dévérouillé [%s]\nVeh5 dévérouillé [%s]\nVeh6 dévérouillé [%s]\nClef Biz1 [%d]\nClef Biz2 [%d]\nClef Biz3 [%d]",rang,Skin,tel,car1,car2,car3,car4,car5,car6,car4Dev,car5Dev,car6Dev,biz1,biz2,biz3);
		        format(Dark_Rider3,sizeof(Dark_Rider3),"Permis Conduire [%s]\nPermis Moto [%s]\nPermis Vol [%s]\nPermis navigation [%s]\nPermis poid lourd [%s]\nPermis Port d'arme [%s]\nPermis pêche [%s]\nWeed [%d]\nHeroïne [%d]\nCocaïne [%d]\nEcstasy [%d]\nTabac [%d]\nFeuilles [%d]",permisconduite,permismoto,permisvol,permisbateau,permiscamion,permisarme,permispeche,weed,hero,coca,exta,tabac,feuille);
		        format(Dark_Rider4,sizeof(Dark_Rider4),"Cigarettes [%d]\nCompte [%s]\nLangue1 [%s]\nLangue2 [%s]\nEmail [%s]\nStyle de Combat [%s]\nTemps Re-Braquage Vehicule [%d]\nTemps Re-Braquage pick-pocket [%d]\nTemps Re-Braquage Biz [%d]\nClef Garage1 [%d]\nClef Garage2 [%d]\nClef garage3 [%d]\nRename [%d]",
				ciga,compte,GetLangName(PlayerInfo[Clicked[playerid]][pLang1]),GetLangName(PlayerInfo[Clicked[playerid]][pLang2]),PlayerInfo[Clicked[playerid]][pEmail],Combat,vehpick,jpick,bizpick,garage1,garage2,garage3,rename);
		        format(Dark_Rider5,sizeof(Dark_Rider5),"Maison 1 [%d]\nMaison 2 [%d]\nMaison 3 [%d]\nChangeNum [%d]\nInventaire 5 [%s]\nInventaire 6 [%s]\nIdentité [%s]\nChangePlaque [%d]\nHelpeur [%s]\nAge [%d]\nChangeAge [%d]\nChangeSexe [%d]\nAnimateur [%s]\nTaxiLicense [%s]",house1,house2,house3,changenum,inv5,inv6,identie,changeplaque,helper,age,changeage,changesex,animator,licensetaxi);
		        format(CompletString,sizeof(CompletString),"%s\n%s\n%s\n%s\n%s",Dark_Rider,Dark_Rider2,Dark_Rider3,Dark_Rider4,Dark_Rider5);
		        ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Modifier les stats",CompletString,"Modifier","Retour");
	}
	return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(PlayerInfo[playerid][pAdmin] >= 3 && source == CLICK_SOURCE_SCOREBOARD)
	{
	    if(IsPlayerConnected(clickedplayerid))
	    {
		    ShowPlayerDialog(playerid,73,DIALOG_STYLE_LIST,"» Admin Panel « Menu principal","{FFFFFF}- Modifier les stats\n- Sanctions\n- Autres","Valider","Annuler");
			Clicked[playerid] = clickedplayerid;
			Dialogue_Admin_Panel[playerid] = 0;
		}
	}
	return 1;
}
stock streamer_Init()
{
    Streamer_SetTickRate(TICKRATE);
}

public npc_Bus(id)
{
    new botname[32];
 	format(botname,sizeof(botname),"Bus_%d",id);
    ConnectNPC(botname,"lvrp_Bus");
    /*id++;
    if(id < 4)
    	{SetTimerEx("npc_Bus", 90000, false, "d", id);}*/
}

public npc_Train(id)
{
	new botname[64];
 	format(botname,sizeof(botname),"Train_%d",id);
    ConnectNPC(botname,"train");
    id++;
    if(id < 2)
    	{SetTimerEx("npc_Train", 124000, false, "d", id);}
}

public npc_Tram(id)
{
	new botname[64];
 	format(botname,sizeof(botname),"Tram_%d",id);
    ConnectNPC(botname,"tram");
    id++;
    if(id < 6)
    	{SetTimerEx("npc_Tram", 90000, false, "d", id);}
}

stock npc_Join()
{
	// Jobs
	/*ConnectNPC("jobPizza_Ls","jobPizza_Ls");
	//ConnectNPC("jobPizza_Sf","jobPizza_Sf");
	//ConnectNPC("jobPizza_Lv","jobPizza_Lv");
	ConnectNPC("jobFarmer_Ls","jobFarmer_Ls");
	ConnectNPC("jobFarmer_Bb","jobFarmer_Bb");
	ConnectNPC("jobMiner_Eq","jobMiner_Eq");
	ConnectNPC("jobTrasher_Ls","jobTrasher_Ls");
	//ConnectNPC("jobTrasher_Sf","jobTrasher_Sf");
	//ConnectNPC("jobTrasher_Lv","jobTrasher_Lv");
	ConnectNPC("jobWorker_Lv","jobWorker_Lv");
	ConnectNPC("jobPlane_Ls","jobPlane_Ls");
	//ConnectNPC("jobPlane_Sf","jobPlane_Sf");
	//ConnectNPC("jobPlane_Lv","jobPlane_Lv");
	ConnectNPC("jobPost_Ls","jobPost_Ls");
	//ConnectNPC("jobPost_Sf","jobPost_Sf");
	//ConnectNPC("jobPost_Lv","jobPost_Lv");
	ConnectNPC("jobFisher_Ls","jobFisher_Ls");
	//ConnectNPC("jobFisher_Bs","jobFisher_Bs");
	//ConnectNPC("jobCar_Sf","jobCar_Sf");
	ConnectNPC("jobCar_Ls","jobCar_Ls");
	ConnectNPC("jobMedic_Ls","jobMedic_Ls");
	ConnectNPC("jobMedic_Ls2","jobMedic_Ls2");
	//ConnectNPC("jobMedic_Lv","jobMedic_Lv");
	//ConnectNPC("jobMedic_Sf","jobMedic_Sf");
	//ConnectNPC("jobMedic_Fc","jobMedic_Fc");
	//ConnectNPC("jobMedic_Mg","jobMedic_Mg");
	//ConnectNPC("jobMedic_Eq","jobMedic_Eq");
	ConnectNPC("jobTruck_Ls","jobTruck_Ls");
	//ConnectNPC("jobTruck_Sf","jobTruck_Sf");
	//ConnectNPC("jobTruck_Lv","jobTruck_Lv");
	ConnectNPC("jobLumber_Bb","jobLumber_Bb");
	ConnectNPC("jobMecano_Ls","jobMecano_Ls");
	ConnectNPC("jobAtm_Ls","jobAtm_Ls");
	
	ConnectNPC("dealer_LS1","dealer_LS1");
	ConnectNPC("dealer_LS2","dealer_LS2");
	ConnectNPC("dealer_LS3","dealer_LS3");
	ConnectNPC("dealer_LS4","dealer_LS4");
	ConnectNPC("dealer_LS5","dealer_LS5");
	
	ConnectNPC("clochard_LS1","clochard_LS1");
	ConnectNPC("clochard_LS2","clochard_LS2");
	ConnectNPC("clochard_LS3","clochard_LS3");
	ConnectNPC("clochard_LS4","clochard_LS4");
	ConnectNPC("clochard_LS5","clochard_LS5");
	
	ConnectNPC("accueil_Lspd","int_Lspd");
	ConnectNPC("accueil_Governement","int_Governement");

	// Gares de train
	ConnectNPC("trainTicket_Ls1","trainTicket_Ls1");
	ConnectNPC("trainTicket_Ls2","trainTicket_Ls2");
	ConnectNPC("trainTicket_Sf","trainTicket_Sf");
	ConnectNPC("trainTicket_Fc","trainTicket_Fc");
	ConnectNPC("trainTicket_Lv1","trainTicket_Lv1");
	ConnectNPC("trainTicket_Lv2","trainTicket_Lv2");
	
	// Taxi Aéroport
	//ConnectNPC("taxiDyn_Ls1","taxiAirPort_LS1");
	
	// Non interactif
	ConnectNPC("out_Lspd","out_Lspd");
	
	// Transports communs
	//npc_Bus(1);
	npc_Train(1);
	//npc_Tram(1);*/
}
stock npc_Spawn(playerid,npcname[])
{
    if(IsPlayerNPC(playerid))
	{
	    SetPlayerColor(playerid,0xFFFFFF00);
	    if(strfind(npcname, "job", true) != -1)
	    {
	        new tmpJob=-1;
	        if(strfind(npcname, "Pizza", true) != -1) {tmpJob=1;}
	        else if(strfind(npcname, "Farmer", true) != -1) {tmpJob=2;}
	        else if(strfind(npcname, "Miner", true) != -1) {tmpJob=3;}
	        else if(strfind(npcname, "Trasher", true) != -1) {tmpJob=4;}
	        else if(strfind(npcname, "Worker", true) != -1) {tmpJob=5;}
	        else if(strfind(npcname, "Plane", true) != -1) {tmpJob=6;}
	        else if(strfind(npcname, "Post", true) != -1) {tmpJob=7;}
			else if(strfind(npcname, "Fisher", true) != -1) {tmpJob=8;}
			else if(strfind(npcname, "Car", true) != -1) {tmpJob=9;}
			else if(strfind(npcname, "Truck", true) != -1) {tmpJob=10;}
			else if(strfind(npcname, "Medic", true) != -1) {tmpJob=11;}
			else if(strfind(npcname, "Lumber", true) != -1) {tmpJob=14;}
			else if(strfind(npcname, "Mecano", true) != -1) {tmpJob=17;}
			else if(strfind(npcname, "Atm", true) != -1) {tmpJob=19;}
			if(tmpJob!=-1)
			{
		        job_SetSkin(playerid,tmpJob);
		        server_SetPlayerInterior(playerid, 0);
		    	npc_Label[playerid] = CreateDynamic3DTextLabel("Employeur\n(( Touche 'N' ))",0xFFFFFFDD,0,0,0.05,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
				npc[playerid][typeZ]=1; npc[playerid][variable]=tmpJob;
			}
		}
		else if(strfind(npcname, "trainTicket", true) != -1)
	    {
	        SetPlayerSkin(playerid, 151);
	        server_SetPlayerInterior(playerid, 0);
	        npc_Label[playerid] = CreateDynamic3DTextLabel("Vendeuse\n(( Touche 'N' ))",0xFFFFFFDD,0,0,0.05,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
			npc[playerid][typeZ]=2; npc[playerid][variable]=-1;
		}
		else if(strfind(npcname, "dealer", true) != -1)
	    {
	        SetPlayerSkin(playerid, 29);
	        server_SetPlayerInterior(playerid, 0);
	        npc_Label[playerid] = CreateDynamic3DTextLabel("Dealer\n(( Touche 'N' ))",0xFFFFFFDD,0,0,0.05,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
			npc[playerid][typeZ]=5; npc[playerid][variable]=-1;
		}
		else if(strfind(npcname, "dealer", true) != -1)
	    {
	        SetPlayerSkin(playerid, 29);
	        server_SetPlayerInterior(playerid, 0);
	        npc_Label[playerid] = CreateDynamic3DTextLabel("Dealer\n(( Touche 'N' ))",0xFFFFFFDD,0,0,0.05,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
			npc[playerid][typeZ]=5; npc[playerid][variable]=-1;
		}
		else if(strfind(npcname, "noel", true) != -1)
	    {
	        if(strfind(npcname, "Eat1", true) != -1) {SetPlayerSkin(playerid, 22);}
	        else if(strfind(npcname, "Eat2", true) != -1) {SetPlayerSkin(playerid, 41);}
	        else if(strfind(npcname, "Eat3", true) != -1) {SetPlayerSkin(playerid, 56);}
	        else if(strfind(npcname, "Eat4", true) != -1) {SetPlayerSkin(playerid, 60);}
	        else if(strfind(npcname, "Skater1", true) != -1) {SetPlayerSkin(playerid, 92);}
	        else if(strfind(npcname, "Skater2", true) != -1) {SetPlayerSkin(playerid, 99);}
	        server_SetPlayerInterior(playerid, 0);
	        npc[playerid][typeZ]=-1;
		}
		else if(strfind(npcname, "accueil", true) != -1)
	    {
	        if(strfind(npcname, "Lspd", true) != -1) {npc[playerid][variable]=1; SetPlayerSkin(playerid, 280); server_SetPlayerInterior(playerid, 6); server_SetPlayerVirtualWorld(playerid, 0);}
	        else if(strfind(npcname, "Governement", true) != -1) {npc[playerid][variable]=6; SetPlayerSkin(playerid, 194); server_SetPlayerInterior(playerid, 3); server_SetPlayerVirtualWorld(playerid, 1);}
	        npc_Label[playerid] = CreateDynamic3DTextLabel("Accueil\n(( Touche 'N' ))",0xFFFFFFDD,0,0,0.05,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
			npc[playerid][typeZ]=6;
	    }
	    else if(strfind(npcname, "out_Lspd", true) != -1)
	    {
	        SetPlayerSkin(playerid, 280);
			server_SetPlayerInterior(playerid, 0);
	        npc[playerid][typeZ]=-1;
	    }
	    else if(strfind(npcname, "taxiDyn", true) != -1)
	    {
	        new tmpRace=-1;
	        if(strfind(npcname, "Ls1", true) != -1) {tmpRace=1;}
	        else if(strfind(npcname, "Ls2", true) != -1) {tmpRace=2;}
	        else if(strfind(npcname, "Ls3", true) != -1) {tmpRace=3;}
			server_SetPlayerInterior(playerid, 0);
	        npc[playerid][typeZ]=10; npc[playerid][variable]=tmpRace;
	        SetPlayerSkin(playerid, 255);
	        server_SetPlayerInterior(playerid, 0);
			for(new car = 1; car <= totalVehicles; car++)
			{
			 	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
				    if(!IsPlayerInVehicle(i,car) && vehicle[car][cModel]==438 && vehicle[car][cType]==CAR_BOT)
				       	{print("Ok"); PutPlayerInVehicle(playerid,car,0); return 1;}
				}
			}
	    }
		else if(strfind(npcname, "train_", true) != -1)
	    {
	        npc[playerid][typeZ]=0; npc[playerid][variable]=-1;
	        SetPlayerSkin(playerid, 7);
	        server_SetPlayerInterior(playerid, 0);
			for(new car = 1; car <= totalVehicles; car++)
			{
			 	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
				    if(!IsPlayerInVehicle(i,car) && vehicle[car][cModel]==538 && vehicle[car][cType]==CAR_BOT)
				       	{PutPlayerInVehicle(playerid,car,0); return 1;}
				}
			}
	    }
	    else if(strfind(npcname, "tram_", true) != -1)
	    {
	        npc[playerid][typeZ]=0; npc[playerid][variable]=-1;
	        SetPlayerSkin(playerid, 255);
	        server_SetPlayerInterior(playerid, 0);
			for(new car = 1; car <= totalVehicles; car++)
			{
			 	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
				    if(!IsPlayerInVehicle(i,car) && vehicle[car][cModel]==449 && vehicle[car][cType]==CAR_BOT)
				       	{PutPlayerInVehicle(playerid,car,0); return 1;}
				}
			}
	    }
	    if(strfind(npcname, "jobValetBot_", true) != -1)
	    {
	        npc[playerid][typeZ]=0; npc[playerid][variable]=-1;
			new rand = random(4);
			if(rand == 0)		SetPlayerSkin(playerid, 37);
			else if(rand == 1)	SetPlayerSkin(playerid, 46);
			else if(rand == 2)	SetPlayerSkin(playerid, 55);
			else if(rand == 3)	SetPlayerSkin(playerid, 91);
	        server_SetPlayerInterior(playerid, 0);
	        new namebot[64], stringlength = strlen(npcname);
			strmid(namebot, npcname, 12, stringlength);
			new idplayer = strval(namebot);
			if(job_TempVar[idplayer] == 1)
			{
				for(new car = 1; car <= totalVehicles; car++)
				{
				 	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(!IsPlayerInVehicle(i,car) && vehicle[car][cType]==CAR_VALET)
					       	{job_CarId[idplayer] = car; PutPlayerInVehicle(playerid,car,0); return 1;}
					}
				}
			}
			else
			    {PutPlayerInVehicle(playerid,job_CarId[idplayer],0);}
	    }
	}
	return 1;
}
//------------------------------[TeamSpeak]-------------------------------------
/*public teamspeak_Connect(tshost[], tsport, tsuser[], tspass[], tsnick[])
{
	if(teamspeak_use==true)
    	{TSC_Connect(tsuser, tspass, tshost, tsport, 10011, true); TSC_ChangeNickname(tsnick);}
	return 1;
}

public teamspeak_CreateChannel(name[64],desc[128],TSC_CHANNELTYPE:type,pass[16])
{
	new tmpChannel=-1;
	for(new i=0; i<totalChannels; i++)
	{
	    if(teamspeak[i][used]==0)
	        {tmpChannel=i; break;}
	}
 	if(tmpChannel==-1)
 	    {return print("[TS] Nombre de channel maximum atteint.");}
	teamspeak[tmpChannel][used]=1;
	teamspeak[tmpChannel][tmpType]=type;
	strmid(teamspeak[tmpChannel][tmpName],name,0,strlen(name),64);
	strmid(teamspeak[tmpChannel][description],desc,0,strlen(desc),128);
	strmid(teamspeak[tmpChannel][passwords],pass,0,strlen(pass),16);
    teamspeak[tmpChannel][chanelId] = TSC_CreateChannel(name);
    TSC_SetChannelDescription(teamspeak[tmpChannel][chanelId],desc);
    TSC_SetChannelType(teamspeak[tmpChannel][chanelId],type);
    TSC_SetChannelPassword(teamspeak[tmpChannel][chanelId], pass);
    printf("[TS] Channel %d - '%s' créé",tmpChannel,name);
	return 1;
}

public teamspeak_DeleteChannel(id)
{
	if(teamspeak[id][used]==0)
	    {return 1;}
    TSC_DeleteChannel(teamspeak[id][chanelId]);
    printf("[TS] Channel %d - '%s' supprimé",id,teamspeak[id][tmpName]);
    
    teamspeak[id][chanelId]=-1;
    teamspeak[id][used]=0;
	teamspeak[id][talk]=0;
	teamspeak[id][tmpType]=TEMPORARY;
	strmid(teamspeak[id][tmpName],"none",0,64,64);
	strmid(teamspeak[id][description],"none",0,128,128);
	strmid(teamspeak[id][passwords],"none",0,16,16);
	return 1;
}

public teamspeak_DeleteAllChannels()
{
    for(new i=0; i<totalChannels; i++)
	{
	    if(teamspeak[i][used]==1)
	    {
			TSC_DeleteChannel(teamspeak[i][chanelId]);
			teamspeak[i][chanelId]=-1;
			teamspeak[i][used]=0;
			teamspeak[i][talk]=0;
			teamspeak[i][tmpType]=TEMPORARY;
			strmid(teamspeak[i][tmpName],"none",0,64,64);
			strmid(teamspeak[i][description],"none",0,128,128);
			strmid(teamspeak[i][passwords],"none",0,16,16);
		}
	}
	print("[TS] Suppression de tous les channels");
	return 1;
}

public teamspeak_IsPlayerConnected(playerid)
{
	if(TSC_FindClient(PlayerInfo[playerid][pTs]))
	    {return 1;}
	return 0;
}
forward teamspeak_Check(playerid);
public teamspeak_Check(playerid)
{
	if(!teamspeak_IsPlayerConnected(playerid))
	    {return 1;}
	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(GetDistanceBetweenPlayers(playerid,i) > 10.0 || teamspeak_IsPlayerConnected(i))
	        {continue;}
		if(TSC_GetClientChannelId(PlayerInfo[playerid][pTs]) == TSC_GetClientChannelId(PlayerInfo[i][pTs]))
		    {continue;}

	}
	return 1;
}*/
//--------------------------------[MYSQL]---------------------------------------
public MySQLConnect(sqlhost[], sqluser[], sqlpass[], sqldb[])
{
    MYSQL = mysql_connect(sqlhost, sqluser, sqlpass, sqldb);
	if(mysql_errno(MYSQL) == 0)
		{print("[MYSQL] Connexion reussie");return 1;}
	else
	{
		print("[MYSQL] Connexion perdu, reconnexion en cours ...");
		if(mysql_errno(MYSQL) == 0)
			{print("[MYSQL] Reconnexion reussie");return 1;}
		else
			{print("[MYSQL] Impossible de se reconnecter, arret du serveur"); SendRconCommand("exit"); return 0;}
	}
}

public MySQLDisconnect()
{
	mysql_close(MYSQL);
	print("[MYSQL] Deconnexion de la DB ...");
	return 1;
}

public MySQLCheckConnexion()
{
	return 1;
	/*
	if(mysql_current_handle()==1)return 1;
	else
	{
		if(mysql_current_handle()==1)
			{mysql_test = 0; return 1;}
		else
		{
		    if(mysql_test==4)
		    {
		        print("[MYSQL] Impossible d'etablir une connexion au serveur MySQL, arret du serveur");
		        SendRconCommand("exit");
		        return 0;
		    }
            SetTimer("MySQLCheckConnexion",5000,false);
			mysql_test ++;
			return 0;
		}
	}*/
}

public MySQLCreateAccount(newplayersname[], newpassword[], mail[], sex, origin, lang, age, regcity)
{
	new sqlplyname[32],sqlpassword[64],sqlmail[32],cryptepass[128];
	mysql_escape_string(newplayersname, sqlplyname);
	mysql_escape_string(newpassword, sqlpassword);
	mysql_escape_string(mail, sqlmail);
	sha1(sqlpassword,cryptepass);
	format(sql, sizeof(sql), "INSERT INTO lvrp_users Set Name='%s', Pass='%s', Email='%s', Sex=%d, Origin=%d, Lang1=%d, Age=%d, City=%d, Inscription=UNIX_TIMESTAMP()", sqlplyname, cryptepass, sqlmail, sex, origin, lang, age, regcity);
	mysql_query(MYSQL,sql);
	new newplayersid = MySQLCheckAccount(newplayersname);
	if (newplayersid != 0)
	{
	    for(new i=0; i<5; i++)
	        {format(sql, sizeof(sql), "INSERT INTO lvrp_users_accessories Set SQLid=%d, IndexZ=%d", newplayersid, i);mysql_pquery(MYSQL,sql);}
	    format(sql, sizeof(sql), "INSERT INTO lvrp_users_inventories Set SQLid=%d", newplayersid);
		mysql_pquery(MYSQL,sql);
		format(sql, sizeof(sql), "INSERT INTO lvrp_users_phones SET SQLid=%d",newplayersid);
		mysql_pquery(MYSQL,sql);
		return newplayersid;
	}
	return 0;
}

public MySQLCheckAccount(sqlplayersname[])
{
	new escstr[MAX_PLAYER_NAME];
	mysql_escape_string(sqlplayersname, escstr);
	format(sql, sizeof(sql), "SELECT id FROM lvrp_users WHERE LOWER(Name) = LOWER('%s') LIMIT 1", escstr);
	mysql_query(MYSQL,sql);
	new tmp = 0;
	cache_get_row_count(tmp);
	if (tmp == 0)
		{return 0;}
	else
	{
        cache_get_value_name_int(0,"id", tmp);
		return tmp;
	}
}

public MySQLFetchAcctSingle(sqlplayerid, sqlvalname[], sqlresult[])
{
 	format(sql, sizeof(sql), "SELECT %s FROM lvrp_users WHERE id = %d LIMIT 1", sqlvalname, sqlplayerid);
	mysql_query(MYSQL,sql);
	cache_get_value_index(0,0,sqlresult, 64);
	return 0;
}

public MySQLUpdatePlayerIntSingle(sqlplayerid, sqlvalname[], sqlupdateint)
{
	MySQLCheckConnexion();
	format(sql, sizeof(sql), "UPDATE lvrp_users SET %s=%d WHERE id=%d LIMIT 1", sqlvalname, sqlupdateint, sqlplayerid);
	mysql_pquery(MYSQL,sql);
	return 1;
}

public MySQLUpdatePlayerCharSingle(sqlplayerid, sqlvalname[], sqlupdateint[])
{
	MySQLCheckConnexion();
	format(sql, sizeof(sql), "UPDATE lvrp_users SET %s='%s' WHERE id=%d LIMIT 1", sqlvalname, sqlupdateint, sqlplayerid);
	mysql_pquery(MYSQL,sql);
	return 1;
}

public MySQLAddLoginRecord(sqlplayerid, ipaddr[])
{
	new escip[16];
	mysql_escape_string(ipaddr, escip);
	MySQLCheckConnexion();
	format(sql, sizeof(sql), "INSERT INTO lvrp_log_connect (Date,Ip,SQLid) VALUES (UNIX_TIMESTAMP(),'%s',%d)",escip, sqlplayerid);
	mysql_pquery(MYSQL,sql);
	format(sql,sizeof(sql),"UPDATE lvrp_users SET LastLog=UNIX_TIMESTAMP(), Connected=1, Ip='%s' WHERE id=%d",escip, sqlplayerid);
    mysql_pquery(MYSQL,sql);
	return 1;
}

public MySQLCheckIp(ip[])
{
	MySQLCheckConnexion();
	format(sql,sizeof(sql),"SELECT id FROM lvrp_users WHERE Ip='%s'",ip);
	mysql_query(MYSQL,sql);
	new tmp = 0;
	cache_get_row_count(tmp);
	if(tmp >= MAX_ACCOUNT_IP)
 		{return true;}
	return false;
}

public MySQLCheckAccountLocked(sqlplayerid)
{
	MySQLCheckConnexion();
	format(sql, sizeof(sql), "SELECT Locked FROM lvrp_users WHERE id=%d LIMIT 1", sqlplayerid);
	mysql_query(MYSQL,sql);
	new tmp = 0;
	cache_get_value_name_int(0,"Locked", tmp);
	if (tmp != 0)
		{return true;}
	return false;
}

public MySQLCheckAccountOther(sqlplayerid)
{
	MySQLCheckConnexion();
	format(sql, sizeof(sql), "SELECT SQLid FROM lvrp_users_phones WHERE SQLid=%d LIMIT 1", sqlplayerid);
	mysql_query(MYSQL,sql);
	new tmp = 0;
	cache_get_row_count(tmp);
	if (tmp == 0)
	{
	    format(sql, sizeof(sql), "INSERT INTO lvrp_users_phones SET SQLid=%d",sqlplayerid);
		mysql_pquery(MYSQL,sql);
	}
	format(sql, sizeof(sql), "SELECT SQLid FROM lvrp_users_inventories WHERE SQLid=%d LIMIT 1", sqlplayerid);
	mysql_query(MYSQL,sql);
	cache_get_row_count(tmp);
	if (tmp == 0)
	{
	    format(sql, sizeof(sql), "INSERT INTO lvrp_users_inventories Set SQLid=%d", sqlplayerid);
		mysql_pquery(MYSQL,sql);
	}
	format(sql, sizeof(sql), "SELECT SQLid FROM lvrp_users_accessories WHERE SQLid=%d", sqlplayerid);
	mysql_query(MYSQL,sql);
	cache_get_row_count(tmp);
	if (tmp == 0)
	{
	    for(new i=0; i<5; i++)
	        {format(sql, sizeof(sql), "INSERT INTO lvrp_users_accessories Set SQLid=%d, IndexZ=%d", sqlplayerid, i);mysql_pquery(MYSQL,sql);}
	}
	return false;
}

public MySQLCheckIPBanned(ip[])
{
	MySQLCheckConnexion();
	format(sql, sizeof(sql), "SELECT * FROM lvrp_users_bans WHERE Ip='%s' LIMIT 1", ip);
	mysql_query(MYSQL,sql);
	new tmp = 0;
	cache_get_row_count(tmp);
	if (tmp != 0)
		{return true;}
	return false;
}

public MySQLGetNameWithId(sql_id,resultName[MAX_PLAYER_NAME])
{
	format(sql, sizeof(sql), "SELECT Name FROM lvrp_users WHERE id = %d LIMIT 1", sql_id);
	mysql_query(MYSQL,sql);
	new tmp = 0;
	cache_get_row_count(tmp);
	if (tmp == 0)
		{return 0;}
	else
 		{cache_get_value_name(0,"Name",resultName, 32);return 1;}
}

public MySQLCheckChar(string[])
{
	new char1 = strfind(string, "\"", true);
	new char2 = strfind(string, "\\", true);
	new char3 = strfind(string, "'", true);
    new char4 = strfind(string, "#", true);
    new char5 = strfind(string, "`", true);
    new char6 = strfind(string, "[", true);
    new char7 = strfind(string, "]", true);
    new char8 = strfind(string, "|", true);

	if(char1 != -1 || char2 != -1 || char3 != -1 || char4 != -1 || char5 != -1 || char6 != -1 || char7 != -1 || char8 != -1)
		{return 1;}
	return 0;
}

stock start_Timers()
{
    SetTimer("timer_1s", 1000, 1);
    SetTimer("timer_2s", 2000, 1);
    SetTimer("timer_5s", 5000, 1);
    SetTimer("timer_1mn", 60000, 1);
    SetTimer("timer_90s", 90000, 1);
    SetTimer("timer_110s", 110000, 1);
    SetTimer("timer_5mns", 300000, 1);
    SetTimer("timer_30mns", 1800000, 1);
    SetTimer("timer_1h", 3600000, 1);
    return 1;
}

//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
	printf("GameMode %s",NICK_NAME);
	print("---------------");
    
	mysql_log(ALL);
	//MapAndreas_Init(MAP_ANDREAS_MODE_FULL);
	print("[MYSQL] Connexion en cours ...");
	if (!MySQLConnect(MYSQL_HOST,MYSQL_USER,MYSQL_PASS,MYSQL_DB))
	    {return 0;}
	//teamspeak_Connect(TS_HOST,TS_PORT,TS_USER,TS_PASS,TS_NICK);
	CreateActor(0,0,0,0,0); // Debug Actor
	print(" ");print("[STREAMER] Chargement du streamer ..");
	streamer_Init();
	print("[STREAMER] Streamer chargé");
	print(" "); print("[SETTINGS] Chargement des paramètres ..");
	setting_Load();
	print(" "); print("[INIT] Chargement des variables depuis le bdd ..");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_bizz","bizz_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_uniquebizz","uniquebizz_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_houses","house_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_houses_furnitures","house_LoadFurnitures");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_vehicles","vehicle_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_camera","camera_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_factions_polices","police_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_factions_polices_fines","police_FineLoad");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_factions_governements","governement_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_factions_sannews WHERE id=1","sannews_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_factions_illegals","faction_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_factions_illegals_seeds","seed_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_factions_illegals_tags","tag_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_garages","garage_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_stop","stop_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_atms","atm_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_distribs","distrib_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_trash","trash_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_bins","bin_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_phones","phonecab_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_maps","map_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_gps","gps_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_signs","sign_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_spawn","spawn_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_interiors","interior_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_dealership","dealerShip_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_tree","tree_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_zones","zone_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_gates","gate_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_drops","drop_Load");
	mysql_pquery(MYSQL,"SELECT * FROM lvrp_server_ads","ad_Load");

	//fire_Load();
	//biker_Load();
	//mecano_Load();
    fbi_Load();
	house_LoadModels();
	init_Texts();
	ResetElevatorQueue();
	Elevator_Initialize();
	init_Mapping();
	init_MapIcon();
	init_PickupsAndLabels();
	init_Actors();
	FadeInit();

    ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);                              //Active les playerMarkers
    AllowInteriorWeapons(true);													//Permettre les armes à l'intérieur
	DisableInteriorEnterExits();                                                //Désactiver les intérieurs par default
	EnableStuntBonusForAll(false);												//Désactiver stunt bonus.
	ManualVehicleEngineAndLights();                                             //Désactiver le demarrage des véhicule automatiquement
    SetNameTagDrawDistance(NAME_DISTANCE);                                              	// Nom des joueurs
    ShowNameTags(true);                                                        // Afficher ou nom les infos au dessus du joueur (nom, vie, armure, afk ..)
	mdpbanque = random(10000);
	AddPlayerClass(0,1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	
	
	// Event
	strmid(event[tmpName],"Sans Nom",0,64,64);
	strmid(event[description],"Sans Nom",0,64,64);
	strmid(event[jacpot],"Sans Nom",0,64,64);
	event[parcitipents]=0;
	event[maxParticipent]=10;
	event[step]=0;
    
    // Yakuza
	bank_Blind = CreateDynamicObject(2634, 2144.1813964844, 1626.6809082031, 994.26220703125, 0, 0, 179.77966308594,-1,-1,-1,STREAM_DISTANCE);
	BankDoors[0] = CreateDynamicObject(3089, 2142.8220214844, 1606.6739501953, 993.89697265625, 0, 0, 0,-1,-1,-1,STREAM_DISTANCE);
	BankDoors[1] = CreateDynamicObject(3089, 2145.7709960938, 1606.6850585938, 993.89697265625, 0, 0, 180,-1,-1,-1,STREAM_DISTANCE);
	
	// Passage à niveau
	fenceTrain[0] = CreateDynamicObject(968, 1954.69995, -1950.40002, 13.4, 0, 0, 0,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[1] = CreateDynamicObject(968, 1968.40002, -1961.40002, 13.4, 0, 0, 180,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[2] = CreateDynamicObject(968, 2195.30005, -1901.30005, 13.4, 0, 0, 90,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[3] = CreateDynamicObject(968, 2206.30005, -1887.80005, 13.4, 0, 0, 270,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[4] = CreateDynamicObject(968, 2194.3999, -1739.5, 13.2, 0, 0, 90,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[5] = CreateDynamicObject(968, 2206.30005, -1725.59998, 13.1, 0, 0, 270,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[6] = CreateDynamicObject(968, 2205.80005, -1652.30005, 15, 0, 0, 74,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[7] = CreateDynamicObject(968, 2220.30005, -1641.40002, 15.1, 0, 0, 255.998,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[8] = CreateDynamicObject(968, 2268.1001, -1490.69995, 22.3, 0, 0, 75,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[9] = CreateDynamicObject(968, 2282, -1478, 22.5, 0, 0, 257.997,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[10] = CreateDynamicObject(968, 2268.09961, -1490.69922, 22.3, 0, 0, 74.998,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[11] = CreateDynamicObject(968, 2292.69995, -1377.19995, 23.9, 0, 0, 270,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[12] = CreateDynamicObject(968, 2292.69995, -1143.09998, 26.5, 0, 0, 269.75,-1,-1,-1,STREAM_DISTANCE);
	fenceTrain[13] = CreateDynamicObject(968, 2281.3999, -1156, 26.4, 0, 0, 89.75,-1,-1,-1,STREAM_DISTANCE);

	// Laser Banque
	bank_LaserObject[0] = CreateDynamicObject(19082, 2128.5280761719, 1617.7690429688, 994.44500732422, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[1] = CreateDynamicObject(19082, 2148.5891113281, 1617.7700195313, 994.44500732422, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[2] = CreateDynamicObject(19082, 2127.587890625, 1612.2580566406, 996.47497558594, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[3] = CreateDynamicObject(19082, 2147.5810546875, 1612.2640380859, 996.47497558594, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[4] = CreateDynamicObject(19082, 2129.462890625, 1617.4749755859, 993.13397216797, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[5] = CreateDynamicObject(19082, 2149.5600585938, 1617.4749755859, 993.13397216797, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[6] = CreateDynamicObject(19082, 2129.3879394531, 1612.3649902344, 993.35302734375, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[7] = CreateDynamicObject(19082, 2149.3830566406, 1612.3630371094, 993.35302734375, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[8] = CreateDynamicObject(19082, 2127.99609375, 1617.5610351563, 996.02502441406, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[9] = CreateDynamicObject(19082, 2148.1311035156, 1617.5570068359, 996.02502441406, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[10] = CreateDynamicObject(19082, 2129.376953125, 1622.6440429688, 993.56298828125, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[11] = CreateDynamicObject(19082, 2149.4169921875, 1622.6500244141, 993.56298828125, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[12] = CreateDynamicObject(19082, 2129.1520996094, 1622.7380371094, 995.05200195313, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[13] = CreateDynamicObject(19082, 2149.1909179688, 1622.7359619141, 995.05200195313, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[14] = CreateDynamicObject(19082, 2129.3701171875, 1622.6569824219, 996.60797119141, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[15] = CreateDynamicObject(19082, 2149.4509277344, 1622.6600341797, 996.60797119141, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[16] = CreateDynamicObject(19082, 2128.6999511719, 1612.3470458984, 994.89099121094, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[17] = CreateDynamicObject(19082, 2148.7849121094, 1612.3449707031, 994.89099121094, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	
	zoneTrain[0] = CreateDynamicCircle(1961.4165,-1955.8959,40 ,0,0,-1);
	zoneTrain[1] = CreateDynamicCircle(2200.5322,-1894.8607,40 ,0,0,-1);
	zoneTrain[2] = CreateDynamicCircle(2200.7292,-1733.0411,40 ,0,0,-1);
	zoneTrain[3] = CreateDynamicCircle(2212.9792,-1648.0552,40 ,0,0,-1);
	zoneTrain[4] = CreateDynamicCircle(2275.2446,-1484.4200,40 ,0,0,-1);
	zoneTrain[5] = CreateDynamicCircle(2286.9587,-1383.3932,40 ,0,0,-1);
	zoneTrain[6] = CreateDynamicCircle(2287.0542,-1149.2205,40 ,0,0,-1);
	
	job_Area[0] = CreateDynamicRectangle(-336.5202,-1465.8575,-210.8724,-1559.4705,0,0,-1);
	job_Area[1] = CreateDynamicRectangle(-158.5365,-1416.7474,-326.4604,-1312.5786,0,0,-1);
	job_Area[2] = CreateDynamicRectangle(-342.7463,-1263.5582,-559.5009,-1433.8313,0,0,-1);
	job_Area[3] = CreateDynamicRectangle(-201.9583,181.8188,-180.8632,-94.7774,0,0,-1);
	job_Area[4] = CreateDynamicRectangle(43.6472,-123.8093,19.2899,69.0313,0,0,-1);
	
	job_Zone[0] = GangZoneCreate(-2557.0,1798.21,-2109.00,2134.21);
	job_Zone[1] = GangZoneCreate(718.123474, -2238.123291, 914.123474, -2098.123291);

    gServerReload = 0;
	return 1;
}

public RemiX_Time_Tools()
{
	new ServerHour, ServerMinute, ServerSecond,string[128];
	gettime(ServerHour,ServerMinute,ServerSecond);

	if(ServerHour == 4 && ServerMinute == 0)
	{
		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Redemarrage du serveur programé à %02dh00!",ServerHour);
		SendClientMessageToAll(COLOR_LIGHTBLUE, string);
		GameTextForAll("Le redemarrage a commencer!",5000,1);
		GameModeInitExitFunc();
		return 1;
	}
	if(ServerMinute == 55)
	{
	    if(lotto_Timer==5)
	    	{format(string, sizeof(string), "» Lotto « Le lotto commence dans 15 minutes, Achetez votre ticket au tabac !");msg_OOC(COLOR_WHITE, string);}
	}
	if(ServerMinute == 10)
	{
	    lotto_Timer++;
	    if(lotto_Timer==6)
		{
		    new rand = random(15000); rand += 2158;
		    Jackpot = rand;
		    format(string, sizeof(string), "» Lotto « Nous avons commencé le tirage de la Loterie.");
			msg_OOC(COLOR_WHITE, string);
			new rand2 = random(50);
			if(rand2 < 47) { rand2 += 3; }
		    lotto(rand2);
		    lotto_Timer=0;
	    }
	}
	if(ServerMinute == 0)
	{
		format(string, sizeof(string), "» Il est maintenant, %02dh. Bon jeu !",ServerHour);
		SendClientMessageToAll(COLOR_WHITE, string);
		printf("[%02d:%02d:%02d]",ServerHour, ServerMinute, ServerSecond);
		MeteoAleatoire();
	}
	return 1;
}
stock pay_CreateTexts()
{
    pay_TextDesigne1 = TextDrawCreate(318.000000, 153.000000, "~n~"); // 1
	TextDrawAlignment(pay_TextDesigne1, 2);
	TextDrawBackgroundColor(pay_TextDesigne1, 255);
	TextDrawFont(pay_TextDesigne1, 1);
	TextDrawLetterSize(pay_TextDesigne1, 0.500000, 15.000000);
	TextDrawColor(pay_TextDesigne1, -1);
	TextDrawSetOutline(pay_TextDesigne1, 0);
	TextDrawSetProportional(pay_TextDesigne1, 1);
	TextDrawSetShadow(pay_TextDesigne1, 1);
	TextDrawUseBox(pay_TextDesigne1, 1);
	TextDrawBoxColor(pay_TextDesigne1, -1936946116);
	TextDrawTextSize(pay_TextDesigne1, 20.000000, 200.000000);

	pay_TextDesigne2 = TextDrawCreate(318.000000, 141.000000, "~n~"); // 2
	TextDrawAlignment(pay_TextDesigne2, 2);
	TextDrawBackgroundColor(pay_TextDesigne2, 255);
	TextDrawFont(pay_TextDesigne2, 1);
	TextDrawLetterSize(pay_TextDesigne2, 0.500000, 1.000000);
	TextDrawColor(pay_TextDesigne2, -1);
	TextDrawSetOutline(pay_TextDesigne2, 0);
	TextDrawSetProportional(pay_TextDesigne2, 1);
	TextDrawSetShadow(pay_TextDesigne2, 1);
	TextDrawUseBox(pay_TextDesigne2, 1);
	TextDrawBoxColor(pay_TextDesigne2, 255);
	TextDrawTextSize(pay_TextDesigne2, 0.000000, 200.000000);

	pay_TextDesigne3 = TextDrawCreate(318.000000, 272.000000, "~n~"); // 3
	TextDrawAlignment(pay_TextDesigne3, 2);
	TextDrawBackgroundColor(pay_TextDesigne3, 255);
	TextDrawFont(pay_TextDesigne3, 1);
	TextDrawLetterSize(pay_TextDesigne3, 0.500000, 1.800000);
	TextDrawColor(pay_TextDesigne3, -1);
	TextDrawSetOutline(pay_TextDesigne3, 0);
	TextDrawSetProportional(pay_TextDesigne3, 1);
	TextDrawSetShadow(pay_TextDesigne3, 1);
	TextDrawUseBox(pay_TextDesigne3, 1);
	TextDrawBoxColor(pay_TextDesigne3, 255);
	TextDrawTextSize(pay_TextDesigne3, 0.000000, 200.000000);
	
	pay_TextTitle = TextDrawCreate(218.000000, 138.000000, "Moyen de paiement"); // 4
	TextDrawBackgroundColor(pay_TextTitle, 255);
	TextDrawFont(pay_TextTitle, 1);
	TextDrawLetterSize(pay_TextTitle, 0.260000, 1.300000);
	TextDrawColor(pay_TextTitle, 16711935);
	TextDrawSetOutline(pay_TextTitle, 0);
	TextDrawSetProportional(pay_TextTitle, 1);
	TextDrawSetShadow(pay_TextTitle, 1);
	
	pay_TextDesigne4 = TextDrawCreate(318.000000, 194.000000, "-"); // 8
	TextDrawAlignment(pay_TextDesigne4, 2);
	TextDrawBackgroundColor(pay_TextDesigne4, 255);
	TextDrawFont(pay_TextDesigne4, 1);
	TextDrawLetterSize(pay_TextDesigne4, 12.000000, 1.000000);
	TextDrawColor(pay_TextDesigne4, -1);
	TextDrawSetOutline(pay_TextDesigne4, 0);
	TextDrawSetProportional(pay_TextDesigne4, 1);
	TextDrawSetShadow(pay_TextDesigne4, 1);
	
	pay_TextDesigne5 = TextDrawCreate(318.000000, 240.000000, "-"); // 11
	TextDrawAlignment(pay_TextDesigne5, 2);
	TextDrawBackgroundColor(pay_TextDesigne5, 255);
	TextDrawFont(pay_TextDesigne5, 1);
	TextDrawLetterSize(pay_TextDesigne5, 12.000000, 1.000000);
	TextDrawColor(pay_TextDesigne5, -1);
	TextDrawSetOutline(pay_TextDesigne5, 0);
	TextDrawSetProportional(pay_TextDesigne5, 1);
	TextDrawSetShadow(pay_TextDesigne5, 1);
	
	pay_TextInfo = TextDrawCreate(218.000000, 254.000000, "Choisser un moyen de paiement :");
	TextDrawBackgroundColor(pay_TextInfo, 255); // 12
	TextDrawFont(pay_TextInfo, 1);
	TextDrawLetterSize(pay_TextInfo, 0.320000, 1.000000);
	TextDrawColor(pay_TextInfo, -65281);
	TextDrawSetOutline(pay_TextInfo, 0);
	TextDrawSetProportional(pay_TextInfo, 1);
	TextDrawSetShadow(pay_TextInfo, 1);
	
	pay_TextDesigne6 = TextDrawCreate(246.000000, 275.000000, "~n~"); // 13
	TextDrawAlignment(pay_TextDesigne6, 2);
	TextDrawBackgroundColor(pay_TextDesigne6, 255);
	TextDrawFont(pay_TextDesigne6, 1);
	TextDrawLetterSize(pay_TextDesigne6, 0.400000, 1.100000);
	TextDrawColor(pay_TextDesigne6, 255);
	TextDrawSetOutline(pay_TextDesigne6, 0);
	TextDrawSetProportional(pay_TextDesigne6, 1);
	TextDrawSetShadow(pay_TextDesigne6, 1);
	TextDrawUseBox(pay_TextDesigne6, 1);
	TextDrawBoxColor(pay_TextDesigne6, -1);
	TextDrawTextSize(pay_TextDesigne6, 0.000000, 49.000000);
	
	pay_TextButton1 = TextDrawCreate(246.000000, 275.000000, "En Cash"); // 13
	TextDrawAlignment(pay_TextButton1, 2);
	TextDrawBackgroundColor(pay_TextButton1, 255);
	TextDrawFont(pay_TextButton1, 1);
	TextDrawLetterSize(pay_TextButton1, 0.400000, 1.100000);
	TextDrawColor(pay_TextButton1, 255);
	TextDrawSetOutline(pay_TextButton1, 0);
	TextDrawSetProportional(pay_TextButton1, 1);
	TextDrawSetShadow(pay_TextButton1, 1);
	TextDrawTextSize(pay_TextButton1, 10.000000, 49.000000);
	TextDrawSetSelectable(pay_TextButton1,1);

    pay_TextDesigne7 = TextDrawCreate(306.000000, 275.000000, "~n~"); // 14
	TextDrawAlignment(pay_TextDesigne7, 2);
	TextDrawBackgroundColor(pay_TextDesigne7, 255);
	TextDrawFont(pay_TextDesigne7, 1);
	TextDrawLetterSize(pay_TextDesigne7, 0.400000, 1.100000);
	TextDrawColor(pay_TextDesigne7, 255);
	TextDrawSetOutline(pay_TextDesigne7, 0);
	TextDrawSetProportional(pay_TextDesigne7, 1);
	TextDrawSetShadow(pay_TextDesigne7, 1);
	TextDrawUseBox(pay_TextDesigne7, 1);
	TextDrawBoxColor(pay_TextDesigne7, -1);
	TextDrawTextSize(pay_TextDesigne7, 0.000000, 55.000000);
	
	pay_TextButton2 = TextDrawCreate(306.000000, 275.000000, "Par C.B"); // 14
	TextDrawAlignment(pay_TextButton2, 2);
	TextDrawBackgroundColor(pay_TextButton2, 255);
	TextDrawFont(pay_TextButton2, 1);
	TextDrawLetterSize(pay_TextButton2, 0.400000, 1.100000);
	TextDrawColor(pay_TextButton2, 255);
	TextDrawSetOutline(pay_TextButton2, 0);
	TextDrawSetProportional(pay_TextButton2, 1);
	TextDrawSetShadow(pay_TextButton2, 1);
	TextDrawTextSize(pay_TextButton2, 10.000000, 55.000000);
	TextDrawSetSelectable(pay_TextButton2,1);

    pay_TextDesigne8 = TextDrawCreate(378.000000, 275.000000, "~n~"); // 15
	TextDrawAlignment(pay_TextDesigne8, 2);
	TextDrawBackgroundColor(pay_TextDesigne8, 255);
	TextDrawFont(pay_TextDesigne8, 1);
	TextDrawLetterSize(pay_TextDesigne8, 0.400000, 1.100000);
	TextDrawColor(pay_TextDesigne8, 255);
	TextDrawSetOutline(pay_TextDesigne8, 0);
	TextDrawSetProportional(pay_TextDesigne8, 1);
	TextDrawSetShadow(pay_TextDesigne8, 1);
	TextDrawUseBox(pay_TextDesigne8, 1);
	TextDrawBoxColor(pay_TextDesigne8, -1);
	TextDrawTextSize(pay_TextDesigne8, 0.000000, 72.000000);
	
	pay_TextButton3 = TextDrawCreate(378.000000, 275.000000, "Par cheque"); // 15
	TextDrawAlignment(pay_TextButton3, 2);
	TextDrawBackgroundColor(pay_TextButton3, 255);
	TextDrawFont(pay_TextButton3, 1);
	TextDrawLetterSize(pay_TextButton3, 0.400000, 1.100000);
	TextDrawColor(pay_TextButton3, 255);
	TextDrawSetOutline(pay_TextButton3, 0);
	TextDrawSetProportional(pay_TextButton3, 1);
	TextDrawSetShadow(pay_TextButton3, 1);
	TextDrawTextSize(pay_TextButton3, 10.000000, 72.000000);
	TextDrawSetSelectable(pay_TextButton3,1);
	
	pay_TextExit = TextDrawCreate(414.000000, 141.000000, "X");
	TextDrawAlignment(pay_TextExit, 2);
	TextDrawBackgroundColor(pay_TextExit, 255);
	TextDrawFont(pay_TextExit, 1);
	TextDrawLetterSize(pay_TextExit, 0.500000, 1.000000);
	TextDrawColor(pay_TextExit, -1);
	TextDrawSetOutline(pay_TextExit, 0);
	TextDrawSetProportional(pay_TextExit, 1);
	TextDrawSetShadow(pay_TextExit, 1);
	TextDrawTextSize(pay_TextExit, 7.000000, 11.000000);
	TextDrawSetSelectable(pay_TextExit,1);
}

stock LoadBankText()
{
    Bank_TextBackGround = TextDrawCreate(612.000000, 118.000000, "_");
	TextDrawBackgroundColor(Bank_TextBackGround, 255);
	TextDrawFont(Bank_TextBackGround, 1);
	TextDrawLetterSize(Bank_TextBackGround, 0.900000, 8.999996);
	TextDrawColor(Bank_TextBackGround, 421075280);
	TextDrawSetOutline(Bank_TextBackGround, 0);
	TextDrawSetProportional(Bank_TextBackGround, 1);
	TextDrawSetShadow(Bank_TextBackGround, 1);
	TextDrawUseBox(Bank_TextBackGround, 1);
	TextDrawBoxColor(Bank_TextBackGround, 421075285);
	TextDrawTextSize(Bank_TextBackGround, 497.000000, 0.000000);

	Bank_TextPourcent = TextDrawCreate(557.000000, 191.000000, "100 %");
	TextDrawAlignment(Bank_TextPourcent, 2);
	TextDrawBackgroundColor(Bank_TextPourcent, 255);
	TextDrawFont(Bank_TextPourcent, 1);
	TextDrawLetterSize(Bank_TextPourcent, 0.500000, 1.000000);
	TextDrawColor(Bank_TextPourcent, -1);
	TextDrawSetOutline(Bank_TextPourcent, 0);
	TextDrawSetProportional(Bank_TextPourcent, 1);
	TextDrawSetShadow(Bank_TextPourcent, 1);

	Bank_TextMsg[0] = TextDrawCreate(493.000000, 110.000000, "Piratage de la banque");
	TextDrawBackgroundColor(Bank_TextMsg[0], 255);
	TextDrawFont(Bank_TextMsg[0], 0);
	TextDrawLetterSize(Bank_TextMsg[0], 0.500000, 1.000000);
	TextDrawColor(Bank_TextMsg[0], 16777215);
	TextDrawSetOutline(Bank_TextMsg[0], 0);
	TextDrawSetProportional(Bank_TextMsg[0], 1);
	TextDrawSetShadow(Bank_TextMsg[0], 1);

	Bank_TextMsg[1] = TextDrawCreate(500.000000, 123.000000, "-> Decriptage du mot de passe");
	TextDrawBackgroundColor(Bank_TextMsg[1], 255);
	TextDrawFont(Bank_TextMsg[1], 1);
	TextDrawLetterSize(Bank_TextMsg[1], 0.200000, 1.000000);
	TextDrawColor(Bank_TextMsg[1], -1);
	TextDrawSetOutline(Bank_TextMsg[1], 0);
	TextDrawSetProportional(Bank_TextMsg[1], 1);
	TextDrawSetShadow(Bank_TextMsg[1], 1);

	Bank_TextMsg[2] = TextDrawCreate(500.000000, 136.000000, "-> Deconnexion des cameras");
	TextDrawBackgroundColor(Bank_TextMsg[2], 255);
	TextDrawFont(Bank_TextMsg[2], 1);
	TextDrawLetterSize(Bank_TextMsg[2], 0.200000, 1.000000);
	TextDrawColor(Bank_TextMsg[2], -1);
	TextDrawSetOutline(Bank_TextMsg[2], 0);
	TextDrawSetProportional(Bank_TextMsg[2], 1);
	TextDrawSetShadow(Bank_TextMsg[2], 1);

	Bank_TextMsg[3] = TextDrawCreate(500.000000, 149.000000, "-> Ouverture des portes");
	TextDrawBackgroundColor(Bank_TextMsg[3], 255);
	TextDrawFont(Bank_TextMsg[3], 1);
	TextDrawLetterSize(Bank_TextMsg[3], 0.200000, 1.000000);
	TextDrawColor(Bank_TextMsg[3], -1);
	TextDrawSetOutline(Bank_TextMsg[3], 0);
	TextDrawSetProportional(Bank_TextMsg[3], 1);
	TextDrawSetShadow(Bank_TextMsg[3], 1);

	Bank_TextMsg[4] = TextDrawCreate(500.000000, 162.000000, "-> Arret des lasers de securite");
	TextDrawBackgroundColor(Bank_TextMsg[4], 255);
	TextDrawFont(Bank_TextMsg[4], 1);
	TextDrawLetterSize(Bank_TextMsg[4], 0.200000, 1.000000);
	TextDrawColor(Bank_TextMsg[4], -1);
	TextDrawSetOutline(Bank_TextMsg[4], 0);
	TextDrawSetProportional(Bank_TextMsg[4], 1);
	TextDrawSetShadow(Bank_TextMsg[4], 1);

	Bank_TextMsg[5] = TextDrawCreate(500.000000, 175.000000, "-> Finalisation ....");
	TextDrawBackgroundColor(Bank_TextMsg[5], 255);
	TextDrawFont(Bank_TextMsg[5], 1);
	TextDrawLetterSize(Bank_TextMsg[5], 0.200000, 1.000000);
	TextDrawColor(Bank_TextMsg[5], -1);
	TextDrawSetOutline(Bank_TextMsg[5], 0);
	TextDrawSetProportional(Bank_TextMsg[5], 1);
	TextDrawSetShadow(Bank_TextMsg[5], 1);
}

public payday_HideTexts(playerid)
{
	TextDrawHideForPlayer(playerid,payday_Design[0]);
	TextDrawHideForPlayer(playerid,payday_Design[1]);
	TextDrawHideForPlayer(playerid,payday_Design[2]);
	PlayerTextDrawHide(playerid,payday_Infos[playerid]);
	return 1;
}

stock job_ShowTexts(playerid)
{
    TextDrawShowForPlayer(playerid,job_TextBox[0]);
    TextDrawShowForPlayer(playerid,job_TextBox[1]);
    TextDrawShowForPlayer(playerid,job_TextBar[0]);
    TextDrawShowForPlayer(playerid,job_TextBar[1]);
	PlayerTextDrawShow(playerid,job_TextInfos[playerid]);
	PlayerTextDrawShow(playerid,job_TextBarUpdate[playerid]);
	TextDrawShowForPlayer(playerid,job_TextTitle);
	job_UpdateTexts(playerid);
	return 1;
}
stock job_HideTexts(playerid)
{
    TextDrawHideForPlayer(playerid,job_TextBox[0]);
    TextDrawHideForPlayer(playerid,job_TextBox[1]);
    TextDrawHideForPlayer(playerid,job_TextBar[0]);
    TextDrawHideForPlayer(playerid,job_TextBar[1]);
	PlayerTextDrawHide(playerid,job_TextInfos[playerid]);
	PlayerTextDrawHide(playerid,job_TextBarUpdate[playerid]);
	TextDrawHideForPlayer(playerid,job_TextTitle);
	return 1;
}
stock job_GetXp(playerid,job)
{
    switch(job)
    {
        case 0:
            {return 0;}
        case 1,2,3,4,5,7,8,9,19:
            {return (PlayerInfo[playerid][pJobLvl]*20);}
		case 6,10, 11:
		    {return (PlayerInfo[playerid][pJobLvl]*8);}
    }
    return 1;
}

stock job_TakePay(playerid,job)
{
    new cashes=0,string[128];
    PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    switch(job)
    {
        case 0:
			{return 0;}
        case 1,7,19:
		    {cashes=PlayerInfo[playerid][pJobLvl]*2+3+(random(15));}
		case 2,3,4,5,9:
		    {cashes=PlayerInfo[playerid][pJobLvl]*2+(random(20));}
		case 6,8,10:
		    {cashes=PlayerInfo[playerid][pJobLvl]*3+(random(40));}
    }
    PlayerInfo[playerid][pJobBonus]+=cashes;
    job_UpdateTexts(playerid);
    format(string,sizeof(string),"{78769D}» Job «{FFFFFF} Bonus de $%d sur votre prochaine paye (Total: %d$).",cashes,PlayerInfo[playerid][pJobBonus]);
    msg_Client(playerid,COLOR_JOB,string);
	return 1;
}

stock job_End(playerid)
{
    SetVehicleToRespawn(job_CarId[playerid]);
	job_ExitTime[playerid]=0; job_CarId[playerid]=-1; job_Start[playerid]=0;
	job_CheckPoints[playerid]=0; job_TempVar[playerid]=0; job_City[playerid]=-1;
	job_HideTexts(playerid);
	SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	DisablePlayerCheckpoint(playerid);
	RemovePlayerFromVehicle(playerid);
	TogglePlayerControllable(playerid,true);
	GangZoneHideForPlayer(playerid,job_Zone[0]);
	GangZoneHideForPlayer(playerid,job_Zone[1]);
	job_ObjectN[playerid]=0;
	SetPlayerColor(playerid,0xFFFFFF00);
	for(new i=0; i<5; i++)
	{
	    if(IsValidDynamicObject(job_Object[playerid][i]))
	    	{DestroyDynamicObject(job_Object[playerid][i]);}
	}
	if(IsPlayerAttachedObjectSlotUsed(playerid,job_HoldingObjectSlot[playerid]))
		{RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);}
	if(IsValidDynamicObject(job_HoldingObjectSlot[playerid]))
	    {DestroyDynamicObject(job_HoldingObjectSlot[playerid]);}
    if(PlayerInfo[playerid][pJob]==19)
 	{
 	    for(new i=0; i<totalATMs; i++)
 	    	{DestroyDynamicMapIcon(atm_Icon[playerid][i]);}
 	}
 	if(PlayerInfo[playerid][pJob]==11 && job_Start[playerid] == 1)
 	{
 	    gServerMedics--;
 	    for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)// personnes bléssées
		{
			if(IsPlayerConnected(i) && medic_PlayerNeedMedic[i] == 1)
				{SetPlayerMarkerForPlayer(playerid, i, 0xFFFFFF00);}
		}
	}
	return 1;
}

stock phone_Show(playerid)
{
	TextDrawShowForPlayer(playerid,phone_Designe1);
	TextDrawShowForPlayer(playerid,phone_Designe2);
	TextDrawShowForPlayer(playerid,phone_Designe1);
	TextDrawShowForPlayer(playerid,phone_Designe3);
	TextDrawShowForPlayer(playerid,phone_BackGround);
	TextDrawShowForPlayer(playerid,phone_Speaker);
	TextDrawShowForPlayer(playerid,phone_Buton1);
	TextDrawShowForPlayer(playerid,phone_Buton2);
	TextDrawShowForPlayer(playerid,phone_Buton3);
	TextDrawShowForPlayer(playerid,phone_Designe4);
	TextDrawShowForPlayer(playerid,phone_Designe5);
	TextDrawShowForPlayer(playerid,phone_Designe6);
	TextDrawShowForPlayer(playerid,phone_Menu);
	TextDrawShowForPlayer(playerid,phone_Call);
	TextDrawShowForPlayer(playerid,phone_Hang);
	TextDrawHideForPlayer(playerid,phone_MenuClavier);
	TextDrawHideForPlayer(playerid,phone_MenuSMS);
	TextDrawHideForPlayer(playerid,phone_MenuMP3);
	TextDrawHideForPlayer(playerid,phone_MenuRadio);
	TextDrawHideForPlayer(playerid,phone_MenuMap);
	TextDrawHideForPlayer(playerid,phone_MenuConso);
	TextDrawHideForPlayer(playerid,phone_Map);
	TextDrawHideForPlayer(playerid,phone_MenuRep);
	TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	TextDrawHideForPlayer(playerid,phone_BackGroundSMS);
	TextDrawHideForPlayer(playerid,phone_SMSReceived);
	TextDrawHideForPlayer(playerid,phone_SMSSent);
	TextDrawHideForPlayer(playerid,phone_CreateContact);
	TextDrawHideForPlayer(playerid,phone_CreateContactBack);
	PlayerTextDrawHide(playerid,phone_CallTime[playerid]);
	PlayerTextDrawHide(playerid,phone_CallFromNum[playerid]);
	PlayerTextDrawHide(playerid,phone_ConsoTime[playerid]);
	PlayerTextDrawHide(playerid,phone_ConsoSMS[playerid]);
	TextDrawHideForPlayer(playerid,phone_CallFrom);
	TextDrawHideForPlayer(playerid,phone_MP3[0]);
	TextDrawHideForPlayer(playerid,phone_MP3[1]);
	for(new i=0; i<13; i++)
	    {TextDrawHideForPlayer(playerid,phone_Num[i]);}
    for(new i=0; i<7; i++)
	    {TextDrawHideForPlayer(playerid,phone_Radio[i]);}
    for(new i=0; i<5; i++)
	    {PlayerTextDrawHide(playerid,phone_BackSMS[playerid][i]);}
    for(new i=0; i<13; i++)
	    {PlayerTextDrawHide(playerid,phone_Contact[playerid][i]);}
	PlayerTextDrawShow(playerid,phone_Hours[playerid]);
	PlayerTextDrawShow(playerid,phone_Operator[playerid]);
	PlayerTextDrawHide(playerid,phone_Title[playerid]);
	PlayerTextDrawHide(playerid,phone_WrittenNum[playerid]);
	SelectTextDraw(playerid,0x0000FFAA);
	phone_Text[playerid]=0;
	
	if(PlayerInfo[playerid][pOperator]==1)
	    {PlayerTextDrawSetString(playerid,phone_Operator[playerid],"BellSouth");}
    else if(PlayerInfo[playerid][pOperator]==2)
	    {PlayerTextDrawSetString(playerid,phone_Operator[playerid],"AT&T Mobility");}
    else if(PlayerInfo[playerid][pOperator]==3)
	    {PlayerTextDrawSetString(playerid,phone_Operator[playerid],"SBC Communications");}
    else if(PlayerInfo[playerid][pOperator]==4)
	    {PlayerTextDrawSetString(playerid,phone_Operator[playerid],"Verizon Communication");}
    else
	    {PlayerTextDrawSetString(playerid,phone_Operator[playerid],"Aucun Operateur");}
	
	new hour, minute, second;
	gettime(hour, minute, second);
	new tmp[16];
 	format(tmp,sizeof(tmp),"%02dh%02d",hour,minute);
	PlayerTextDrawSetString(playerid,phone_Hours[playerid],tmp);
}

stock phone_Hide(playerid)
{
	TextDrawHideForPlayer(playerid,phone_Designe1);
	TextDrawHideForPlayer(playerid,phone_Designe2);
	TextDrawHideForPlayer(playerid,phone_Designe1);
	TextDrawHideForPlayer(playerid,phone_Designe3);
	TextDrawHideForPlayer(playerid,phone_BackGround);
	TextDrawHideForPlayer(playerid,phone_Speaker);
	TextDrawHideForPlayer(playerid,phone_Buton1);
	TextDrawHideForPlayer(playerid,phone_Buton2);
	TextDrawHideForPlayer(playerid,phone_Buton3);
	TextDrawHideForPlayer(playerid,phone_Designe4);
	TextDrawHideForPlayer(playerid,phone_Designe5);
	TextDrawHideForPlayer(playerid,phone_Designe6);
	TextDrawHideForPlayer(playerid,phone_Menu);
	TextDrawHideForPlayer(playerid,phone_Call);
	TextDrawHideForPlayer(playerid,phone_Hang);
	TextDrawHideForPlayer(playerid,phone_MenuClavier);
	TextDrawHideForPlayer(playerid,phone_MenuSMS);
	TextDrawHideForPlayer(playerid,phone_MenuMP3);
	TextDrawHideForPlayer(playerid,phone_MenuRadio);
	TextDrawHideForPlayer(playerid,phone_MenuMap);
	TextDrawHideForPlayer(playerid,phone_MenuConso);
	TextDrawHideForPlayer(playerid,phone_MenuRep);
	TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	TextDrawHideForPlayer(playerid,phone_Map);
	TextDrawHideForPlayer(playerid,phone_MP3[0]);
	TextDrawHideForPlayer(playerid,phone_MP3[1]);
	TextDrawHideForPlayer(playerid,phone_BackGroundSMS);
	TextDrawHideForPlayer(playerid,phone_SMSReceived);
	TextDrawHideForPlayer(playerid,phone_SMSSent);
	TextDrawHideForPlayer(playerid,phone_CreateContact);
	TextDrawHideForPlayer(playerid,phone_CreateContactBack);
	PlayerTextDrawHide(playerid,phone_Hours[playerid]);
	PlayerTextDrawHide(playerid,phone_Operator[playerid]);
	PlayerTextDrawHide(playerid,phone_Title[playerid]);
	PlayerTextDrawHide(playerid,phone_WrittenNum[playerid]);
	PlayerTextDrawHide(playerid,phone_CallTime[playerid]);
	PlayerTextDrawHide(playerid,phone_CallFromNum[playerid]);
	PlayerTextDrawHide(playerid,phone_ConsoTime[playerid]);
	PlayerTextDrawHide(playerid,phone_ConsoSMS[playerid]);
	TextDrawHideForPlayer(playerid,phone_CallFrom);
	for(new i=0; i<13; i++)
	    {TextDrawHideForPlayer(playerid,phone_Num[i]);}
    for(new i=0; i<7; i++)
	    {TextDrawHideForPlayer(playerid,phone_Radio[i]);}
    for(new i=0; i<5; i++)
	    {PlayerTextDrawHide(playerid,phone_BackSMS[playerid][i]);}
    for(new i=0; i<13; i++)
	    {PlayerTextDrawHide(playerid,phone_Contact[playerid][i]);}
	phone_Text[playerid]=0;
	CancelSelectTextDraw(playerid);
}

stock init_Texts()
{
		
		text_Intro[0] = TextDrawCreate(670.000000, -10.000000, "_");
		TextDrawBackgroundColor(text_Intro[0], 255);
		TextDrawFont(text_Intro[0], 1);
		TextDrawLetterSize(text_Intro[0], 0.800000, 5.000000);
		TextDrawColor(text_Intro[0], -1);
		TextDrawSetOutline(text_Intro[0], 0);
		TextDrawSetProportional(text_Intro[0], 1);
		TextDrawSetShadow(text_Intro[0], 1);
		TextDrawUseBox(text_Intro[0], 1);
		TextDrawBoxColor(text_Intro[0], 255);
		TextDrawTextSize(text_Intro[0], -10.000000, 20.000000);

		text_Intro[1] = TextDrawCreate(670.000000, 413.000000, "_");
		TextDrawBackgroundColor(text_Intro[1], 255);
		TextDrawFont(text_Intro[1], 1);
		TextDrawLetterSize(text_Intro[1], 0.800000, 5.000000);
		TextDrawColor(text_Intro[1], -1);
		TextDrawSetOutline(text_Intro[1], 0);
		TextDrawSetProportional(text_Intro[1], 1);
		TextDrawSetShadow(text_Intro[1], 1);
		TextDrawUseBox(text_Intro[1], 1);
		TextDrawBoxColor(text_Intro[1], 255);
		TextDrawTextSize(text_Intro[1], -10.000000, 20.000000);

		text_Intro[2] = TextDrawCreate(314.000000, 6.000000, "La Vie RolePlay");
		TextDrawAlignment(text_Intro[2], 2);
		TextDrawBackgroundColor(text_Intro[2], -16776961);
		TextDrawFont(text_Intro[2], 0);
		TextDrawLetterSize(text_Intro[2], 0.600000, 2.000000);
		TextDrawColor(text_Intro[2], -1);
		TextDrawSetOutline(text_Intro[2], 1);
		TextDrawSetProportional(text_Intro[2], 1);

		text_Intro[3] = TextDrawCreate(317.000000, 426.000000, "Base a Los Santos");
		TextDrawAlignment(text_Intro[3], 2);
		TextDrawBackgroundColor(text_Intro[3], 255);
		TextDrawFont(text_Intro[3], 1);
		TextDrawLetterSize(text_Intro[3], 0.280000, 1.000000);
		TextDrawColor(text_Intro[3], -1);
		TextDrawSetOutline(text_Intro[3], 0);
		TextDrawSetProportional(text_Intro[3], 1);
		TextDrawSetShadow(text_Intro[3], 0);
		
		text_Intro[4] = TextDrawCreate(332.000000, 25.000000, "Version 5");
		TextDrawBackgroundColor(text_Intro[4], 255);
		TextDrawFont(text_Intro[4], 1);
		TextDrawLetterSize(text_Intro[4], 0.230000, 1.000000);
		TextDrawColor(text_Intro[4], -16776961);
		TextDrawSetOutline(text_Intro[4], 0);
		TextDrawSetProportional(text_Intro[4], 1);
		TextDrawSetShadow(text_Intro[4], 0);

		text_Intro[5] = TextDrawCreate(2.000000, 436.000000, "75 joueurs");
		TextDrawBackgroundColor(text_Intro[5], 255);
		TextDrawFont(text_Intro[5], 2);
		TextDrawLetterSize(text_Intro[5], 0.220000, 1.000000);
		TextDrawColor(text_Intro[5], -1);
		TextDrawSetOutline(text_Intro[5], 0);
		TextDrawSetProportional(text_Intro[5], 1);
		TextDrawSetShadow(text_Intro[5], 0);

		text_Intro[6] = TextDrawCreate(637.000000, 436.000000, SCRIPT_VERSION);
		TextDrawAlignment(text_Intro[6], 3);
		TextDrawBackgroundColor(text_Intro[6], 255);
		TextDrawFont(text_Intro[6], 2);
		TextDrawLetterSize(text_Intro[6], 0.220000, 1.000000);
		TextDrawColor(text_Intro[6], -1);
		TextDrawSetOutline(text_Intro[6], 0);
		TextDrawSetProportional(text_Intro[6], 1);
		TextDrawSetShadow(text_Intro[6], 0);
		
		
	    infoBox[0] = TextDrawCreate(523.000000, 427.000000, "_");
		TextDrawBackgroundColor(infoBox[0], 255);
		TextDrawFont(infoBox[0], 1);
		TextDrawLetterSize(infoBox[0], 0.500000, 1.599993);
		TextDrawColor(infoBox[0], -1);
		TextDrawSetOutline(infoBox[0], 0);
		TextDrawSetProportional(infoBox[0], 1);
		TextDrawSetShadow(infoBox[0], 1);
		TextDrawUseBox(infoBox[0], 1);
		TextDrawBoxColor(infoBox[0], -213);
		TextDrawTextSize(infoBox[0], 98.000000, 281.000000);

		infoBox[1] = TextDrawCreate(521.000000, 429.000000, "_");
		TextDrawBackgroundColor(infoBox[1], 255);
		TextDrawFont(infoBox[1], 1);
		TextDrawLetterSize(infoBox[1], 0.500000, 1.099999);
		TextDrawColor(infoBox[1], -1);
		TextDrawSetOutline(infoBox[1], 0);
		TextDrawSetProportional(infoBox[1], 1);
		TextDrawSetShadow(infoBox[1], 1);
		TextDrawUseBox(infoBox[1], 1);
		TextDrawBoxColor(infoBox[1], 65302);
		TextDrawTextSize(infoBox[1], 100.000000, 30.000000);
		
		//---------Afk systeme-------
		afk_Text1=TextDrawCreate(680.000000,-9.000000, "                                                                                            ");
		TextDrawBackgroundColor(afk_Text1,255);
		TextDrawFont(afk_Text1,1);
		TextDrawLetterSize(afk_Text1,0.500000,1.000000);
		TextDrawColor(afk_Text1,-1);
		TextDrawSetOutline(afk_Text1,0);
		TextDrawSetProportional(afk_Text1,1);
		TextDrawSetShadow(afk_Text1,1);
		TextDrawUseBox(afk_Text1,1);
		TextDrawBoxColor(afk_Text1,175);
		TextDrawTextSize(afk_Text1,-11.000000, 230.000000);

	    //---------Afk systeme-------
		afk_Text2=TextDrawCreate(243.000000,217.000000,"Faites ~y~/retour~w~ pour signaler votre retour.");
		TextDrawBackgroundColor(afk_Text2,255);
		TextDrawFont(afk_Text2,1);
		TextDrawLetterSize(afk_Text2,0.230000,1.099999);
		TextDrawColor(afk_Text2,-1);
		TextDrawSetOutline(afk_Text2,0);
		TextDrawSetProportional(afk_Text2,1);
		TextDrawSetShadow(afk_Text2,1);

		//-----Radar-----------------
		flash = TextDrawCreate(-20.000000,2.000000,"|");
		TextDrawUseBox(flash,1);
		TextDrawBoxColor(flash,0xffffff66);
		TextDrawTextSize(flash,660.000000,22.000000);
		TextDrawAlignment(flash,0);
		TextDrawBackgroundColor(flash,0x000000ff);
		TextDrawFont(flash,3);
		TextDrawLetterSize(flash,1.000000,52.200000);
		TextDrawColor(flash,0xffffffff);
		TextDrawSetOutline(flash,1);
		TextDrawSetProportional(flash,1);
		TextDrawSetShadow(flash,1);
    	//-----DM Text--------
		zone_Text = TextDrawCreate(86.000000, 321.000000, "Zone Anti DM");
		TextDrawAlignment(zone_Text, 2);
		TextDrawBackgroundColor(zone_Text, 255);
		TextDrawFont(zone_Text, 0);
		TextDrawLetterSize(zone_Text, 0.500000, 1.000000);
		TextDrawColor(zone_Text, -16776961);
		TextDrawSetOutline(zone_Text, 1);
		TextDrawSetProportional(zone_Text, 1);
		
		// Coffre
		Text_Safe = TextDrawCreate(660.000000, -7.000000, "_");
		TextDrawBackgroundColor(Text_Safe, 255);
		TextDrawFont(Text_Safe, 1);
		TextDrawLetterSize(Text_Safe, 0.500000, 53.099998);
		TextDrawColor(Text_Safe, -1);
		TextDrawSetOutline(Text_Safe, 0);
		TextDrawSetProportional(Text_Safe, 1);
		TextDrawSetShadow(Text_Safe, 1);
		TextDrawUseBox(Text_Safe, 1);
		TextDrawBoxColor(Text_Safe, 255);
		TextDrawTextSize(Text_Safe, -30.000000, 0.000000);
		
		// Tel
		phone_Designe1 = TextDrawCreate(145.000000, 159.000000, "_");
		TextDrawBackgroundColor(phone_Designe1, 255);
		TextDrawFont(phone_Designe1, 1);
		TextDrawLetterSize(phone_Designe1, 0.500000, 16.799999);
		TextDrawColor(phone_Designe1, -1);
		TextDrawSetOutline(phone_Designe1, 0);
		TextDrawSetProportional(phone_Designe1, 1);
		TextDrawSetShadow(phone_Designe1, 1);
		TextDrawUseBox(phone_Designe1, 1);
		TextDrawBoxColor(phone_Designe1, 255);
		TextDrawTextSize(phone_Designe1, 34.000000, 21.000000);

		phone_Designe2 = TextDrawCreate(32.000000, 118.000000, "(");
		TextDrawBackgroundColor(phone_Designe2, 255);
		TextDrawFont(phone_Designe2, 1);
		TextDrawLetterSize(phone_Designe2, 0.500000, 21.000000);
		TextDrawColor(phone_Designe2, 255);
		TextDrawSetOutline(phone_Designe2, 0);
		TextDrawSetProportional(phone_Designe2, 1);
		TextDrawSetShadow(phone_Designe2, 1);

		phone_Designe3 = TextDrawCreate(139.000000, 114.000000, ")");
		TextDrawBackgroundColor(phone_Designe3, 255);
		TextDrawFont(phone_Designe3, 1);
		TextDrawLetterSize(phone_Designe3, 0.500000, 21.000000);
		TextDrawColor(phone_Designe3, 255);
		TextDrawSetOutline(phone_Designe3, 0);
		TextDrawSetProportional(phone_Designe3, 1);
		TextDrawSetShadow(phone_Designe3, 1);

		phone_BackGround = TextDrawCreate(41.000000, 169.000000, "LD_DUAL:backgnd");
		TextDrawBackgroundColor(phone_BackGround, 255);
		TextDrawFont(phone_BackGround, 4);
		TextDrawLetterSize(phone_BackGround, 0.500000, 13.499998);
		TextDrawColor(phone_BackGround, -1);
		TextDrawSetOutline(phone_BackGround, 0);
		TextDrawSetProportional(phone_BackGround, 1);
		TextDrawSetShadow(phone_BackGround, 1);
		TextDrawUseBox(phone_BackGround, 1);
		TextDrawBoxColor(phone_BackGround, -1);
		TextDrawTextSize(phone_BackGround, 97.000000, 122.000000);

		phone_Speaker = TextDrawCreate(76.000000, 156.000000, "-");
		TextDrawBackgroundColor(phone_Speaker, 255);
		TextDrawFont(phone_Speaker, 1);
		TextDrawLetterSize(phone_Speaker, 2.289999, 1.200000);
		TextDrawColor(phone_Speaker, 1179010815);
		TextDrawSetOutline(phone_Speaker, 0);
		TextDrawSetProportional(phone_Speaker, 1);
		TextDrawSetShadow(phone_Speaker, 1);

		phone_Buton1 = TextDrawCreate(80.000000, 293.000000, "[");
		TextDrawBackgroundColor(phone_Buton1, 255);
		TextDrawFont(phone_Buton1, 1);
		TextDrawLetterSize(phone_Buton1, 0.500000, 1.700000);
		TextDrawColor(phone_Buton1, -1);
		TextDrawSetOutline(phone_Buton1, 0);
		TextDrawSetProportional(phone_Buton1, 1);
		TextDrawSetShadow(phone_Buton1, 1);

		phone_Buton2 = TextDrawCreate(91.000000, 293.000000, "]");
		TextDrawBackgroundColor(phone_Buton2, 255);
		TextDrawFont(phone_Buton2, 1);
		TextDrawLetterSize(phone_Buton2, 0.459999, 1.700000);
		TextDrawColor(phone_Buton2, -1);
		TextDrawSetOutline(phone_Buton2, 0);
		TextDrawSetProportional(phone_Buton2, 1);
		TextDrawSetShadow(phone_Buton2, 1);
		
		phone_Buton3 = TextDrawCreate(90.000000, 276.000000, ".");
		TextDrawAlignment(phone_Buton3, 2);
		TextDrawBackgroundColor(phone_Buton3, 255);
		TextDrawFont(phone_Buton3, 1);
		TextDrawLetterSize(phone_Buton3, 1.250000, 3.899998);
		TextDrawColor(phone_Buton3, -1);
		TextDrawSetOutline(phone_Buton3, 0);
		TextDrawSetProportional(phone_Buton3, 1);
		TextDrawSetShadow(phone_Buton3, 1);
		TextDrawTextSize(phone_Buton3, 30.000000, 10.000000);
		TextDrawSetSelectable(phone_Buton3,1);

        phone_Designe4 = TextDrawCreate(140.000000, 170.000000, "_");
		TextDrawBackgroundColor(phone_Designe4, 255);
		TextDrawFont(phone_Designe4, 1);
		TextDrawLetterSize(phone_Designe4, 0.500000, 0.499999);
		TextDrawColor(phone_Designe4, -1);
		TextDrawSetOutline(phone_Designe4, 0);
		TextDrawSetProportional(phone_Designe4, 1);
		TextDrawSetShadow(phone_Designe4, 1);
		TextDrawUseBox(phone_Designe4, 1);
		TextDrawBoxColor(phone_Designe4, -2105376001);
		TextDrawTextSize(phone_Designe4, 40.000000, 0.000000);

		phone_Designe5 = TextDrawCreate(140.000000, 178.000000, "_");
		TextDrawBackgroundColor(phone_Designe5, 255);
		TextDrawFont(phone_Designe5, 1);
		TextDrawLetterSize(phone_Designe5, 0.500000, -0.300000);
		TextDrawColor(phone_Designe5, -1);
		TextDrawSetOutline(phone_Designe5, 0);
		TextDrawSetProportional(phone_Designe5, 1);
		TextDrawSetShadow(phone_Designe5, 1);
		TextDrawUseBox(phone_Designe5, 1);
		TextDrawBoxColor(phone_Designe5, 1347440895);
		TextDrawTextSize(phone_Designe5, 40.000000, 0.000000);
		
		phone_Designe6 = TextDrawCreate(41.000000, 169.000000, "hud:radar_runway");
		TextDrawBackgroundColor(phone_Designe6, 255);
		TextDrawFont(phone_Designe6, 4);
		TextDrawLetterSize(phone_Designe6, 0.500000, 1.000000);
		TextDrawColor(phone_Designe6, -16776961);
		TextDrawSetOutline(phone_Designe6, 0);
		TextDrawSetProportional(phone_Designe6, 1);
		TextDrawSetShadow(phone_Designe6, 1);
		TextDrawUseBox(phone_Designe6, 1);
		TextDrawBoxColor(phone_Designe6, 255);
		TextDrawTextSize(phone_Designe6, 10.000000, 6.000000);
		
		phone_Menu = TextDrawCreate(90.000000, 281.000000, "menu");
		TextDrawAlignment(phone_Menu, 2);
		TextDrawBackgroundColor(phone_Menu, 255);
		TextDrawFont(phone_Menu, 1);
		TextDrawLetterSize(phone_Menu, 0.500000, 1.000000);
		TextDrawColor(phone_Menu, -1);
		TextDrawSetOutline(phone_Menu, 0);
		TextDrawSetProportional(phone_Menu, 1);
		TextDrawSetShadow(phone_Menu, 0);
		TextDrawTextSize(phone_Menu, 10.000000, 40.000000);
		TextDrawSetSelectable(phone_Menu,1);
		
		phone_Call = TextDrawCreate(59.000000, 298.000000, "\"");
		TextDrawAlignment(phone_Call, 2);
		TextDrawBackgroundColor(phone_Call, 255);
		TextDrawFont(phone_Call, 1);
		TextDrawLetterSize(phone_Call, 1.000000, 2.000000);
		TextDrawColor(phone_Call, 16711935);
		TextDrawSetOutline(phone_Call, 0);
		TextDrawSetProportional(phone_Call, 1);
		TextDrawSetShadow(phone_Call, 0);
		TextDrawTextSize(phone_Call, 10.000000, 14.000000);
		TextDrawSetSelectable(phone_Call,1);
		
		phone_Hang = TextDrawCreate(119.000000, 298.000000, "\"");
		TextDrawAlignment(phone_Hang, 2);
		TextDrawBackgroundColor(phone_Hang, 255);
		TextDrawFont(phone_Hang, 1);
		TextDrawLetterSize(phone_Hang, 1.000000, 2.000000);
		TextDrawColor(phone_Hang, -16776961);
		TextDrawSetOutline(phone_Hang, 0);
		TextDrawSetProportional(phone_Hang, 1);
		TextDrawSetShadow(phone_Hang, 0);
		TextDrawTextSize(phone_Hang, 10.000000, 14.000000);
		TextDrawSetSelectable(phone_Hang,1);

        phone_MenuClavier = TextDrawCreate(66.000000, 183.000000, "Clavier");
		TextDrawAlignment(phone_MenuClavier, 2);
		TextDrawBackgroundColor(phone_MenuClavier, 255);
		TextDrawFont(phone_MenuClavier, 1);
		TextDrawLetterSize(phone_MenuClavier, 0.300000, 1.400000);
		TextDrawColor(phone_MenuClavier, -1);
		TextDrawSetOutline(phone_MenuClavier, 0);
		TextDrawSetProportional(phone_MenuClavier, 1);
		TextDrawSetShadow(phone_MenuClavier, 0);
		TextDrawUseBox(phone_MenuClavier, 1);
		TextDrawBoxColor(phone_MenuClavier, 255);
		TextDrawTextSize(phone_MenuClavier, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuClavier,1);

		phone_MenuSMS = TextDrawCreate(113.000000, 183.000000, "SMS");
		TextDrawAlignment(phone_MenuSMS, 2);
		TextDrawBackgroundColor(phone_MenuSMS, 255);
		TextDrawFont(phone_MenuSMS, 1);
		TextDrawLetterSize(phone_MenuSMS, 0.300000, 1.400000);
		TextDrawColor(phone_MenuSMS, -1);
		TextDrawSetOutline(phone_MenuSMS, 0);
		TextDrawSetProportional(phone_MenuSMS, 1);
		TextDrawSetShadow(phone_MenuSMS, 0);
		TextDrawUseBox(phone_MenuSMS, 1);
		TextDrawBoxColor(phone_MenuSMS, 255);
		TextDrawTextSize(phone_MenuSMS, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuSMS,1);

		phone_MenuMP3 = TextDrawCreate(113.000000, 205.000000, "MP3");
		TextDrawAlignment(phone_MenuMP3, 2);
		TextDrawBackgroundColor(phone_MenuMP3, 255);
		TextDrawFont(phone_MenuMP3, 1);
		TextDrawLetterSize(phone_MenuMP3, 0.300000, 1.300000);
		TextDrawColor(phone_MenuMP3, -1);
		TextDrawSetOutline(phone_MenuMP3, 0);
		TextDrawSetProportional(phone_MenuMP3, 1);
		TextDrawSetShadow(phone_MenuMP3, 0);
		TextDrawUseBox(phone_MenuMP3, 1);
		TextDrawBoxColor(phone_MenuMP3, 255);
		TextDrawTextSize(phone_MenuMP3, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuMP3,1);

		phone_MenuRadio = TextDrawCreate(66.000000, 205.000000, "Radio");
		TextDrawAlignment(phone_MenuRadio, 2);
		TextDrawBackgroundColor(phone_MenuRadio, 255);
		TextDrawFont(phone_MenuRadio, 1);
		TextDrawLetterSize(phone_MenuRadio, 0.300000, 1.300000);
		TextDrawColor(phone_MenuRadio, -1);
		TextDrawSetOutline(phone_MenuRadio, 0);
		TextDrawSetProportional(phone_MenuRadio, 1);
		TextDrawSetShadow(phone_MenuRadio, 0);
		TextDrawUseBox(phone_MenuRadio, 1);
		TextDrawBoxColor(phone_MenuRadio, 255);
		TextDrawTextSize(phone_MenuRadio, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuRadio,1);

		phone_MenuMap = TextDrawCreate(66.000000, 226.000000, "Carte");
		TextDrawAlignment(phone_MenuMap, 2);
		TextDrawBackgroundColor(phone_MenuMap, 255);
		TextDrawFont(phone_MenuMap, 1);
		TextDrawLetterSize(phone_MenuMap, 0.300000, 1.300000);
		TextDrawColor(phone_MenuMap, -1);
		TextDrawSetOutline(phone_MenuMap, 0);
		TextDrawSetProportional(phone_MenuMap, 1);
		TextDrawSetShadow(phone_MenuMap, 0);
		TextDrawUseBox(phone_MenuMap, 1);
		TextDrawBoxColor(phone_MenuMap, 255);
		TextDrawTextSize(phone_MenuMap, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuMap,1);
		
		phone_MenuConso = TextDrawCreate(113.000000, 226.000000, "Conso");
		TextDrawAlignment(phone_MenuConso, 2);
		TextDrawBackgroundColor(phone_MenuConso, 255);
		TextDrawFont(phone_MenuConso, 1);
		TextDrawLetterSize(phone_MenuConso, 0.300000, 1.300000);
		TextDrawColor(phone_MenuConso, -1);
		TextDrawSetOutline(phone_MenuConso, 0);
		TextDrawSetProportional(phone_MenuConso, 1);
		TextDrawSetShadow(phone_MenuConso, 0);
		TextDrawUseBox(phone_MenuConso, 1);
		TextDrawBoxColor(phone_MenuConso, 255);
		TextDrawTextSize(phone_MenuConso, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuConso,1);

		phone_MenuRep = TextDrawCreate(66.000000, 249.000000, "Repertoire");
		TextDrawAlignment(phone_MenuRep, 2);
		TextDrawBackgroundColor(phone_MenuRep, 255);
		TextDrawFont(phone_MenuRep, 1);
		TextDrawLetterSize(phone_MenuRep, 0.250000, 1.200000);
		TextDrawColor(phone_MenuRep, -1);
		TextDrawSetOutline(phone_MenuRep, 0);
		TextDrawSetProportional(phone_MenuRep, 1);
		TextDrawSetShadow(phone_MenuRep, 0);
		TextDrawUseBox(phone_MenuRep, 1);
		TextDrawBoxColor(phone_MenuRep, 255);
		TextDrawTextSize(phone_MenuRep, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuRep,1);

		phone_MenuMessagerie = TextDrawCreate(113.000000, 249.000000, "Messagerie");
		TextDrawAlignment(phone_MenuMessagerie, 2);
		TextDrawBackgroundColor(phone_MenuMessagerie, 255);
		TextDrawFont(phone_MenuMessagerie, 1);
		TextDrawLetterSize(phone_MenuMessagerie, 0.250000, 1.200000);
		TextDrawColor(phone_MenuMessagerie, -1);
		TextDrawSetOutline(phone_MenuMessagerie, 0);
		TextDrawSetProportional(phone_MenuMessagerie, 1);
		TextDrawSetShadow(phone_MenuMessagerie, 0);
		TextDrawUseBox(phone_MenuMessagerie, 1);
		TextDrawBoxColor(phone_MenuMessagerie, 255);
		TextDrawTextSize(phone_MenuMessagerie, 20.000000, 50.000000);
		TextDrawSetSelectable(phone_MenuMessagerie,1);
		
		phone_SMSReceived = TextDrawCreate(90.000000, 199.000000, "Messages recus");
		TextDrawAlignment(phone_SMSReceived, 2);
		TextDrawBackgroundColor(phone_SMSReceived, 255);
		TextDrawFont(phone_SMSReceived, 1);
		TextDrawLetterSize(phone_SMSReceived, 0.300000, 1.400000);
		TextDrawColor(phone_SMSReceived, -1);
		TextDrawSetOutline(phone_SMSReceived, 0);
		TextDrawSetProportional(phone_SMSReceived, 1);
		TextDrawSetShadow(phone_SMSReceived, 1);
		TextDrawUseBox(phone_SMSReceived, 1);
		TextDrawBoxColor(phone_SMSReceived, 255);
		TextDrawTextSize(phone_SMSReceived, 20.000000, 90.000000);
		TextDrawSetSelectable(phone_SMSReceived,1);

		phone_SMSSent = TextDrawCreate(90.000000, 219.000000, "Messages envoyes");
		TextDrawAlignment(phone_SMSSent, 2);
		TextDrawBackgroundColor(phone_SMSSent, 255);
		TextDrawFont(phone_SMSSent, 1);
		TextDrawLetterSize(phone_SMSSent, 0.300000, 1.400000);
		TextDrawColor(phone_SMSSent, -1);
		TextDrawSetOutline(phone_SMSSent, 0);
		TextDrawSetProportional(phone_SMSSent, 1);
		TextDrawSetShadow(phone_SMSSent, 1);
		TextDrawUseBox(phone_SMSSent, 1);
		TextDrawBoxColor(phone_SMSSent, 255);
		TextDrawTextSize(phone_SMSSent, 20.000000, 90.000000);
		TextDrawSetSelectable(phone_SMSSent,1);
		
		phone_CreateContact = TextDrawCreate(90.000000, 270.000000, "Creer contact");
		TextDrawAlignment(phone_CreateContact, 2);
		TextDrawBackgroundColor(phone_CreateContact, 255);
		TextDrawFont(phone_CreateContact, 1);
		TextDrawLetterSize(phone_CreateContact, 0.300000, 1.000000);
		TextDrawColor(phone_CreateContact, -1);
		TextDrawSetOutline(phone_CreateContact, 0);
		TextDrawSetProportional(phone_CreateContact, 1);
		TextDrawSetShadow(phone_CreateContact, 0);
		TextDrawTextSize(phone_CreateContact, 10.000000, 50.000000);
		TextDrawSetSelectable(phone_CreateContact,1);
		
		phone_CreateContactBack = TextDrawCreate(137.000000, 192.000000, "_");
		TextDrawBackgroundColor(phone_CreateContactBack, 255);
		TextDrawFont(phone_CreateContactBack, 1);
		TextDrawLetterSize(phone_CreateContactBack, 0.500000, 9.699997);
		TextDrawColor(phone_CreateContactBack, -1);
		TextDrawSetOutline(phone_CreateContactBack, 0);
		TextDrawSetProportional(phone_CreateContactBack, 1);
		TextDrawSetShadow(phone_CreateContactBack, 1);
		TextDrawUseBox(phone_CreateContactBack, 1);
		TextDrawBoxColor(phone_CreateContactBack, -1600085903);
		TextDrawTextSize(phone_CreateContactBack, 42.000000, 0.000000);

        phone_Num[0] = TextDrawCreate(63.000000, 205.000000, "1");
		TextDrawAlignment(phone_Num[0], 2);
		TextDrawBackgroundColor(phone_Num[0], 255);
		TextDrawFont(phone_Num[0], 2);
		TextDrawLetterSize(phone_Num[0], 0.539999, 1.900000);
		TextDrawColor(phone_Num[0], -1);
		TextDrawSetOutline(phone_Num[0], 0);
		TextDrawSetProportional(phone_Num[0], 1);
		TextDrawSetShadow(phone_Num[0], 0);
		TextDrawUseBox(phone_Num[0], 1);
		TextDrawBoxColor(phone_Num[0], 255);
		TextDrawTextSize(phone_Num[0], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[0],1);

		phone_Num[1] = TextDrawCreate(90.000000, 205.000000, "2");
		TextDrawAlignment(phone_Num[1], 2);
		TextDrawBackgroundColor(phone_Num[1], 255);
		TextDrawFont(phone_Num[1], 2);
		TextDrawLetterSize(phone_Num[1], 0.539999, 1.900000);
		TextDrawColor(phone_Num[1], -1);
		TextDrawSetOutline(phone_Num[1], 0);
		TextDrawSetProportional(phone_Num[1], 1);
		TextDrawSetShadow(phone_Num[1], 0);
		TextDrawUseBox(phone_Num[1], 1);
		TextDrawBoxColor(phone_Num[1], 255);
		TextDrawTextSize(phone_Num[1], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[1],1);

		phone_Num[2] = TextDrawCreate(117.000000, 205.000000, "3");
		TextDrawAlignment(phone_Num[2], 2);
		TextDrawBackgroundColor(phone_Num[2], 255);
		TextDrawFont(phone_Num[2], 2);
		TextDrawLetterSize(phone_Num[2], 0.539999, 1.900000);
		TextDrawColor(phone_Num[2], -1);
		TextDrawSetOutline(phone_Num[2], 0);
		TextDrawSetProportional(phone_Num[2], 1);
		TextDrawSetShadow(phone_Num[2], 0);
		TextDrawUseBox(phone_Num[2], 1);
		TextDrawBoxColor(phone_Num[2], 255);
		TextDrawTextSize(phone_Num[2], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[2],1);
		
		phone_Num[3] = TextDrawCreate(63.000000, 226.000000, "4");
		TextDrawAlignment(phone_Num[3], 2);
		TextDrawBackgroundColor(phone_Num[3], 255);
		TextDrawFont(phone_Num[3], 2);
		TextDrawLetterSize(phone_Num[3], 0.539999, 1.900000);
		TextDrawColor(phone_Num[3], -1);
		TextDrawSetOutline(phone_Num[3], 0);
		TextDrawSetProportional(phone_Num[3], 1);
		TextDrawSetShadow(phone_Num[3], 0);
		TextDrawUseBox(phone_Num[3], 1);
		TextDrawBoxColor(phone_Num[3], 255);
		TextDrawTextSize(phone_Num[3], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[3],1);

		phone_Num[4] = TextDrawCreate(90.000000, 226.000000, "5");
		TextDrawAlignment(phone_Num[4], 2);
		TextDrawBackgroundColor(phone_Num[4], 255);
		TextDrawFont(phone_Num[4], 2);
		TextDrawLetterSize(phone_Num[4], 0.539999, 1.900000);
		TextDrawColor(phone_Num[4], -1);
		TextDrawSetOutline(phone_Num[4], 0);
		TextDrawSetProportional(phone_Num[4], 1);
		TextDrawSetShadow(phone_Num[4], 0);
		TextDrawUseBox(phone_Num[4], 1);
		TextDrawBoxColor(phone_Num[4], 255);
		TextDrawTextSize(phone_Num[4], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[4],1);

		phone_Num[5] = TextDrawCreate(117.000000, 226.000000, "6");
		TextDrawAlignment(phone_Num[5], 2);
		TextDrawBackgroundColor(phone_Num[5], 255);
		TextDrawFont(phone_Num[5], 2);
		TextDrawLetterSize(phone_Num[5], 0.539999, 1.900000);
		TextDrawColor(phone_Num[5], -1);
		TextDrawSetOutline(phone_Num[5], 0);
		TextDrawSetProportional(phone_Num[5], 1);
		TextDrawSetShadow(phone_Num[5], 0);
		TextDrawUseBox(phone_Num[5], 1);
		TextDrawBoxColor(phone_Num[5], 255);
		TextDrawTextSize(phone_Num[5], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[5],1);

		phone_Num[6] = TextDrawCreate(63.000000, 247.000000, "7");
		TextDrawAlignment(phone_Num[6], 2);
		TextDrawBackgroundColor(phone_Num[6], 255);
		TextDrawFont(phone_Num[6], 2);
		TextDrawLetterSize(phone_Num[6], 0.539999, 1.900000);
		TextDrawColor(phone_Num[6], -1);
		TextDrawSetOutline(phone_Num[6], 0);
		TextDrawSetProportional(phone_Num[6], 1);
		TextDrawSetShadow(phone_Num[6], 0);
		TextDrawUseBox(phone_Num[6], 1);
		TextDrawBoxColor(phone_Num[6], 255);
		TextDrawTextSize(phone_Num[6], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[6],1);
		
		phone_Num[7] = TextDrawCreate(90.000000, 247.000000, "8");
		TextDrawAlignment(phone_Num[7], 2);
		TextDrawBackgroundColor(phone_Num[7], 255);
		TextDrawFont(phone_Num[7], 2);
		TextDrawLetterSize(phone_Num[7], 0.539999, 1.900000);
		TextDrawColor(phone_Num[7], -1);
		TextDrawSetOutline(phone_Num[7], 0);
		TextDrawSetProportional(phone_Num[7], 1);
		TextDrawSetShadow(phone_Num[7], 0);
		TextDrawUseBox(phone_Num[7], 1);
		TextDrawBoxColor(phone_Num[7], 255);
		TextDrawTextSize(phone_Num[7], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[7],1);
		
		phone_Num[8] = TextDrawCreate(117.000000, 247.000000, "9");
		TextDrawAlignment(phone_Num[8], 2);
		TextDrawBackgroundColor(phone_Num[8], 255);
		TextDrawFont(phone_Num[8], 2);
		TextDrawLetterSize(phone_Num[8], 0.539999, 1.900000);
		TextDrawColor(phone_Num[8], -1);
		TextDrawSetOutline(phone_Num[8], 0);
		TextDrawSetProportional(phone_Num[8], 1);
		TextDrawSetShadow(phone_Num[8], 0);
		TextDrawUseBox(phone_Num[8], 1);
		TextDrawBoxColor(phone_Num[8], 255);
		TextDrawTextSize(phone_Num[8], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[8],1);

		phone_Num[9] = TextDrawCreate(63.000000, 268.000000, "SMS");
		TextDrawAlignment(phone_Num[9], 2);
		TextDrawBackgroundColor(phone_Num[9], 255);
		TextDrawFont(phone_Num[9], 2);
		TextDrawLetterSize(phone_Num[9], 0.239999, 1.900000);
		TextDrawColor(phone_Num[9], -6291201);
		TextDrawSetOutline(phone_Num[9], 0);
		TextDrawSetProportional(phone_Num[9], 1);
		TextDrawSetShadow(phone_Num[9], 0);
		TextDrawUseBox(phone_Num[9], 1);
		TextDrawBoxColor(phone_Num[9], 255);
		TextDrawTextSize(phone_Num[9], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[9],1);

		phone_Num[10] = TextDrawCreate(90.000000, 268.000000, "0");
		TextDrawAlignment(phone_Num[10], 2);
		TextDrawBackgroundColor(phone_Num[10], 255);
		TextDrawFont(phone_Num[10], 2);
		TextDrawLetterSize(phone_Num[10], 0.539999, 1.900000);
		TextDrawColor(phone_Num[10], -1);
		TextDrawSetOutline(phone_Num[10], 0);
		TextDrawSetProportional(phone_Num[10], 1);
		TextDrawSetShadow(phone_Num[10], 0);
		TextDrawUseBox(phone_Num[10], 1);
		TextDrawBoxColor(phone_Num[10], 255);
		TextDrawTextSize(phone_Num[10], 20.000000, 22.000000);
		TextDrawSetSelectable(phone_Num[10],1);

		phone_Num[11] = TextDrawCreate(117.000000, 268.000000, "_");
		TextDrawAlignment(phone_Num[11], 2);
		TextDrawBackgroundColor(phone_Num[11], 255);
		TextDrawFont(phone_Num[11], 2);
		TextDrawLetterSize(phone_Num[11], 0.539999, 1.900000);
		TextDrawColor(phone_Num[11], -1);
		TextDrawSetOutline(phone_Num[11], 0);
		TextDrawSetProportional(phone_Num[11], 1);
		TextDrawSetShadow(phone_Num[11], 0);
		TextDrawUseBox(phone_Num[11], 1);
		TextDrawBoxColor(phone_Num[11], 255);
		TextDrawTextSize(phone_Num[11], 0.000000, 22.000000);

		phone_Num[12] = TextDrawCreate(108.000000, 270.000000, "LD_BEAT:left");
		TextDrawAlignment(phone_Num[12], 2);
		TextDrawBackgroundColor(phone_Num[12], 255);
		TextDrawFont(phone_Num[12], 4);
		TextDrawLetterSize(phone_Num[12], 0.539999, 1.900000);
		TextDrawColor(phone_Num[12], -1);
		TextDrawSetOutline(phone_Num[12], 0);
		TextDrawSetProportional(phone_Num[12], 1);
		TextDrawSetShadow(phone_Num[12], 0);
		TextDrawUseBox(phone_Num[12], 1);
		TextDrawBoxColor(phone_Num[12], 255);
		TextDrawTextSize(phone_Num[12], 18.000000, 15.000000);
		TextDrawSetSelectable(phone_Num[12],1);
		
		phone_CallFrom = TextDrawCreate(62.000000, 202.000000, "Prevenance");
		TextDrawBackgroundColor(phone_CallFrom, 255);
		TextDrawFont(phone_CallFrom, 1);
		TextDrawLetterSize(phone_CallFrom, 0.300000, 1.000000);
		TextDrawColor(phone_CallFrom, -1);
		TextDrawSetOutline(phone_CallFrom, 0);
		TextDrawSetProportional(phone_CallFrom, 1);
		TextDrawSetShadow(phone_CallFrom, 0);
		
		phone_Radio[0] = TextDrawCreate(90.000000, 191.000000, "Fun Radio");
		TextDrawAlignment(phone_Radio[0], 2);
		TextDrawBackgroundColor(phone_Radio[0], 255);
		TextDrawFont(phone_Radio[0], 1);
		TextDrawLetterSize(phone_Radio[0], 0.330000, 1.000000);
		TextDrawColor(phone_Radio[0], -1);
		TextDrawSetOutline(phone_Radio[0], 0);
		TextDrawSetProportional(phone_Radio[0], 1);
		TextDrawSetShadow(phone_Radio[0], 0);
		TextDrawUseBox(phone_Radio[0], 1);
		TextDrawBoxColor(phone_Radio[0], -2105376001);
		TextDrawTextSize(phone_Radio[0], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_Radio[0],1);

		phone_Radio[1] = TextDrawCreate(90.000000, 205.000000, "SkyRock");
		TextDrawAlignment(phone_Radio[1], 2);
		TextDrawBackgroundColor(phone_Radio[1], 255);
		TextDrawFont(phone_Radio[1], 1);
		TextDrawLetterSize(phone_Radio[1], 0.330000, 1.000000);
		TextDrawColor(phone_Radio[1], -1);
		TextDrawSetOutline(phone_Radio[1], 0);
		TextDrawSetProportional(phone_Radio[1], 1);
		TextDrawSetShadow(phone_Radio[1], 0);
		TextDrawUseBox(phone_Radio[1], 1);
		TextDrawBoxColor(phone_Radio[1], -2105376001);
		TextDrawTextSize(phone_Radio[1], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_Radio[1],1);

		phone_Radio[2] = TextDrawCreate(90.000000, 219.000000, "NRJ");
		TextDrawAlignment(phone_Radio[2], 2);
		TextDrawBackgroundColor(phone_Radio[2], 255);
		TextDrawFont(phone_Radio[2], 1);
		TextDrawLetterSize(phone_Radio[2], 0.330000, 1.000000);
		TextDrawColor(phone_Radio[2], -1);
		TextDrawSetOutline(phone_Radio[2], 0);
		TextDrawSetProportional(phone_Radio[2], 1);
		TextDrawSetShadow(phone_Radio[2], 0);
		TextDrawUseBox(phone_Radio[2], 1);
		TextDrawBoxColor(phone_Radio[2], -2105376001);
		TextDrawTextSize(phone_Radio[2], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_Radio[2],1);

		phone_Radio[3] = TextDrawCreate(90.000000, 233.000000, "PlusFM");
		TextDrawAlignment(phone_Radio[3], 2);
		TextDrawBackgroundColor(phone_Radio[3], 255);
		TextDrawFont(phone_Radio[3], 1);
		TextDrawLetterSize(phone_Radio[3], 0.330000, 1.000000);
		TextDrawColor(phone_Radio[3], -1);
		TextDrawSetOutline(phone_Radio[3], 0);
		TextDrawSetProportional(phone_Radio[3], 1);
		TextDrawSetShadow(phone_Radio[3], 0);
		TextDrawUseBox(phone_Radio[3], 1);
		TextDrawBoxColor(phone_Radio[3], -2105376001);
		TextDrawTextSize(phone_Radio[3], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_Radio[3],1);

		phone_Radio[4] = TextDrawCreate(90.000000, 247.000000, "Vibrassion");
		TextDrawAlignment(phone_Radio[4], 2);
		TextDrawBackgroundColor(phone_Radio[4], 255);
		TextDrawFont(phone_Radio[4], 1);
		TextDrawLetterSize(phone_Radio[4], 0.330000, 1.000000);
		TextDrawColor(phone_Radio[4], -1);
		TextDrawSetOutline(phone_Radio[4], 0);
		TextDrawSetProportional(phone_Radio[4], 1);
		TextDrawSetShadow(phone_Radio[4], 0);
		TextDrawUseBox(phone_Radio[4], 1);
		TextDrawBoxColor(phone_Radio[4], -2105376001);
		TextDrawTextSize(phone_Radio[4], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_Radio[4],1);

		phone_Radio[5] = TextDrawCreate(90.000000, 261.000000, "Partenaire");
		TextDrawAlignment(phone_Radio[5], 2);
		TextDrawBackgroundColor(phone_Radio[5], 255);
		TextDrawFont(phone_Radio[5], 1);
		TextDrawLetterSize(phone_Radio[5], 0.330000, 1.000000);
		TextDrawColor(phone_Radio[5], -1);
		TextDrawSetOutline(phone_Radio[5], 0);
		TextDrawSetProportional(phone_Radio[5], 1);
		TextDrawSetShadow(phone_Radio[5], 0);
		TextDrawUseBox(phone_Radio[5], 1);
		TextDrawBoxColor(phone_Radio[5], -2105376001);
		TextDrawTextSize(phone_Radio[5], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_Radio[5],1);

		phone_Radio[6] = TextDrawCreate(90.000000, 275.000000, "Arreter");
		TextDrawAlignment(phone_Radio[6], 2);
		TextDrawBackgroundColor(phone_Radio[6], 255);
		TextDrawFont(phone_Radio[6], 1);
		TextDrawLetterSize(phone_Radio[6], 0.330000, 1.000000);
		TextDrawColor(phone_Radio[6], -1);
		TextDrawSetOutline(phone_Radio[6], 0);
		TextDrawSetProportional(phone_Radio[6], 1);
		TextDrawSetShadow(phone_Radio[6], 0);
		TextDrawUseBox(phone_Radio[6], 1);
		TextDrawBoxColor(phone_Radio[6], -2105376001);
		TextDrawTextSize(phone_Radio[6], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_Radio[6],1);
		
		phone_Map = TextDrawCreate(41.000000, 190.000000, "samaps:gtasamapbit4");
		TextDrawBackgroundColor(phone_Map, 255);
		TextDrawFont(phone_Map, 4);
		TextDrawLetterSize(phone_Map, 0.500000, 1.000000);
		TextDrawColor(phone_Map, -1);
		TextDrawSetOutline(phone_Map, 0);
		TextDrawSetProportional(phone_Map, 1);
		TextDrawSetShadow(phone_Map, 1);
		TextDrawUseBox(phone_Map, 1);
		TextDrawBoxColor(phone_Map, 255);
		TextDrawTextSize(phone_Map, 97.000000, 101.000000);
		
		phone_MP3[0] = TextDrawCreate(90.000000, 191.000000, "Lien Stream");
		TextDrawAlignment(phone_MP3[0], 2);
		TextDrawBackgroundColor(phone_MP3[0], 255);
		TextDrawFont(phone_MP3[0], 1);
		TextDrawLetterSize(phone_MP3[0], 0.330000, 1.000000);
		TextDrawColor(phone_MP3[0], -1);
		TextDrawSetOutline(phone_MP3[0], 0);
		TextDrawSetProportional(phone_MP3[0], 1);
		TextDrawSetShadow(phone_MP3[0], 0);
		TextDrawUseBox(phone_MP3[0], 1);
		TextDrawBoxColor(phone_MP3[0], -2105376001);
		TextDrawTextSize(phone_MP3[0], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_MP3[0],1);

		phone_MP3[1] = TextDrawCreate(90.000000, 205.000000, "Arreter");
		TextDrawAlignment(phone_MP3[1], 2);
		TextDrawBackgroundColor(phone_MP3[1], 255);
		TextDrawFont(phone_MP3[1], 1);
		TextDrawLetterSize(phone_MP3[1], 0.330000, 1.000000);
		TextDrawColor(phone_MP3[1], -1);
		TextDrawSetOutline(phone_MP3[1], 0);
		TextDrawSetProportional(phone_MP3[1], 1);
		TextDrawSetShadow(phone_MP3[1], 0);
		TextDrawUseBox(phone_MP3[1], 1);
		TextDrawBoxColor(phone_MP3[1], -2105376001);
		TextDrawTextSize(phone_MP3[1], 10.000000, 75.000000);
		TextDrawSetSelectable(phone_MP3[1],1);
		
		phone_BackGroundSMS = TextDrawCreate(136.000000, 192.000000, "_");
		TextDrawBackgroundColor(phone_BackGroundSMS, 255);
		TextDrawFont(phone_BackGroundSMS, 1);
		TextDrawLetterSize(phone_BackGroundSMS, 0.500000, 10.799999);
		TextDrawColor(phone_BackGroundSMS, -1);
		TextDrawSetOutline(phone_BackGroundSMS, 0);
		TextDrawSetProportional(phone_BackGroundSMS, 1);
		TextDrawSetShadow(phone_BackGroundSMS, 1);
		TextDrawUseBox(phone_BackGroundSMS, 1);
		TextDrawBoxColor(phone_BackGroundSMS, -1600085761);
		TextDrawTextSize(phone_BackGroundSMS, 43.000000, 0.000000);

		LoadBankText();
		pay_CreateTexts();
		
		//----- Speedo

		// Boxe
		speedo_Box[0] = TextDrawCreate(613.000000, 342.000000, "_");
		TextDrawBackgroundColor(speedo_Box[0], 255);
		TextDrawFont(speedo_Box[0], 1);
		TextDrawLetterSize(speedo_Box[0], 0.500000, 8.899999);
		TextDrawColor(speedo_Box[0], -1);
		TextDrawSetOutline(speedo_Box[0], 0);
		TextDrawSetProportional(speedo_Box[0], 1);
		TextDrawSetShadow(speedo_Box[0], 1);
		TextDrawUseBox(speedo_Box[0], 1);
		TextDrawBoxColor(speedo_Box[0], -213);
		TextDrawTextSize(speedo_Box[0], 493.000000, 0.000000);

		speedo_Box[1] = TextDrawCreate(611.000000, 344.000000, "_");
		TextDrawBackgroundColor(speedo_Box[1], 255);
		TextDrawFont(speedo_Box[1], 1);
		TextDrawLetterSize(speedo_Box[1], 0.500000, 8.399996);
		TextDrawColor(speedo_Box[1], -1);
		TextDrawSetOutline(speedo_Box[1], 0);
		TextDrawSetProportional(speedo_Box[1], 1);
		TextDrawSetShadow(speedo_Box[1], 1);
		TextDrawUseBox(speedo_Box[1], 1);
		TextDrawBoxColor(speedo_Box[1], 65302);
		TextDrawTextSize(speedo_Box[1], 495.000000, 0.000000);
		
		speedo_Gas = TextDrawCreate(588.000000, 342.000000, "Essence");
		TextDrawBackgroundColor(speedo_Gas, 255);
		TextDrawFont(speedo_Gas, 2);
		TextDrawLetterSize(speedo_Gas, 0.110000, 0.899999);
		TextDrawColor(speedo_Gas, -1);
		TextDrawSetOutline(speedo_Gas, 0);
		TextDrawSetProportional(speedo_Gas, 1);
		TextDrawSetShadow(speedo_Gas, 0);
		
		speedo_Motor = TextDrawCreate(533.000000, 405.000000, "Moteur");
		TextDrawAlignment(speedo_Motor, 2);
		TextDrawBackgroundColor(speedo_Motor, 255);
		TextDrawFont(speedo_Motor, 2);
		TextDrawLetterSize(speedo_Motor, 0.170000, 0.899999);
		TextDrawColor(speedo_Motor, -1);
		TextDrawSetOutline(speedo_Motor, 0);
		TextDrawSetProportional(speedo_Motor, 1);
		TextDrawSetShadow(speedo_Motor, 0);
		
		speedo_Light = TextDrawCreate(572.000000, 405.000000, "Phares");
		TextDrawAlignment(speedo_Light, 2);
		TextDrawBackgroundColor(speedo_Light, 255);
		TextDrawFont(speedo_Light, 2);
		TextDrawLetterSize(speedo_Light, 0.170000, 0.899999);
		TextDrawColor(speedo_Light, -1);
		TextDrawSetOutline(speedo_Light, 0);
		TextDrawSetProportional(speedo_Light, 1);
		TextDrawSetShadow(speedo_Light, 0);
		
		speedo_BarGas[0] = TextDrawCreate(608.000000, 352.000000, "_");
		TextDrawBackgroundColor(speedo_BarGas[0], 255);
		TextDrawFont(speedo_BarGas[0], 1);
		TextDrawLetterSize(speedo_BarGas[0], 0.500000, 5.599999);
		TextDrawColor(speedo_BarGas[0], -1);
		TextDrawSetOutline(speedo_BarGas[0], 0);
		TextDrawSetProportional(speedo_BarGas[0], 1);
		TextDrawSetShadow(speedo_BarGas[0], 1);
		TextDrawUseBox(speedo_BarGas[0], 1);
		TextDrawBoxColor(speedo_BarGas[0], 255);
		TextDrawTextSize(speedo_BarGas[0], 590.000000, 0.000000);

		speedo_BarGas[1] = TextDrawCreate(606.000000, 354.000000, "_");
		TextDrawBackgroundColor(speedo_BarGas[1], 255);
		TextDrawFont(speedo_BarGas[1], 1);
		TextDrawLetterSize(speedo_BarGas[1], 0.500000, 5.200000);
		TextDrawColor(speedo_BarGas[1], -1);
		TextDrawSetOutline(speedo_BarGas[1], 0);
		TextDrawSetProportional(speedo_BarGas[1], 1);
		TextDrawSetShadow(speedo_BarGas[1], 1);
		TextDrawUseBox(speedo_BarGas[1], 1);
		TextDrawBoxColor(speedo_BarGas[1], 1900799);
		TextDrawTextSize(speedo_BarGas[1], 592.000000, 0.000000);
		
		// Systeme de Faim
		DisigFaim1 = TextDrawCreate(610.000000, 35.000000, "~n~");
		TextDrawBackgroundColor(DisigFaim1, 255);
		TextDrawFont(DisigFaim1, 1);
		TextDrawLetterSize(DisigFaim1, 0.469998, 0.599999);
		TextDrawColor(DisigFaim1, -1);
		TextDrawSetOutline(DisigFaim1, 0);
		TextDrawSetProportional(DisigFaim1, 1);
		TextDrawSetShadow(DisigFaim1, 1);
		TextDrawUseBox(DisigFaim1, 1);
		TextDrawBoxColor(DisigFaim1, 255);
		TextDrawTextSize(DisigFaim1, 544.000000, 0.000000);

		DisigFaim2 = TextDrawCreate(608.000000, 37.000000, "~n~");
		TextDrawBackgroundColor(DisigFaim2, 255);
		TextDrawFont(DisigFaim2, 1);
		TextDrawLetterSize(DisigFaim2, 0.469998, 0.199999);
		TextDrawColor(DisigFaim2, 0x004A00FF);
		TextDrawSetOutline(DisigFaim2, 0);
		TextDrawSetProportional(DisigFaim2, 1);
		TextDrawSetShadow(DisigFaim2, 1);
		TextDrawUseBox(DisigFaim2, 1);
		TextDrawBoxColor(DisigFaim2, 0x004A00FF);
		TextDrawTextSize(DisigFaim2, 546.000000, 0.000000);

		// Système de soif
		DisigSoif1 = TextDrawCreate(610.000000, 23.000000, "~n~");
		TextDrawBackgroundColor(DisigSoif1, 255);
		TextDrawFont(DisigSoif1, 1);
		TextDrawLetterSize(DisigSoif1, 0.469998, 0.599999);
		TextDrawColor(DisigSoif1, -1);
		TextDrawSetOutline(DisigSoif1, 0);
		TextDrawSetProportional(DisigSoif1, 1);
		TextDrawSetShadow(DisigSoif1, 1);
		TextDrawUseBox(DisigSoif1, 1);
		TextDrawBoxColor(DisigSoif1, 255);
		TextDrawTextSize(DisigSoif1, 544.000000, 25.000000);

		DisigSoif2 = TextDrawCreate(608.000000, 25.000000, "~n~");
		TextDrawBackgroundColor(DisigSoif2, 255);
		TextDrawFont(DisigSoif2, 1);
		TextDrawLetterSize(DisigSoif2, 0.469998, 0.199999);
		TextDrawColor(DisigSoif2, 0x00006EFF);
		TextDrawSetOutline(DisigSoif2, 0);
		TextDrawSetProportional(DisigSoif2, 1);
		TextDrawSetShadow(DisigSoif2, 1);
		TextDrawUseBox(DisigSoif2, 1);
		TextDrawBoxColor(DisigSoif2, 0x00006EFF);
		TextDrawTextSize(DisigSoif2, 546.000000, 25.000000);

		// Syeteme d'endurance
		DisigEndurance1 = TextDrawCreate(610.000000, 12.000000, "~n~");
		TextDrawBackgroundColor(DisigEndurance1, 255);
		TextDrawFont(DisigEndurance1, 1);
		TextDrawLetterSize(DisigEndurance1, 0.469998, 0.599999);
		TextDrawColor(DisigEndurance1, -1);
		TextDrawSetOutline(DisigEndurance1, 0);
		TextDrawSetProportional(DisigEndurance1, 1);
		TextDrawSetShadow(DisigEndurance1, 1);
		TextDrawUseBox(DisigEndurance1, 1);
		TextDrawBoxColor(DisigEndurance1, 255);
		TextDrawTextSize(DisigEndurance1, 544.000000, 0.000000);

		DisigEndurance2 = TextDrawCreate(608.000000, 14.000000, "~n~");
		TextDrawBackgroundColor(DisigEndurance2, 255);
		TextDrawFont(DisigEndurance2, 1);
		TextDrawLetterSize(DisigEndurance2, 0.469998, 0.199999);
		TextDrawColor(DisigEndurance2, 16752895);
		TextDrawSetOutline(DisigEndurance2, 0);
		TextDrawSetProportional(DisigEndurance2, 1);
		TextDrawSetShadow(DisigEndurance2, 1);
		TextDrawUseBox(DisigEndurance2, 1);
		TextDrawBoxColor(DisigEndurance2, 16777215);
		TextDrawTextSize(DisigEndurance2, 546.000000, 0.000000);
		
		// Job
		job_TextBox[0] = TextDrawCreate(613.000000, 120.000000, "_");
		TextDrawBackgroundColor(job_TextBox[0], 255);
		TextDrawFont(job_TextBox[0], 1);
		TextDrawLetterSize(job_TextBox[0], 0.500000, 7.399999);
		TextDrawColor(job_TextBox[0], -1);
		TextDrawSetOutline(job_TextBox[0], 0);
		TextDrawSetProportional(job_TextBox[0], 1);
		TextDrawSetShadow(job_TextBox[0], 1);
		TextDrawUseBox(job_TextBox[0], 1);
		TextDrawBoxColor(job_TextBox[0], -213);
		TextDrawTextSize(job_TextBox[0], 493.000000, 0.000000);

		job_TextBox[1] = TextDrawCreate(611.000000, 122.000000, "_");
		TextDrawBackgroundColor(job_TextBox[1], 255);
		TextDrawFont(job_TextBox[1], 1);
		TextDrawLetterSize(job_TextBox[1], 0.500000, 6.900000);
		TextDrawColor(job_TextBox[1], -1);
		TextDrawSetOutline(job_TextBox[1], 0);
		TextDrawSetProportional(job_TextBox[1], 1);
		TextDrawSetShadow(job_TextBox[1], 1);
		TextDrawUseBox(job_TextBox[1], 1);
		TextDrawBoxColor(job_TextBox[1], 65302);
		TextDrawTextSize(job_TextBox[1], 495.000000, 0.000000);
		
		job_TextBar[0] = TextDrawCreate(502.000000, 169.000000, "_");
		TextDrawBackgroundColor(job_TextBar[0], 255);
		TextDrawFont(job_TextBar[0], 2);
		TextDrawLetterSize(job_TextBar[0], 0.200000, 1.200000);
		TextDrawColor(job_TextBar[0], -1);
		TextDrawSetOutline(job_TextBar[0], 0);
		TextDrawSetProportional(job_TextBar[0], 1);
		TextDrawSetShadow(job_TextBar[0], 0);
		TextDrawUseBox(job_TextBar[0], 1);
		TextDrawBoxColor(job_TextBar[0], 255);
		TextDrawTextSize(job_TextBar[0], 604.000000, 0.000000);

		job_TextBar[1] = TextDrawCreate(504.000000, 171.000000, "_");
		TextDrawBackgroundColor(job_TextBar[1], 255);
		TextDrawFont(job_TextBar[1], 2);
		TextDrawLetterSize(job_TextBar[1], 0.200000, 0.799999);
		TextDrawColor(job_TextBar[1], -1);
		TextDrawSetOutline(job_TextBar[1], 0);
		TextDrawSetProportional(job_TextBar[1], 1);
		TextDrawSetShadow(job_TextBar[1], 0);
		TextDrawUseBox(job_TextBar[1], 1);
		TextDrawBoxColor(job_TextBar[1], 7209215);
		TextDrawTextSize(job_TextBar[1], 602.000000, 0.000000);

		job_TextTitle = TextDrawCreate(554.000000, 171.000000, "Temps de travail");
		TextDrawAlignment(job_TextTitle, 2);
		TextDrawBackgroundColor(job_TextTitle, 255);
		TextDrawFont(job_TextTitle, 2);
		TextDrawLetterSize(job_TextTitle, 0.200000, 0.799999);
		TextDrawColor(job_TextTitle, -1);
		TextDrawSetOutline(job_TextTitle, 0);
		TextDrawSetProportional(job_TextTitle, 1);
		TextDrawSetShadow(job_TextTitle, 0);
		
		payday_Design[0] = TextDrawCreate(613.000000, 195.000000, "_");
		TextDrawBackgroundColor(payday_Design[0], 255);
		TextDrawFont(payday_Design[0], 1);
		TextDrawLetterSize(payday_Design[0], 0.500000, 15.399999);
		TextDrawColor(payday_Design[0], -1);
		TextDrawSetOutline(payday_Design[0], 0);
		TextDrawSetProportional(payday_Design[0], 1);
		TextDrawSetShadow(payday_Design[0], 1);
		TextDrawUseBox(payday_Design[0], 1);
		TextDrawBoxColor(payday_Design[0], -213);
		TextDrawTextSize(payday_Design[0], 493.000000, 0.000000);

		// Payday
		payday_Design[1] = TextDrawCreate(611.000000, 197.000000, "_");
		TextDrawBackgroundColor(payday_Design[1], 255);
		TextDrawFont(payday_Design[1], 1);
		TextDrawLetterSize(payday_Design[1], 0.500000, 15.000000);
		TextDrawColor(payday_Design[1], -1);
		TextDrawSetOutline(payday_Design[1], 0);
		TextDrawSetProportional(payday_Design[1], 1);
		TextDrawSetShadow(payday_Design[1], 1);
		TextDrawUseBox(payday_Design[1], 1);
		TextDrawBoxColor(payday_Design[1], 65302);
		TextDrawTextSize(payday_Design[1], 495.000000, 0.000000);

		payday_Design[2] = TextDrawCreate(550.000000, 196.000000, "PayDay");
		TextDrawAlignment(payday_Design[2], 2);
		TextDrawBackgroundColor(payday_Design[2], 255);
		TextDrawFont(payday_Design[2], 3);
		TextDrawLetterSize(payday_Design[2], 0.500000, 1.000000);
		TextDrawColor(payday_Design[2], 65328);
		TextDrawSetOutline(payday_Design[2], 0);
		TextDrawSetProportional(payday_Design[2], 1);
		TextDrawSetShadow(payday_Design[2], 0);
}

stock init_PlayerTexts(i)
{
	//Jobs
	job_TextInfos[i] = CreatePlayerTextDraw(i,500.000000, 122.000000, "_");
	PlayerTextDrawBackgroundColor(i,job_TextInfos[i], 255);
	PlayerTextDrawFont(i,job_TextInfos[i], 2);
	PlayerTextDrawLetterSize(i,job_TextInfos[i], 0.200000, 0.799999);
	PlayerTextDrawColor(i,job_TextInfos[i], -1);
	PlayerTextDrawSetOutline(i,job_TextInfos[i], 0);
	PlayerTextDrawSetProportional(i,job_TextInfos[i], 1);
	PlayerTextDrawSetShadow(i,job_TextInfos[i], 0);
	
	job_TextBarUpdate[i] = CreatePlayerTextDraw(i,504.000000, 171.000000, "_");
	PlayerTextDrawBackgroundColor(i,job_TextBarUpdate[i], 255);
	PlayerTextDrawFont(i,job_TextBarUpdate[i], 2);
	PlayerTextDrawLetterSize(i,job_TextBarUpdate[i], 0.200000, 0.799999);
	PlayerTextDrawColor(i,job_TextBarUpdate[i], -1);
	PlayerTextDrawSetOutline(i,job_TextBarUpdate[i], 0);
	PlayerTextDrawSetProportional(i,job_TextBarUpdate[i], 1);
	PlayerTextDrawSetShadow(i,job_TextBarUpdate[i], 0);
	PlayerTextDrawUseBox(i,job_TextBarUpdate[i], 1);
	PlayerTextDrawBoxColor(i,job_TextBarUpdate[i], 13041919);
	PlayerTextDrawTextSize(i,job_TextBarUpdate[i], 562.000000, 0.000000);
	
	// InfoBox
	infoText[i] = CreatePlayerTextDraw(i,311.000000, 427.000000, "~r~Credits : ~w~DarkRider pour la creation du GameMode.");
	PlayerTextDrawAlignment(i,infoText[i], 2);
	PlayerTextDrawBackgroundColor(i,infoText[i], 255);
	PlayerTextDrawFont(i,infoText[i], 2);
	PlayerTextDrawLetterSize(i,infoText[i], 0.160000, 1.399999);
	PlayerTextDrawColor(i,infoText[i], 65535);
	PlayerTextDrawSetOutline(i,infoText[i], 0);
	PlayerTextDrawSetProportional(i,infoText[i], 1);
	PlayerTextDrawSetShadow(i,infoText[i], 0);
	
	// Pay
	pay_TextBank[i] = CreatePlayerTextDraw(i,218.000000, 204.000000, "Banque :"); // 9
	PlayerTextDrawBackgroundColor(i,pay_TextBank[i], 255);
	PlayerTextDrawFont(i,pay_TextBank[i], 1);
	PlayerTextDrawLetterSize(i,pay_TextBank[i], 0.329999, 1.300000);
	PlayerTextDrawColor(i,pay_TextBank[i], -1);
	PlayerTextDrawSetOutline(i,pay_TextBank[i], 0);
	PlayerTextDrawSetProportional(i,pay_TextBank[i], 1);
	PlayerTextDrawSetShadow(i,pay_TextBank[i], 1);

	pay_TextCash[i] = CreatePlayerTextDraw(i,218.000000, 224.000000, "Cash :"); // 10
	PlayerTextDrawBackgroundColor(i,pay_TextCash[i], 255);
	PlayerTextDrawFont(i,pay_TextCash[i], 1);
	PlayerTextDrawLetterSize(i,pay_TextCash[i], 0.329999, 1.300000);
	PlayerTextDrawColor(i,pay_TextCash[i], -1);
	PlayerTextDrawSetOutline(i,pay_TextCash[i], 0);
	PlayerTextDrawSetProportional(i,pay_TextCash[i], 1);
	PlayerTextDrawSetShadow(i,pay_TextCash[i], 1);

	pay_TextArticle[i] = CreatePlayerTextDraw(i,218.000000, 154.000000, "Article :"); // 6
	PlayerTextDrawBackgroundColor(i,pay_TextArticle[i], 255);
	PlayerTextDrawFont(i,pay_TextArticle[i], 1);
	PlayerTextDrawLetterSize(i,pay_TextArticle[i], 0.329999, 1.300000);
	PlayerTextDrawColor(i,pay_TextArticle[i], -1);
	PlayerTextDrawSetOutline(i,pay_TextArticle[i], 0);
	PlayerTextDrawSetProportional(i,pay_TextArticle[i], 1);
	PlayerTextDrawSetShadow(i,pay_TextArticle[i], 1);

	pay_TextPrice[i] = CreatePlayerTextDraw(i,218.000000, 174.000000, "Prix :"); // 7
	PlayerTextDrawBackgroundColor(i,pay_TextPrice[i], 255);
	PlayerTextDrawFont(i,pay_TextPrice[i], 1);
	PlayerTextDrawLetterSize(i,pay_TextPrice[i], 0.329999, 1.300000);
	PlayerTextDrawColor(i,pay_TextPrice[i], -1);
	PlayerTextDrawSetOutline(i,pay_TextPrice[i], 0);
	PlayerTextDrawSetProportional(i,pay_TextPrice[i], 1);
	PlayerTextDrawSetShadow(i,pay_TextPrice[i], 1);
	
	BarUpdateFaim[i] = CreatePlayerTextDraw(i,608.000000, 37.000000, "~n~");
	PlayerTextDrawBackgroundColor(i,BarUpdateFaim[i], 255);
	PlayerTextDrawFont(i,BarUpdateFaim[i], 1);
	PlayerTextDrawLetterSize(i,BarUpdateFaim[i], 0.469998, 0.199999);
	PlayerTextDrawColor(i,BarUpdateFaim[i], 16752895);
	PlayerTextDrawSetOutline(i,BarUpdateFaim[i], 0);
	PlayerTextDrawSetProportional(i,BarUpdateFaim[i], 1);
	PlayerTextDrawSetShadow(i,BarUpdateFaim[i], 1);
	PlayerTextDrawUseBox(i,BarUpdateFaim[i], 1);
	PlayerTextDrawBoxColor(i,BarUpdateFaim[i], 0x009000FF);
	PlayerTextDrawTextSize(i,BarUpdateFaim[i], 546.000000, 0.000000);

	TextFaim[i] = CreatePlayerTextDraw(i,542.000000, 29.000000, "Chargement...");
	PlayerTextDrawBackgroundColor(i,TextFaim[i], 255);
	PlayerTextDrawFont(i,TextFaim[i], 1);
	PlayerTextDrawLetterSize(i,TextFaim[i], 0.220000, 0.799998);
	PlayerTextDrawColor(i,TextFaim[i], -1);
	PlayerTextDrawSetOutline(i,TextFaim[i], 1);
	PlayerTextDrawSetProportional(i,TextFaim[i], 1);
	PlayerTextDrawSetShadow(i,TextFaim[i], 1);

	BarUpdateSoif[i] = CreatePlayerTextDraw(i,608.000000, 25.000000, "~n~");
	PlayerTextDrawBackgroundColor(i,BarUpdateSoif[i], 255);
	PlayerTextDrawFont(i,BarUpdateSoif[i], 1);
	PlayerTextDrawLetterSize(i,BarUpdateSoif[i], 0.469998, 0.199999);
	PlayerTextDrawColor(i,BarUpdateSoif[i], 16752895);
	PlayerTextDrawSetOutline(i,BarUpdateSoif[i], 0);
	PlayerTextDrawSetProportional(i,BarUpdateSoif[i], 1);
	PlayerTextDrawSetShadow(i,BarUpdateSoif[i], 1);
	PlayerTextDrawUseBox(i,BarUpdateSoif[i], 1);
	PlayerTextDrawBoxColor(i,BarUpdateSoif[i], 0x0000D1FF);
	PlayerTextDrawTextSize(i,BarUpdateSoif[i], 546.000000, 58.000000);

	TextSoif[i] = CreatePlayerTextDraw(i,542.000000, 18.000000, "Chargement...");
	PlayerTextDrawBackgroundColor(i,TextSoif[i], 255);
	PlayerTextDrawFont(i,TextSoif[i], 1);
	PlayerTextDrawLetterSize(i,TextSoif[i], 0.220000, 0.699998);
	PlayerTextDrawColor(i,TextSoif[i], -1);
	PlayerTextDrawSetOutline(i,TextSoif[i], 1);
	PlayerTextDrawSetProportional(i,TextSoif[i], 1);
	PlayerTextDrawSetShadow(i,TextSoif[i], 1);

	BarUpdateEndurance[i] = CreatePlayerTextDraw(i,608.000000, 14.000000, "~n~");
	PlayerTextDrawBackgroundColor(i,BarUpdateEndurance[i], 255);
	PlayerTextDrawFont(i,BarUpdateEndurance[i], 1);
	PlayerTextDrawLetterSize(i,BarUpdateEndurance[i], 0.469998, 0.199999);
	PlayerTextDrawColor(i,BarUpdateEndurance[i], 16752895);
	PlayerTextDrawSetOutline(i,BarUpdateEndurance[i], 0);
	PlayerTextDrawSetProportional(i,BarUpdateEndurance[i], 1);
	PlayerTextDrawSetShadow(i,BarUpdateEndurance[i], 1);
	PlayerTextDrawUseBox(i,BarUpdateEndurance[i], 1);
	PlayerTextDrawBoxColor(i,BarUpdateEndurance[i], 10354687);
	PlayerTextDrawTextSize(i,BarUpdateEndurance[i], 546.000000, 0.000000);

	TextEndurance[i] = CreatePlayerTextDraw(i,542.000000, 7.000000, "Chargement...");
	PlayerTextDrawBackgroundColor(i,TextEndurance[i], 255);
	PlayerTextDrawFont(i,TextEndurance[i], 1);
	PlayerTextDrawLetterSize(i,TextEndurance[i], 0.220000, 0.699998);
	PlayerTextDrawColor(i,TextEndurance[i], -1);
	PlayerTextDrawSetOutline(i,TextEndurance[i], 1);
	PlayerTextDrawSetProportional(i,TextEndurance[i], 1);
	PlayerTextDrawSetShadow(i,TextEndurance[i], 1);

	TextMaladie[i] = CreatePlayerTextDraw(i,520.000000, 7.000000, "Maladie: Aucune");
	PlayerTextDrawAlignment(i,TextMaladie[i], 2);
	PlayerTextDrawBackgroundColor(i,TextMaladie[i], 255);
	PlayerTextDrawFont(i,TextMaladie[i], 1);
	PlayerTextDrawLetterSize(i,TextMaladie[i], 0.219999, 0.699998);
	PlayerTextDrawColor(i,TextMaladie[i], -1);
	PlayerTextDrawSetOutline(i,TextMaladie[i], 0);
	PlayerTextDrawSetProportional(i,TextMaladie[i], 1);
	PlayerTextDrawSetShadow(i,TextMaladie[i], 1);
	PlayerTextDrawUseBox(i,TextMaladie[i], 1);
	PlayerTextDrawBoxColor(i,TextMaladie[i], 255);
	PlayerTextDrawTextSize(i,TextMaladie[i], -5.000000, 38.000000);

	// Vie
	TextVie[i] = CreatePlayerTextDraw(i,542.000000, 64.000000, "Chargement...");
	PlayerTextDrawBackgroundColor(i,TextVie[i], 255);
	PlayerTextDrawFont(i,TextVie[i], 1);
	PlayerTextDrawLetterSize(i,TextVie[i], 0.220000, 0.699998);
	PlayerTextDrawColor(i,TextVie[i], -1);
	PlayerTextDrawSetOutline(i,TextVie[i], 1);
	PlayerTextDrawSetProportional(i,TextVie[i], 1);
	PlayerTextDrawSetShadow(i,TextVie[i], 1);

	// Armure
	TextArmure[i] = CreatePlayerTextDraw(i,542.000000, 41.000000, "Chargement...");
	PlayerTextDrawBackgroundColor(i,TextArmure[i], 255);
	PlayerTextDrawFont(i,TextArmure[i], 1);
	PlayerTextDrawLetterSize(i,TextArmure[i], 0.220000, 0.699998);
	PlayerTextDrawColor(i,TextArmure[i], -1);
	PlayerTextDrawSetOutline(i,TextArmure[i], 1);
	PlayerTextDrawSetProportional(i,TextArmure[i], 1);
	PlayerTextDrawSetShadow(i,TextArmure[i], 1);
	
	// Speedo
	speedo_Speed[i] = CreatePlayerTextDraw(i,500.000000, 346.000000, "Vitesse : ~g~65 KM/h");
	PlayerTextDrawBackgroundColor(i,speedo_Speed[i], 255);
	PlayerTextDrawFont(i,speedo_Speed[i], 2);
	PlayerTextDrawLetterSize(i,speedo_Speed[i], 0.200000, 0.799999);
	PlayerTextDrawColor(i,speedo_Speed[i], -1);
	PlayerTextDrawSetOutline(i,speedo_Speed[i], 0);
	PlayerTextDrawSetProportional(i,speedo_Speed[i], 1);
	PlayerTextDrawSetShadow(i,speedo_Speed[i], 0);
	
	// Degat
	speedo_Health[i] = CreatePlayerTextDraw(i,500.000000, 356.000000, "Moteur : ~g~ 1000");
	PlayerTextDrawBackgroundColor(i,speedo_Health[i], 255);
	PlayerTextDrawFont(i,speedo_Health[i], 2);
	PlayerTextDrawLetterSize(i,speedo_Health[i], 0.200000, 0.799999);
	PlayerTextDrawColor(i,speedo_Health[i], -1);
	PlayerTextDrawSetOutline(i,speedo_Health[i], 0);
	PlayerTextDrawSetProportional(i,speedo_Health[i], 1);
	PlayerTextDrawSetShadow(i,speedo_Health[i], 0);
	
	// kilometrage
	speedo_Kilometrage[i] = CreatePlayerTextDraw(i,500.000000, 366.000000, "Miles : 25.2644");
	PlayerTextDrawBackgroundColor(i,speedo_Kilometrage[i], 255);
	PlayerTextDrawFont(i,speedo_Kilometrage[i], 2);
	PlayerTextDrawLetterSize(i,speedo_Kilometrage[i], 0.200000, 0.799999);
	PlayerTextDrawColor(i,speedo_Kilometrage[i], -1);
	PlayerTextDrawSetOutline(i,speedo_Kilometrage[i], 0);
	PlayerTextDrawSetProportional(i,speedo_Kilometrage[i], 1);
	PlayerTextDrawSetShadow(i,speedo_Kilometrage[i], 0);
	
	// Bridage
	speedo_Brid[i] = CreatePlayerTextDraw(i,500.000000, 376.000000, "Bridage : ~r~ 60 KM/h");
	PlayerTextDrawBackgroundColor(i,speedo_Brid[i], 255);
	PlayerTextDrawFont(i,speedo_Brid[i], 2);
	PlayerTextDrawLetterSize(i,speedo_Brid[i], 0.200000, 0.799999);
	PlayerTextDrawColor(i,speedo_Brid[i], -1);
	PlayerTextDrawSetOutline(i,speedo_Brid[i], 0);
	PlayerTextDrawSetProportional(i,speedo_Brid[i], 1);
	PlayerTextDrawSetShadow(i,speedo_Brid[i], 0);
	
	// Regulateur
	speedo_Cris[i] = CreatePlayerTextDraw(i,500.000000, 386.000000, "Batterie : ~g~ Haute");
	PlayerTextDrawBackgroundColor(i,speedo_Cris[i], 255);
	PlayerTextDrawFont(i,speedo_Cris[i], 2);
	PlayerTextDrawLetterSize(i,speedo_Cris[i], 0.200000, 0.799999);
	PlayerTextDrawColor(i,speedo_Cris[i], -1);
	PlayerTextDrawSetOutline(i,speedo_Cris[i], 0);
	PlayerTextDrawSetProportional(i,speedo_Cris[i], 1);
	PlayerTextDrawSetShadow(i,speedo_Cris[i], 0);
	
	// Boite de vitesse
	speedo_BoxSpeed[i] = CreatePlayerTextDraw(i,540.000000, 394.000000, "_");
	PlayerTextDrawAlignment(i,speedo_BoxSpeed[i], 2);
	PlayerTextDrawBackgroundColor(i,speedo_BoxSpeed[i], 255);
	PlayerTextDrawFont(i,speedo_BoxSpeed[i], 2);
	PlayerTextDrawLetterSize(i,speedo_BoxSpeed[i], 0.310000, 1.100000);
	PlayerTextDrawColor(i,speedo_BoxSpeed[i], -1);
	PlayerTextDrawSetOutline(i,speedo_BoxSpeed[i], 0);
	PlayerTextDrawSetProportional(i,speedo_BoxSpeed[i], 1);
	PlayerTextDrawSetShadow(i,speedo_BoxSpeed[i], 0);
	
	// Clignotants
	speedo_Beat[i][0] = CreatePlayerTextDraw(i,498.000000, 405.000000, "LD_BEAT:left");
	PlayerTextDrawBackgroundColor(i,speedo_Beat[i][0], 255);
	PlayerTextDrawFont(i,speedo_Beat[i][0], 4);
	PlayerTextDrawLetterSize(i,speedo_Beat[i][0], 0.500000, 1.000000);
	PlayerTextDrawColor(i,speedo_Beat[i][0], -1);
	PlayerTextDrawSetOutline(i,speedo_Beat[i][0], 0);
	PlayerTextDrawSetProportional(i,speedo_Beat[i][0], 1);
	PlayerTextDrawSetShadow(i,speedo_Beat[i][0], 1);
	PlayerTextDrawUseBox(i,speedo_Beat[i][0], 1);
	PlayerTextDrawBoxColor(i,speedo_Beat[i][0], 255);
	PlayerTextDrawTextSize(i,speedo_Beat[i][0], 18.000000, 18.000000);

	speedo_Beat[i][1] = CreatePlayerTextDraw(i,590.000000, 405.000000, "LD_BEAT:right");
	PlayerTextDrawBackgroundColor(i,speedo_Beat[i][1], 255);
	PlayerTextDrawFont(i,speedo_Beat[i][1], 4);
	PlayerTextDrawLetterSize(i,speedo_Beat[i][1], 0.500000, 1.000000);
	PlayerTextDrawColor(i,speedo_Beat[i][1], -1);
	PlayerTextDrawSetOutline(i,speedo_Beat[i][1], 0);
	PlayerTextDrawSetProportional(i,speedo_Beat[i][1], 1);
	PlayerTextDrawSetShadow(i,speedo_Beat[i][1], 1);
	PlayerTextDrawUseBox(i,speedo_Beat[i][1], 1);
	PlayerTextDrawBoxColor(i,speedo_Beat[i][1], 255);
	PlayerTextDrawTextSize(i,speedo_Beat[i][1], 18.000000, 18.000000);
	
	// Phares
	speedo_Lighting[i][0] = CreatePlayerTextDraw(i,567.000000, 411.000000, "O");
	PlayerTextDrawBackgroundColor(i,speedo_Lighting[i][0], 255);
	PlayerTextDrawFont(i,speedo_Lighting[i][0], 2);
	PlayerTextDrawLetterSize(i,speedo_Lighting[i][0], 0.340000, 1.200000);
	PlayerTextDrawColor(i,speedo_Lighting[i][0], -1);
	PlayerTextDrawSetOutline(i,speedo_Lighting[i][0], 0);
	PlayerTextDrawSetProportional(i,speedo_Lighting[i][0], 1);
	PlayerTextDrawSetShadow(i,speedo_Lighting[i][0], 0);

	speedo_Lighting[i][1] = CreatePlayerTextDraw(i,572.000000, 411.000000, "O");
	PlayerTextDrawBackgroundColor(i,speedo_Lighting[i][1], 255);
	PlayerTextDrawFont(i,speedo_Lighting[i][1], 2);
	PlayerTextDrawLetterSize(i,speedo_Lighting[i][1], 0.340000, 1.200000);
	PlayerTextDrawColor(i,speedo_Lighting[i][1], -1);
	PlayerTextDrawSetOutline(i,speedo_Lighting[i][1], 0);
	PlayerTextDrawSetProportional(i,speedo_Lighting[i][1], 1);
	PlayerTextDrawSetShadow(i,speedo_Lighting[i][1], 0);
	
	// Moteur
	speedo_LightMotor[i] = CreatePlayerTextDraw(i,534.000000, 403.000000, ".");
	PlayerTextDrawAlignment(i,speedo_LightMotor[i], 2);
	PlayerTextDrawBackgroundColor(i,speedo_LightMotor[i], 255);
	PlayerTextDrawFont(i,speedo_LightMotor[i], 1);
	PlayerTextDrawLetterSize(i,speedo_LightMotor[i], 0.700000, 2.000000);
	PlayerTextDrawColor(i,speedo_LightMotor[i], -16776961);
	PlayerTextDrawSetOutline(i,speedo_LightMotor[i], 1);
	PlayerTextDrawSetProportional(i,speedo_LightMotor[i], 1);
	
	// Bar update
	speedo_Bar[i] = CreatePlayerTextDraw(i,606.000000, 404.500000, "_");
	PlayerTextDrawBackgroundColor(i,speedo_Bar[i], 255);
	PlayerTextDrawFont(i,speedo_Bar[i], 1);
	PlayerTextDrawLetterSize(i,speedo_Bar[i], 0.500000, -6.0);
	PlayerTextDrawColor(i,speedo_Bar[i], -1);
	PlayerTextDrawSetOutline(i,speedo_Bar[i], 0);
	PlayerTextDrawSetProportional(i,speedo_Bar[i], 1);
	PlayerTextDrawSetShadow(i,speedo_Bar[i], 1);
	PlayerTextDrawUseBox(i,speedo_Bar[i], 1);
	PlayerTextDrawBoxColor(i,speedo_Bar[i], 8716543);
	PlayerTextDrawTextSize(i,speedo_Bar[i], 592.000000, 0.000000);
	
	// payday
	payday_Infos[i] = CreatePlayerTextDraw(i,500.000000, 204.000000, "_");
	PlayerTextDrawBackgroundColor(i,payday_Infos[i], 255);
	PlayerTextDrawFont(i,payday_Infos[i], 2);
	PlayerTextDrawLetterSize(i,payday_Infos[i], 0.200000, 0.899999);
	PlayerTextDrawColor(i,payday_Infos[i], -1);
	PlayerTextDrawSetOutline(i,payday_Infos[i], 0);
	PlayerTextDrawSetProportional(i,payday_Infos[i], 1);
	PlayerTextDrawSetShadow(i,payday_Infos[i], 0);
	
	// Tel
	phone_Hours[i] = CreatePlayerTextDraw(i,137.000000, 168.000000, "00:00");
	PlayerTextDrawAlignment(i,phone_Hours[i], 3);
	PlayerTextDrawBackgroundColor(i,phone_Hours[i], 255);
	PlayerTextDrawFont(i,phone_Hours[i], 1);
	PlayerTextDrawLetterSize(i,phone_Hours[i], 0.190000, 0.899999);
	PlayerTextDrawColor(i,phone_Hours[i], -1);
	PlayerTextDrawSetOutline(i,phone_Hours[i], 0);
	PlayerTextDrawSetProportional(i,phone_Hours[i], 1);
	PlayerTextDrawSetShadow(i,phone_Hours[i], 0);

	phone_Operator[i] = CreatePlayerTextDraw(i,88.000000, 167.000000, "Operateur");
	PlayerTextDrawAlignment(i,phone_Operator[i], 2);
	PlayerTextDrawBackgroundColor(i,phone_Operator[i], 255);
	PlayerTextDrawFont(i,phone_Operator[i], 1);
	PlayerTextDrawLetterSize(i,phone_Operator[i], 0.129999, 1.000000);
	PlayerTextDrawColor(i,phone_Operator[i], -1);
	PlayerTextDrawSetOutline(i,phone_Operator[i], 0);
	PlayerTextDrawSetProportional(i,phone_Operator[i], 1);
	PlayerTextDrawSetShadow(i,phone_Operator[i], 0);
	
	phone_Title[i] = CreatePlayerTextDraw(i,89.000000, 176.000000, "NA");
	PlayerTextDrawAlignment(i,phone_Title[i], 2);
	PlayerTextDrawBackgroundColor(i,phone_Title[i], 255);
	PlayerTextDrawFont(i,phone_Title[i], 1);
	PlayerTextDrawLetterSize(i,phone_Title[i], 0.300000, 1.400000);
	PlayerTextDrawColor(i,phone_Title[i], -1);
	PlayerTextDrawSetOutline(i,phone_Title[i], 0);
	PlayerTextDrawSetProportional(i,phone_Title[i], 1);
	PlayerTextDrawSetShadow(i,phone_Title[i], 0);

	phone_WrittenNum[i] = CreatePlayerTextDraw(i,90.000000, 191.000000, "_");
	PlayerTextDrawAlignment(i,phone_WrittenNum[i], 2);
	PlayerTextDrawBackgroundColor(i,phone_WrittenNum[i], 255);
	PlayerTextDrawFont(i,phone_WrittenNum[i], 1);
	PlayerTextDrawLetterSize(i,phone_WrittenNum[i], 0.500000, 1.000000);
	PlayerTextDrawColor(i,phone_WrittenNum[i], -1);
	PlayerTextDrawSetOutline(i,phone_WrittenNum[i], 0);
	PlayerTextDrawSetProportional(i,phone_WrittenNum[i], 1);
	PlayerTextDrawSetShadow(i,phone_WrittenNum[i], 0);
	PlayerTextDrawUseBox(i,phone_WrittenNum[i], 1);
	PlayerTextDrawBoxColor(i,phone_WrittenNum[i], -2105376001);
	PlayerTextDrawTextSize(i,phone_WrittenNum[i], 10.000000, 93.000000);
	
	phone_CallTime[i] = CreatePlayerTextDraw(i,88.000000, 227.000000, "00:00");
	PlayerTextDrawAlignment(i,phone_CallTime[i], 2);
	PlayerTextDrawBackgroundColor(i,phone_CallTime[i], 255);
	PlayerTextDrawFont(i,phone_CallTime[i], 1);
	PlayerTextDrawLetterSize(i,phone_CallTime[i], 0.500000, 2.000000);
	PlayerTextDrawColor(i,phone_CallTime[i], 16777215);
	PlayerTextDrawSetOutline(i,phone_CallTime[i], 0);
	PlayerTextDrawSetProportional(i,phone_CallTime[i], 1);
	PlayerTextDrawSetShadow(i,phone_CallTime[i], 0);
	
	phone_CallFromNum[i] = CreatePlayerTextDraw(i,87.000000, 209.000000, "_");
	PlayerTextDrawAlignment(i,phone_CallFromNum[i], 2);
	PlayerTextDrawBackgroundColor(i,phone_CallFromNum[i], 255);
	PlayerTextDrawFont(i,phone_CallFromNum[i], 1);
	PlayerTextDrawLetterSize(i,phone_CallFromNum[i], 0.500000, 2.000000);
	PlayerTextDrawColor(i,phone_CallFromNum[i], 16777215);
	PlayerTextDrawSetOutline(i,phone_CallFromNum[i], 0);
	PlayerTextDrawSetProportional(i,phone_CallFromNum[i], 1);
	PlayerTextDrawSetShadow(i,phone_CallFromNum[i], 0);
	
	phone_ConsoTime[i] = CreatePlayerTextDraw(i,89.000000, 198.000000, "Appel restant :");
	PlayerTextDrawAlignment(i,phone_ConsoTime[i], 2);
	PlayerTextDrawBackgroundColor(i,phone_ConsoTime[i], 255);
	PlayerTextDrawFont(i,phone_ConsoTime[i], 1);
	PlayerTextDrawLetterSize(i,phone_ConsoTime[i], 0.200000, 1.000000);
	PlayerTextDrawColor(i,phone_ConsoTime[i], -1);
	PlayerTextDrawSetOutline(i,phone_ConsoTime[i], 0);
	PlayerTextDrawSetProportional(i,phone_ConsoTime[i], 1);
	PlayerTextDrawSetShadow(i,phone_ConsoTime[i], 1);

	phone_ConsoSMS[i] = CreatePlayerTextDraw(i,89.000000, 218.000000, "Prix SMS :");
	PlayerTextDrawAlignment(i,phone_ConsoSMS[i], 2);
	PlayerTextDrawBackgroundColor(i,phone_ConsoSMS[i], 255);
	PlayerTextDrawFont(i,phone_ConsoSMS[i], 1);
	PlayerTextDrawLetterSize(i,phone_ConsoSMS[i], 0.200000, 1.000000);
	PlayerTextDrawColor(i,phone_ConsoSMS[i], -1);
	PlayerTextDrawSetOutline(i,phone_ConsoSMS[i], 0);
	PlayerTextDrawSetProportional(i,phone_ConsoSMS[i], 1);
	PlayerTextDrawSetShadow(i,phone_ConsoSMS[i], 1);
	
	phone_BackSMS[i][0] = CreatePlayerTextDraw(i,46.000000, 189.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_BackSMS[i][0], 255);
	PlayerTextDrawFont(i,phone_BackSMS[i][0], 1);
	PlayerTextDrawLetterSize(i,phone_BackSMS[i][0], 0.250000, 1.000000);
	PlayerTextDrawColor(i,phone_BackSMS[i][0], -1);
	PlayerTextDrawSetOutline(i,phone_BackSMS[i][0], 0);
	PlayerTextDrawSetProportional(i,phone_BackSMS[i][0], 1);
	PlayerTextDrawSetShadow(i,phone_BackSMS[i][0], 0);
	PlayerTextDrawTextSize(i,phone_BackSMS[i][0], 136.000000, 20.000000);
	PlayerTextDrawSetSelectable(i,phone_BackSMS[i][0],true);

	phone_BackSMS[i][1] = CreatePlayerTextDraw(i,46.000000, 209.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_BackSMS[i][1], 255);
	PlayerTextDrawFont(i,phone_BackSMS[i][1], 1);
	PlayerTextDrawLetterSize(i,phone_BackSMS[i][1], 0.250000, 1.000000);
	PlayerTextDrawColor(i,phone_BackSMS[i][1], -1);
	PlayerTextDrawSetOutline(i,phone_BackSMS[i][1], 0);
	PlayerTextDrawSetProportional(i,phone_BackSMS[i][1], 1);
	PlayerTextDrawSetShadow(i,phone_BackSMS[i][1], 0);
	PlayerTextDrawTextSize(i,phone_BackSMS[i][1], 136.000000, 20.000000);
	PlayerTextDrawSetSelectable(i,phone_BackSMS[i][1],true);

	phone_BackSMS[i][2] = CreatePlayerTextDraw(i,46.000000, 229.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_BackSMS[i][2], 255);
	PlayerTextDrawFont(i,phone_BackSMS[i][2], 1);
	PlayerTextDrawLetterSize(i,phone_BackSMS[i][2], 0.250000, 1.000000);
	PlayerTextDrawColor(i,phone_BackSMS[i][2], -1);
	PlayerTextDrawSetOutline(i,phone_BackSMS[i][2], 0);
	PlayerTextDrawSetProportional(i,phone_BackSMS[i][2], 1);
	PlayerTextDrawSetShadow(i,phone_BackSMS[i][2], 0);
	PlayerTextDrawTextSize(i,phone_BackSMS[i][2], 136.000000, 20.000000);
	PlayerTextDrawSetSelectable(i,phone_BackSMS[i][2],true);

	phone_BackSMS[i][3] = CreatePlayerTextDraw(i,46.000000, 249.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_BackSMS[i][3], 255);
	PlayerTextDrawFont(i,phone_BackSMS[i][3], 1);
	PlayerTextDrawLetterSize(i,phone_BackSMS[i][3], 0.250000, 1.000000);
	PlayerTextDrawColor(i,phone_BackSMS[i][3], -1);
	PlayerTextDrawSetOutline(i,phone_BackSMS[i][3], 0);
	PlayerTextDrawSetProportional(i,phone_BackSMS[i][3], 1);
	PlayerTextDrawSetShadow(i,phone_BackSMS[i][3], 0);
	PlayerTextDrawTextSize(i,phone_BackSMS[i][3], 136.000000, 20.000000);
	PlayerTextDrawSetSelectable(i,phone_BackSMS[i][3],true);

	phone_BackSMS[i][4] = CreatePlayerTextDraw(i,46.000000, 269.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_BackSMS[i][4], 255);
	PlayerTextDrawFont(i,phone_BackSMS[i][4], 1);
	PlayerTextDrawLetterSize(i,phone_BackSMS[i][4], 0.250000, 1.000000);
	PlayerTextDrawColor(i,phone_BackSMS[i][4], -1);
	PlayerTextDrawSetOutline(i,phone_BackSMS[i][4], 0);
	PlayerTextDrawSetProportional(i,phone_BackSMS[i][4], 1);
	PlayerTextDrawSetShadow(i,phone_BackSMS[i][4], 0);
	PlayerTextDrawTextSize(i,phone_BackSMS[i][4], 136.000000, 20.000000);
	PlayerTextDrawSetSelectable(i,phone_BackSMS[i][4],true);
	
	phone_Contact[i][0] = CreatePlayerTextDraw(i,45.000000, 190.000000, "- Urgences (~r~911~w~)");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][0], 255);
	PlayerTextDrawFont(i,phone_Contact[i][0], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][0], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][0], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][0], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][0], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][0], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][0], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][0],true);

	phone_Contact[i][1] = CreatePlayerTextDraw(i,45.000000, 196.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][1], 255);
	PlayerTextDrawFont(i,phone_Contact[i][1], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][1], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][1], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][1], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][1], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][1], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][1], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][1],true);

	phone_Contact[i][2] = CreatePlayerTextDraw(i,45.000000, 202.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][2], 255);
	PlayerTextDrawFont(i,phone_Contact[i][2], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][2], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][2], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][2], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][2], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][2], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][2], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][2],true);

	phone_Contact[i][3] = CreatePlayerTextDraw(i,45.000000, 208.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][3], 255);
	PlayerTextDrawFont(i,phone_Contact[i][3], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][3], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][3], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][3], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][3], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][3], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][3], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][3],true);

	phone_Contact[i][4] = CreatePlayerTextDraw(i,45.000000, 214.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][4], 255);
	PlayerTextDrawFont(i,phone_Contact[i][4], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][4], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][4], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][4], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][4], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][4], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][4], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][4],true);

	phone_Contact[i][5] = CreatePlayerTextDraw(i,45.000000, 220.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][5], 255);
	PlayerTextDrawFont(i,phone_Contact[i][5], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][5], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][5], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][5], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][5], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][5], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][5], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][5],true);

	phone_Contact[i][6] = CreatePlayerTextDraw(i,45.000000, 226.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][6], 255);
	PlayerTextDrawFont(i,phone_Contact[i][6], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][6], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][6], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][6], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][6], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][6], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][6], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][6],true);

	phone_Contact[i][7] = CreatePlayerTextDraw(i,45.000000, 232.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][7], 255);
	PlayerTextDrawFont(i,phone_Contact[i][7], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][7], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][7], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][7], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][7], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][7], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][7], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][7],true);

	phone_Contact[i][8] = CreatePlayerTextDraw(i,45.000000, 238.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][8], 255);
	PlayerTextDrawFont(i,phone_Contact[i][8], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][8], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][8], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][8], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][8], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][8], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][8], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][8],true);

	phone_Contact[i][9] = CreatePlayerTextDraw(i,45.000000, 244.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][9], 255);
	PlayerTextDrawFont(i,phone_Contact[i][9], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][9], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][9], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][9], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][9], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][9], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][9], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][9],true);

	phone_Contact[i][10] = CreatePlayerTextDraw(i,45.000000, 250.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][10], 255);
	PlayerTextDrawFont(i,phone_Contact[i][10], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][10], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][10], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][10], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][10], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][10], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][10], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][10],true);

	phone_Contact[i][11] = CreatePlayerTextDraw(i,45.000000, 256.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][11], 255);
	PlayerTextDrawFont(i,phone_Contact[i][11], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][11], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][11], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][11], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][11], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][11], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][11], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][11],true);

	phone_Contact[i][12] = CreatePlayerTextDraw(i,45.000000, 262.000000, "_");
	PlayerTextDrawBackgroundColor(i,phone_Contact[i][12], 255);
	PlayerTextDrawFont(i,phone_Contact[i][12], 1);
	PlayerTextDrawLetterSize(i,phone_Contact[i][12], 0.300000, 0.699999);
	PlayerTextDrawColor(i,phone_Contact[i][12], -1);
	PlayerTextDrawSetOutline(i,phone_Contact[i][12], 0);
	PlayerTextDrawSetProportional(i,phone_Contact[i][12], 1);
	PlayerTextDrawSetShadow(i,phone_Contact[i][12], 0);
	PlayerTextDrawTextSize(i,phone_Contact[i][12], 130.000000, 5.000000);
	PlayerTextDrawSetSelectable(i,phone_Contact[i][12],true);
	
	// Localisation
	zoneLocation[i] = CreatePlayerTextDraw(i,87.000000, 329.000000, "_");
	PlayerTextDrawAlignment(i,zoneLocation[i], 2);
	PlayerTextDrawBackgroundColor(i,zoneLocation[i], 255);
	PlayerTextDrawFont(i,zoneLocation[i], 0);
	PlayerTextDrawLetterSize(i,zoneLocation[i], 0.529999, 1.100000);
	PlayerTextDrawColor(i,zoneLocation[i], -1);
	PlayerTextDrawSetOutline(i,zoneLocation[i], 1);
	PlayerTextDrawSetProportional(i,zoneLocation[i], 1);
	return 1;
}

public server_FenceRoad(fence,stat)
{
	if(stat==1) // Abaissé
	{
		switch(fence)
		{
		    case 0:
	     		{MoveDynamicObject(fenceTrain[0],1954.69995, -1950.40002, 13.4,2.0,0.0,90.0,0.0);MoveDynamicObject(fenceTrain[1],1968.40002, -1961.40002, 13.4,2.0,0.0,90.0,180.0);}
	        case 1:
	     		{MoveDynamicObject(fenceTrain[2],2195.30005, -1901.30005, 13.4,2.0,0.0,90.0,90.0);MoveDynamicObject(fenceTrain[3],2206.30005, -1887.80005, 13.4,2.0,0.0,90.0,270.0);}
	        case 2:
	     		{MoveDynamicObject(fenceTrain[4],2194.3999, -1739.5, 13.2,2.0,0.0,90.0,90.0);MoveDynamicObject(fenceTrain[5],2206.30005, -1725.59998, 13.1,2.0,0.0,90.0,270.0);}
	        case 3:
	     		{MoveDynamicObject(fenceTrain[6],2205.80005, -1652.30005, 15,2.0,0.0,90.0,74.0);MoveDynamicObject(fenceTrain[7],2220.30005, -1641.40002, 15.1,2.0,0.0,90.0,256.0);}
	        case 4:
	     		{MoveDynamicObject(fenceTrain[8],2268.1001, -1490.69995, 22.3,2.0,0.0,90.0,75.0);MoveDynamicObject(fenceTrain[9],2282, -1478, 22.5,2.0,0.0,90.0,258.0);}
	        case 5:
	     		{MoveDynamicObject(fenceTrain[10],2268.09961, -1490.69922, 22.3,2.0,0.0,90.0,75);MoveDynamicObject(fenceTrain[11],2292.69995, -1377.19995, 23.9,2.0,0.0,90.0,270);}
	        case 6:
	     		{MoveDynamicObject(fenceTrain[12],2292.69995, -1143.09998, 26.5,2.0,0.0,90.0,269.75);MoveDynamicObject(fenceTrain[13],2281.3999, -1156, 26.4,2.0,0.0,90.0,89.75);}
		}
	}
	else // Levé
	{
	    switch(fence)
		{
		    case 0:
	     		{MoveDynamicObject(fenceTrain[0],1954.69995, -1950.40002, 13.4,2.0,0.0,0.0,0.0);MoveDynamicObject(fenceTrain[1],1968.40002, -1961.40002, 13.4,2.0,0.0,0.0,180.0);}
	        case 1:
	     		{MoveDynamicObject(fenceTrain[2],2195.30005, -1901.30005, 13.4,2.0,0.0,0.0,90.0);MoveDynamicObject(fenceTrain[3],2206.30005, -1887.80005, 13.4,2.0,0.0,0.0,270.0);}
	        case 2:
	     		{MoveDynamicObject(fenceTrain[4],2194.3999, -1739.5, 13.2,2.0,0.0,0.0,90.0);MoveDynamicObject(fenceTrain[5],2206.30005, -1725.59998, 13.1,2.0,0.0,0.0,270.0);}
	        case 3:
	     		{MoveDynamicObject(fenceTrain[6],2205.80005, -1652.30005, 15,2.0,0.0,0.0,74.0);MoveDynamicObject(fenceTrain[7],2220.30005, -1641.40002, 15.1,2.0,0.0,0.0,256.0);}
	        case 4:
	     		{MoveDynamicObject(fenceTrain[8],2268.1001, -1490.69995, 22.3,2.0,0.0,0.0,75.0);MoveDynamicObject(fenceTrain[9],2282, -1478, 22.5,2.0,0.0,0.0,258.0);}
	        case 5:
	     		{MoveDynamicObject(fenceTrain[10],2268.09961, -1490.69922, 22.3,2.0,0.0,0.0,75);MoveDynamicObject(fenceTrain[11],2292.69995, -1377.19995, 23.9,2.0,0.0,0.0,270);}
	        case 6:
	     		{MoveDynamicObject(fenceTrain[12],2292.69995, -1143.09998, 26.5,2.0,0.0,0.0,269.75);MoveDynamicObject(fenceTrain[13],2281.3999, -1156, 26.4,2.0,0.0,0.0,89.75);}
		}
	}
}

stock server_ShowIntroTexts(playerid)
{
    TextDrawShowForPlayer(playerid,text_Intro[0]);
	TextDrawShowForPlayer(playerid,text_Intro[1]);
	TextDrawShowForPlayer(playerid,text_Intro[2]);
	TextDrawShowForPlayer(playerid,text_Intro[3]);
	TextDrawShowForPlayer(playerid,text_Intro[4]);
	TextDrawShowForPlayer(playerid,text_Intro[5]);
	TextDrawShowForPlayer(playerid,text_Intro[6]);
}

stock server_HideIntroTexts(playerid)
{
	TextDrawHideForPlayer(playerid,text_Intro[0]);
	TextDrawHideForPlayer(playerid,text_Intro[1]);
	TextDrawHideForPlayer(playerid,text_Intro[2]);
	TextDrawHideForPlayer(playerid,text_Intro[3]);
	TextDrawHideForPlayer(playerid,text_Intro[4]);
	TextDrawHideForPlayer(playerid,text_Intro[5]);
	TextDrawHideForPlayer(playerid,text_Intro[6]);
}

stock server_BadNames(playerid)
{
	new bool:YesOrNo = false,playerName[32];
	GetPlayerName(playerid,playerName,sizeof(playerName));
	if(strfind(playerName,"Al_Pacino",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Oussama_Benladen",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Brad_Pitt",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Johnny_Halliday",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Michael_Jackson",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Bob_Marley",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Will_Smith",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Adolphe_Hitler",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Bob_Sinclar",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Mister_You",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"David_Guetta",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Nicolas_Sarkozi",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Sean_Paul",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Katty_Perry",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Lisa_Simpson",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Bart_Simpson",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Marge_Simpson",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Homer_Simpson",true) != -1)
		{YesOrNo = true;}
	if(strfind(playerName,"Francois_Hollande",true) != -1)
		{YesOrNo = true;}
    if(strfind(playerName,"Abdel_Ali",true) != -1)
		{YesOrNo = true;}
	if(YesOrNo == true)
		{MySQLKick(playerid,-2,"Nom connu");}
	return 1;
}

stock init_PickupsAndLabels()
{
	// Los Santos
    CreateDynamicPickup(1582, 1, 2109.1106,-1788.5276,13.5608,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot pizza
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de pizza]\nTouche 'Y'",0xC800FFAA, 2109.1106,-1788.5276,13.5608,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(2953, 1, 1743.4943,-1587.6168,13.5524,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot lettres
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de lettres]\nTouche 'Y'",0xC800FFAA, 1743.4943,-1587.6168,13.5524,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[fourrière]\n{FF6E00}[/v recuperer]",INT_LABEL_COLOR,2046.6722,-2103.1965,13.5469, 15, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // fouriere
	CreateDynamicPickup(1239, 1,2046.6722,-2103.1965,13.5469, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamicPickup(1318, 1,1565.0078,-1663.8328,28.3956,0,0,-1,PICKUP_STREAM_DISTANCE);// Toit du comi
	CreateDynamic3DTextLabel("[L.S.P.D]",INT_LABEL_COLOR,1565.0078,-1663.8328,28.3956,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// toit du comi
	CreateDynamicPickup(1318, 1,1524.4834,-1677.8984,6.2188,-1,-1,-1,PICKUP_STREAM_DISTANCE);// Garage du comi
	CreateDynamic3DTextLabel("[L.S.P.D]",INT_LABEL_COLOR,1524.4834,-1677.8984,6.2188,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// garage comi
    CreateDynamicPickup(1239, 1, 210.1814,62.0021,1105.6499,-1,-1,-1,PICKUP_STREAM_DISTANCE); // LSPD
	CreateDynamic3DTextLabel("[Ascenseur]\n{FFFFFF}/+1 ou /-1",0x007F00EE, 210.1814,62.0021,1105.6499,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //LSPD

    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, 250.8718,63.3856,1003.6406-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD
    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, 246.4139,72.5539,1003.6406-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD
    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, 266.3125,83.0912,1001.0391-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD
    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, 266.4200,87.6979,1001.0391-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD
    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, 222.2098,69.7772,1005.0391-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD

	// LSPD
	CreateDynamicPickup(1318, 1, 224.1463,69.1794,1005.0391,-1,6,-1,PICKUP_STREAM_DISTANCE);// Intérrogatoire
	CreateDynamic3DTextLabel("[Intérrogatoire]",INT_LABEL_COLOR, 224.1463,69.1794,1005.0391,8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,6,-1,LABEL_STREAM_DISTANCE);
	CreateDynamicPickup(1318, 1, 227.5003,66.7387,1005.0391,-1,6,-1,PICKUP_STREAM_DISTANCE);// Intérrogatoire Sortie
	CreateDynamic3DTextLabel("[Sortie]",INT_LABEL_COLOR, 227.5003,66.7387,1005.0391,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,6,-1,LABEL_STREAM_DISTANCE);

	// Prison
    CreateDynamicPickup(1318, 1, 943.1296, -2406.0750, 13.2669,-1,-1,-1,PICKUP_STREAM_DISTANCE);// Cours vers garage
	CreateDynamic3DTextLabel("[Cours]",INT_LABEL_COLOR, 943.1296, -2406.0750, 13.2669,8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamicPickup(1318, 1, 940.5402, -2407.4331, 13.2669,-1,-1,-1,PICKUP_STREAM_DISTANCE);// Garage vers cours
	CreateDynamic3DTextLabel("[Garage]",INT_LABEL_COLOR, 940.5402, -2407.4331, 13.2669,8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	
    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, 1535.5748,-1672.8845,13.3828+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 1535.5748,-1672.8845,13.3828,0,0,-1,PICKUP_STREAM_DISTANCE); // Devant SFPD
    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, 1528.9774,-1677.7332,5.8906+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 1528.9774,-1677.7332,5.8906,0,0,-1,PICKUP_STREAM_DISTANCE); // Garage
    //CreateDynamic3DTextLabel("[Arrestation | Garde à vue]",0xFF0000F6, -5.5212,1788.2157,1518.0210+0.5,8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    //CreateDynamicPickup(1314, 1, -5.5212,1788.2157,1518.0210,-1,-1,-1,PICKUP_STREAM_DISTANCE); // Intérieur
    
    CreateDynamic3DTextLabel("[Arrestation | Garde à vue]",0xFF0000F6, 220.7416,64.7714,1105.6499+0.5,8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 220.7416,64.7714,1105.6499,-1,-1,-1,PICKUP_STREAM_DISTANCE); // Intérieur
    
    /*CreateDynamic3DTextLabel("[Cellule 1]\nGarde à vue",0xFF0000F6, -7.5418,1788.8070,1518.0210,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 1
    CreateDynamic3DTextLabel("[Cellule 2]\nGarde à vue",0xFF0000F6, -7.5342,1792.1716,1518.0210,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 2
    CreateDynamic3DTextLabel("[Cellule 3]\nGarde à vue",0xFF0000F6, -7.5355,1795.5330,1518.0210,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 3
    CreateDynamic3DTextLabel("[Cellule 4]\nGarde à vue",0xFF0000F6, -7.5348,1798.9329,1518.0210,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 4*/

    CreateDynamic3DTextLabel("[Cellule 1]\nGarde à vue",0xFF0000F6, 218.3962,68.4960,1105.6499,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 1
    CreateDynamic3DTextLabel("[Cellule 2]\nGarde à vue",0xFF0000F6, 218.3988,73.9284,1105.6499,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 2
    
    CreateDynamic3DTextLabel("Concession - Pauvre",0xFF006800, 2132.9814,-1123.0013,25.4103,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 1
    CreateDynamic3DTextLabel("Concession - Luxe",0xFF006800, 558.0262,-1253.7395,17.1186,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 2
    CreateDynamic3DTextLabel("Concession - Moto",0xFF006800, 424.5511,-1351.6925,15.0403,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 1
    CreateDynamic3DTextLabel("Concession - Bâteau",0xFF006800, 852.4703,-1888.0619,1.9805,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 2
    CreateDynamic3DTextLabel("Consession - 4x4",0xFF006800, 1108.4229,-1744.6583,13.3984,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Garde à vue 2
    
    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, 2510.4873,-1512.8914,24.0000+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 2510.4873,-1512.8914,24.0000,0,0,-1,PICKUP_STREAM_DISTANCE); // LS Ouest


    /*CreateDynamicPickup(1318, 1,210.1854,61.9285,1105.6499,0,0,-1,PICKUP_STREAM_DISTANCE);// LSPD Est
	CreateDynamic3DTextLabel("[Garage]",INT_LABEL_COLOR,210.1854,61.9285,1105.6499,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// toit du comi
    CreateDynamicPickup(1318, 1,2509.0774,-1542.7053,24.4796,0,0,-1,PICKUP_STREAM_DISTANCE);// LSPD Est
	CreateDynamic3DTextLabel("[L.S.P.D]",INT_LABEL_COLOR,2509.0774,-1542.7053,24.4796,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// toit du comi*/


	CreateDynamicPickup(1274, 1, -1111.2820,-1637.3197,76.3672,-1,-1,-1,PICKUP_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[Achat de graines]\n{FFFFFF}Touche 'N'",0x007F00EE, -1111.2820,-1637.3197,76.8672,30,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	CreateDynamicPickup(1274, 1, -1028.1726,-1183.2521,129.2188,-1,-1,-1,PICKUP_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[Achat de graines]\n{FFFFFF}Touche 'N'",0x007F00EE, -1028.1726,-1183.2521,129.7188,30,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	//banque
	CreateDynamic3DTextLabel("[/pirater]\n{FFFFFF}Pour pirater le système de sécurité",0x007F00EE, 2167.1189,1600.0259,1000.4740,15,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // equiper pompier
	CreateDynamicPickup(1239, 1, 2167.1189,1600.0259,999.9740, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Entrée]",INT_LABEL_COLOR,1426.8406,-968.6021,37.4268, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Entrée magasin
	CreateDynamicPickup(1318, 1, 1426.8406,-968.6021,37.4268, -1,-1,-1,PICKUP_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[Toit Banque]",INT_LABEL_COLOR,1512.1113,-942.3927,-7.0812, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Entrée Toit banque
	CreateDynamicPickup(1318, 1, 1512.1113,-942.3927,-7.0812, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Toit Banque]",INT_LABEL_COLOR,1423.8717,-971.8007,46.9375, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Sortie Toit banque
	CreateDynamicPickup(1318, 1, 1423.8717,-971.8007,46.9375, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Escalier]",INT_LABEL_COLOR,1462.1520,-1007.1535,57.5132, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Entrée toit escalier
	CreateDynamicPickup(1318, 1, 1462.1520,-1007.1535,57.5132, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Escalier]",INT_LABEL_COLOR,1463.9150,-977.8880,-27.5934, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Sortie toit escalier
	CreateDynamicPickup(1318, 1, 1463.9150,-977.8880,-27.5934, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Escalier]",INT_LABEL_COLOR,2168.2263,1618.6057,999.9782, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Entrée banque escalier
	CreateDynamicPickup(1318, 1, 2168.2263,1618.6057,999.9782, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Escalier]",INT_LABEL_COLOR,1462.8584,-970.0491,-50.1841, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Sortie toit escalier
	CreateDynamicPickup(1318, 1, 1462.8584,-970.0491,-50.1841, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Toit San News]",INT_LABEL_COLOR,1820.1159667969,-1286.6590576172,131.35299682617, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Entrée Toit San News
	CreateDynamicPickup(1318, 1, 1462.8584,-970.0491,-50.1841, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[Toit San News]",INT_LABEL_COLOR,1822.7280273438,-1312.0400390625,125.34200286865, 10, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Sortie Toit San News
	CreateDynamicPickup(1318, 1, 1462.8584,-970.0491,-50.1841, -1,-1,-1,PICKUP_STREAM_DISTANCE);

	CreateDynamicPickup(1239, 1, 2144.0420,1638.5311,993.5761);
	CreateDynamic3DTextLabel("[/braquer]\n{FFFFFF}Un sac par braqueur, maximum 2 braqueurs",0x007F00EE, 2144.0420,1638.5311,994.0761,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	CreateDynamicPickup(1239, 1, 2142.5330,1625.7997,993.6882); // Mot de passe banque
	CreateDynamic3DTextLabel("[/decoder]\n{FFFFFF}Décoder le code de sécurité\n\n{007F00}[/code]\n{FFFFFF}Ouvrir la porte",0x007F00EE, 2142.5330,1625.7997,994.0882,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	CreateDynamicPickup(1239, 1, 1806.1897,-1294.9735,13.5411); // AD
	CreateDynamic3DTextLabel("[Publicité]\n{FFFFFF}Touche 'N'",0x007F00EE, 1806.1897,-1294.9735,14.0411,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

    CreateDynamicPickup(1318, 1, 2290.1350,-1795.9376,13.5469,-1,0,-1,PICKUP_STREAM_DISTANCE);// HLM Ganton
	CreateDynamic3DTextLabel("[HLM Ganton]",INT_LABEL_COLOR, 2290.1350,-1795.9376,13.5469,8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,0,-1,LABEL_STREAM_DISTANCE);
	CreateDynamicPickup(1318, 1, 2246.7029, -1815.1901, 2021.5798,-1,0,-1,PICKUP_STREAM_DISTANCE);// HLM Ganton Sortie
	CreateDynamic3DTextLabel("[Sortie]",INT_LABEL_COLOR, 2246.7029, -1815.1901, 2021.5798,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,0,-1,LABEL_STREAM_DISTANCE);

    CreateDynamicPickup(1318, 1,1958.7234,-1560.5118,13.5947,-1,0,-1,PICKUP_STREAM_DISTANCE);// HLM Idle
	CreateDynamic3DTextLabel("[HLM D'Idlewood]",INT_LABEL_COLOR, 1958.7234,-1560.5118,13.5947,8,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,0,-1,LABEL_STREAM_DISTANCE);
	CreateDynamicPickup(1318, 1, 1796.7156,-1299.4781,2132.6875,-1,0,-1,PICKUP_STREAM_DISTANCE);// HLM Idle Sortie
	CreateDynamic3DTextLabel("[Sortie]",INT_LABEL_COLOR, 1796.7156,-1299.4781,2132.6875,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,0,-1,LABEL_STREAM_DISTANCE);

	// FBI
	/*CreateDynamic3DTextLabel("[/fbi duty]",CMDS_LABEL, 222.6777,188.2729,1003.0313,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[/fbi equiper]",CMDS_LABEL, 222.3618,184.8408,1003.0313,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[/fbi rechercher]",CMDS_LABEL, 216.1088,183.2545,1003.0313,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[/fbi plaque]",CMDS_LABEL, 222.7572,174.8851,1003.0268,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[/fbi plaque]",CMDS_LABEL, 222.6915,170.7846,1003.0234,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[/fbi tactique]",CMDS_LABEL, 213.8998,185.1251,1003.0313,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[/fbi casier]",CMDS_LABEL, 222.7623,166.5473,1003.0234,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamic3DTextLabel("[/fbi casier]",CMDS_LABEL, 222.7450,162.4281,1003.0300,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);*/

	CreateDynamicPickup(1239, 1, -1061.5067,-1195.4683,129.8281,0,0,-1,PICKUP_STREAM_DISTANCE); // Ferme mafia
	CreateDynamic3DTextLabel("[/mafia drogue ecst(asy) creer]",0x007F00EE, -1061.5067,-1195.4683,130.3281,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Ferme mafia
	CreateDynamicPickup(1239, 1, 2446.3767,-1971.1740,13.5469,0,0,-1,PICKUP_STREAM_DISTANCE); // Gang CrackHouse
	CreateDynamic3DTextLabel("[/gang crackhouse]",0x007F00EE, 2446.3767,-1971.1740,14.0469,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Gang CrackHouse
	CreateDynamicPickup(1239, 1, -1079.8894,-1195.6946,129.7344,0,0,-1,PICKUP_STREAM_DISTANCE); // mafia creer drogue
	CreateDynamic3DTextLabel("[/mafia drogue coca(ine) creer]\n{FFFFFF}Pour creer de la cocaïne",0x007F00EE, -1079.8894,-1195.6946,130.2344,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // mafia creer drogue
	CreateDynamicPickup(1239, 1, -1068.0846,-1211.5310,129.7813,0,0,-1,PICKUP_STREAM_DISTANCE); // mafia creer drogue
	CreateDynamic3DTextLabel("[/mafia drogue hero(ine) synt(hetiser)]\n{FFFFFF}Pour creer d'héroïne",0x007F00EE, -1068.0846,-1211.5310,130.2813,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // mafia creer drogue
	CreateDynamicPickup(1239, 1, 2229.9646,-2286.3779,14.3751,0,0,-1,PICKUP_STREAM_DISTANCE); // mafia achetermatos
	CreateDynamic3DTextLabel("[/mafia arme matos]",0x007F00EE, 2229.9646,-2286.3779,14.8751,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // mafia achetermatos
	CreateDynamicPickup(1239, 1, 2141.9185,-2257.4111,13.2985,0,0,-1,PICKUP_STREAM_DISTANCE); // mafia creer arme
	CreateDynamic3DTextLabel("[/mafia arme creer]",0x007F00EE, 2141.9185,-2257.4111,13.7985,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // mafia creer arme
    CreateDynamicPickup(1239, 1, 2143.7412,-2255.4045,13.2987,0,0,-1,PICKUP_STREAM_DISTANCE); // mafia creer décodeur
	CreateDynamic3DTextLabel("[/mafia decodeur]\nCréation d'un décodeur",0x007F00EE, 2143.7412,-2255.4045,13.7987,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // mafia creer arme

	CreateDynamicPickup(1318, 1, 2315.4529,0.3478,26.7422); // Banque pick up
	CreateDynamic3DTextLabel("[Salle des Coffres]",INT_LABEL_COLOR, 2315.4529,0.3478,26.7422,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	CreateDynamic3DTextLabel("[San News]",INT_LABEL_COLOR, 1792.0664,-1286.7233,13.6617,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamicPickup(1239, 1, 1792.0664,-1286.7233,13.6617,0,0,-1,PICKUP_STREAM_DISTANCE); //San News

	CreateDynamicPickup(1318, 1, 1570.3828,-1333.8882,16.4844); // Building next ABC
	CreateDynamic3DTextLabel("[Building San News]",INT_LABEL_COLOR, 1570.3828,-1333.8882,16.4844,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	CreateDynamicPickup(1318, 1, 1548.7045,-1363.8790,326.2183); // Building next ABC
	CreateDynamic3DTextLabel("[Sortie]",INT_LABEL_COLOR, 1548.7045,-1363.8790,326.2183,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	CreateDynamicPickup(1314, 1, 1658.6390,-1691.3785,15.6094); //Arrest Place FBI //1658.6390,-1691.3785,15.6094 1510.5193,-1467.4611,9.5000

    CreateDynamicPickup(1601, 1, 894.2875,-1911.7617,1.1277,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot poisson
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de poisson]\nTouche 'Y'",0xC800FFAA, 894.2875,-1911.7617,1.1277,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);


	// San Fierro
	CreateDynamicPickup(1582, 1, -1809.9154,941.4058,24.8733,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot pizza
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de pizza]\nTouche 'Y'",0xC800FFAA, -1809.9154,941.4058,24.8733,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(2953, 1, -2351.2158,496.2127,30.7586,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot lettres
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de lettres]\nTouche 'Y'",0xC800FFAA, -2351.2158,496.2127,30.7586,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, -1605.1323,722.1053,11.9014+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, -1605.1323,722.1053,11.9014,0,0,-1,PICKUP_STREAM_DISTANCE); // Devant SFPD
    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, -1606.3580,677.3879,-5.2422+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, -1606.3580,677.3879,-5.2422,0,0,-1,PICKUP_STREAM_DISTANCE); // Garage
    CreateDynamicPickup(1239, 1, -1611.2024,691.5895,14.4749,-1,-1,-1,PICKUP_STREAM_DISTANCE); // SFPD
	CreateDynamic3DTextLabel("[Ascenseur]\n{FFFFFF}/+1 ou /-1",0x007F00EE, -1611.2024,691.5895,14.4749,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Ferme mafia
    CreateDynamicPickup(1318, 1,-1663.3287,689.3226,24.8906,0,0,-1,PICKUP_STREAM_DISTANCE);// Toit du comi
	CreateDynamic3DTextLabel("[S.F.P.D]",INT_LABEL_COLOR,-1663.3287,689.3226,24.8906,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// toit du comi
	CreateDynamicPickup(1318, 1,-1606.3068,672.0677,-4.9063,0,0,-1,PICKUP_STREAM_DISTANCE);// Garage du comi
	CreateDynamic3DTextLabel("[S.F.P.D]",INT_LABEL_COLOR,-1606.3068,672.0677,-4.9063,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// garage comi
    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, -1601.3181,708.1174,14.4733-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD
    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, -1583.7675,712.8694,10.1049-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD
    CreateDynamic3DTextLabel("{FFFFFF}[N]",0x007F00EE, -1589.0170,712.9070,10.1049-0.5,2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //Porte LSPD

	// Las Venturas
	CreateDynamicPickup(1582, 1, 2078.3313,2229.9302,11.0234,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot pizza
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de pizza]\nTouche 'Y'",0xC800FFAA, 2078.3313,2229.9302,11.0234,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(2953, 1, 2267.0444,2291.2073,10.8203,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot lettres
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de lettres]\nTouche 'Y'",0xC800FFAA, 2267.0444,2291.2073,10.8203,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, 2289.8010,2419.3750,10.8203+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 2289.8010,2419.3750,10.8203,0,0,-1,PICKUP_STREAM_DISTANCE); // Devant LVPD
    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, 2281.5134,2431.1113,3.2734+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 2281.5134,2431.1113,3.2734,0,0,-1,PICKUP_STREAM_DISTANCE); // Garage
    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, 2281.8916,2430.8296,-7.4531+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 2281.8916,2430.8296,-7.4531,0,0,-1,PICKUP_STREAM_DISTANCE); // Garage
    
	// Fort Carson
	CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, -211.7334,979.2934,19.3238+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, -211.7334,979.2934,19.3238,0,0,-1,PICKUP_STREAM_DISTANCE); // Arrestation SASD
	
	// Bayside
	CreateDynamicPickup(1601, 1, -2186.6272,2414.9634,5.1563,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot poisson
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de poisson]\nTouche 'Y'",0xC800FFAA, -2186.6272,2414.9634,5.1563,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

	
	// Angel Pine
	CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, -2164.3821,-2389.4438,30.6172+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, -2164.3821,-2389.4438,30.6172,0,0,-1,PICKUP_STREAM_DISTANCE); // Arrestation SASD
	
	// Dillimore
	CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, 611.2042,-588.4329,17.2266+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, 611.2042,-588.4329,17.2266,0,0,-1,PICKUP_STREAM_DISTANCE); // Arrestation SASD

    CreateDynamicPickup(1318, 1,621.3574,-569.6011,26.1432,0,0,-1,PICKUP_STREAM_DISTANCE);// Toit du comi
	CreateDynamic3DTextLabel("[S.A.S.D]",INT_LABEL_COLOR,621.3574,-569.6011,26.1432,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// toit du comi
	CreateDynamicPickup(1318, 1,611.0023,-583.8382,18.0547,-1,-1,-1,PICKUP_STREAM_DISTANCE);// Garage du comi
	CreateDynamic3DTextLabel("[S.A.S.D]",INT_LABEL_COLOR,611.0023,-583.8382,18.0547,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);// garage comi
    CreateDynamicPickup(1239, 1, 617.9194,-540.5110,2997.5996,-1,-1,-1,PICKUP_STREAM_DISTANCE); // SASD
	CreateDynamic3DTextLabel("[Ascenseur]\n{FFFFFF}/+1 ou /-1",0x007F00EE, 617.9194,-540.5110,2997.5996,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); //SASD
	
	// Blueberry
	
	// Montgomery
	
	// Palomino Creek
	
	// Las Payasdas
	
	// Las Barbancas
	
	// El Quebrados
	CreateDynamicPickup(3930, 1, -1364.0155,2451.7180,89.8348,0,0,-1,PICKUP_STREAM_DISTANCE); // Dépot minerai
	CreateDynamic3DTextLabel("{FFFFFF}[Dépot de minerai]\nTouche 'Y'",0xC800FFAA, -1364.0155,2451.7180,89.8348,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
    CreateDynamic3DTextLabel("[Arrestation]",0xFF0000F6, -1396.3418,2643.1199,55.8211+0.5,6,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,LABEL_STREAM_DISTANCE);
    CreateDynamicPickup(1314, 1, -1396.3418,2643.1199,55.8211,0,0,-1,PICKUP_STREAM_DISTANCE); // Arrestation SASD
    
	// San Andreas

	// Divers
	CreateDynamic3DTextLabel("{FFFFFF}[/epouser]",0x007F00EE,1964.0453,-368.9279,1093.7289, 15, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Epouser
    CreateDynamic3DTextLabel("{FFFFFF}[Lit 1]\nTouche 'N'",0x007F00EE,-3441.3567,478.4872,57.6132, 3.5, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Epouser
    CreateDynamic3DTextLabel("{FFFFFF}[Lit 2]\nTouche 'N'",0x007F00EE,-3441.2600,474.9741,57.6132, 3.5, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Epouser
    CreateDynamic3DTextLabel("{FFFFFF}[Lit 3]\nTouche 'N'",0x007F00EE,-3447.6213,478.0588,57.6132, 3.5, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Epouser
    CreateDynamic3DTextLabel("{FFFFFF}[Lit 4]\nTouche 'N'",0x007F00EE,-3449.8757,475.9037,57.6132, 3.5, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Epouser

	// Actor - Sbiz
	CreateDynamic3DTextLabel("(( Touche 'N' ))",0xFFFFFFDD,664.2232,-566.8362,16.3433+1.05,NAME_DISTANCE,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Station essence
	CreateDynamic3DTextLabel("(( Touche 'N' ))",0xFFFFFFDD,298.1290,1281.4362,1082.6399+1.05,NAME_DISTANCE,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE); // Opérateur
	//CreateDynamic3DTextLabel("(( Touche 'N' ))",0xFFFFFFDD,x1, y1, z1+1.05,NAME_DISTANCE,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	
}

stock init_MapIcon()
{
	CreateDynamicMapIcon(1958.0336,-2182.2905,13.5469,5,COLOR_WHITE,-1,-1,-1,500.0);  // Aéroport
	CreateDynamicMapIcon(696.9516,-1185.7286,15.5819,27,COLOR_WHITE,-1,-1,-1,500.0);  // Garage Néon
}

stock init_Actors()
{
	// Actor Jobs
	// LS
	CreateDynamicLvrpActor(155, 2117.3208,-1790.5564,13.5547,352.0250, 0, true ,3, 1,"Employeur\n(( Touche 'N' ))"); // Pizza
	CreateDynamicLvrpActor(158, -382.6989,-1426.2883,26.2492,272.4376, 0, true ,3, 2,"Employeur\n(( Touche 'N' ))"); // Fermier
	CreateDynamicLvrpActor(262, 2276.6580,-2226.9092,13.5469,146.6447, 0, true ,3, 4,"Employeur\n(( Touche 'N' ))"); // Eboueur
	CreateDynamicLvrpActor(61, 1969.4204,-2189.0742,13.5469,359.3766, 0, true ,3, 6,"Employeur\n(( Touche 'N' ))"); // Polite de Ligne
	CreateDynamicLvrpActor(43, 1743.1252,-1582.0260,13.5494,275.0892, 0, true ,3, 7,"Employeur\n(( Touche 'N' ))"); // Facteur
	CreateDynamicLvrpActor(35, 906.1063,-1904.2996,1.1277,95.0892, 0, true ,3, 8,"Employeur\n(( Touche 'N' ))"); // Pecheur
	CreateDynamicLvrpActor(189, 321.8867,-1519.5338,36.0391,230.4740, 0, true ,3, 9,"Employeur\n(( Touche 'N' ))"); // Voiturier
	CreateDynamicLvrpActor(133, 2422.9304,-2075.8716,13.5538,94.9911, 0, true ,3, 10,"Employeur\n(( Touche 'N' ))"); // Camioneur
	CreateDynamicLvrpActor(274, 1181.0850,-1330.5525,13.5850,269.5194, 0, true ,3, 11,"Employeur\n(( Touche 'N' ))"); // Médecin
	CreateDynamicLvrpActor(50, 1008.4938,-1358.3921,13.3909,0.0, 0, true ,3, 17,"Employeur\n(( Touche 'N' ))"); // Mécanicien
	CreateDynamicLvrpActor(71, 1516.9620,-1022.1600,23.8301,181.4486, 0, true ,3, 19,"Employeur\n(( Touche 'N' ))"); // Transporteur de fonds
	
	// SF
	CreateDynamicLvrpActor(155, -1815.3105,943.3864,24.8759,191.6203, 0, true ,3, 1,"Employeur\n(( Touche 'N' ))"); // Pizza
	CreateDynamicLvrpActor(262, -1750.2870,152.5881,3.5496,191.6203, 0, true ,3, 4,"Employeur\n(( Touche 'N' ))"); // Eboueur
	CreateDynamicLvrpActor(61, -1547.5005,-446.1422,6.0780,49.5574, 0, true ,3, 6,"Employeur\n(( Touche 'N' ))"); // Pilote de Ligne
	CreateDynamicLvrpActor(43, -2352.1438,487.6365,30.9377,102.1980, 0, true ,3, 7,"Employeur\n(( Touche 'N' ))"); // Facteur
	CreateDynamicLvrpActor(189, -1748.6990,963.1538,24.8828,175.2053, 0, true ,3, 9,"Employeur\n(( Touche 'N' ))"); // Voiturier
	CreateDynamicLvrpActor(133, -1830.1073,109.7215,15.1172,272.9663, 0, true ,3, 10,"Employeur\n(( Touche 'N' ))"); // Camioneur
	CreateDynamicLvrpActor(274, -2675.5239,634.4839,14.4531,181.4721, 0, true ,3, 11,"Employeur\n(( Touche 'N' ))"); // Médecin
	
	// LV
	CreateDynamicLvrpActor(155, 2079.7104,2224.2986,11.0300,179.2787, 0, true ,3, 1,"Employeur\n(( Touche 'N' ))"); // Pizza
	CreateDynamicLvrpActor(262, 997.8489,2122.0977,10.8203,266.6996, 0, true ,3, 4,"Employeur\n(( Touche 'N' ))"); // Eboueur
	CreateDynamicLvrpActor(260, 2481.3362,1958.0083,10.6214,174.8920, 0, true ,3, 5,"Employeur\n(( Touche 'N' ))"); // Ouvrier
	CreateDynamicLvrpActor(61, 1719.8398,1615.4611,10.0538,168.6253, 0, true ,3, 6,"Employeur\n(( Touche 'N' ))"); // Pilote de Ligne
	CreateDynamicLvrpActor(43, 2275.3486,2292.8748,10.8203,179.5687, 0, true ,3, 7,"Employeur\n(( Touche 'N' ))"); // Facteur
	CreateDynamicLvrpActor(133, 2777.7131,901.5146,10.8984,268.5562, 0, true ,3, 10,"Employeur\n(( Touche 'N' ))"); // Camioneur
	CreateDynamicLvrpActor(274, 1595.2208,1819.5544,10.8203,2.8704, 0, true ,3, 11,"Employeur\n(( Touche 'N' ))"); // Médecin
	
	// FC
	CreateDynamicLvrpActor(274, -314.0294,1049.9441,20.3403,90.9179, 0, true ,3, 11,"Employeur\n(( Touche 'N' ))"); // Médecin
	
	// BS
	CreateDynamicLvrpActor(35, -2185.0840,2417.5498,5.1980,140.1351, 0, true ,3, 8,"Employeur\n(( Touche 'N' ))"); // Pêcheur
	
	// Blue Berry
	CreateDynamicLvrpActor(158, -58.9845,86.9536,3.1172,254.5029, 0, true ,3, 2,"Employeur\n(( Touche 'N' ))"); // Fermier
	
	// MontGomery
	CreateDynamicLvrpActor(274, 1249.3186,326.0113,19.7578,338.7669, 0, true ,3, 11,"Employeur\n(( Touche 'N' ))"); // Médecin
	
	// El Quebrados
	CreateDynamicLvrpActor(260, -1357.5438,2450.8828,88.9278,301.7932, 0, true ,3, 3,"Employeur\n(( Touche 'N' ))"); // Mineur
	
	// Police
	CreateDynamicLvrpActor(306, 221.4747,50.6345,1105.6499,270.0, 0, true ,4, 1,"Accueil\n(( Touche 'N' ))"); // Accueil 1 LS
	
	// San News
	CreateDynamicLvrpActor(56, 1803.3008,-1286.7659,13.6443,124.0, 0, true ,4, 10,"Accueil\n(( Touche 'N' ))"); // Accueil 1 LS
	CreateDynamicLvrpActor(56, 1800.9873,-1283.6062,13.6506,124.0, 0, true ,4, 10,"Accueil\n(( Touche 'N' ))"); // Accueil 2 LS
	
	// Mairie
	CreateDynamicLvrpActor(141, 359.7139,173.8550,1008.3893,270.0, 1, true ,4, 6,"Accueil\n(( Touche 'N' ))"); // Accueil 1 LS
	CreateDynamicLvrpActor(9, 356.2974,168.9845,1008.3762,270.0, 1, true ,4, 6,"Accueil\n(( Touche 'N' ))"); // Accueil 2 LS
	CreateDynamicLvrpActor(76, 356.2975,166.2407,1008.3762,270.0, 1, true ,4, 6,"Accueil\n(( Touche 'N' ))"); // Accueil 3 LS
	CreateDynamicLvrpActor(9, 356.2973,163.1892,1008.3762,270.0, 1, true ,4, 6,"Accueil\n(( Touche 'N' ))"); // Accueil 4 LS
	CreateDynamicLvrpActor(76, 356.2977,178.6235,1008.3762,270.0, 1, true ,4, 6,"Accueil\n(( Touche 'N' ))"); // Accueil 5 LS
	CreateDynamicLvrpActor(9, 356.2954,182.6473,1008.3762,270.0, 1, true ,4, 6,"Accueil\n(( Touche 'N' ))"); // Accueil 6 LS
	CreateDynamicLvrpActor(76, 356.2966,186.1962,1008.3762,270.0, 1, true ,4, 6,"Accueil\n(( Touche 'N' ))"); // Accueil 7 LS
	
	// fourrière
	CreateDynamicLvrpActor(50, 2204.1672,-1982.8456,13.5469,270.0, 0, true ,5, 1,"Retirer son véhicule [$1000]\n(( Touche 'N' ))"); // fourrière normale
	CreateDynamicLvrpActor(71, 1627.0397,-1862.6392,13.5391,180.0, 0, true ,5, 2,"Fourrière LSPD\n(( Touche 'N' ))"); // fourrière normale
	
	/*// Intro Gare
    intro_ActorGare[0] = CreateActor(102, 1811.702148, -1864.050048, 13.570352, 283.053161);
	intro_ActorGare[1] = CreateActor(103, 1813.229614, -1864.938476, 13.570352, 34.183353);
	intro_ActorGare[2] = CreateActor(104, 1813.310913, -1863.263427, 13.570352, 141.741256);
	intro_ActorGare[3] = CreateActor(107, 1831.043701, -1858.428710, 13.578125, 77.841537);
	intro_ActorGare[4] = CreateActor(106, 1830.732055, -1857.000732, 13.578125, 109.989830);
	intro_ActorGare[5] = CreateActor(143, 1814.877929, -1900.201416, 13.575553, 358.859802);
	intro_ActorGare[6] = CreateActor(280, 1814.774047, -1903.311157, 13.572414, 358.859802);
	intro_ActorGare[7] = CreateActor(173, 1841.645874, -1871.660522, 14.564254, 80.252456);
	intro_ActorGare[8] = CreateActor(174, 1841.418823, -1869.938964, 13.389747, 46.705787);
	intro_ActorGare[9] = CreateActor(56, 1849.872314, -1860.326660, 13.585107, 177.141510);
	intro_ActorGare[10] = CreateActor(67, 1849.828979, -1862.927490, 13.578125, 0.316517);
	intro_ActorGare[11] = CreateActor(53, 1848.085449, -1861.155395, 13.585107, 243.630279);
	intro_ActorGare[12] = CreateActor(108, 1833.232299, -1845.368652, 13.578125, 91.002838);
	intro_ActorGare[13] = CreateActor(110, 1833.231445, -1846.594970, 13.578125, 86.637039);
	intro_ActorGare[14] = CreateActor(184, 1813.763061, -1843.824584, 13.578125, 139.915328);

	for(new i=0; i<15; i++)
		{SetActorVirtualWorld(intro_ActorGare[i],1);}

	ApplyDynamicActorAnimation(intro_ActorGare[0],"GANGS", "prtial_gngtlkA",4.0,1,0,0,1,0);
	ApplyDynamicActorAnimation(intro_ActorGare[1],"GANGS", "prtial_gngtlkA",4.0,1,0,0,1,0);
	ApplyDynamicActorAnimation(intro_ActorGare[2],"GANGS", "prtial_gngtlkA",4.0,1,0,0,1,0);
	ApplyDynamicActorAnimation(intro_ActorGare[3],"BEACH", "ParkSit_M_loop", 4.1, 0, 1, 1, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[4],"BEACH", "ParkSit_M_loop", 4.1, 0, 1, 1, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[5],"PED","sprint_civi",4.0,1,1,1,0,0);
	ApplyDynamicActorAnimation(intro_ActorGare[6],"PED","sprint_civi",4.0,1,1,1,0,0);
	ApplyDynamicActorAnimation(intro_ActorGare[7],"BEACH", "ParkSit_M_loop", 4.1, 0, 1, 1, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[8],"DEALER", "DEALER_IDLE_01", 4.1, 1, 1, 1, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[9],"PED", "handsup", 4.1, 1, 0, 0, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[10],"PED","gang_gunstand",4.1,1,0,0,1,0);
	ApplyDynamicActorAnimation(intro_ActorGare[11],"PED", "cower", 3.0, 1, 0, 0, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[12],"SMOKING", "M_smklean_loop", 4.1, 1, 0, 0, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[13],"SMOKING", "M_smklean_loop", 4.1, 1, 0, 0, 1, 0);
	ApplyDynamicActorAnimation(intro_ActorGare[14],"CRACK", "crckdeth2", 4.0, 1, 0, 0, 1, 0);*/


	// Prison
	CreateDynamicLvrpActor(71, 919.7765, -2370.7874, 13.2474, 208.3816, 0, true ,0, 0,""); // Prison acceuil
}

stock init_Mapping()
{
	//                          ============================
	//                              Anti BUG - Ne pas sup
	//                          ============================
    CreateDynamicObject(1506, 321.43701171875, 301.90399169922, 998.14801025391, 0, 0, 0); // Porte FCPD
    // Correction intérieur Station Essence
	CreateDynamicObject(19346, 2473.6330566406, -1680.5760498047, 12.383999824524, 0, 0, 6);
	CreateDynamicObject(19364, 663.80603027344, -565.21301269531, 17.093999862671, 0, 0, 90);
	CreateDynamicObject(19364, 667.00299072266, -565.20397949219, 17.093999862671, 0, 0, 90);
	CreateDynamicObject(19364, 670.17797851563, -565.19396972656, 17.093999862671, 0, 0, 90);
	CreateDynamicObject(19364, 670.01599121094, -566.96002197266, 17.093999862671, 0, 0, 0);
	CreateDynamicObject(19364, 663.93103027344, -567.81201171875, 14.444000244141, 0, 0, 90);
	CreateDynamicObject(19364, 666.71997070313, -570.46002197266, 15.41100025177, 0, 0, 90);
	CreateDynamicObject(19364, 669.90002441406, -570.44897460938, 15.41100025177, 0, 0, 90);
	CreateDynamicObject(19364, 662.16101074219, -569.47399902344, 16.211999893188, 0, 0, 0);
	CreateDynamicObject(19364, 662.18298339844, -570.39898681641, 16.211999893188, 0, 0, 0);
	// Correction intérieur Biz Restaurant
	CreateDynamicObject(19387, 453.87399291992, -18.148000717163, 1001.8829956055, 0, 0, 0);
	CreateDynamicObject(1504, 453.87600708008, -18.892999649048, 1000.1329956055, 0, 0, 90);
	CreateDynamicObject(2208, 444.99200439453, -10.079999923706, 999.73400878906, 0, 0, 0);
	CreateDynamicObject(2941, 445.20401000977, -9.9479999542236, 1000.9459838867, 0, 0, 330);
	CreateDynamicObject(1716, 446.12399291992, -8.8540000915527, 999.73400878906, 0, 0, 0);
	//Correction divers intérieurs
	CreateDynamicObject(3089, 2146.1000976563, 1601.5999755859, 1002.299987793, 0, 0, 90);
	CreateDynamicObject(3089, 2146.1000976563, 1604.5999755859, 1002.299987793, 0, 0, 270);
	CreateDynamicObject(3037, 2146.1000976563, 1602.8000488281, 1005.799987793, 0, 0, 0);
	CreateDynamicObject(3089, 2168.6000976563, 1617.9399414063, 1000.299987793, 0, 0, 90);
	CreateDynamicObject(1507, 968.5, -54, 1000.0999755859, 0, 0, 90);
	CreateDynamicObject(2904, 968.5, -53, 1001.4000244141, 0, 0, 90);
	CreateDynamicObject(2904, 968.5, -53, 1004, 0, 0, 90);
	CreateDynamicObject(971, 2071.6101074219, -1830.8179931641, 13.11699962616, 0, 0, 90);
	CreateDynamicObject(971, 1042.4959716797, -1026.0250244141, 31.621000289917, 0, 0, 0);
	CreateDynamicObject(971, 1026.5799560547, -1029.4720458984, 31.892000198364, 0, 0, 0);
	CreateDynamicObject(971, -2716.1850585938, 217.40899658203, 3.8619999885559, 0, 0, 90);
	//Spawn Bombe
	CreateDynamicObject(980, 485.1130065918, -1734.2170410156, 12.871999740601, 0, 0, 351.60375976563);
	// Jail
	CreateDynamicObject(18769, 7284.7709960938, -1523.0460205078, 0, 0, 0, 0);
	CreateDynamicObject(18783, 7284.7490234375, -1523.0539550781, 3, 0, 0, 0.080078125);
	CreateDynamicObject(18783, 7284.7490234375, -1523.0539550781, 2.9969999790192, 359.99993896484, 180, 180.07688903809);
	// Passages à niveau - TRAIN
	CreateDynamicObject(966, 1968.40002, -1961.40002, 12.7, 0, 0, 0);
	CreateDynamicObject(966, 1954.80005, -1950.40002, 12.7, 0, 0, 180);
	CreateDynamicObject(966, 2206.30005, -1887.90002, 12.7, 0, 0, 90);
	CreateDynamicObject(966, 2194.3999, -1739.5, 12.5, 0, 0, 270);
	CreateDynamicObject(966, 2195.2998, -1901.2998, 12.7, 0, 0, 270);
	CreateDynamicObject(966, 2206.30005, -1725.69995, 12.4, 0, 0, 90);
	CreateDynamicObject(966, 2205.80005, -1652.30005, 14.3, 0, 0, 254);
	CreateDynamicObject(966, 2220.30005, -1641.40002, 14.4, 0, 0, 76);
	CreateDynamicObject(966, 2292.69995, -1143.19995, 25.7, 0, 0, 90);
	CreateDynamicObject(966, 2282, -1478, 21.7, 0, 0, 78);
	CreateDynamicObject(966, 2268.09961, -1490.69922, 21.5, 0, 0, 254.998);
	CreateDynamicObject(966, 2292.69995, -1377.19995, 23.1, 0, 0, 90);
	CreateDynamicObject(966, 2281.39941, -1391.09961, 23.1, 0, 0, 269.995);
	CreateDynamicObject(966, 2281.39941, -1155.89941, 25.7, 0, 0, 269.995);
	// Job Mineur
	CreateDynamicObject(899, -1342.59998, 2430.80005, 87.6, 0, 0, 0);
	CreateDynamicObject(896, -1340.5, 2439.1001, 88.6, 0, 0, 0);
	CreateDynamicObject(879, -1351.40002, 2437.6001, 89.4, 0, 0, 325.997);
	CreateDynamicObject(867, -1333.59998, 2429.69995, 91.7, 0, 0, 0);
	CreateDynamicObject(828, -1325.90002, 2433.30005, 88.7, 0, 0, 0);
	CreateDynamicObject(880, -1331.40002, 2438, 87.8, 0, 0, 44);
	CreateDynamicObject(900, -1306.80005, 2443.5, 79.6, 0, 314, 358.25);
	CreateDynamicObject(898, -1293.80005, 2448.30005, 87.3, 0, 0, 352);
	CreateDynamicObject(868, -1296.09998, 2455.30005, 87.7, 0, 0, 0);
	CreateDynamicObject(880, -1306.80005, 2447.6001, 87.1, 0, 0, 0);
	CreateDynamicObject(879, -1291.30005, 2440.19995, 87.6, 0, 0, 40);
	CreateDynamicObject(901, -1343.90002, 2478.80005, 87.8, 0, 0, 0);
	CreateDynamicObject(879, -1334.19995, 2474.6001, 86.5, 0, 0, 348);
	CreateDynamicObject(897, -1348.90002, 2470.5, 87.7, 0, 0, 36);
	CreateDynamicObject(868, -1348.30005, 2463.80005, 86.8, 0, 0, 0);
	CreateDynamicObject(867, -1356.90002, 2473.80005, 86.7, 0, 0, 0);
	CreateDynamicObject(8879, -1306.80005, 2427.8999, 94.6, 0, 0, 0);
	CreateDynamicObject(8879, -1374.40002, 2458.1001, 95.3, 0, 0, 279.998);
	CreateDynamicObject(8879, -1324.40002, 2478.80005, 92.1, 0, 0, 148);
	CreateDynamicObject(934, -1367, 2454.5, 90.2, 11.993, 2.045, 117.575);
	CreateDynamicObject(3359, -1363.80005, 2451.30005, 88.8, 11.97, 4.089, 119.151);
	CreateDynamicObject(934, -1362.40002, 2448.30005, 90.2, 11.992, 2.043, 117.57);
	// Ajout Gare pour NPC + Gare FC
	CreateDynamicObject(3881, 1723.1989746094, -1938.3330078125, 14.430000305176, 0, 0, 90);
	CreateDynamicObject(3881, 825.13500976563, -1348.6949462891, 14.387000083923, 0, 0, 0);
	CreateDynamicObject(3881, -1974.0849609375, 115.66300201416, 28.538999557495, 0, 0, 270);
	CreateDynamicObject(3881, 1437.7390136719, 2619.8120117188, 12.244000434875, 0, 0, 0);
	CreateDynamicObject(3881, 2847.1840820313, 1288.0930175781, 12.24199962616, 0, 0, 270);
	CreateDynamicObject(5169, 177.39599609375, 1244.1639404297, 24.229000091553, 0, 0, 337);
	CreateDynamicObject(3881, 215.73300170898, 1229.0810546875, 24.14999961853, 0, 0, 336);
	// Intérieur des garages
	CreateDynamicObject(3037,1418.1999512,-12.8000002,1006.5000000,0.0000000,0.0000000,90.0000000); //convertffs(14)
	CreateDynamicObject(19377,1408.8620605,2.6740000,994.9699707,0.0000000,0.0000000,0.0000000); //object(wall025) (2)
	CreateDynamicObject(19376,1408.8630371,3.3580000,1005.4559937,0.0000000,0.0000000,0.0000000); //object(wall024) (1)
	CreateDynamicObject(19377,1396.8270264,2.6700001,994.9699707,0.0000000,0.0000000,0.0000000); //object(wall025) (2)
	CreateDynamicObject(19377,1404.1340332,-2.2290001,994.9710083,0.0000000,0.0000000,270.0026550); //object(wall025) (2)
	CreateDynamicObject(19377,1394.5009766,-2.2290001,994.9710083,0.0000000,0.0000000,270.0000000); //object(wall025) (2)
	CreateDynamicObject(19376,1408.8630371,-6.2680001,1005.4559937,0.0000000,0.0000000,0.0000000); //object(wall024) (1)
	CreateDynamicObject(19376,1404.0820312,-2.2340000,1005.1420288,0.0000000,0.0000000,269.9961853); //object(wall024) (1)
	CreateDynamicObject(19376,1394.4520264,-2.2320001,1005.1420288,0.0000000,0.0000000,269.9945068); //object(wall024) (1)
	CreateDynamicObject(19376,1396.8239746,2.6750000,1005.4559937,0.0000000,0.0000000,0.0000000); //object(wall024) (1)
	CreateDynamicObject(19377,1396.7209473,12.3210001,1002.8189697,0.0000000,0.0000000,0.0000000); //object(wall025) (2)
	CreateDynamicObject(19379,1401.7189941,2.8190000,1005.6959839,0.0000000,270.0000000,1.8892212); //object(wall027) (3)
	CreateDynamicObject(19379,1412.2149658,2.9909999,1005.6959839,0.0000000,270.0000000,1.8841553); //object(wall027) (4)
	CreateDynamicObject(19379,1405.4840088,-6.6939998,1005.6959839,0.0000000,270.0000000,1.8841553); //object(wall027) (5)
	CreateDynamicObject(19379,1394.9830322,-7.0310001,1005.6959839,0.0000000,270.0000000,1.8841553); //object(wall027) (6)
	// Neige
	/*CreateDynamicObject(3917, 1476.9000244141, -1708.3000488281, 7.3000001907349, 0, 0, 0);
	CreateDynamicObject(3917, 1476.9000244141, -1703, 7.3000001907349, 0, 0, 0);
	CreateDynamicObject(3917, 1470, -1645.6999511719, 7.0999999046326, 0, 0, 270);
	CreateDynamicObject(3917, 1459.5, -1645.6999511719, 7.0999999046326, 0, 0, 270);
	CreateDynamicObject(3917, 1440.0999755859, -1703.0999755859, 7.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1440.0999755859, -1716.1999511719, 7.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1440.0999755859, -1721.8000488281, 7.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1437.5, -1636.0999755859, 7.4000000953674, 0, 0, 0);
	CreateDynamicObject(3917, 1481.5999755859, -1635.3000488281, 7.4000000953674, 0, 0, 0);
	CreateDynamicObject(3917, 1201.9000244141, -1313.1999511719, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1201.9000244141, -1325.6999511719, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1201.8000488281, -1338.6999511719, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1201.6999511719, -1351.1999511719, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1202.0999755859, -1364.4000244141, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1201.8000488281, -1377.4000244141, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1201.8000488281, -1390.4000244141, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1202, -1392.4000244141, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1211.1999511719, -1392.0999755859, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1211.9000244141, -1387.5999755859, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(3917, 1220.0999755859, -1392.5, 6.0999999046326, 0, 0, 0);
	CreateDynamicObject(3917, 1220.0999755859, -1379.5, 6.0999999046326, 0, 0, 0);
	CreateDynamicObject(3917, 1220.3000488281, -1367.5999755859, 6.0999999046326, 0, 0, 2);
	CreateDynamicObject(3917, 1220.4000244141, -1359.0999755859, 6.0999999046326, 0, 0, 1.99951171875);
	CreateDynamicObject(3917, 1220.5, -1348.0999755859, 6.0999999046326, 0, 0, 1.99951171875);
	CreateDynamicObject(3917, 1220.6999511719, -1334.6999511719, 6.0999999046326, 0, 0, 1.99951171875);
	CreateDynamicObject(3917, 1219.5, -1320.5, 6.0999999046326, 0, 0, 359.99951171875);
	CreateDynamicObject(3917, 1210.5, -1319.9000244141, 6.0999999046326, 0, 0, 359.99450683594);
	CreateDynamicObject(3917, 1210.4000244141, -1312.3000488281, 6.0999999046326, 0, 0, 359.99450683594);
	CreateDynamicObject(3917, 1219.8000488281, -1312.5999755859, 6.0999999046326, 0, 0, 359.99450683594);
	CreateDynamicObject(3917, 1202.0999755859, -1312.9000244141, 6.3000001907349, 0, 0, 359.99450683594);
	CreateDynamicObject(3917, 1218, -1329.4000244141, 6.0999999046326, 0, 0, 357.99450683594);
	CreateDynamicObject(3917, 1160, -1312.5999755859, 7, 0, 0, 359.98950195313);
	CreateDynamicObject(3917, 1160, -1363.6999511719, 7, 0, 0, 359.98901367188);
	CreateDynamicObject(3917, 1160, -1375.4000244141, 7, 0, 0, 359.98901367188);
	CreateDynamicObject(3917, 1155.5999755859, -1375.5, 7, 0, 0, 359.98901367188);
	CreateDynamicObject(3917, 1477.2750244141, -1069.4162597656, 17.740058898926, 0, 0, 358);
	CreateDynamicObject(3917, 1483.7407226563, -1069.0256347656, 17.740058898926, 0, 0, 351.99499511719);
	CreateDynamicObject(3917, 1489.8999023438, -1064.8081054688, 17.740058898926, 0, 0, 335.99096679688);
	CreateDynamicObject(3917, 1496.0795898438, -1067.623046875, 17.740058898926, 0, 0, 335.98937988281);
	CreateDynamicObject(3917, 1502.8693847656, -1065.3892822266, 17.740058898926, 0, 0, 319.98937988281);
	CreateDynamicObject(3917, 1506.3647460938, -1068.3662109375, 17.740058898926, 0, 0, 319.98779296875);
	CreateDynamicObject(3917, 1513.3395996094, -1068.8940429688, 17.740058898926, 0, 0, 305.98779296875);
	CreateDynamicObject(3917, 1516.853515625, -1073.7583007813, 17.740058898926, 0, 0, 305.98571777344);
	CreateDynamicObject(3917, 1523.4479980469, -1076.9337158203, 17.740058898926, 0, 0, 293.98571777344);
	CreateDynamicObject(3917, 1526.2570800781, -1083.0396728516, 17.740058898926, 0, 0, 293.98315429688);
	CreateDynamicObject(3917, 1529.7255859375, -1083.8051757813, 17.740058898926, 0, 0, 285.98315429688);
	CreateDynamicObject(3917, 1522.9990234375, -1080.8070068359, 17.740058898926, 0, 0, 269.97961425781);
	CreateDynamicObject(3917, 1509.7640380859, -1080.8360595703, 17.740058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1496.3984375, -1080.8092041016, 17.740058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1484.8953857422, -1080.5223388672, 17.740058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1484.7829589844, -1069.9470214844, 17.740058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1484.6259765625, -1059.5865478516, 17.740058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1484.7052001953, -1049.4161376953, 17.740058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1484.6224365234, -1044.1867675781, 17.740058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1450.8692626953, -1029.1038818359, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1437.9555664063, -1029.1734619141, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1425.0989990234, -1029.1672363281, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1450.8610839844, -1039.7794189453, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1450.9099121094, -1049.7416992188, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1450.810546875, -1060.1811523438, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1451.0842285156, -1064.8903808594, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1470.8894042969, -998.37640380859, 16.490058898926, 0, 0, 269.97802734375);
	CreateDynamicObject(3917, 1486.4692382813, -997.72003173828, 16.490058898926, 0, 0, 263.97802734375);
	CreateDynamicObject(3917, 1499.5804443359, -999.27416992188, 16.490058898926, 0, 0, 263.97399902344);
	CreateDynamicObject(3917, 1458.1384277344, -998.51873779297, 16.490058898926, 0, 0, 269.97399902344);
	CreateDynamicObject(3917, 1445.1739501953, -998.5205078125, 16.490058898926, 0, 0, 269.97253417969);
	CreateDynamicObject(3917, 1432.1469726563, -998.58599853516, 16.490058898926, 0, 0, 269.97253417969);
	CreateDynamicObject(3917, 1419.0883789063, -998.56640625, 16.490058898926, 0, 0, 269.97253417969);
	CreateDynamicObject(3917, 1406.0241699219, -998.68023681641, 16.490058898926, 0, 0, 269.97253417969);
	CreateDynamicObject(3917, 1476.9000244141, -1721.6999511719, 7.3000001907349, 0, 0, 0);*/
	
	SendRconCommand("loadfs mapping");
	return 0;
}

stock server_DefaultVariables(playerid)
{
    gPlayerMask[playerid]=0;
    gPlayerFreq[playerid]=0;
    gPlayerInBizz[playerid]=-1;
    gPlayerInFaction[playerid]=-1;
    gPlayerInInterior[playerid]=-1;
    gPlayerInGarage[playerid]=-1;
    gPlayerInSBizz[playerid]=-1;
    gPlayerInHouse[playerid]=-1;
    gPlayerMuteOOC[playerid]=0;
    gPlayerMuteIC[playerid]=0;
    gPlayerTrailer[playerid] = 0;
    gPlayerDriveBy[playerid] = false;
    gPlayerEvent[playerid]=0;
    gPlayerFPS[playerid] = false;
    
    inscription_Step[playerid]=0;
    inscription_Note[playerid]=0;
    inscription_QuestionNumber[playerid]=0;
    inscription_ValidQuestion[playerid]=0;
    inscription_RandomList[playerid]=0;
    medic_PlayerCity[playerid]=-1;
	afk_Check[playerid]=0;
	afk_time[playerid]=0;
	WalkStyle[playerid]=0;
    InShamal[playerid] = 0; // Dans l'interrieur d'un Shamal
	InAndro[playerid] = 0;  // Dans l'interrieur d'un andromada
	HidePM[playerid] = 0;
	GettingJob[playerid] = 0; HandshakeOffer[playerid] = -1; HandshakeType[playerid] = 0;
	MariageOffer[playerid] = -1; MariageStep[playerid]=0;
	Condom[playerid] = 0;
	KissOffer[playerid] = -1;
	sannews_TalkingLive[playerid] = -1; sannews_LiveOffer[playerid] = -1;
	player_Cuffed[playerid] = 0;player_CuffedTime[playerid] = 0;
	police_Duty[playerid] = 0; tactical[playerid] = 0; swat[playerid] = 0;
	PlayerTied[playerid] = 0;
	mecano_Duty[playerid] = 0;
	Mobile[playerid] = -1;
	Spectate[playerid] = -1; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	PlayerStoned[playerid] = 0;
	police_TicketOffer[playerid] = -1; police_TicketPrice[playerid] = 0;
	HireCar[playerid] = -1;
	WatchingTV[playerid] = 0;
    tactical[playerid] = 0; swat[playerid] = 0; //authorizetactical = 0;
 	KnockedDown[playerid] = 0; UsingDrugs[playerid] = 0; UsingDrugsTime[playerid] = 0;
	car_SellOffer[playerid] = -1;
	car_SellId[playerid] = 0;
	car_SellPrice[playerid] = 0;
	bizz_SellOffer[playerid] = -1;
	bizz_SellId[playerid] = 0;
	bizz_SellPrice[playerid] = 0;
	house_SellOffer[playerid] = -1;
	house_SellId[playerid] = 0;
	house_SellPrice[playerid] = 0;
	BlindFold[playerid] = 0;AdminDuty[playerid] = 0; AdminSpec[playerid] = 0; IsSmoking[playerid] = 0; UsingSmokeAnim[playerid] = 0;
	Masturber[playerid] = 0;
	for (new c=0; c<13; c++)
		{ScriptWeapons[playerid][c] = 0; ScriptWeaponsAmmo[playerid][c] = 0;}
    ScriptWeaponUpdated[playerid]=0;
	memcpy(TME[playerid], "Aucun", 0, 128*4,128*4);
	memcpy(player_Bot[playerid], "Aucun", 0, 32*4,32*4);
	memcpy(prefix[playerid], "[Anglais]", 0, 16*4, 16*4);
	memcpy(playerRoot[playerid], " ", 0, 64*4, 64*4);
	Dialogue_Systeme_Faction[playerid] = 0;
	for(new i=0; i<10; i++)
	    {anticheat_Warn[playerid][i] = 0;}
	police_Tazer[playerid] = 0;
	gang_PlayerVoleCar[playerid] = 0;
	Dialogue_Gestion_Faction_Gang[playerid] = 0;
	gang_PlayerFeuilleWeed[playerid] = 0;
	car_DialogSafe[playerid] = 0;
	Dialogue_Admin_Edit_Gang[playerid] = 0;
	IdFactionEdit[playerid] = -1;
	permis_SpecSpeed[playerid] = 0;
	mafia_PlayerCreateDrug[playerid] = 0;
	mafia_FreezeCreation[playerid] = 0;
	mafia_PlayerConceptionAmount[0][playerid] = 0;
	mafia_PlayerConceptionAmount[1][playerid] = 0;
	mafia_PlayerConceptionAmount[2][playerid] = 0;
    mafia_ReCreateWeaponTime[playerid] = 0;
	mairie_DialogGestion[playerid] = 0;
	permis_Step[playerid] = 0;
	permis_WaitTime[playerid] = 0;
	permis_CheckPoints[playerid] = 0;
	permis_City[playerid] = -1;
	Dialogue_Admin_Panel[playerid] = 0;
	gang_PlayerIsBrakeBizz[playerid] = 0;
	gang_TimerPlayerVoleBizz[playerid] = 0;
	mafia_DialogGestion[playerid] = 0;
	stop_EditPlayer[playerid] = -1;
	stop_DialogEdit[playerid] = 0;
	gouv_DialogGestion[playerid] = 0;
	JoueurPirateBanque[playerid] = 0;
	JoueurPirateBanqueTemps[playerid] = 0;
	gPlayerCheckpoint[playerid] = 0;
	permis_Player[playerid] = 0;
	player_Dialog[playerid] = 0;
	mairie_DialogPlaqueChange[playerid]= 0;
	skill_WeaponTrainning[playerid]=0;
	skill_WeaponPhase[playerid]=0;
	tel_DialogUrgence[playerid]=0;
	aide_Dialog[playerid]=0;
	player_InAreaAntiDM[playerid]=0;
	player_ActiveDM[playerid]=0;
	atm_DialogEdit[playerid]=0;
	atm_EditId[playerid]=-1;
	admin_Dialog[playerid]=0;
	admin_EditId[playerid]=-1;
	admin_VarType[playerid]=0;
	phonecab_DialogEdit[playerid]=0;
	phonecab_EditId[playerid]=-1;
	map_DialogEdit[playerid]=0;
	map_EditId[playerid]=-1;
	distrib_DialogEdit[playerid]=0;
	distrib_EditId[playerid]=-1;
	mecano_Offer[playerid]=0;
	mecano_Price[playerid]=0;
	mecano_Color1[playerid]=0;
	mecano_Color2[playerid]=0;
	bank_PlayerRob[playerid]=false;
	bank_RobMoney[playerid]=0;
	bank_RobTime[playerid]=0;
	afk_LastHealth[playerid]=0;
	marie_Temp[playerid]=0;
	PlayerComeBack[playerid]=1;
	boomBox[playerid][used]=0;
	NoPM[playerid]=0;
	NoRapport[playerid]=0;
	NoOOC[playerid]=0;
	NoNews[playerid]=0;
	NoRQ[playerid]=0;
	UsePiedBiche[playerid]=0;
	medic_PlayerNeedMedic[playerid]=0;
	medic_PlayerMedicTime[playerid]=0;
	medic_PlayerCity[playerid]=-1;
	boombox_Listen[playerid]=-1;
	admin_Timer[playerid]=0;
	bizz_GestionArticle[playerid]=-1;
	basket_HavingBall[playerid]=0;
	basket_Anim[playerid]=0;
	basket_Ball[playerid]=0;
	bag[playerid][pos][0]=0.0;
	bag[playerid][pos][1]=0.0;
	bag[playerid][pos][2]=0.0;
	bag[playerid][pos][3]=0.0;
	bag[playerid][statut]=0;
	bag_Dialog[playerid]=0;
	TimeRapport[playerid]=0;
	police_DialogGestion[playerid]=0;
	police_GestionFineId[playerid]=0;
	gouv_Duty[playerid]=0;
	gouv_DialogGestion[playerid]=0;
	job_Start[playerid]=0;
	job_City[playerid]=-1;
	job_CheckPoints[playerid]=0;
	job_ExitTime[playerid]=0;
	job_CarId[playerid]=-1;
	job_TempVar[playerid]=-1;
	job_HoldingObjectSlot[playerid]=-1;
	fire_Duty[playerid]=0;
	fire_DialogGestion[playerid]=0;
	player_Dialog[playerid]=0;
	phone_Active[playerid]=0;
	strdel(phone_TempNum[playerid],0,4);
	phone_Time[playerid][0]=0;
	phone_Time[playerid][1]=0;
	GlassSlotObject[playerid]=-1;
	BandanaSlotObject[playerid]=-1;
	CapSlotObject[playerid]=-1;
	BagSlotObject[playerid]=-1;
	HelmetSlotObject[playerid]=-1;
	HandCuffsSlotObject[playerid]=-1;
	BodySlotObject[playerid]=-1;
	invited_Player[playerid]=-1;
	laser_Statue[playerid]=0;
	ArmorSlotObject[playerid]=-1;
	laser_Colour[playerid]=0;
	player_ArmourVip[playerid]=0;
	tree_Edit[playerid] = 0;
	tree_EditId[playerid]=-1;
	house_ExitTenant[playerid][0]=-1;
	house_UseItem[playerid]=0;
	frapATM[playerid]=0;
	player_SellOffer[playerid]=-1;
    player_SellId[playerid]=-1;
	player_SellOther[playerid]=0;
	player_Backup[playerid] = false;
	player_Dialog[playerid] = 0;
	player_Variable[playerid] = -1;
	biker_DialogGestion[playerid] = 0;
	biker_RideJoined[playerid] = 0;
	mafia_DrugBrute[playerid][0] = 0;
	mafia_DrugBrute[playerid][1] = 0;
	mafia_DrugBrute[playerid][2] = 0;
	player_HavePayDay[playerid] = 0;
	trainTicket[playerid]=false;
	basket_HavingBall[playerid]=0;
	basket_Anim[playerid]=0;
	basket_Ball[playerid]=-1;
	player_CarryBody[playerid]=-1;
	player_Lie[playerid]=0;
	taxi_Duty[playerid] = 0;
	police_PlayerIsRoped[playerid]=false;
	LastHealth[playerid] = 0;
	LastSpeed[playerid] = 0;
	police_FlashBall[playerid]=false;
}

stock server_DefaultStats(playerid)
{
    static e_Blank[e_Player];
    PlayerInfo[playerid] = e_Blank;
	/*PlayerInfo[playerid][pArmour]=0.00000;
	PlayerInfo[playerid][pHealth]=100.00000;
    PlayerInfo[playerid][pSQLID] = 0;
	PlayerInfo[playerid][pLevel]=1;
	PlayerInfo[playerid][pAge]=16;
	PlayerInfo[playerid][pAdmin]=0;
	PlayerInfo[playerid][pDonateRank]=0;
	PlayerInfo[playerid][pHelper]=0;
	PlayerInfo[playerid][pVipTime]=0;
	PlayerInfo[playerid][pConnectTime]=0;
	PlayerInfo[playerid][pSex]=0;
	PlayerInfo[playerid][pOrigin]=0;
	PlayerInfo[playerid][pWarnings]=0;
	PlayerInfo[playerid][pExp]=4;
	PlayerInfo[playerid][pCash]=2000;
	PlayerInfo[playerid][pAccount]=4000;
	PlayerInfo[playerid][pPointPermis]=0;
	PlayerInfo[playerid][pDeaths]=0;
	PlayerInfo[playerid][pWanted]=0;
    PlayerInfo[playerid][plottoNr]=0;
    PlayerInfo[playerid][pFishes]=0;
    PlayerInfo[playerid][pJob]=0;
    PlayerInfo[playerid][pJobLvl]=1;
    PlayerInfo[playerid][pJobExp]=0;
    PlayerInfo[playerid][pJobTime]=0;
    PlayerInfo[playerid][pJobBonus]=0;
    PlayerInfo[playerid][pJobRemain]=0;
    PlayerInfo[playerid][pPayCheck]=0;
    PlayerInfo[playerid][pJailed]=0;
    PlayerInfo[playerid][pJailTime]=0;
    PlayerInfo[playerid][pDutyTime]=0;
    PlayerInfo[playerid][pMember]=0;
    PlayerInfo[playerid][pLeader]=0;
    PlayerInfo[playerid][pRank]=0;
    PlayerInfo[playerid][pChar]=0;
    PlayerInfo[playerid][pRename]=0;
    PlayerInfo[playerid][pChangeNum]=0;
    PlayerInfo[playerid][pChangePlaque]=0;
    PlayerInfo[playerid][pSpawn]=0;
    PlayerInfo[playerid][pFaim]=100;
    PlayerInfo[playerid][pSoif]=100;
    PlayerInfo[playerid][pDisease]=0;
    PlayerInfo[playerid][pInt]=0;
    PlayerInfo[playerid][pNumber]=0;
    PlayerInfo[playerid][pOperator]=0;
    PlayerInfo[playerid][pFormul]=0;
    PlayerInfo[playerid][pPhoneTime]=0;
    PlayerInfo[playerid][pCar][0]=-1;
    PlayerInfo[playerid][pCar][1]=-1;
    PlayerInfo[playerid][pCar][2]=-1;
    PlayerInfo[playerid][pCar][3]=-1;
    PlayerInfo[playerid][pCar][4]=-1;
    PlayerInfo[playerid][pCar][5]=-1;
    PlayerInfo[playerid][pCarDev4]=0;
    PlayerInfo[playerid][pCarDev5]=0;
    PlayerInfo[playerid][pCarDev6]=0;
    PlayerInfo[playerid][pBizkey1]=-1;
    PlayerInfo[playerid][pBizkey2]=-1;
    PlayerInfo[playerid][pBizkey3]=-1;
    PlayerInfo[playerid][pHousekey1]=-1;
    PlayerInfo[playerid][pHousekey2]=-1;
    PlayerInfo[playerid][pHousekey3]=-1;
    PlayerInfo[playerid][pGarageKey1]=-1;
    PlayerInfo[playerid][pGarageKey2]=-1;
    PlayerInfo[playerid][pGarageKey3]=-1;
    PlayerInfo[playerid][pCarLic]=0;
    PlayerInfo[playerid][pFlyLic]=0;
    PlayerInfo[playerid][pBoatLic]=0;
    PlayerInfo[playerid][pFishLic]=0;
    PlayerInfo[playerid][pLourdLic]=0;
    PlayerInfo[playerid][pMotoLic]=0;
    PlayerInfo[playerid][pGunLic]=0;
    PlayerInfo[playerid][pTrainLic]=0;
    PlayerInfo[playerid][pGun1]=0;
    PlayerInfo[playerid][pGun2]=0;
    PlayerInfo[playerid][pGun3]=0;
    PlayerInfo[playerid][pGun4]=0;
    PlayerInfo[playerid][pAmmo1]=0;
    PlayerInfo[playerid][pAmmo2]=0;
    PlayerInfo[playerid][pAmmo3]=0;
    PlayerInfo[playerid][pAmmo4]=0;
    PlayerInfo[playerid][pIdentie]=0;
    PlayerInfo[playerid][pCrashed]=0;
    PlayerInfo[playerid][pVirWorld]=0;
    PlayerInfo[playerid][pMarried]=0;
    for(new i=0; i<6; i++)
	    {PlayerInfo[playerid][pInvWeapon][i]=0; PlayerInfo[playerid][pInvAmmo][i]=0;}
    PlayerInfo[playerid][pInvDev5]=0;
	PlayerInfo[playerid][pInvDev6]=0;
    PlayerInfo[playerid][pMask]=0;
    PlayerInfo[playerid][pHideNumber]=0;
    PlayerInfo[playerid][pJerricainFuel]=0;
    PlayerInfo[playerid][pLocked]=0;
    PlayerInfo[playerid][pLang1]=0;
    PlayerInfo[playerid][pLang2]=0;
    PlayerInfo[playerid][pLang1State]=0;
    PlayerInfo[playerid][pLang2State]=0;
    PlayerInfo[playerid][pLangTrainTime]=0;
    PlayerInfo[playerid][pCombatStyle]=5;
    PlayerInfo[playerid][pTicket]=0;
    PlayerInfo[playerid][pRobTime]=0;
    PlayerInfo[playerid][pRobTimeCar]=0;
    PlayerInfo[playerid][pRobTimeBizz]=0;
    PlayerInfo[playerid][pRobTimePocket]=0;
    PlayerInfo[playerid][pPos_x] = 1743.1295;
	PlayerInfo[playerid][pPos_y] = -1862.9645;
	PlayerInfo[playerid][pPos_z] = 13.5757;
	for(new skill=0; skill<10; skill++)
		{PlayerInfo[playerid][pSkill][skill]=0;}
	PlayerInfo[playerid][pWepTrainTime]=0;
	PlayerInfo[playerid][pMod_sa]=0;
	PlayerInfo[playerid][pMod_sa_Spawn]=0;
	PlayerInfo[playerid][pBag]=1;
	PlayerInfo[playerid][pCheck]=0;
	PlayerInfo[playerid][pCheckNumber]=0;*/
	new playerip[16],playername[MAX_PLAYER_NAME+1];
	GetPlayerName(playerid,playername,sizeof(playername));
	GetPlayerIp(playerid, playerip, sizeof(playerip));
	format(PlayerInfo[playerid][pIP], 16, "%s", playerip);
	format(PlayerInfo[playerid][pName], MAX_PLAYER_NAME+1, "%s", playername);
	format(PlayerInfo[playerid][pRealName], MAX_PLAYER_NAME+1, "%s", playername);
}
//==================================[HEURE & DATES]==========================


stock GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,p;
	p = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS_CURRENT+1;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					p = x;
				}
			}
		}
	}
	return p;
}

stock PayDay(i)
{
    PlayerInfo[i][pPayDayHad]=0;
	new string[512];

	new tax_House=0, tax_Bizz=0, tax_Operator=0, Float:interet=0;
	new tax_Garage=0, tax_Total=0, gg=0, pay=0, lastAccount=0;
				
	// Est en dette
	if(PlayerInfo[i][pCash] < 0)
	{
		msg_Client(i, COLOR_LIGHTRED, "Vous n'avez pas payer votre dette, vous avez gagné le droit d'aller en prison.");
		GameTextForPlayer(i, "~r~Arreter!", 2000, 1);
		server_SetPlayerInterior(i, 6);
		SafeSetPlayerPos(i,264.6288,77.5742,1001.0391);
		server_SetPlayerVirtualWorld(i,0);
		PlayerInfo[i][pJailed] = 1;
		SafeResetPlayerWeapons(i);
		SafeResetPlayerMoney(i,0);
		PlayerInfo[i][pJailTime] = 300;
		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été emprisonné pour %d secondes. Caution: Impossible", PlayerInfo[i][pJailTime]);
		msg_Client(i, COLOR_INFO, string);
	}

	if(afk_Check[i]==-1)
	    {return 1;}

	// Voitures / Cars
	/*for(new i=0; i<6; i++)
	{
	    if(PlayerInfo[i][pCar][i] > -1)
			{tax_Car+=governement[GetCityCounty(playerid)][tax][0];}
	}
	if(PlayerInfo[i][pCar][0] > -1)
		{tax_Car+=TAX_CAR;}
	if(PlayerInfo[i][pCar][1] > -1)
		{tax_Car+=TAX_CAR;}
	if(PlayerInfo[i][pCar][2] > -1)
		{tax_Car+=TAX_CAR;}
	if(PlayerInfo[i][pCar][3] > -1 && PlayerInfo[i][pCarDev4]==1)
		{tax_Car+=TAX_CAR;}
	if(PlayerInfo[i][pCar][4] > -1 && PlayerInfo[i][pCarDev5]==1)
		{tax_Car+=TAX_CAR;}
	if(PlayerInfo[i][pCar][5] > -1 && PlayerInfo[i][pCarDev6]==1)
		{tax_Car+=TAX_CAR;}*/

	// Maisons / Houses
	if(PlayerInfo[i][pHousekey1] > -1 && strcmp(PlayerInfo[i][pRealName], house[PlayerInfo[i][pHousekey1]][owner], true) == 0)
		{tax_House+=governement[GetCityCounty(i)][tax][1];}
	else if(PlayerInfo[i][pHousekey1] > -1 && strcmp(PlayerInfo[i][pRealName], house[PlayerInfo[i][pHousekey1]][owner], true) == 1)
	    {tax_House+=house[PlayerInfo[i][pHousekey1]][rentPrice]; house[PlayerInfo[i][pHousekey1]][talking]+=house[PlayerInfo[i][pHousekey1]][rentPrice];}
	if(PlayerInfo[i][pHousekey2] > -1 && strcmp(PlayerInfo[i][pRealName], house[PlayerInfo[i][pHousekey2]][owner], true) == 0)
		{tax_House+=governement[GetCityCounty(i)][tax][1];}
    else if(PlayerInfo[i][pHousekey2] > -1 && strcmp(PlayerInfo[i][pRealName], house[PlayerInfo[i][pHousekey2]][owner], true) == 1)
	    {tax_House+=house[PlayerInfo[i][pHousekey2]][rentPrice]; house[PlayerInfo[i][pHousekey2]][talking]+=house[PlayerInfo[i][pHousekey2]][rentPrice];}
	if(PlayerInfo[i][pHousekey3] > -1 && strcmp(PlayerInfo[i][pRealName], house[PlayerInfo[i][pHousekey3]][owner], true) == 0)
		{tax_House+=governement[GetCityCounty(i)][tax][1];}
    else if(PlayerInfo[i][pHousekey3] > -1 && strcmp(PlayerInfo[i][pRealName], house[PlayerInfo[i][pHousekey3]][owner], true) == 1)
	    {tax_House+=house[PlayerInfo[i][pHousekey3]][rentPrice]; house[PlayerInfo[i][pHousekey3]][talking]+=house[PlayerInfo[i][pHousekey3]][rentPrice];}

	// Bizz / Biz
	if(PlayerInfo[i][pBizkey1] > -1)
		{tax_Bizz+=governement[GetCityCounty(i)][tax][4];}
	if(PlayerInfo[i][pBizkey2] > -1)
		{tax_Bizz+=governement[GetCityCounty(i)][tax][4];}
	if(PlayerInfo[i][pBizkey3] > -1)
		{tax_Bizz+=governement[GetCityCounty(i)][tax][4];}

	// Garages
	if(PlayerInfo[i][pGarageKey1] > -1)
		{tax_Garage+=governement[GetCityCounty(i)][tax][5];}
	if(PlayerInfo[i][pGarageKey2] > -1)
		{tax_Garage+=governement[GetCityCounty(i)][tax][5];}
	if(PlayerInfo[i][pGarageKey3] > -1)
		{tax_Garage+=governement[GetCityCounty(i)][tax][5];}

	// Opérateur / Operator
	if(PlayerInfo[i][pOperator] > 0 && PlayerInfo[i][pFormul] > 0)
	{
		if(PlayerInfo[i][pOperator]==1)
		{
			if(PlayerInfo[i][pFormul] == 1)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][0];
				PlayerInfo[i][pPhoneTime] = 900;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][0];
			}
			else if(PlayerInfo[i][pFormul] == 2)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][1];
				PlayerInfo[i][pPhoneTime] = 1200;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][1];
			}
			else if(PlayerInfo[i][pFormul] == 3)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][2];
				PlayerInfo[i][pPhoneTime] = 1800;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][2];
			}
			else if(PlayerInfo[i][pFormul] == 4)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][3];
				PlayerInfo[i][pPhoneTime] = 3600;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING][ubPriceArticle][3];
			}
			uniquebizz_Save(MAX_STATION+MAX_SPRAY+MAX_TUNING);
		}
		else if(PlayerInfo[i][pOperator]==2)
		{
			if(PlayerInfo[i][pFormul] == 1)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][0];
				PlayerInfo[i][pPhoneTime] = 600;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][0];
			}
			else if(PlayerInfo[i][pFormul] == 2)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][1];
				PlayerInfo[i][pPhoneTime] = 1500;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][1];
			}
			else if(PlayerInfo[i][pFormul] == 3)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][2];
				PlayerInfo[i][pPhoneTime] = 1500;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][2];
			}
			else if(PlayerInfo[i][pFormul] == 4)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][3];
				PlayerInfo[i][pPhoneTime] = 5400;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+1][ubPriceArticle][3];
			}
			uniquebizz_Save(MAX_STATION+MAX_SPRAY+MAX_TUNING+1);
		}
		else if(PlayerInfo[i][pOperator]==3)
		{
			if(PlayerInfo[i][pFormul] == 1)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][0];
				PlayerInfo[i][pPhoneTime] = 420;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][0];
			}
			else if(PlayerInfo[i][pFormul] == 2)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][1];
				PlayerInfo[i][pPhoneTime] = 1320;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][1];
			}
			else if(PlayerInfo[i][pFormul] == 3)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][2];
				PlayerInfo[i][pPhoneTime] = 1680;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][2];
			}
			else if(PlayerInfo[i][pFormul] == 4)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][3];
				PlayerInfo[i][pPhoneTime] = 9000;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+2][ubPriceArticle][3];
			}
			uniquebizz_Save(MAX_STATION+MAX_SPRAY+MAX_TUNING+2);
		}
		else if(PlayerInfo[i][pOperator]==4)
		{
			if(PlayerInfo[i][pFormul] == 1)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+3][ubPriceArticle][0];
				PlayerInfo[i][pPhoneTime] = 1200;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+3][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+3][ubPriceArticle][0];
			}
			else if(PlayerInfo[i][pFormul] == 2)
			{
				tax_Operator=sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+3][ubPriceArticle][1];
				PlayerInfo[i][pPhoneTime] = 9999999;
				sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+3][ubCaisse] += sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+3][ubPriceArticle][1];
			}
			uniquebizz_Save(14);
		}
	}
	if(PlayerInfo[i][pMember] > 0)
		{PlayerInfo[i][pJob]=0;}
		
    /*Paye / Pay
	ratio = PlayerInfo[i][pPayCheck]/3;
	if(ratio > 300)
		{ratio=300;}
	pay+=ratio;*/
	
	if(PlayerInfo[i][pJob] == 0 && PlayerInfo[i][pMember] == 0 && PlayerInfo[i][pLeader] == 0)// Chômage
		{pay += governement[GetCityCounty(i)][unemployment];}
		
	if(PlayerInfo[i][pMember] >= 200  && PlayerInfo[i][pJob]==0) // factions illégales
	{
 		pay += governement[GetCityCounty(i)][unemployment];
		if(PlayerInfo[i][pLeader] >=200)
			{pay += 150;}
	}
	
	if(PlayerInfo[i][pJob] >= 1 && PlayerInfo[i][pMember] ==0 && PlayerInfo[i][pLeader] ==0)// Job
	{
	    if(PlayerInfo[i][pJobTime] < JOB_TIME) // Calcule du salaire en fonction du temps de travail
	    	{pay+=floatround((governement[3][salaryJob][PlayerInfo[i][pJob]-1]*PlayerInfo[i][pJobTime])/JOB_TIME);}
		else
		    {pay+=governement[3][salaryJob][PlayerInfo[i][pJob]-1];}
	    
        PlayerInfo[i][pJobTime]=0;
        pay+=PlayerInfo[i][pJobBonus];
        PlayerInfo[i][pJobBonus]=0;
	}
		
	if(PlayerInfo[i][pMember] >0 && PlayerInfo[i][pJob] ==0) // Factions légales
	{
	    if(PlayerInfo[i][pDutyTime] < DUTY_TIME) // Calcule du salaire en fonction du temps de travail
	    {
	        if(PlayerInfo[i][pMember]>=1 && PlayerInfo[i][pMember]<=4)
				{pay+=floatround((governement[PlayerInfo[i][pMember]-1][salaryPolice][PlayerInfo[i][pRank]-1]*PlayerInfo[i][pDutyTime])/DUTY_TIME);}
	        else if(PlayerInfo[i][pMember]==5)
				{pay+=floatround((governement[3][salaryFbi][PlayerInfo[i][pRank]-1]*PlayerInfo[i][pDutyTime])/DUTY_TIME);}
	        else if(PlayerInfo[i][pMember]>=6 && PlayerInfo[i][pMember]<=8)
				{pay+=floatround((governement[PlayerInfo[i][pMember]-6][salaryGovernement][PlayerInfo[i][pRank]-1]*PlayerInfo[i][pDutyTime])/DUTY_TIME);}
	        else if(PlayerInfo[i][pMember]==10)
				{pay+=governement[3][salaryCia][PlayerInfo[i][pRank]-1];}
	    }
	    else
	    {
			if(PlayerInfo[i][pMember]>=1 && PlayerInfo[i][pMember]<=4)
				{pay+=governement[PlayerInfo[i][pMember]-1][salaryPolice][PlayerInfo[i][pRank]-1];}
	        else if(PlayerInfo[i][pMember]==5)
				{pay+=governement[3][salaryFbi][PlayerInfo[i][pRank]-1];}
	        else if(PlayerInfo[i][pMember]>=6 && PlayerInfo[i][pMember]<=8)
				{pay+=governement[PlayerInfo[i][pMember]-6][salaryGovernement][PlayerInfo[i][pRank]-1];}
	        else if(PlayerInfo[i][pMember]==10)
				{pay+=governement[3][salaryCia][PlayerInfo[i][pRank]-1];}
		}
		PlayerInfo[i][pDutyTime]=0;
	}

	// Toto
	tax_Total=tax_House+tax_Bizz+tax_Garage+tax_Operator+governement[GetCityCounty(i)][tax][0]+governement[GetCityCounty(i)][tax][2],governement[GetCityCounty(i)][tax][3];
	governement[GetCityCounty(i)][safe]+=tax_Total;
	switch(PlayerInfo[i][pDonateRank])
	{
	    case 2: {interet=pay*0.05;}
	    case 3: {interet=pay*0.10;}
	    case 4: {interet=pay*0.20;}
	}
	pay+=floatround(interet);
	new var[256];
	gg=pay-tax_Total;
	lastAccount=PlayerInfo[i][pAccount];
	PlayerInfo[i][pAccount]+=gg;
	TextDrawShowForPlayer(i,payday_Design[0]);
	TextDrawShowForPlayer(i,payday_Design[1]);
	TextDrawShowForPlayer(i,payday_Design[2]);
	format(var,sizeof(var),"~p~Taxes~n~~w~- Véhicules : ~r~- $0~n~~w~- Maisons : ~r~- $%d~n~~w~- Biz : ~r~- $%d~n~~w~- Garages : ~r~- $%d~n~~w~- Opérateur : ~r~- $%d~n~~w~- Impot : ~r~- $%d~n~~w~- Total : ~r~- $%d~n~~p~Salaire~n~~w~- HTC : ~y~$%d~n~",
	(tax_House+governement[GetCityCounty(i)][tax][2],governement[GetCityCounty(i)][tax][3]),tax_Bizz,tax_Garage,tax_Operator,governement[GetCityCounty(i)][tax][0],tax_Total,pay);
	strcat(string,var);
	if(PlayerInfo[i][pDonateRank] > 1)
		{format(var,sizeof(var),"~w~- VIP : ~y~$%0.0f~n~",interet); strcat(string,var);}
	format(var,sizeof(var),"~w~- TTC : ~y~$%d~n~~p~Récapitulatif~n~~w~- Avant paye : ~g~$%d~n~~w~- Après paye : ~g~$%d~n~~w~Fermeture dans 20s",gg,lastAccount,PlayerInfo[i][pAccount]);
	strcat(string,var);
	ConvertirTexte(string);
	PlayerTextDrawSetString(i,payday_Infos[i],string);
	PlayerTextDrawShow(i,payday_Infos[i]);
	SetTimerEx("payday_HideTexts", 20000, 0, "i", i);

	format(string, sizeof(string), "~y~Salaire ~n~~w~Votre chèque a été viré à la banque");
	ConvertirTexte(string);
	GameTextForPlayer(i, string, 5000, 4);
	Masturber[i] = 0;
	PlayerInfo[i][pPayDay] = 0;
	PlayerInfo[i][pPayCheck] = 0;
	PlayerInfo[i][pPayDayHad]=0;
    PlayerInfo[i][pExp] ++;
	PlayerInfo[i][pConnectTime] += 1;
	if(PlayerInfo[i][pExp] >= (PlayerInfo[i][pLevel])*4)
	{
		PlayerInfo[i][pLevel]++;
		PlayerInfo[i][pExp] = 1;
		format(string, sizeof(string),"» Vous montez de level, vous êtes maintenant niveau %d.",PlayerInfo[i][pLevel]);
		msg_Client(i, COLOR_WHITE, string);
	}
	return 1;
}

stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new resultt[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(resultt) - 1)))
	{
		resultt[index - offset] = string[index];
		index++;
	}
	resultt[index - offset] = EOS;
	return resultt;
}

public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

stock OnPlayerRegister(playerid, pass[])
{
	if(IsPlayerConnected(playerid))
	{
		PlayerInfo[playerid][pSQLID] = MySQLCreateAccount(PlayerInfo[playerid][pRealName],pass,PlayerInfo[playerid][pEmail],PlayerInfo[playerid][pSex],PlayerInfo[playerid][pOrigin],PlayerInfo[playerid][pLang1],PlayerInfo[playerid][pAge],PlayerInfo[playerid][pCity]);
		OnPlayerLogin(playerid,PlayerInfo[playerid][pKey]);
	}
	return 1;
}

stock OnPlayerUpdateSQL(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerNPC(playerid))
			{return 1;}
			
		if(gPlayerLogged[playerid])
		{
		    MySQLCheckConnexion();
			format(sql, sizeof(sql), "UPDATE lvrp_users SET Level=%d, AdminLevel=%d, DonateRank=%d, City=%d, VipTime=%d, ConnectedTime=%d, Sex=%d, Origin=%d, Respect=%d, Cash=%d, Bank=%d, Deaths=%d, Wanted=%d, LottoNr=%d, Fishes=%d, Job=%d, JobLvl=%d, JobExp=%d, Paycheck=%d, Jailed=%d, JailTime=%d, Leader=%d, Member=%d, Rank=%d, Skin=%d WHERE id=%d",
			PlayerInfo[playerid][pLevel],
			PlayerInfo[playerid][pAdmin],
			PlayerInfo[playerid][pDonateRank],
			PlayerInfo[playerid][pCity],
			PlayerInfo[playerid][pVipTime],
			PlayerInfo[playerid][pConnectTime],
			PlayerInfo[playerid][pSex],
			PlayerInfo[playerid][pOrigin],
			PlayerInfo[playerid][pExp],
			PlayerInfo[playerid][pCash],
			PlayerInfo[playerid][pAccount],
			PlayerInfo[playerid][pDeaths],
			PlayerInfo[playerid][pWanted],
			PlayerInfo[playerid][plottoNr],
			PlayerInfo[playerid][pFishes],
			PlayerInfo[playerid][pJob],
			PlayerInfo[playerid][pJobLvl],
			PlayerInfo[playerid][pJobExp],
			PlayerInfo[playerid][pPayCheck],
			PlayerInfo[playerid][pJailed],
			PlayerInfo[playerid][pJailTime],
			PlayerInfo[playerid][pLeader],
			PlayerInfo[playerid][pMember],
			PlayerInfo[playerid][pRank],
			PlayerInfo[playerid][pChar],
			PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);

			format(sql, sizeof(sql), "UPDATE lvrp_users SET Spawn=%d, Faim=%d, Soif=%d, Disease=%d, Interior=%d, PhoneNr=%d, Operator=%d, Formul=%d, PhoneTime=%d, Car1=%d, Car2=%d, Car3=%d, Car4=%d, Car5=%d, Car6=%d, CarUnLock4=%d, CarUnLock5=%d, CarUnLock6=%d, Bizz1=%d, Bizz2=%d, Bizz3=%d, Garage1=%d, Garage2=%d, Garage3=%d, House1=%d, House2=%d, House3=%d WHERE id=%d",
			PlayerInfo[playerid][pSpawn],
			PlayerInfo[playerid][pFaim],
			PlayerInfo[playerid][pSoif],
			PlayerInfo[playerid][pDisease],
			PlayerInfo[playerid][pInt],
			PlayerInfo[playerid][pNumber],
			PlayerInfo[playerid][pOperator],
			PlayerInfo[playerid][pFormul],
			PlayerInfo[playerid][pPhoneTime],
			PlayerInfo[playerid][pCar][0],
			PlayerInfo[playerid][pCar][1],
			PlayerInfo[playerid][pCar][2],
			PlayerInfo[playerid][pCar][3],
			PlayerInfo[playerid][pCar][4],
			PlayerInfo[playerid][pCar][5],
			PlayerInfo[playerid][pCarDev4],
			PlayerInfo[playerid][pCarDev5],
			PlayerInfo[playerid][pCarDev6],
			PlayerInfo[playerid][pBizkey1],
			PlayerInfo[playerid][pBizkey2],
			PlayerInfo[playerid][pBizkey3],
			PlayerInfo[playerid][pGarageKey1],
			PlayerInfo[playerid][pGarageKey2],
			PlayerInfo[playerid][pGarageKey3],
			PlayerInfo[playerid][pHousekey1],
			PlayerInfo[playerid][pHousekey2],
			PlayerInfo[playerid][pHousekey3],
			PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);

			new Float:x, Float:y, Float:z;
		    GetPlayerPos(playerid,x,y,z);
			PlayerInfo[playerid][pPos_x] = x;
			PlayerInfo[playerid][pPos_y] = y;
			PlayerInfo[playerid][pPos_z] = z;

			format(sql, sizeof(sql), "UPDATE lvrp_users SET Pos_x=%f, Pos_y=%f, Pos_z=%f, CarLic=%d, FlyLic=%d, BoatLic=%d, FishLic=%d, LourdLic=%d, MotoLic=%d, TrainLic=%d, GunLic=%d, Gun1=%d, Gun2=%d, Gun3=%d, Gun4=%d, Ammo1=%d, Ammo2=%d, Ammo3=%d, Ammo4=%d WHERE id=%d",
			PlayerInfo[playerid][pPos_x],
			PlayerInfo[playerid][pPos_y],
			PlayerInfo[playerid][pPos_z],
			PlayerInfo[playerid][pCarLic],
			PlayerInfo[playerid][pFlyLic],
			PlayerInfo[playerid][pBoatLic],
			PlayerInfo[playerid][pFishLic],
			PlayerInfo[playerid][pLourdLic],
			PlayerInfo[playerid][pMotoLic],
			PlayerInfo[playerid][pTrainLic],
			PlayerInfo[playerid][pGunLic],
			PlayerInfo[playerid][pGun1],
			PlayerInfo[playerid][pGun2],
			PlayerInfo[playerid][pGun3],
			PlayerInfo[playerid][pGun4],
			PlayerInfo[playerid][pAmmo1],
			PlayerInfo[playerid][pAmmo2],
			PlayerInfo[playerid][pAmmo3],
			PlayerInfo[playerid][pAmmo4],
			PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);

			format(sql, sizeof(sql), "UPDATE lvrp_users SET PayDay=%d, PayDayHad=%d, Identie=%d, PointsRename=%d, ChangeNum=%d, ChangePlaque=%d, ChangeSex=%d, ChangeAge=%d, Crashed=%d, PointPermis=%d, Warnings=%d, VirWorld=%d, Married=%d, MarriedTo=%d, FishTool=%d, InvWeapon1=%d, InvWeapon2=%d, InvWeapon3=%d, InvWeapon4=%d, InvWeapon5=%d, InvWeapon6=%d WHERE id=%d",
			PlayerInfo[playerid][pPayDay],
			PlayerInfo[playerid][pPayDayHad],
			PlayerInfo[playerid][pIdentie],
			PlayerInfo[playerid][pRename],
			PlayerInfo[playerid][pChangeNum],
			PlayerInfo[playerid][pChangePlaque],
			PlayerInfo[playerid][pChangeSex],
			PlayerInfo[playerid][pChangeAge],
			PlayerInfo[playerid][pCrashed],
			PlayerInfo[playerid][pPointPermis],
			PlayerInfo[playerid][pWarnings],
			PlayerInfo[playerid][pVirWorld],
			PlayerInfo[playerid][pMarried],
			PlayerInfo[playerid][pMarriedTo],
			PlayerInfo[playerid][pFishTool],
			PlayerInfo[playerid][pInvWeapon][0],
			PlayerInfo[playerid][pInvWeapon][1],
			PlayerInfo[playerid][pInvWeapon][2],
			PlayerInfo[playerid][pInvWeapon][3],
			PlayerInfo[playerid][pInvWeapon][4],
			PlayerInfo[playerid][pInvWeapon][5],
			PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);

			format(sql, sizeof(sql), "UPDATE lvrp_users SET InvAmmo1=%d, InvAmmo2=%d, InvAmmo3=%d, InvAmmo4=%d, InvAmmo5=%d, InvAmmo6=%d, InvDev5=%d, InvDev6=%d, Mask=%d, Skill_Pistol=%d, Skill_Pistol_Silenced=%d, Skill_Shotgun=%d, Skill_Uzi=%d, Skill_Tec9=%d, Skill_Mp5=%d, Skill_Ak47=%d, Skill_M4=%d, Train_Wep_Time=%d WHERE id=%d",
			PlayerInfo[playerid][pInvAmmo][0],
			PlayerInfo[playerid][pInvAmmo][1],
			PlayerInfo[playerid][pInvAmmo][2],
			PlayerInfo[playerid][pInvAmmo][3],
			PlayerInfo[playerid][pInvAmmo][4],
			PlayerInfo[playerid][pInvAmmo][5],
			PlayerInfo[playerid][pInvDev5],
			PlayerInfo[playerid][pInvDev6],
			PlayerInfo[playerid][pMask],
			PlayerInfo[playerid][pSkill][0],
			PlayerInfo[playerid][pSkill][1],
			PlayerInfo[playerid][pSkill][2],
			PlayerInfo[playerid][pSkill][3],
			PlayerInfo[playerid][pSkill][4],
			PlayerInfo[playerid][pSkill][5],
			PlayerInfo[playerid][pSkill][6],
			PlayerInfo[playerid][pSkill][7],
			PlayerInfo[playerid][pWepTrainTime],
			PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);

			format(sql, sizeof(sql), "UPDATE lvrp_users SET JerricainFuel=%d, Lang1=%d, Lang2=%d, CanRobTime=%d, CanRobTimeCar=%d, CanRobTimePocket=%d, CanRobTimeBizz=%d, CanRobTimeAtm=%d, CanRobTimeTrunk=%d, Locked=%d, Email='%s', CombatStyle=%d, Mobi1=%d, Mobi2=%d, Mobi3=%d, Mobi4=%d, Mobi5=%d, Connected=%d, JobTime=%d, JobBonnus=%d, Bag=%d, DutyTime=%d WHERE id=%d",
			PlayerInfo[playerid][pJerricainFuel],
			PlayerInfo[playerid][pLang1],
			PlayerInfo[playerid][pLang2],
			PlayerInfo[playerid][pRobTime],
			PlayerInfo[playerid][pRobTimeCar],
			PlayerInfo[playerid][pRobTimePocket],
			PlayerInfo[playerid][pRobTimeBizz],
			PlayerInfo[playerid][pRobTimeATM],
			PlayerInfo[playerid][pRobTimeTrunk],
			PlayerInfo[playerid][pLocked],
			PlayerInfo[playerid][pEmail],
			PlayerInfo[playerid][pCombatStyle],
			PlayerInfo[playerid][pMobi][0],
			PlayerInfo[playerid][pMobi][1],
			PlayerInfo[playerid][pMobi][2],
			PlayerInfo[playerid][pMobi][3],
			PlayerInfo[playerid][pMobi][4],
			PlayerInfo[playerid][pConnected],
			PlayerInfo[playerid][pJobTime],
			PlayerInfo[playerid][pJobBonus],
			PlayerInfo[playerid][pBag],
			PlayerInfo[playerid][pDutyTime],
			PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);
			
			format(sql, sizeof(sql), "UPDATE lvrp_users SET LangState1=%d, LangState2=%d, LangTrainTime=%d, Helper=%d, Animator=%d, JobRemain=%d, HasCheck=%d, CheckNumber=%d, Age=%d, statut_recup=%d, TaxiLicense=%d, SkinCrash=%d, DutyCrash=%d, active=%d, InBizz=%d, InSBizz=%d, InGarage=%d, InFaction=%d, InInterior=%d, InHouse=%d WHERE id=%d",
			PlayerInfo[playerid][pLang1State],
			PlayerInfo[playerid][pLang2State],
			PlayerInfo[playerid][pLangTrainTime],
			PlayerInfo[playerid][pHelper],
			PlayerInfo[playerid][pAnimator],
			PlayerInfo[playerid][pJobRemain],
			PlayerInfo[playerid][pCheck],
			PlayerInfo[playerid][pCheckNumber],
			PlayerInfo[playerid][pAge],
			PlayerInfo[playerid][pRecup],
			PlayerInfo[playerid][pTaxi],
			PlayerInfo[playerid][pSkinCrash],
			PlayerInfo[playerid][pDutyCrash],
			PlayerInfo[playerid][pActive],
			gPlayerInBizz[playerid],
			gPlayerInSBizz[playerid],
			gPlayerInGarage[playerid],
			gPlayerInFaction[playerid],
			gPlayerInInterior[playerid],
			gPlayerInHouse[playerid],
            PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);
			
			for(new i=0; i<gPlayerInventory[playerid]; i++)
			{
			    if(PlayerInfo[playerid][pInvModel][i] == 0)
			        {PlayerInfo[playerid][pInvModel][i] = -1;}
			}
			
			// Inventaire
			format(sql, sizeof(sql), "UPDATE lvrp_users_inventories SET iM1=%d, iQ1=%d, iM2=%d, iQ2=%d, iM3=%d, iQ3=%d, iM4=%d, iQ4=%d, iM5=%d, iQ5=%d, iM6=%d, iQ6=%d, iM7=%d, iQ7=%d, iM8=%d, iQ8=%d, iM9=%d, iQ9=%d, iM10=%d, iQ10=%d, iM11=%d, iQ11=%d, iM12=%d, iQ12=%d, iM13=%d, iQ13=%d, iM14=%d, iQ14=%d, iM15=%d, iQ15=%d, iM16=%d, iQ16=%d, iM17=%d, iQ17=%d, iM18=%d, iQ18=%d, iM19=%d, iQ19=%d, iM20=%d, iQ20=%d WHERE SQLid=%d",
            PlayerInfo[playerid][pInvModel][0],PlayerInfo[playerid][pInvQuant][0],PlayerInfo[playerid][pInvModel][1],PlayerInfo[playerid][pInvQuant][1],PlayerInfo[playerid][pInvModel][2],PlayerInfo[playerid][pInvQuant][2],PlayerInfo[playerid][pInvModel][3],PlayerInfo[playerid][pInvQuant][3],PlayerInfo[playerid][pInvModel][4],PlayerInfo[playerid][pInvQuant][4],PlayerInfo[playerid][pInvModel][5],
			PlayerInfo[playerid][pInvQuant][5],PlayerInfo[playerid][pInvModel][6],PlayerInfo[playerid][pInvQuant][6],PlayerInfo[playerid][pInvModel][7],PlayerInfo[playerid][pInvQuant][7],PlayerInfo[playerid][pInvModel][8],PlayerInfo[playerid][pInvQuant][8],PlayerInfo[playerid][pInvModel][9],PlayerInfo[playerid][pInvQuant][9],PlayerInfo[playerid][pInvModel][10],PlayerInfo[playerid][pInvQuant][10],
			PlayerInfo[playerid][pInvModel][11],PlayerInfo[playerid][pInvQuant][11],PlayerInfo[playerid][pInvModel][12],PlayerInfo[playerid][pInvQuant][12],PlayerInfo[playerid][pInvModel][13],PlayerInfo[playerid][pInvQuant][13],PlayerInfo[playerid][pInvModel][14],PlayerInfo[playerid][pInvQuant][14],PlayerInfo[playerid][pInvModel][15],PlayerInfo[playerid][pInvQuant][15],PlayerInfo[playerid][pInvModel][16],
			PlayerInfo[playerid][pInvQuant][16],PlayerInfo[playerid][pInvModel][17],PlayerInfo[playerid][pInvQuant][17],PlayerInfo[playerid][pInvModel][18],PlayerInfo[playerid][pInvQuant][18],PlayerInfo[playerid][pInvModel][19],PlayerInfo[playerid][pInvQuant][19],PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);
			
            format(sql, sizeof(sql), "UPDATE lvrp_users_inventories SET iM21=%d, iQ21=%d, iM22=%d, iQ22=%d, iM23=%d, iQ23=%d, iM24=%d, iQ24=%d, iM25=%d, iQ25=%d, iM26=%d, iQ26=%d, iM27=%d, iQ27=%d, iM28=%d, iQ28=%d, iM29=%d, iQ29=%d, iM30=%d, iQ30=%d, iM31=%d, iQ31=%d, iM32=%d, iQ32=%d, iM33=%d, iQ33=%d, iM34=%d, iQ34=%d, iM35=%d, iQ35=%d, iM36=%d, iQ36=%d, iM37=%d, iQ37=%d, iM38=%d, iQ38=%d, iM39=%d, iQ39=%d, iM40=%d, iQ40=%d WHERE SQLid=%d",
            PlayerInfo[playerid][pInvModel][20],PlayerInfo[playerid][pInvQuant][20],PlayerInfo[playerid][pInvModel][21],PlayerInfo[playerid][pInvQuant][21],PlayerInfo[playerid][pInvModel][22],PlayerInfo[playerid][pInvQuant][22],PlayerInfo[playerid][pInvModel][23],PlayerInfo[playerid][pInvQuant][23],PlayerInfo[playerid][pInvModel][24],PlayerInfo[playerid][pInvQuant][24],PlayerInfo[playerid][pInvModel][25],
			PlayerInfo[playerid][pInvQuant][25],PlayerInfo[playerid][pInvModel][26],PlayerInfo[playerid][pInvQuant][26],PlayerInfo[playerid][pInvModel][27],PlayerInfo[playerid][pInvQuant][27],PlayerInfo[playerid][pInvModel][28],PlayerInfo[playerid][pInvQuant][28],PlayerInfo[playerid][pInvModel][29],PlayerInfo[playerid][pInvQuant][29],PlayerInfo[playerid][pInvModel][30],PlayerInfo[playerid][pInvQuant][30],
			PlayerInfo[playerid][pInvModel][31],PlayerInfo[playerid][pInvQuant][31],PlayerInfo[playerid][pInvModel][32],PlayerInfo[playerid][pInvQuant][32],PlayerInfo[playerid][pInvModel][33],PlayerInfo[playerid][pInvQuant][33],PlayerInfo[playerid][pInvModel][34],PlayerInfo[playerid][pInvQuant][34],PlayerInfo[playerid][pInvModel][35],PlayerInfo[playerid][pInvQuant][35],PlayerInfo[playerid][pInvModel][36],
			PlayerInfo[playerid][pInvQuant][36],PlayerInfo[playerid][pInvModel][37],PlayerInfo[playerid][pInvQuant][37],PlayerInfo[playerid][pInvModel][38],PlayerInfo[playerid][pInvQuant][38],PlayerInfo[playerid][pInvModel][39],PlayerInfo[playerid][pInvQuant][39],PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);
			
			format(sql, sizeof(sql), "UPDATE lvrp_users_inventories SET iM41=%d, iQ41=%d, iM42=%d, iQ42=%d, iM43=%d, iQ43=%d, iM44=%d, iQ44=%d, iM45=%d, iQ45=%d, iM46=%d, iQ46=%d, iM47=%d, iQ47=%d, iM48=%d, iQ48=%d, iM49=%d, iQ49=%d, iM50=%d, iQ50=%d, iM51=%d, iQ51=%d, iM52=%d, iQ52=%d, iM53=%d, iQ53=%d, iM54=%d, iQ54=%d, iM55=%d, iQ55=%d WHERE SQLid=%d",
            PlayerInfo[playerid][pInvModel][40],PlayerInfo[playerid][pInvQuant][40],PlayerInfo[playerid][pInvModel][41],PlayerInfo[playerid][pInvQuant][41],PlayerInfo[playerid][pInvModel][42],PlayerInfo[playerid][pInvQuant][42],PlayerInfo[playerid][pInvModel][43],PlayerInfo[playerid][pInvQuant][43],PlayerInfo[playerid][pInvModel][44],PlayerInfo[playerid][pInvQuant][44],PlayerInfo[playerid][pInvModel][45],
			PlayerInfo[playerid][pInvQuant][45],PlayerInfo[playerid][pInvModel][46],PlayerInfo[playerid][pInvQuant][46],PlayerInfo[playerid][pInvModel][47],PlayerInfo[playerid][pInvQuant][47],PlayerInfo[playerid][pInvModel][48],PlayerInfo[playerid][pInvQuant][48],PlayerInfo[playerid][pInvModel][49],PlayerInfo[playerid][pInvQuant][49],PlayerInfo[playerid][pInvModel][50],PlayerInfo[playerid][pInvQuant][50],
			PlayerInfo[playerid][pInvModel][51],PlayerInfo[playerid][pInvQuant][51],PlayerInfo[playerid][pInvModel][52],PlayerInfo[playerid][pInvQuant][52],PlayerInfo[playerid][pInvModel][53],PlayerInfo[playerid][pInvQuant][53],PlayerInfo[playerid][pInvModel][54],PlayerInfo[playerid][pInvQuant][54],PlayerInfo[playerid][pSQLID]);
			mysql_pquery(MYSQL,sql);
			
			if(gServerReboot==1)
				{msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Vos informations ont été sauvegardées.");}
		}
	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
    new string[128];
    if(afk_time[playerid] > 10)
		{afk_time[playerid]=0;}
	else if(afk_time[playerid] > 0)
	    {afk_time[playerid]=0;}
	    
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && gPlayerLogged[playerid] == 1) // Laser
	{
	    if(GetPlayerWeapon(playerid) != 0)
	    {
			new weaponid, ammo;
		    for (new c=0; c<13; c++)
			{
		 		GetPlayerWeaponData(playerid, c, weaponid, ammo);
				if (ammo > 500)
					{SafeSetPlayerAmmo(playerid,c,500);}
			}
			if(laser_Statue[playerid]==1)
			{
			    RemovePlayerAttachedObject(playerid,laser_Object[playerid]);
			    switch (GetPlayerWeapon(playerid))
				{
	            	case 23:
					{
	                	if (IsPlayerAiming(playerid))
						{
	                    	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6, 0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);}
	     				}
						else
						{
	                    	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6, 0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);}
						}
					}
	                case 30:
					{
	                 	if (IsPlayerAiming(playerid))
				 		{
	                    	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6, 0.628249, -0.027766, 0.078052, -6.621746, 352.552642, 355.084289);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.628249, -0.027766, 0.078052, -1.621746, 356.202667, 355.084289);}
	 					}
						else
						{
	                    	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);}
						}
					}
	                case 31:
					{
	                	if (IsPlayerAiming(playerid))
						{
	                    	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);}
	                    }
						else
						{
	                    	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);}
						}
					}
					case 34:
					{
						if (IsPlayerAiming(playerid))
						{
							/*if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
								SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper standing aiming
								0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
							} else {
								SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper crouched aiming
								0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
							}*/
							return 1;
						}
						else
						{
							if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);}
						}
					}
		            case 29:
					{
		            	if (IsPlayerAiming(playerid))
						{
		                	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);}
		                }
						else
						{
		                   	if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);}
							else
								{SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6,0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);}
						}
					}
				}
			}
		}
		else
		{
		    if(laser_Statue[playerid]==1)
				{RemovePlayerAttachedObject(playerid,laser_Object[playerid]);}
		}
	}
    else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && gPlayerLogged[playerid] == 1) // Speedometre
	{
    	new VehiculeID = GetPlayerVehicleID(playerid);
		new speed[32], Float:Healt;
		GetVehicleHealth(VehiculeID,Healt);
 		if(GetVehicleSpeed(VehiculeID) > MAX_SPEED && PlayerInfo[playerid][pAdmin] < 1)
		{
			if(!IsAPlane(VehiculeID) && !IsAHelicopter(VehiculeID) && !IsATrain(VehiculeID))
			{
			    anticheat_Warn[playerid][4] ++;
			    if(anticheat_Warn[playerid][4] == 6)
			    	{OnPlayerCheat(playerid,1);}
			}
		}
		if(GetVehicleSpeed(VehiculeID) > vehicle[VehiculeID][cBrid] && vehicle[VehiculeID][cBrid] != 0)
		{
			if(!IsABike(VehiculeID))
			{
			    new Float:speed_x[MAX_PLAYERS],Float:speed_y[MAX_PLAYERS],Float:speed_z[MAX_PLAYERS];
			    GetVehicleVelocity(VehiculeID,speed_x[playerid],speed_y[playerid],speed_z[playerid]);
				SetVehicleVelocity(VehiculeID,speed_x[playerid]/1.020,speed_y[playerid]/1.020,speed_z[playerid]/1.020);
			}
		}
		if(IsABike(VehiculeID))
		{
		    if(GetVehicleSpeed(VehiculeID) > BIKE_SPEED)
			{
		    	new Float:speed_x[MAX_PLAYERS],Float:speed_y[MAX_PLAYERS],Float:speed_z[MAX_PLAYERS];
			    GetVehicleVelocity(VehiculeID,speed_x[playerid],speed_y[playerid],speed_z[playerid]);
				SetVehicleVelocity(VehiculeID,speed_x[playerid]/1.020,speed_y[playerid]/1.020,speed_z[playerid]/1.020);
			}
		}
		if(GetVehicleSpeed(VehiculeID) <= SPEED_NORMAL)
			{format(speed,sizeof(speed),"~g~%d",GetVehicleSpeed(VehiculeID));}
        else if(GetVehicleSpeed(VehiculeID) <= SPEED_CAMPAIGN)
			{format(speed,sizeof(speed),"~y~%d",GetVehicleSpeed(VehiculeID));}
		else if(GetVehicleSpeed(VehiculeID) <= SPEED_HIGHT)
			{format(speed,sizeof(speed),"~r~%d",GetVehicleSpeed(VehiculeID));}
		else
			{format(speed,sizeof(speed),"~p~%d",GetVehicleSpeed(VehiculeID));}
        	
		format(string,sizeof(string),"Vitesse : %s" , speed);
		PlayerTextDrawSetString(playerid,speedo_Speed[playerid], string);
		format(string,sizeof(string),"Moteur : %0.0f" , Healt);
		PlayerTextDrawSetString(playerid,speedo_Health[playerid], string);
		format(string,sizeof(string),"~b~%s" , vehName[GetVehicleModel(VehiculeID)-400]);
		PlayerTextDrawSetString(playerid,speedo_BoxSpeed[playerid], string);
		
		if (Healt <= 400 && !IsABoat(VehiculeID) && !IsABike(VehiculeID) && !IsAPlane(VehiculeID))
  		{
  		    if(vehicle[VehiculeID][cEngine] == true)
        	{
        	    new enginem, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(VehiculeID,enginem, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(VehiculeID, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
                msg_Client(playerid, COLOR_WHITE, "» Véhicule « Votre véhicule est HS, appeler un mécanicien pour qu'il le répare.");
                vehicle[VehiculeID][cEngine] = false;
                speedometer_Update(playerid,1,0);
                format(string, sizeof(string), "* Le moteur du véhicule de %s est HS.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
        	}
  		}
	}
	return 1;
}

stock speedometer_Update(playerid,text,type)
{
	if(text==1)//Moteur
	{
		if(vehicle[GetPlayerVehicleID(playerid)][cEngine]==true)
	    	{PlayerTextDrawSetString(playerid,speedo_LightMotor[playerid], "~g~.");}
		else
   			{PlayerTextDrawSetString(playerid,speedo_LightMotor[playerid], ".");}
	}
	if(text==2)//Phares
	{
		if(vehicle[GetPlayerVehicleID(playerid)][cLight]==true)
	    	{PlayerTextDrawSetString(playerid,speedo_Lighting[playerid][0], "~b~O"); PlayerTextDrawSetString(playerid,speedo_Lighting[playerid][1], "~b~O");}
		else
   			{PlayerTextDrawSetString(playerid,speedo_Lighting[playerid][0], "~w~O"); PlayerTextDrawSetString(playerid,speedo_Lighting[playerid][1], "~w~O");}
	}
	if(text==4)//Bridage
	{
	    new string[128];
	    if(vehicle[GetPlayerVehicleID(playerid)][cBrid] != 0)
	        {format(string,sizeof(string),"Bridage : ~r~ %d KM/h",vehicle[GetPlayerVehicleID(playerid)][cBrid]); PlayerTextDrawSetString(playerid,speedo_Brid[playerid], string);}
		else
		    {format(string,sizeof(string),"Bridage : ~g~ Aucun"); PlayerTextDrawSetString(playerid,speedo_Brid[playerid], string);}
	}
	if(text==5)//Clignotants
	{
	    if(type==0)
	    {
	        PlayerTextDrawColor(playerid,speedo_Beat[playerid][0], -1);
	        PlayerTextDrawShow(playerid,speedo_Beat[playerid][0]);
			/*PlayerTextDrawDestroy(playerid,speedo_Beat[playerid][0]);
			speedo_Beat[playerid][0] = CreatePlayerTextDraw(playerid,498.000000, 405.000000, "LD_BEAT:left");
			PlayerTextDrawBackgroundColor(playerid,speedo_Beat[playerid][0], 255);
			PlayerTextDrawFont(playerid,speedo_Beat[playerid][0], 4);
			PlayerTextDrawLetterSize(playerid,speedo_Beat[playerid][0], 0.500000, 1.000000);
			PlayerTextDrawColor(playerid,speedo_Beat[playerid][0], -1);
			PlayerTextDrawSetOutline(playerid,speedo_Beat[playerid][0], 0);
			PlayerTextDrawSetProportional(playerid,speedo_Beat[playerid][0], 1);
			PlayerTextDrawSetShadow(playerid,speedo_Beat[playerid][0], 1);
			PlayerTextDrawUseBox(playerid,speedo_Beat[playerid][0], 1);
			PlayerTextDrawBoxColor(playerid,speedo_Beat[playerid][0], 255);
			PlayerTextDrawTextSize(playerid,speedo_Beat[playerid][0], 18.000000, 18.000000);
			PlayerTextDrawShow(playerid,speedo_Beat[playerid][0]);*/
	    }
	    else
	    {
	        PlayerTextDrawColor(playerid,speedo_Beat[playerid][0], 0x0000FF62);
	        PlayerTextDrawShow(playerid,speedo_Beat[playerid][0]);
	        /*PlayerTextDrawDestroy(playerid,speedo_Beat[playerid][0]);
	        speedo_Beat[playerid][0] = CreatePlayerTextDraw(playerid,498.000000, 405.000000, "LD_BEAT:left");
			PlayerTextDrawBackgroundColor(playerid,speedo_Beat[playerid][0], 255);
			PlayerTextDrawFont(playerid,speedo_Beat[playerid][0], 4);
			PlayerTextDrawLetterSize(playerid,speedo_Beat[playerid][0], 0.500000, 1.000000);
			PlayerTextDrawColor(playerid,speedo_Beat[playerid][0], 0x0000FF62);
			PlayerTextDrawSetOutline(playerid,speedo_Beat[playerid][0], 0);
			PlayerTextDrawSetProportional(playerid,speedo_Beat[playerid][0], 1);
			PlayerTextDrawSetShadow(playerid,speedo_Beat[playerid][0], 1);
			PlayerTextDrawUseBox(playerid,speedo_Beat[playerid][0], 1);
			PlayerTextDrawBoxColor(playerid,speedo_Beat[playerid][0], 255);
			PlayerTextDrawTextSize(playerid,speedo_Beat[playerid][0], 18.000000, 18.000000);
			PlayerTextDrawShow(playerid,speedo_Beat[playerid][0]);*/
	    }
	}
	if(text==6)//Clignotants
	{
	    if(type==0)
	    	{PlayerTextDrawColor(playerid,speedo_Beat[playerid][1], -1);PlayerTextDrawShow(playerid,speedo_Beat[playerid][1]);}
	    else
	    	{PlayerTextDrawColor(playerid,speedo_Beat[playerid][1], 0x0000FF62);PlayerTextDrawShow(playerid,speedo_Beat[playerid][1]);}
	}
	if(text==8)// Essence
	{
	    PlayerTextDrawDestroy(playerid,speedo_Bar[playerid]);
	    new Float:totogas[MAX_PLAYERS];
		totogas[playerid] = 0.056*vehicle[GetPlayerVehicleID(playerid)][cGas];
		
		speedo_Bar[playerid] = CreatePlayerTextDraw(playerid,606.000000, 404.500000, "_");
		PlayerTextDrawBackgroundColor(playerid,speedo_Bar[playerid], 255);
		PlayerTextDrawFont(playerid,speedo_Bar[playerid], 1);
		PlayerTextDrawLetterSize(playerid,speedo_Bar[playerid], 0.500000, -(0.4+totogas[playerid]));
		PlayerTextDrawColor(playerid,speedo_Bar[playerid], -1);
		PlayerTextDrawSetOutline(playerid,speedo_Bar[playerid], 0);
		PlayerTextDrawSetProportional(playerid,speedo_Bar[playerid], 1);
		PlayerTextDrawSetShadow(playerid,speedo_Bar[playerid], 1);
		PlayerTextDrawUseBox(playerid,speedo_Bar[playerid], 1);
		if(vehicle[GetPlayerVehicleID(playerid)][cGas] > 45)
			{PlayerTextDrawBoxColor(playerid,speedo_Bar[playerid], 8716543);}
		else if(vehicle[GetPlayerVehicleID(playerid)][cGas] > 15)
			{PlayerTextDrawBoxColor(playerid,speedo_Bar[playerid], 0xFF8000FF);}
		else
		    {PlayerTextDrawBoxColor(playerid,speedo_Bar[playerid], 0xFF0000FF);}
		PlayerTextDrawTextSize(playerid,speedo_Bar[playerid], 592.000000, 0.000000);
		PlayerTextDrawShow(playerid,speedo_Bar[playerid]);
		return 1;
	}
	if(text==9)
	{
	    new string[128];
	    new carid = GetPlayerVehicleID(playerid);
		format(string,sizeof(string),"Miles : %d.%d" , vehicle[carid][cKiloMeter],vehicle[carid][cMeter]);
		PlayerTextDrawSetString(playerid,speedo_Kilometrage[playerid], string);
	}
	return 1;
}

public speedometer_Blinking(playerid,type)
{
    if(speedoInterval[playerid]==0)
        {speedoInterval[playerid]=1;}
	else
	    {speedoInterval[playerid]=0;}
	    
	if(type==1)
		{speedometer_Update(playerid,5,speedoInterval[playerid]);}
    else if(type==2)
		{speedometer_Update(playerid,6,speedoInterval[playerid]);}
	return 1;
}

public OnPlayerLogin(playerid,pass[])
{
	new string2[128],cryptepass[128],playernamesplit[3][MAX_PLAYER_NAME];
	split(PlayerInfo[playerid][pRealName], playernamesplit, '_');

	MySQLCheckConnexion();
	sha1(pass,cryptepass);
	MySQLFetchAcctSingle(PlayerInfo[playerid][pSQLID], "Pass", PlayerInfo[playerid][pKey]);
	if(strcmp(PlayerInfo[playerid][pKey],cryptepass, false ) == 0 )
	{
	    MySQLCheckConnexion();
		format(sql, sizeof(sql), "SELECT * FROM lvrp_users WHERE id = %d LIMIT 1", PlayerInfo[playerid][pSQLID]);
		mysql_query(MYSQL,sql);
		new count = 0;
		if(cache_get_row_count(count) && count > 0)
		{
		    cache_get_value_name(0,"Pass",PlayerInfo[playerid][pKey], 64);
		    cache_get_value_name_int(0,"Level", PlayerInfo[playerid][pLevel]);
		    cache_get_value_name_int(0,"AdminLevel", PlayerInfo[playerid][pAdmin]);
		    cache_get_value_name_int(0,"Age", PlayerInfo[playerid][pAge]);
		    cache_get_value_name_int(0,"DonateRank", PlayerInfo[playerid][pDonateRank]);
		    cache_get_value_name_int(0,"City", PlayerInfo[playerid][pCity]);
		    cache_get_value_name_int(0,"VipTime", PlayerInfo[playerid][pVipTime]);
		    cache_get_value_name_int(0,"ConnectedTime", PlayerInfo[playerid][pConnectTime]);
		    cache_get_value_name_int(0,"Sex", PlayerInfo[playerid][pSex]);
		    cache_get_value_name_int(0,"Origin", PlayerInfo[playerid][pOrigin]);
		    cache_get_value_name_int(0,"Respect", PlayerInfo[playerid][pExp]);
		    cache_get_value_name_int(0,"Cash", PlayerInfo[playerid][pCash]);
		    cache_get_value_name_int(0,"Bank", PlayerInfo[playerid][pAccount]);
		    cache_get_value_name_int(0,"Deaths", PlayerInfo[playerid][pDeaths]);

			SafeResetPlayerMoney(playerid,PlayerInfo[playerid][pCash]);
			
			cache_get_value_name_int(0,"Wanted", PlayerInfo[playerid][pWanted]);
			cache_get_value_name_int(0,"LottoNr", PlayerInfo[playerid][plottoNr]);
			cache_get_value_name_int(0,"Fishes", PlayerInfo[playerid][pFishes]);
		 	cache_get_value_name_int(0,"Job", PlayerInfo[playerid][pJob]);
			cache_get_value_name_int(0,"JobLvl", PlayerInfo[playerid][pJobLvl]);
			cache_get_value_name_int(0,"JobExp", PlayerInfo[playerid][pJobExp]);
			cache_get_value_name_int(0,"JobTime", PlayerInfo[playerid][pJobTime]);
			cache_get_value_name_int(0,"JobBonnus", PlayerInfo[playerid][pJobBonus]);
			cache_get_value_name_int(0,"Paycheck", PlayerInfo[playerid][pPayCheck]);
			cache_get_value_name_int(0,"Jailed", PlayerInfo[playerid][pJailed]);
			cache_get_value_name_int(0,"JailTime", PlayerInfo[playerid][pJailTime]);
			cache_get_value_name_int(0,"Leader", PlayerInfo[playerid][pLeader]);
			cache_get_value_name_int(0,"Member", PlayerInfo[playerid][pMember]);
			
			cache_get_value_name_int(0,"Rank", PlayerInfo[playerid][pRank]);
			cache_get_value_name_int(0,"Skin", PlayerInfo[playerid][pChar]);
			cache_get_value_name_int(0,"Spawn", PlayerInfo[playerid][pSpawn]);
			cache_get_value_name_int(0,"Faim", PlayerInfo[playerid][pFaim]);
			cache_get_value_name_int(0,"Soif", PlayerInfo[playerid][pSoif]);
			cache_get_value_name_int(0,"Disease", PlayerInfo[playerid][pDisease]);
			cache_get_value_name_int(0,"Interior", PlayerInfo[playerid][pInt]);
			cache_get_value_name_int(0,"PhoneNr", PlayerInfo[playerid][pNumber]);
			cache_get_value_name_int(0,"Operator", PlayerInfo[playerid][pOperator]);
			cache_get_value_name_int(0,"Formul", PlayerInfo[playerid][pFormul]);
			cache_get_value_name_int(0,"PhoneTime", PlayerInfo[playerid][pPhoneTime]);
			cache_get_value_name_int(0,"Car1", PlayerInfo[playerid][pCar][0]);
			cache_get_value_name_int(0,"Car2", PlayerInfo[playerid][pCar][1]);
			cache_get_value_name_int(0,"Car3", PlayerInfo[playerid][pCar][2]);
			cache_get_value_name_int(0,"Car4", PlayerInfo[playerid][pCar][3]);
			cache_get_value_name_int(0,"Car5", PlayerInfo[playerid][pCar][4]);
			cache_get_value_name_int(0,"Car6", PlayerInfo[playerid][pCar][5]);
			
			cache_get_value_name_int(0,"CarUnLock4", PlayerInfo[playerid][pCarDev4]);
			cache_get_value_name_int(0,"CarUnLock5", PlayerInfo[playerid][pCarDev5]);
			cache_get_value_name_int(0,"CarUnLock6", PlayerInfo[playerid][pCarDev6]);
			cache_get_value_name_int(0,"Bizz1", PlayerInfo[playerid][pBizkey1]);
			cache_get_value_name_int(0,"Bizz2", PlayerInfo[playerid][pBizkey2]);
			cache_get_value_name_int(0,"Bizz3", PlayerInfo[playerid][pBizkey3]);
			cache_get_value_name_int(0,"Garage1", PlayerInfo[playerid][pGarageKey1]);
			cache_get_value_name_int(0,"Garage2", PlayerInfo[playerid][pGarageKey2]);
			cache_get_value_name_int(0,"Garage3", PlayerInfo[playerid][pGarageKey3]);
			cache_get_value_name_int(0,"House1", PlayerInfo[playerid][pHousekey1]);
			cache_get_value_name_int(0,"House2", PlayerInfo[playerid][pHousekey2]);
			cache_get_value_name_int(0,"House3", PlayerInfo[playerid][pHousekey3]);
			
			cache_get_value_name_float(0,"Pos_x", PlayerInfo[playerid][pPos_x]);
			cache_get_value_name_float(0,"Pos_y", PlayerInfo[playerid][pPos_y]);
			cache_get_value_name_float(0,"Pos_z", PlayerInfo[playerid][pPos_z]);
			cache_get_value_name_int(0,"CarLic", PlayerInfo[playerid][pCarLic]);
			cache_get_value_name_int(0,"FlyLic", PlayerInfo[playerid][pFlyLic]);
			cache_get_value_name_int(0,"BoatLic", PlayerInfo[playerid][pBoatLic]);
			cache_get_value_name_int(0,"FishLic", PlayerInfo[playerid][pFishLic]);
			cache_get_value_name_int(0,"LourdLic", PlayerInfo[playerid][pLourdLic]);
			cache_get_value_name_int(0,"MotoLic", PlayerInfo[playerid][pMotoLic]);
			cache_get_value_name_int(0,"TrainLic", PlayerInfo[playerid][pTrainLic]);
			cache_get_value_name_int(0,"GunLic", PlayerInfo[playerid][pGunLic]);
			
			cache_get_value_name_int(0,"Gun1", PlayerInfo[playerid][pGun1]);
			cache_get_value_name_int(0,"Gun2", PlayerInfo[playerid][pGun2]);
			cache_get_value_name_int(0,"Gun3", PlayerInfo[playerid][pGun3]);
			cache_get_value_name_int(0,"Gun4", PlayerInfo[playerid][pGun4]);
			cache_get_value_name_int(0,"Ammo1", PlayerInfo[playerid][pAmmo1]);
			cache_get_value_name_int(0,"Ammo2", PlayerInfo[playerid][pAmmo2]);
			cache_get_value_name_int(0,"Ammo3", PlayerInfo[playerid][pAmmo3]);
			cache_get_value_name_int(0,"Ammo4", PlayerInfo[playerid][pAmmo4]);
			
			cache_get_value_name_int(0,"PayDay", PlayerInfo[playerid][pPayDay]);
			cache_get_value_name_int(0,"PayDayHad", PlayerInfo[playerid][pPayDayHad]);
			cache_get_value_name_int(0,"Identie", PlayerInfo[playerid][pIdentie]);
			cache_get_value_name_int(0,"PointsRename", PlayerInfo[playerid][pRename]);
			cache_get_value_name_int(0,"ChangeNum", PlayerInfo[playerid][pChangeNum]);
			cache_get_value_name_int(0,"ChangePlaque", PlayerInfo[playerid][pChangePlaque]);
			cache_get_value_name_int(0,"ChangeSex", PlayerInfo[playerid][pChangeSex]);
			cache_get_value_name_int(0,"ChangeAge", PlayerInfo[playerid][pChangeAge]);
			
			cache_get_value_name_int(0,"Crashed", PlayerInfo[playerid][pCrashed]);
			cache_get_value_name_int(0,"PointPermis", PlayerInfo[playerid][pPointPermis]);
			cache_get_value_name_int(0,"Warnings", PlayerInfo[playerid][pWarnings]);
			cache_get_value_name_int(0,"VirWorld", PlayerInfo[playerid][pVirWorld]);
			cache_get_value_name_int(0,"Married", PlayerInfo[playerid][pMarried]);
			cache_get_value_name_int(0,"MarriedTo", PlayerInfo[playerid][pMarriedTo]);
			cache_get_value_name_int(0,"FishTool", PlayerInfo[playerid][pFishTool]);
			
			cache_get_value_name_int(0,"InvWeapon1", PlayerInfo[playerid][pInvWeapon][0]);
			cache_get_value_name_int(0,"InvWeapon2", PlayerInfo[playerid][pInvWeapon][1]);
			cache_get_value_name_int(0,"InvWeapon3", PlayerInfo[playerid][pInvWeapon][2]);
			cache_get_value_name_int(0,"InvWeapon4", PlayerInfo[playerid][pInvWeapon][3]);
			cache_get_value_name_int(0,"InvWeapon5", PlayerInfo[playerid][pInvWeapon][4]);
			cache_get_value_name_int(0,"InvAmmo1", PlayerInfo[playerid][pInvAmmo][0]);
			cache_get_value_name_int(0,"InvAmmo2", PlayerInfo[playerid][pInvAmmo][1]);
			cache_get_value_name_int(0,"InvAmmo3", PlayerInfo[playerid][pInvAmmo][2]);
			cache_get_value_name_int(0,"InvAmmo4", PlayerInfo[playerid][pInvAmmo][3]);
			cache_get_value_name_int(0,"InvAmmo5", PlayerInfo[playerid][pInvAmmo][4]);
		 	cache_get_value_name_int(0,"InvDev5", PlayerInfo[playerid][pInvDev5]);
			cache_get_value_name_int(0,"InvDev6", PlayerInfo[playerid][pInvDev6]);
			cache_get_value_name_int(0,"Mask", PlayerInfo[playerid][pMask]);
			
			cache_get_value_name_int(0,"Skill_Pistol", PlayerInfo[playerid][pSkill][0]);
			cache_get_value_name_int(0,"Skill_Pistol_Silenced", PlayerInfo[playerid][pSkill][1]);
			cache_get_value_name_int(0,"Skill_Shotgun", PlayerInfo[playerid][pSkill][2]);
			cache_get_value_name_int(0,"Skill_Uzi", PlayerInfo[playerid][pSkill][3]);
			cache_get_value_name_int(0,"Skill_Tec9", PlayerInfo[playerid][pSkill][4]);
			cache_get_value_name_int(0,"Skill_Mp5", PlayerInfo[playerid][pSkill][5]);
			cache_get_value_name_int(0,"Skill_Ak47", PlayerInfo[playerid][pSkill][6]);
			cache_get_value_name_int(0,"Skill_M4", PlayerInfo[playerid][pSkill][7]);
			
			cache_get_value_name_int(0,"Train_Wep_Time", PlayerInfo[playerid][pWepTrainTime]);
			cache_get_value_name_int(0,"JerricainFuel", PlayerInfo[playerid][pJerricainFuel]);
			cache_get_value_name_int(0,"Lang1", PlayerInfo[playerid][pLang1]);
			cache_get_value_name_int(0,"Lang2", PlayerInfo[playerid][pLang2]);
			cache_get_value_name_int(0,"CanRobTime", PlayerInfo[playerid][pRobTime]);
			cache_get_value_name_int(0,"CanRobTimeCar", PlayerInfo[playerid][pRobTimeCar]);
			cache_get_value_name_int(0,"CanRobTimePocket", PlayerInfo[playerid][pRobTimePocket]);
			cache_get_value_name_int(0,"CanRobTimeAtm", PlayerInfo[playerid][pRobTimeATM]);
			cache_get_value_name_int(0,"CanRobTimeTrunk", PlayerInfo[playerid][pRobTimeTrunk]);
			
			cache_get_value_name_int(0,"CanRobTimeBizz", PlayerInfo[playerid][pRobTimeBizz]);
			cache_get_value_name_int(0,"Locked", PlayerInfo[playerid][pLocked]);
			cache_get_value_name(0,"Email",PlayerInfo[playerid][pEmail], 64);
			cache_get_value_name_int(0,"CombatStyle", PlayerInfo[playerid][pCombatStyle]);
			cache_get_value_name_int(0,"Bag", PlayerInfo[playerid][pBag]);
			cache_get_value_name_int(0,"DutyTime", PlayerInfo[playerid][pDutyTime]);
			cache_get_value_name_int(0,"SkinCrash", PlayerInfo[playerid][pSkinCrash]);
			cache_get_value_name_int(0,"DutyCrash", PlayerInfo[playerid][pDutyCrash]);
			
			cache_get_value_name_int(0,"Mobi1", PlayerInfo[playerid][pMobi][0]);
			cache_get_value_name_int(0,"Mobi2", PlayerInfo[playerid][pMobi][1]);
			cache_get_value_name_int(0,"Mobi3", PlayerInfo[playerid][pMobi][2]);
			cache_get_value_name_int(0,"Mobi4", PlayerInfo[playerid][pMobi][3]);
			cache_get_value_name_int(0,"Mobi5", PlayerInfo[playerid][pMobi][4]);
			cache_get_value_name_int(0,"Helper", PlayerInfo[playerid][pHelper]);
			cache_get_value_name_int(0,"Animator", PlayerInfo[playerid][pAnimator]);
			cache_get_value_name_int(0,"JobRemain", PlayerInfo[playerid][pJobRemain]);
			cache_get_value_name_int(0,"HasCheck", PlayerInfo[playerid][pCheck]);
			cache_get_value_name_int(0,"CheckNumber", PlayerInfo[playerid][pCheckNumber]);
			cache_get_value_name_int(0,"LangState1", PlayerInfo[playerid][pLang1State]);
			cache_get_value_name_int(0,"LangState2", PlayerInfo[playerid][pLang2State]);
			cache_get_value_name_int(0,"LangTrainTime", PlayerInfo[playerid][pLangTrainTime]);
			cache_get_value_name_int(0,"statut_recup", PlayerInfo[playerid][pRecup]);
			cache_get_value_name_int(0,"TaxiLicense", PlayerInfo[playerid][pTaxi]);
			cache_get_value_name_int(0,"active", PlayerInfo[playerid][pActive]);
			
			// Variable d'interieur
			cache_get_value_name_int(0,"InBizz", gPlayerInBizz[playerid]);
			cache_get_value_name_int(0,"InSBizz", gPlayerInSBizz[playerid]);
			cache_get_value_name_int(0,"InGarage", gPlayerInGarage[playerid]);
			cache_get_value_name_int(0,"InFaction", gPlayerInFaction[playerid]);
			cache_get_value_name_int(0,"InInterior", gPlayerInInterior[playerid]);
			cache_get_value_name_int(0,"InHouse", gPlayerInHouse[playerid]);
		}
		else
			{msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Une erreur est survenue lors de la reception... Auto-kick");SetTimerEx("TimerKick", 1000, 0, "i", playerid);return 1;}
	}
	else
	{
		ShowPlayerDialog(playerid,12346,DIALOG_STYLE_PASSWORD,"» Connexion «","{AA3333}Mauvais mot de passe.\n\n{FFFFFF}Veuillez entrer le bon mot de passe {00A5FF}ci-dessous {FFFFFF}:","Valider","Quitter");
	 	gPlayerLogTries[playerid] += 1;
	 	if(gPlayerLogTries[playerid] == 3) {Kick(playerid);}
	    return 1;
	}
	// Actualisation des données de connexion DB
	MySQLAddLoginRecord(PlayerInfo[playerid][pSQLID],PlayerInfo[playerid][pIP]);
	    
	// Varables sur la connexion
	PlayerInfo[playerid][pConnected]=1;
	gPlayerLogged[playerid] = 1;
	SafeSetPlayerHealth(playerid, 100.0);
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	
	// On check les extentions de la table user_lvrp
	MySQLCheckAccountOther(PlayerInfo[playerid][pSQLID]);
		
	// Compte locké ?
	if(PlayerInfo[playerid][pLocked] == 1)
		{MySQLKick(playerid,-1,"Compte locké");return 1;}

	// MSG
	ClearChatbox(playerid, 8);
	format(string2,sizeof(string2),"{D1A400}» %s",SERVER_NAME);
	msg_Client(playerid, COLOR_WHITE, string2);
	format(string2, sizeof(string2), "{FFFFFF}Bienvenue, %s",playernamesplit[0]);
	msg_Client(playerid, COLOR_WHITE,string2);
	msg_Client(playerid, COLOR_WHITE, "N'hésitez pas à utiliser /aide /question et /rapport");
	printf("[Login] %s c'est logué.",PlayerInfo[playerid][pRealName]);
	
	// Load others
    server_HideIntroTexts(playerid);
    stats_Show(playerid);
	server_PreloadAnims(playerid);
  	KillTimer(player_antihack[playerid]);           						
	TimerConnectOff(playerid);               								
	gym_SetCombatStyle(playerid, PlayerInfo[playerid][pCombatStyle], true); 	
	skill_Set(playerid);
	SetTimerEx("UnsetFirstSpawn", 8000, false, "i", playerid);
	SetTimerEx("CommeBackOff", 60000, false, "i", playerid);
	SetSpawnInfo(playerid, 3, PlayerInfo[playerid][pChar], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
	SpawnPlayer(playerid);
    inventory_Load(playerid);
	if(PlayerInfo[playerid][pDonateRank]==3) {gPlayerInventory[playerid]=45;}
	else if(PlayerInfo[playerid][pDonateRank]==4) {gPlayerInventory[playerid]=55;}
	
	// Casier
	if(PlayerInfo[playerid][pWanted]>0)
	{
	    new crime[128];
		SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
		format(sql,sizeof(sql),"SELECT Crime1 FROM lvrp_users_casiers WHERE SQLid=%d LIMIT 1",PlayerInfo[playerid][pSQLID]);
		mysql_query(MYSQL,sql);
		cache_get_value_name(0,"Crime1",crime, 64);
		 	
		format(string2,sizeof(string2),"{CF9756}» Info «{FFFFFF} Vous êtes toujours soupçonné de : %s",crime);
		msg_Client(playerid,COLOR_INFO,string2);
	}
	return 1;
}

stock accessory_Load(playerid)
{
    new a = 0;
	for(new i=0; i<5; i++)
	{
	    format(sql, sizeof(sql), "SELECT * FROM lvrp_users_accessories WHERE SQLid=%d AND IndexZ=%d", PlayerInfo[playerid][pSQLID],i);
		mysql_query(MYSQL,sql);
        cache_get_row_count(a);
		if(a == 0)
		{
			format(sql, sizeof(sql), "INSERT INTO lvrp_users_accessories SET SQLid=%d, IndexZ=%d", PlayerInfo[playerid][pSQLID], i);
			mysql_pquery(MYSQL,sql);
		}
	}
    format(sql, sizeof(sql), "SELECT * FROM lvrp_users_accessories WHERE SQLid=%d", PlayerInfo[playerid][pSQLID]);
	mysql_query(MYSQL,sql);
	for(new i=0; i<5; i++)
	{
	    cache_get_value_index_int(i,1, a);
	    cache_get_value_index_int(i,2, accessory[playerid][model][a]);
	    cache_get_value_index_int(i,3, accessory[playerid][bone][a]);
	    cache_get_value_index_float(i,4, accessory[playerid][pos_x][a]);
	    cache_get_value_index_float(i,5, accessory[playerid][pos_y][a]);
	    cache_get_value_index_float(i,6, accessory[playerid][pos_z][a]);
     	cache_get_value_index_float(i,7, accessory[playerid][pos_rx][a]);
	    cache_get_value_index_float(i,8, accessory[playerid][pos_ry][a]);
	    cache_get_value_index_float(i,9, accessory[playerid][pos_rz][a]);
	    cache_get_value_index_float(i,10, accessory[playerid][pos_ox][a]);
	    cache_get_value_index_float(i,11, accessory[playerid][pos_oy][a]);
	    cache_get_value_index_float(i,12, accessory[playerid][pos_oz][a]);
	    if(accessory[playerid][model][a] != 0)
	        {SetPlayerAttachedObject(playerid,a,accessory[playerid][model][a],accessory[playerid][bone][a],accessory[playerid][pos_x][a],accessory[playerid][pos_y][a],accessory[playerid][pos_z][a],accessory[playerid][pos_rx][a],accessory[playerid][pos_ry][a],accessory[playerid][pos_rz][a],accessory[playerid][pos_ox][a],accessory[playerid][pos_oy][a],accessory[playerid][pos_oz][a]);}
	}
	return 1;
}

stock accessory_Save(playerid,index)
{
    MySQLCheckConnexion();
	format(sql,sizeof(sql),"UPDATE lvrp_users_accessories SET Model=%d, Bone=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Rot_x=%f, Rot_y=%f, Rot_z=%f, Off_x=%f, Off_y=%f, Off_z=%f WHERE SQLid=%d AND IndexZ=%d",
	accessory[playerid][model][index],accessory[playerid][bone][index],accessory[playerid][pos_x][index],accessory[playerid][pos_y][index],accessory[playerid][pos_z][index],
	accessory[playerid][pos_rx][index],accessory[playerid][pos_ry][index],accessory[playerid][pos_rz][index],accessory[playerid][pos_ox][index],accessory[playerid][pos_oy][index],accessory[playerid][pos_oz][index],PlayerInfo[playerid][pSQLID],index);
	mysql_pquery(MYSQL,sql);
	return 1;
}

stock inventory_Load(playerid)
{
    format(sql, sizeof(sql), "SELECT * FROM lvrp_users_inventories WHERE SQLid=%d", PlayerInfo[playerid][pSQLID]);
	mysql_query(MYSQL,sql);
	new alterne = 0, idx=0, idx2=0;
	for(new i=1; i<=110; i++)
	{
	    if(alterne == 0)
     	{
		 	cache_get_value_index_int(0,i, PlayerInfo[playerid][pInvModel][idx]);
			alterne=1;
			if(PlayerInfo[playerid][pInvModel][idx] == 0)
			    {PlayerInfo[playerid][pInvModel][idx]=-1;}
            idx++;
 		}
		else
			{cache_get_value_index_int(0,i, PlayerInfo[playerid][pInvQuant][idx2]); alterne=0; idx2++;}
	}
	return 1;
}

stock inventory_UpdateItem(playerid,modelid,quant)
{
	new bool:found=false;
	if(!server_IsValidItem(modelid))
	    {return 1;}
	for(new i=0; i<gPlayerInventory[playerid]; i++)
	{
	    if(PlayerInfo[playerid][pInvModel][i] == modelid)
		{
			PlayerInfo[playerid][pInvQuant][i]+=quant; found=true;
			if(PlayerInfo[playerid][pInvQuant][i]<=0)
			    {PlayerInfo[playerid][pInvQuant][i]=0;PlayerInfo[playerid][pInvModel][i]=-1;}
			break;
		}
	}
	if(found==false)
	{
	    for(new i=0; i<gPlayerInventory[playerid]; i++)
		{
			if(PlayerInfo[playerid][pInvModel][i]==-1)
	        	{PlayerInfo[playerid][pInvModel][i]=modelid; PlayerInfo[playerid][pInvQuant][i]=quant; break;}
	    }
	}
	return 1;
}

stock inventory_GetItemQuantityIn(playerid,modelmin,modelmax)
{
    /*if(!server_IsValidItem(modelmin))
	    {return 1;}*/
    for(new i=0; i<gPlayerInventory[playerid]; i++)
	{
	    if(PlayerInfo[playerid][pInvModel][i] >= modelmin && PlayerInfo[playerid][pInvModel][i] <= modelmax)
	        {return PlayerInfo[playerid][pInvQuant][i];}
	}
	return 0;
}

stock inventory_GetItemQuantity(playerid,modelid)
{
    if(!server_IsValidItem(modelid))
	    {return 1;}
    for(new i=0; i<gPlayerInventory[playerid]; i++)
	{
	    if(PlayerInfo[playerid][pInvModel][i] == modelid)
	        {return PlayerInfo[playerid][pInvQuant][i];}
	}
	return 0;
}

stock inventory_ResetItemQuant(playerid,modelid,quant)
{
	new bool:found=false;
	if(!server_IsValidItem(modelid))
	    {return 1;}
	for(new i=0; i<gPlayerInventory[playerid]; i++)
	{
	    if(PlayerInfo[playerid][pInvModel][i] == modelid)
		{
			PlayerInfo[playerid][pInvQuant][i]=quant; found=true;
			if(PlayerInfo[playerid][pInvQuant][i]<=0)
			    {PlayerInfo[playerid][pInvQuant][i]=0;PlayerInfo[playerid][pInvModel][i]=-1;}
			break;
		}
	}
	if(found==false)
	{
	    for(new i=0; i<gPlayerInventory[playerid]; i++)
		{
			if(PlayerInfo[playerid][pInvModel][i]==-1)
	        	{PlayerInfo[playerid][pInvModel][i]=modelid; PlayerInfo[playerid][pInvQuant][i]=quant; break;}
	    }
	}
	return 1;
}

stock accessory_ShowDialog(playerid)
{
    new string[256]="{FFFFFF}Slot\t{FFFFFF}Statut\n",
		tmpString[48];
	for(new i=0; i<5; i++)
	{
	    if(accessory[playerid][model][i] == 0)
	        {format(tmpString,sizeof(tmpString),"%d\tLibre\n",i+1);}
		else
			{format(tmpString,sizeof(tmpString),"%d\t%s\n",i+1,GetItemName(accessory[playerid][model][i]));}
        strins(string,tmpString,strlen(string),sizeof(string));
	}
	ShowPlayerDialog(playerid,42,DIALOG_STYLE_TABLIST_HEADERS,"{04B45F}» Accessoire «{FFFFFF} Menu principal",string,"Valider","Annuler");
	player_Dialog[playerid]=0;
	return 1;
}

stock server_IsValidItem(modelid)
{
	switch(modelid)
	{
	    case 1 .. 49, 1575 .. 1580, 19039 .. 19053, 18926 .. 18935, 19093, 19160, 18939 .. 18943, 18955 .. 18959, 18944 .. 18951, 18970 .. 18971, 18969, 19095 .. 19098, 18639, 18962:
	        {return true;}
		case 18634, 18645, 18976 .. 18979, 19006 .. 19035, 19138 .. 19140, 19036 .. 19038, 18875, 1946, 1650, 1485, 1210, 18643, 19080 .. 19084, 1718, 2226, 2966 :
		    {return true;}
		case 2351, 2751, 19897, 19087, 18974, 1851, 1719, 328, 2894, 19421 .. 19424, 18921 .. 18924, 18636, 1950, 18891 .. 18920, 2601, 1486, 19563, 1668, 19569, 19811 , 19571, 2821, 2769, 2663 :
		    {return true;}
	}
	return false;
}

stock msg_Admin(color,const string[],level)
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level && NoRapport[i]==0)
				{msg_Client(i, color, string);}
		}
	}
	return 1;
}

stock msg_OOC(color,const string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i))
		{
		    if(NoOOC[i]==0)
		    	{msg_Client(i,color,string);}
		}
	}
}

stock msg_OOCNews(color,const string[])
{
    for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i))
		{
		    if(NoNews[i]==0)
		    	{msg_Client(i,color,string);}
		}
	}
}

stock msg_Radio(member, color, string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock msg_Taxi(color, string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(taxi_Duty[i] != 0)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock msg_Job(jobId, color, string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == jobId)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock msg_Answer(playerid,const string[],giveplayerid)
{
	new tmp[358];
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pHelper] == 1 || PlayerInfo[i][pAdmin] > 0)
		    {
		        if(NoRQ[i] == 0)
		        {
			        format(tmp,sizeof(tmp),"{410000}» RQ «{9B0000} %s[%d] à %s[%d] : {FFFFFF}%s",PlayerInfo[playerid][pRealName],playerid,PlayerInfo[giveplayerid][pRealName],giveplayerid,string);
					msg_Client(i, COLOR_WHITE, tmp);
				}
			}
		}
	}
}

stock msg_Helper(color, string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pHelper] == 1 || PlayerInfo[i][pAdmin] >= 2)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock msg_City(cityid,color,string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(GetCityPlayer(i) == cityid || PlayerInfo[i][pCity] == cityid)
		        {msg_Client(i, color, string);}
		}
	}
}

stock msg_County(countid,color,string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(countid == 3)
		        {msg_Client(i, color, string);}
		    else if(GetCountyPlayer(i) == countid)
		        {msg_Client(i, color, string);}
		}
	}
}
//---------------------------<[ OnPlayerCommandText ]>-----------g---------------------------------------------
public OnPlayerCommandText(playerid, cmdtext[])
{
	new string[1024],cmd[64],tmp[256];
	new giveplayerid, moneys, idx, var;
	new idcar = GetPlayerVehicleID(playerid);
	cmd = strtok(cmdtext, idx);
	
	log_Commands(playerid,cmdtext);

	if(strcmp(cmd, "/garage", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
	    {
	    	msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /garage <nom>");
	    	msg_Client(playerid, COLOR_WHITE, "{FFFFB2} acheter ");
	        msg_Client(playerid, COLOR_WHITE, "{A98500}Proprio :{FFFFB2} vendre - porte - localiser");
	        return 1;
	    }
	    if(strcmp(tmp,"acheter",true) == 0 || strcmp(tmp,"buy",true) == 0)
     	{
	    	if(PlayerInfo[playerid][pIdentie] == 0)
				{return msg_Box(playerid, "~b~", "Info", "Vous devez avoir une carte d'identité pour acheter un garage.", 5000);}
			if(PlayerInfo[playerid][pGarageKey1] != -1 && PlayerInfo[playerid][pGarageKey2] != -1 && PlayerInfo[playerid][pGarageKey3] != -1)
    			{return msg_Box(playerid, "~g~", "Garage", "Vous avez déjà 3 garages.", 5000);}
    				
	        var = -1;
			for(new i = 0; i<totalGarages; i++)
			{
				if(PlayerToPoint(3, playerid,garage[i][pos][0],garage[i][pos][1],garage[i][pos][2]))
					{var = i; break;}
			}
			if(var==-1)
				{return msg_Box(playerid, "~g~", "Garage", "Vous n'êtes pas à côté d'un garage.", 5000);}
					
			if(garage[var][owned] == 0)
			{
				pay_tempPrice[playerid] = garage[var][price];
				pay_tempType[playerid] = 14;
				pay_tempArticle[playerid] = 1;
				pay_tempProducts[playerid] = var; // Je m'en serre pour l'id du garage ^^
				pay_showDialog(playerid, pay_tempPrice[playerid]);
				return 1;
			}
			else
				{return msg_Box(playerid, "~g~", "Garage", "Ce garage appartient déjà à quelq'un.", 5000);}
	    }
	    else if(strcmp(tmp,"porte",true) == 0 || strcmp(tmp,"dore",true) == 0)
	    {
	        var = -1;
			for(new i = 0; i<totalGarages; i++)
			{
				if(PlayerToPoint(3, playerid,garage[i][pos][0],garage[i][pos][1],garage[i][pos][2]))
					{var = i; break;}
			}
			if(var==-1)
				{return msg_Box(playerid, "~g~", "Garage", "Vous n'êtes pas à côté d'un garage.", 5000);}
			if(var == PlayerInfo[playerid][pGarageKey1] || var == PlayerInfo[playerid][pGarageKey2] || var == PlayerInfo[playerid][pGarageKey3])
			{
				if(garage[var][lock] == 0)
					{GameTextForPlayer(playerid,"~r~Porte Fermee",3000,3);garage[var][lock] = 1;}
				else
					{GameTextForPlayer(playerid,"~g~Porte Ouverte",3000,3);garage[var][lock] = 0;}
				garage_Save(var);
				return 1;
			}
			else
				{return msg_Box(playerid, "~g~", "Garage", "Ce garage ne vous appartient pas.", 5000);}
	    }
	    else if(strcmp(tmp,"localiser",true) == 0 || strcmp(tmp,"localisat",true) == 0)
	    {
	        if(job_Start[playerid]== 1)
		        {return msg_Box(playerid, "~g~", "Garage", "Impossible en job service.", 5000);}
	    	new garage1[64]="1\t/\t/";
	        new garage2[64]="2\t/\t/";
	        new garage3[64]="3\t/\t/";
	            
	        if(PlayerInfo[playerid][pGarageKey1] != -1)
            	{format(garage1,sizeof(garage1),"1\t%d\t%s",PlayerInfo[playerid][pGarageKey1], GetCityName(GetCityPos(garage[PlayerInfo[playerid][pGarageKey1]][pos][0],garage[PlayerInfo[playerid][pGarageKey1]][pos][1])));}
	        if(PlayerInfo[playerid][pGarageKey2] != -1)
            	{format(garage2,sizeof(garage2),"2\t%d\t%s",PlayerInfo[playerid][pGarageKey2], GetCityName(GetCityPos(garage[PlayerInfo[playerid][pGarageKey2]][pos][0],garage[PlayerInfo[playerid][pGarageKey2]][pos][1])));}
	        if(PlayerInfo[playerid][pGarageKey3] != -1)
            	{format(garage3,sizeof(garage3),"3\t%d\t%s",PlayerInfo[playerid][pGarageKey3], GetCityName(GetCityPos(garage[PlayerInfo[playerid][pGarageKey3]][pos][0],garage[PlayerInfo[playerid][pGarageKey3]][pos][1])));}
            		
	    	format(string,sizeof(string),"{FFFFFF}Emplacement\t{FFFFFF}Id\t{FFFFFF}Localisation\n%s\n%s\n%s",garage1,garage2,garage3);
	    	ShowPlayerDialog(playerid,124,DIALOG_STYLE_TABLIST_HEADERS,"{10ce96}» Garage «{FFFFFF} Localiser un garage",string,"Localiser","Annuler");
			return 1;
	    }
	    else if(strcmp(tmp,"vendre",true) == 0 || strcmp(tmp,"sell",true) == 0)
		{
         	new garage1[64]="1\t/\t/";
	        new garage2[64]="2\t/\t/";
	        new garage3[64]="3\t/\t/";
	            
	        if(PlayerInfo[playerid][pGarageKey1] != -1)
            	{format(garage1,sizeof(garage1),"1\t%d\t%s",PlayerInfo[playerid][pGarageKey1], GetCityName(GetCityPos(garage[PlayerInfo[playerid][pGarageKey1]][pos][0],garage[PlayerInfo[playerid][pGarageKey1]][pos][1])));}
	        if(PlayerInfo[playerid][pGarageKey2] != -1)
            	{format(garage2,sizeof(garage2),"2\t%d\t%s",PlayerInfo[playerid][pGarageKey2], GetCityName(GetCityPos(garage[PlayerInfo[playerid][pGarageKey2]][pos][0],garage[PlayerInfo[playerid][pGarageKey2]][pos][1])));}
	        if(PlayerInfo[playerid][pGarageKey3] != -1)
            	{format(garage3,sizeof(garage3),"3\t%d\t%s",PlayerInfo[playerid][pGarageKey3], GetCityName(GetCityPos(garage[PlayerInfo[playerid][pGarageKey3]][pos][0],garage[PlayerInfo[playerid][pGarageKey3]][pos][1])));}

            		
	        format(string,sizeof(string),"{FFFFFF}Emplacement\t{FFFFFF}Id\t{FFFFFF}Localisation\n%s\n%s\n%s",garage1,garage2,garage3);
	        ShowPlayerDialog(playerid,129,DIALOG_STYLE_TABLIST_HEADERS,"{10ce96}» Garage «{FFFFFF} Vendre un garage",string,"Vendre","Annuler");
			return 1;
	    }
	    return 1;
	}
	else if(strcmp(cmd, "/bizz", true) == 0 || strcmp(cmd, "/biz", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
	    {
	        msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /biz <nom>");
	        msg_Client(playerid, COLOR_WHITE, "{FFFFB2} acheter");
	        msg_Client(playerid, COLOR_WHITE, "{A98500}Proprio :{FFFFB2} vendre - vendrea - gestion - localiser - type - infos");
	        return 1;
	    }
	    if(strcmp(tmp,"reset",true) == 0)
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            for(new i=0; i<MAX_SBIZZ; i++)
	                {uniquebizz_Create(i); uniquebizz_UpdateInfos(i);}
	        }
	    }
	    else if(strcmp(tmp,"vendrea",true) == 0)
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /biz vendrea <id/joueur> <numero> <prix>");}
					
            giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
				    if(giveplayerid == playerid)
					    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible à vous même.");}
					if(PlayerInfo[giveplayerid][pBizkey1] != -1 && PlayerInfo[giveplayerid][pBizkey2] != -1 && PlayerInfo[giveplayerid][pBizkey3] != -1)
					    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur a déjà 3 biz."); return 1;}
					    
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /biz vendrea <id/joueur> <numero> <prix>");}
							
					var = strval(tmp);
					if(var==1 && PlayerInfo[playerid][pBizkey1] !=-1)
						{var=PlayerInfo[playerid][pBizkey1];}
                    else if(var==2 && PlayerInfo[playerid][pBizkey2] !=-1)
					    {var=PlayerInfo[playerid][pBizkey2];}
                    else if(var==3 && PlayerInfo[playerid][pBizkey3] !=-1)
						{var=PlayerInfo[playerid][pBizkey3];}
					else
						{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de biz à cette emplacement.");}
						    
                    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /biz vendrea <id/joueur> <numero> <prix>");}
					new prices = strval(tmp);
					if(prices < 0 || prices > 500000)
						{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le prix doit être entre $1 et $500.000");}

                    format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous proposez à %s de vendre votre biz pour $%d.", PlayerInfo[giveplayerid][pName], prices);
					msg_Client(playerid, COLOR_INFO, string);
				    format(string, sizeof(string), "%s vous propose de vous vendre son biz pour $%d.", PlayerInfo[playerid][pName], prices);
				    ShowPlayerDialog(giveplayerid,33,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Biz «{FFFFFF} Achat",string,"Accepter","Refuser");
				     	
                    bizz_SellOffer[giveplayerid]=playerid;
                    bizz_SellId[giveplayerid]=var;
                    bizz_SellPrice[giveplayerid]=prices;
                    return 1;
				}
				else
				    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas à côté de vous.");}
			}
			else
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté.");}
	    }
	    else if(strcmp(tmp,"acheter",true) == 0)
	    {
	        if(PlayerInfo[playerid][pIdentie] == 0)
    			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez avoir une carte d'identité pour acheter un biz.");}

			if(PlayerInfo[playerid][pBizkey1] != -1 && PlayerInfo[playerid][pBizkey2] != -1 && PlayerInfo[playerid][pBizkey3] != -1)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà 3 biz.");}
					
	        var = -1;
			for(new ba = 0; ba<totalBizz; ba++)
			{
				if(PlayerToPoint(3, playerid,bizz[ba][pos][0],bizz[ba][pos][1],bizz[ba][pos][2]))
					{var = ba;break;}
			}
			for(new ba = 0; ba<MAX_SBIZZ; ba++)
			{
				if(PlayerToPoint(3, playerid,sbizz[ba][ubEntrance_x],sbizz[ba][ubEntrance_y],sbizz[ba][ubEntrance_z]))
					{var = ba+1000;break;}
			}
			if(var==-1)
				{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un biz.");}
			if(var>=1000)
			{
				if(sbizz[var-1000][ubOwned] == 0)
				{
				    pay_tempPrice[playerid] = sbizz[var-1000][ubPrix];
					pay_tempType[playerid] = 12;
					pay_tempArticle[playerid] = 2;
					pay_tempProducts[playerid] = var; // Je m'en serre pour l'id du biz ^^
					pay_showDialog(playerid, pay_tempPrice[playerid]);
			        return 1;
				}
				else
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce biz appartient déjà à quelqu'un!");}
			}
			if(bizz[var][owned] == 0)
        	{
      		 	pay_tempPrice[playerid] = bizz[var][price];
				pay_tempType[playerid] = 12;
				pay_tempArticle[playerid] = 1;
				pay_tempProducts[playerid] = var; // Je m'en serre pour l'id du biz ^^
				pay_showDialog(playerid, pay_tempPrice[playerid]);
			    return 1;
        	}
        	else
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce biz appartient déjà à quelqu'un!");}
   	 	}
	   	else if(strcmp(tmp,"type",true) == 0)
	    {
	        if(PlayerInfo[playerid][pBizkey1] == -1 && PlayerInfo[playerid][pBizkey2] == -1 && PlayerInfo[playerid][pBizkey3] == -1 && AdminDuty[playerid]==0)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de biz.");}
	        var = -1;
			for(new ba = 0; ba<totalBizz; ba++)
			{
				if(PlayerToPoint(3, playerid,bizz[ba][pos][0],bizz[ba][pos][1],bizz[ba][pos][2]))
					{var = ba;break;}
			}
			if(var==-1)
				{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un biz.");}
			if(bizz[var][owned] == 0)
			    {return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce biz appartient à personne.");}
			if(PlayerInfo[playerid][pBizkey1] == var || PlayerInfo[playerid][pBizkey2] == var || PlayerInfo[playerid][pBizkey3] == var || AdminDuty[playerid] == 1)
			{
				if(bizz[var][variable] == 0)
				{
				    new string2[512];
					format(string,sizeof(string),"{FFFFFF}- 27/7 ({00FF00}Gratuit{FFFFFF})\n- Binco ({00FF00}Gratuit{FFFFFF})\n- Tabac ({00FF00}Gratuit{FFFFFF})\n- Epicerie ({00FF00}Gratuit{FFFFFF})\n- Donuts ({00FF00}Gratuit{FFFFFF})\n- Pizza ({00FF00}Gratuit{FFFFFF})\n- Burger ({00FF00}Gratuit{FFFFFF})\n- Clukin Bell ({00FF00}Gratuit{FFFFFF})\n- Disquaire ({00FF00}Gratuit{FFFFFF})\n- Amunation ({FF0000}$30.000{FFFFFF})");
					format(string2,sizeof(string2),"\n- Sexe Shop ({00FF00}Gratuit{FFFFFF})\n- Bar ({00FF00}Gratuit{FFFFFF})\n- Discotheque ({00FF00}Gratuit{FFFFFF})\n- Gym ({00FF00}Gratuit{FFFFFF})\n- Didier Sachs ({00FF00}Gratuit{FFFFFF})\n- Prolaps ({00FF00}Gratuit{FFFFFF})\n- Suburban ({00FF00}Gratuit{FFFFFF})\n- Victim ({00FF00}Gratuit{FFFFFF})\n- Zip ({00FF00}Gratuit{FFFFFF})\n- Restaurant ({00FF00}Gratuit{FFFFFF})");
					format(string,sizeof(string),"%s%s%s",string,string2);
				    ShowPlayerDialog(playerid,62,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Choix du biz",string,"Valider","Quitter");
				    player_Variable[playerid]=var;
				    return 1;
				}
				else
				    {return msg_Client(playerid,COLOR_WHITE,"{CF9756}» Info «{FFFFFF} Votre biz a déjà été définie.");}
			}
			else
				{return msg_Client(playerid,COLOR_WHITE,"{CF9756}» Info «{FFFFFF} Ce biz ne vous appartient pas.");}
	    }
	    else if(strcmp(tmp,"localiser",true) == 0)
	    {
	        	if(job_Start[playerid]== 1)
		        	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible en job service.");}
	            new biz1[64]="1\t/\t/\t/";
	            new biz2[64]="2\t/\t/\t/";
	            new biz3[64]="3\t/\t/\t/";
	            
	            if(PlayerInfo[playerid][pBizkey1] != -1)
            	{
            	    new bizid=PlayerInfo[playerid][pBizkey1];
            	    if(PlayerInfo[playerid][pBizkey1] < 1000) // Limite des biz normaux
            	    	{format(biz1,sizeof(biz1),"1\t%d\t%s\t%s",bizid,bizz[bizid][description],GetCityName(GetCityPos(bizz[bizid][pos][0],bizz[bizid][pos][1])));}
					else if(PlayerInfo[playerid][pBizkey1] >= 1000)
						{format(biz1,sizeof(biz1),"1\t%d\t%s\t%s",bizid,sbizz[bizid-1000][ubMessage],GetCityName(GetCityPos(sbizz[bizid-1000][ubEntrance_x],sbizz[bizid-1000][ubEntrance_y])));}
	            }
	            if(PlayerInfo[playerid][pBizkey2] != -1)
            	{
            	    new bizid=PlayerInfo[playerid][pBizkey2];
            	    if(PlayerInfo[playerid][pBizkey2] < 1000) // Limite des biz normaux
            	    	{format(biz2,sizeof(biz2),"2\t%d\t%s\t%s",bizid,bizz[bizid][description],GetCityName(GetCityPos(bizz[bizid][pos][0],bizz[bizid][pos][1])));}
					else if(PlayerInfo[playerid][pBizkey1] >= 1000)
						{format(biz2,sizeof(biz2),"2\t%d\t%s\t%s",bizid,sbizz[bizid-1000][ubMessage],GetCityName(GetCityPos(sbizz[bizid-1000][ubEntrance_x],sbizz[bizid-1000][ubEntrance_y])));}
	            }
	            if(PlayerInfo[playerid][pBizkey3] != -1)
            	{
            	    new bizid=PlayerInfo[playerid][pBizkey3];
            	    if(PlayerInfo[playerid][pBizkey3] < 1000) // Limite des biz normaux
            	    	{format(biz3,sizeof(biz3),"3\t%d\t%s\t%s",bizid,bizz[bizid][description],GetCityName(GetCityPos(bizz[bizid][pos][0],bizz[bizid][pos][1])));}
					else if(PlayerInfo[playerid][pBizkey3] >= 1000)
						{format(biz3,sizeof(biz3),"3\t%d\t%s\t%s",bizid,sbizz[bizid-1000][ubMessage],GetCityName(GetCityPos(sbizz[bizid-1000][ubEntrance_x],sbizz[bizid-1000][ubEntrance_y])));}
	            }
	            
	            format(string,sizeof(string),"{FFFFFF}Emplacement\t{FFFFFF}Id\t{FFFFFF}Nom\t{FFFFFF}Localisation\n%s\n%s\n%s",biz1,biz2,biz3);
	            ShowPlayerDialog(playerid,113,DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Biz «{FFFFFF} Localiser un biz",string,"Localiser","Annuler");
				return 1;
	    }
	    else if(strcmp(tmp,"vendre",true) == 0 || strcmp(tmp,"sell",true) == 0)
	    {
	            new biz1[64]="1\t/\t/\t/";
	            new biz2[64]="2\t/\t/\t/";
	            new biz3[64]="3\t/\t/\t/";

	            if(PlayerInfo[playerid][pBizkey1] != -1)
            	{
            	    new bizid=PlayerInfo[playerid][pBizkey1];
            	    if(PlayerInfo[playerid][pBizkey1] < 1000) // Limite des biz normaux
            	    	{format(biz1,sizeof(biz1),"1\t%d\t%s\t%s",bizid,bizz[bizid][description],GetCityName(GetCityPos(bizz[bizid][pos][0],bizz[bizid][pos][1])));}
					else if(PlayerInfo[playerid][pBizkey1] >= 1000)
						{format(biz1,sizeof(biz1),"1\t%d\t%s\t%s",bizid,sbizz[bizid-1000][ubMessage],GetCityName(GetCityPos(sbizz[bizid-1000][ubEntrance_x],sbizz[bizid-1000][ubEntrance_y])));}
	            }
	            if(PlayerInfo[playerid][pBizkey2] != -1)
            	{
            	    new bizid=PlayerInfo[playerid][pBizkey2];
            	    if(PlayerInfo[playerid][pBizkey2] < 1000) // Limite des biz normaux
            	    	{format(biz2,sizeof(biz2),"2\t%d\t%s\t%s",bizid,bizz[bizid][description],GetCityName(GetCityPos(bizz[bizid][pos][0],bizz[bizid][pos][1])));}
					else if(PlayerInfo[playerid][pBizkey1] >= 1000)
						{format(biz2,sizeof(biz2),"2\t%d\t%s\t%s",bizid,sbizz[bizid-1000][ubMessage],GetCityName(GetCityPos(sbizz[bizid-1000][ubEntrance_x],sbizz[bizid-1000][ubEntrance_y])));}
	            }
	            if(PlayerInfo[playerid][pBizkey3] != -1)
            	{
            	    new bizid=PlayerInfo[playerid][pBizkey3];
            	    if(PlayerInfo[playerid][pBizkey3] < 1000) // Limite des biz normaux
            	    	{format(biz3,sizeof(biz3),"3\t%d\t%s\t%s",bizid,bizz[bizid][description],GetCityName(GetCityPos(bizz[bizid][pos][0],bizz[bizid][pos][1])));}
					else if(PlayerInfo[playerid][pBizkey3] >= 1000)
						{format(biz3,sizeof(biz3),"3\t%d\t%s\t%s",bizid,sbizz[bizid-1000][ubMessage],GetCityName(GetCityPos(sbizz[bizid-1000][ubEntrance_x],sbizz[bizid-1000][ubEntrance_y])));}
	            }
	            
	            format(string,sizeof(string),"{FFFFFF}Emplacement\t{FFFFFF}Id\t{FFFFFF}Nom\t{FFFFFF}Localisation\n%s\n%s\n%s",biz1,biz2,biz3);
	            ShowPlayerDialog(playerid,105,DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Biz «{FFFFFF} Vendre un biz",string,"Vendre","Annuler");
				return 1;
		}
	    else if(strcmp(tmp,"gerer",true) == 0 || strcmp(tmp,"gestion",true) == 0)
	    {
	            for(new baa = 0; baa < MAX_SBIZZ; baa++)
				{
					if(PlayerToPoint(2.0, playerid, sbizz[baa][ubEntrance_x], sbizz[baa][ubEntrance_y], sbizz[baa][ubEntrance_z]))
					{
					    if(baa+1000 == PlayerInfo[playerid][pBizkey1] || baa+1000 == PlayerInfo[playerid][pBizkey2] || baa+1000 == PlayerInfo[playerid][pBizkey3] || AdminDuty[playerid]==1)
						{
						    if(baa+1000 >= MAX_STATION+1000 && baa+1000 < MAX_STATION+MAX_SPRAY+1000)
						    {//  Les Pay'N Spray
						        uniquebizz_ShowDialogGestion(playerid,baa);
					        	player_Variable[playerid]=baa;
						        return 1;
						    }
						    else if(baa+1000 >= MAX_STATION+MAX_SPRAY+1000 && baa+1000 < MAX_STATION+MAX_SPRAY+MAX_TUNING+1000)
						    {//  Tunning 
						        uniquebizz_ShowDialogGestion(playerid,baa);
					        	player_Variable[playerid]=baa;
						        return 1;
						    }
						    if(baa+1000 >= MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+1000)
						    {// Les biz de voiture, moto, velo de location
						        uniquebizz_ShowDialogGestion(playerid,baa);
					        	player_Variable[playerid]=baa;
						        return 1;
						    }
					    }
					}
				}
				if(gPlayerInBizz[playerid] != -1)
				{
				    var = gPlayerInBizz[playerid];
				    
				    if(var == PlayerInfo[playerid][pBizkey1] || var == PlayerInfo[playerid][pBizkey2] || var == PlayerInfo[playerid][pBizkey3] || AdminDuty[playerid]==1)
						{bizz_ShowDialogGestion(playerid);return 1;}
					else
						{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce biz ne vous appartient pas."); return 1;}
				}
				else if(gPlayerInSBizz[playerid] != -1)
				{
				    var = gPlayerInSBizz[playerid];
				    if(var == PlayerInfo[playerid][pBizkey1] || var == PlayerInfo[playerid][pBizkey2] || var == PlayerInfo[playerid][pBizkey3] || AdminDuty[playerid]==1)
					{
					    if(var >= 1000 && var < 1000+MAX_STATION)
					    { // Les stations essence
					        uniquebizz_ShowDialogGestion(playerid,var-1000);
					        player_Variable[playerid]=var-1000;
					        return 1;
					    }
					    if(var >= MAX_STATION+MAX_SPRAY+MAX_TUNING+1000 && var < MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+1000)
					    { // Orérateur
					        ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
					        player_Dialog[playerid] = 0;
					        return 1;
					    }
					    else
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce biz ne vous appartient pas."); return 1;}
					}
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas dans votre biz!"); return 1;}
	    }
	    return 1;
	}
    else if(strcmp(cmd, "/ma", true) == 0 || strcmp(cmd, "/maison", true) == 0 || strcmp(cmd, "/house", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
	        {
	            msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /ma(ison) <nom>");
	            msg_Client(playerid, COLOR_WHITE, "{FFFFB2} acheter - localiser - vendre - louer - delouer - toquer");
	            msg_Client(playerid, COLOR_WHITE, "{A98500}Proprio :{FFFFB2} porte - gestion - (mobi)lier - vendrea - coffre");
	            return 1;
	        }
	        if(strcmp(tmp,"acheter",true) == 0)
	        {
	            if(PlayerInfo[playerid][pIdentie] == 0)
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez avoir une carte d'identité pour acheter une maison.");return 1;}
				if(PlayerInfo[playerid][pHousekey1] != -1 && PlayerInfo[playerid][pHousekey2] != -1 && PlayerInfo[playerid][pHousekey3] != -1)
    				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà 3 maisons.");return 1;}
    				
	            var = -1;
				for(new i = 0; i<totalHouses; i++)
				{
					if(PlayerToPoint(3, playerid,house[i][pos][0],house[i][pos][1],house[i][pos][2]))
						{var = i; break;}
				}
				if(var==-1)
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas à côté d'une maison.");return 1;}
					
				if(house[var][owned] == 0)
				{
                    pay_tempPrice[playerid] = house[var][price];
					pay_tempType[playerid] = 13;
					pay_tempArticle[playerid] = 1;
					pay_tempProducts[playerid] = var; // Je m'en serre pour l'id de la maison ^^
					pay_showDialog(playerid, pay_tempPrice[playerid]);
			        return 1;
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cette maison appartient déjà à quelqu'un.");return 1;}
	        }
	        else if(strcmp(tmp,"toquer",true) == 0 || strcmp(tmp,"sonner",true) == 0)
	        {
	            var = -1;
				for(new i = 0; i<totalHouses; i++)
				{
					if(PlayerToPoint(3, playerid,house[i][pos][0],house[i][pos][1],house[i][pos][2]))
						{var = i; break;}
				}
				if(var==-1)
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas à côté d'une maison.");return 1;}
					
				if(house[var][owned] == 0)
				    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cette maison n'appartient à personne.");return 1;}
				    
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
				    if(IsPlayerConnected(i) && !IsPlayerNPC(i) && gPlayerLogged[i] != 0 && gPlayerInHouse[i] == var)
				        {msg_Client(i,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Quelqu'un toque à la porte de votre maison.");}
				}
				msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez toquer à la porte de cette maison.");
	        }
	        else if(strcmp(tmp,"coffre",true) == 0)
	        {
	            if(gPlayerInHouse[playerid] == -1)
	            	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être dans votre maison.");}

	            if(strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 0 || AdminDuty[playerid]==1)
				{
					house_ShowDialogSafe(playerid,gPlayerInHouse[playerid]);
				}
				else
					{return msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Vous n'êtes pas le propriétaire de cette maison.");}
	        }
	        else if(strcmp(tmp,"vendrea",true) == 0)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /ma(ison) vendrea <id/joueur> <numero> <prix>");return 1;}

                giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
				{
				    if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible à vous même.");}
					    if(PlayerInfo[giveplayerid][pHousekey1] != -1 && PlayerInfo[giveplayerid][pHousekey2] != -1 && PlayerInfo[giveplayerid][pHousekey3] != -1)
					        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur à déjà 3 maisons."); return 1;}

					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /ma(ison) vendrea <id/joueur> <numero> <prix>");return 1;}

						var=-1;
						var = strval(tmp);
						if(var==1 && PlayerInfo[playerid][pHousekey1] !=-1)
						    {var=PlayerInfo[playerid][pHousekey1];}
                        else if(var==2 && PlayerInfo[playerid][pHousekey2] !=-1)
						    {var=PlayerInfo[playerid][pHousekey2];}
                        else if(var==3 && PlayerInfo[playerid][pHousekey3] !=-1)
						    {var=PlayerInfo[playerid][pHousekey3];}
						else
						    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de maison à cette emplacement."); return 1;}

                        tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /ma(ison) vendrea <id/joueur> <numero> <prix>");return 1;}
							
						new prices = strval(tmp);
						if(prices < 0 || prices > 500000)
						    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le prix doit être entre $1 et $500.000"); return 1;}

                        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous proposez à %s de vendre votre maison pour $%d.", PlayerInfo[giveplayerid][pName], prices);
					    msg_Client(playerid, COLOR_INFO, string);
				     	format(string, sizeof(string), "%s vous propose de vous vendre sa maison pour $%d.", PlayerInfo[playerid][pName], prices);
				     	ShowPlayerDialog(giveplayerid,34,DIALOG_STYLE_MSGBOX,"{00C600}» Maison «{FFFFFF} Achat",string,"Accepter","Refuser");

                        house_SellOffer[giveplayerid]=playerid;
                        house_SellId[giveplayerid]=var;
                        house_SellPrice[giveplayerid]=prices;
                        return 1;
					}
					else
				    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas à côté de vous."); return 1;}
				}
				else
				    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
	        }
	        else if(strcmp(tmp,"localiser",true) == 0)
	        {
	            if(job_Start[playerid]== 1)
		        	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible en job service.");}
	            new maison1[64]="1\t/\t/\t/";
	            new maison2[64]="2\t/\t/\t/";
	            new maison3[64]="3\t/\t/\t/";
	            
	            if(PlayerInfo[playerid][pHousekey1] != -1)
            		{format(maison1,sizeof(maison1),"1\t%d\t%s\t%s",PlayerInfo[playerid][pHousekey1],house[PlayerInfo[playerid][pHousekey1]][description],GetCityName(GetCityPos(house[PlayerInfo[playerid][pHousekey1]][pos][0],house[PlayerInfo[playerid][pHousekey1]][pos][1])));}
	            if(PlayerInfo[playerid][pHousekey2] != -1)
            		{format(maison2,sizeof(maison2),"2\t%d\t%s\t%s",PlayerInfo[playerid][pHousekey2],house[PlayerInfo[playerid][pHousekey2]][description],GetCityName(GetCityPos(house[PlayerInfo[playerid][pHousekey2]][pos][0],house[PlayerInfo[playerid][pHousekey2]][pos][1])));}
	            if(PlayerInfo[playerid][pHousekey3] != -1)
            		{format(maison3,sizeof(maison3),"3\t%d\t%s\t%s",PlayerInfo[playerid][pHousekey3],house[PlayerInfo[playerid][pHousekey3]][description],GetCityName(GetCityPos(house[PlayerInfo[playerid][pHousekey3]][pos][0],house[PlayerInfo[playerid][pHousekey3]][pos][1])));}
	            
	            format(string,sizeof(string),"{FFFFFF}Emplacement\t{FFFFFF}Id\t{FFFFFF}Nom\t{FFFFFF}Localisation\n%s\n%s\n%s",maison1,maison2,maison3);
	            ShowPlayerDialog(playerid,131,DIALOG_STYLE_TABLIST_HEADERS,"{00C600}» Maison «{FFFFFF} Localiser",string,"Localiser","Annuler");
				return 1;
	        }
         	else if(strcmp(tmp,"vendre",true) == 0)
	        {
	            new maison1[64]="1\t/\t/\t/";
	            new maison2[64]="2\t/\t/\t/";
	            new maison3[64]="3\t/\t/\t/";
	            
	            if(PlayerInfo[playerid][pHousekey1] != -1)
            		{format(maison1,sizeof(maison1),"1\t%d\t%s\t%s",PlayerInfo[playerid][pHousekey1],house[PlayerInfo[playerid][pHousekey1]][description],GetCityName(GetCityPos(house[PlayerInfo[playerid][pHousekey1]][pos][0],house[PlayerInfo[playerid][pHousekey1]][pos][1])));}
	            if(PlayerInfo[playerid][pHousekey2] != -1)
            		{format(maison2,sizeof(maison2),"2\t%d\t%s\t%s",PlayerInfo[playerid][pHousekey2],house[PlayerInfo[playerid][pHousekey2]][description],GetCityName(GetCityPos(house[PlayerInfo[playerid][pHousekey2]][pos][0],house[PlayerInfo[playerid][pHousekey2]][pos][1])));}
	            if(PlayerInfo[playerid][pHousekey3] != -1)
            		{format(maison3,sizeof(maison3),"3\t%d\t%s\t%s",PlayerInfo[playerid][pHousekey3],house[PlayerInfo[playerid][pHousekey3]][description],GetCityName(GetCityPos(house[PlayerInfo[playerid][pHousekey3]][pos][0],house[PlayerInfo[playerid][pHousekey3]][pos][1])));}

	            format(string,sizeof(string),"{FFFFFF}Emplacement\t{FFFFFF}Id\t{FFFFFF}Nom\t{FFFFFF}Localisation\n%s\n%s\n%s",maison1,maison2,maison3);
	            ShowPlayerDialog(playerid,114,DIALOG_STYLE_TABLIST_HEADERS,"{00C600}» Maison «{FFFFFF} Vendre",string,"Vendre","Annuler");
				return 1;
	        }
	        else if(strcmp(tmp,"gerer",true) == 0 || strcmp(tmp,"gestion",true) == 0)
	        {
	            if(gPlayerInHouse[playerid] == -1)
	            	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être dans votre maison.");return 1;}

	            if(strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 0 || AdminDuty[playerid]==1)
					{house_Gestion(playerid,gPlayerInHouse[playerid]);}
				else
					{msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Vous n'êtes pas le propriétaire de cette maison.");return 1;}
				return 1;
	        }
	        else if(strcmp(tmp,"louer",true) == 0)
	        {
	            var = -1;
				for(new i = 0; i<totalHouses; i++)
				{
					if(PlayerToPoint(3, playerid,house[i][pos][0],house[i][pos][1],house[i][pos][2]))
						{var = i;break;}
				}
				if(var==-1)
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas à côté d'une maison.");return 1;}
					
				if(house[var][owned] == 1 && house[var][rentState]==1)
				{
				    if(PlayerInfo[playerid][pHousekey1] == -1 || PlayerInfo[playerid][pHousekey2] == -1 || PlayerInfo[playerid][pHousekey3] == -1)
					{
					    if(house[var][rentNb] >= house[var][rentMax])
				 			{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Max de locataires atteint!");return 1;}
				 			
						if(strcmp(house[var][owner], PlayerInfo[playerid][pRealName], true) == 0 || strcmp(house[var][owner], PlayerInfo[playerid][pRealName], true) == 0 || strcmp(house[var][owner], PlayerInfo[playerid][pRealName], true) == 0)
							{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez pas louer votre propre maison.");return 1;}
							
						if(PlayerInfo[playerid][pCash] >= house[var][rentPrice])
						{
							if(PlayerInfo[playerid][pHousekey1] == -1){ PlayerInfo[playerid][pHousekey1] = var;}
							else if(PlayerInfo[playerid][pHousekey2] == -1){ PlayerInfo[playerid][pHousekey2] = var;}
							else if(PlayerInfo[playerid][pHousekey3] == -1){ PlayerInfo[playerid][pHousekey3] = var;}
							else{ return 1;}
							house[var][rentNb] += 1;
							msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Pour voir les commandes de votre maison tapez: /ma(ison)");
							msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Tapez: /ma(ison) delouer, pour arreter de louer.");
							SafeGivePlayerMoney(playerid,-house[var][rentPrice],"Location maison");
							house_Save(var);
							house_UpdateInfos(var);
							return 1;
						}
						else
							{msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Vous n'avez pas assez d'argent pour louer cette maison.");return 1;}
					}
					else
						{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà 3 maisons."); return 1;}
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cette maison appartient à personne");return 1;}
	        }
	        else if(strcmp(tmp,"delouer",true) == 0)
	        {
	            var = -1;
				for(new i = 0; i<totalHouses; i++)
				{
					if(PlayerToPoint(3, playerid,house[i][pos][0], house[i][pos][1], house[i][pos][2]))
						{var = i; break;}
				}
				if(var==-1)
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas à côté d'une maison.");return 1;}
					
				if(house[var][owned] == 1)
				{
					if(strcmp(PlayerInfo[playerid][pRealName], house[var][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[var][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[var][owner], true) == 0)
						{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez pas délouer votre propre maison.");return 1;}
					if(PlayerInfo[playerid][pHousekey1] == var || PlayerInfo[playerid][pHousekey2] == var || PlayerInfo[playerid][pHousekey3] == var)
					{
						if(PlayerInfo[playerid][pHousekey1] == var){ PlayerInfo[playerid][pHousekey1] = -1; MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "House1", PlayerInfo[playerid][pHousekey1]);}
						else if(PlayerInfo[playerid][pHousekey2] == var){ PlayerInfo[playerid][pHousekey2] = -1; MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "House2", PlayerInfo[playerid][pHousekey2]);}
						else if(PlayerInfo[playerid][pHousekey3] == var){ PlayerInfo[playerid][pHousekey3] = -1; MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "House3", PlayerInfo[playerid][pHousekey3]);}
						else{ return 1;}
						house[var][rentNb] --;
						msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Vous ne louer plus cette maison.");
						house_Save(var);
						house_UpdateInfos(var);
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne louez pas cette maison.");return 1;}
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cette maison appartient à personne");return 1;}
	        }
	        else if(strcmp(tmp,"porte",true) == 0)
	        {
	            var = -1;
				for(new i = 0; i<totalHouses; i++)
				{
					if(PlayerToPoint(1.5, playerid,house[i][pos][0],house[i][pos][1],house[i][pos][2]) || PlayerToPoint(1.5, playerid,house[i][pos][3],house[i][pos][4],house[i][pos][5]))
						{var = i; break;}
				}
				if(var==-1)
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas à côté de votre maison.");return 1;}
					
				if(PlayerInfo[playerid][pHousekey1] == var || PlayerInfo[playerid][pHousekey2] == var || PlayerInfo[playerid][pHousekey3] == var)
				{
				    if(house[var][lock] == 1)
					{
						house[var][lock] = 0;
						GameTextForPlayer(playerid, "~w~Porte ~g~Ouverte", 5000, 6);
					}
					else if(house[var][lock] == 0)
					{
						house[var][lock] = 1;
						GameTextForPlayer(playerid, "~w~Porte ~r~Fermer", 5000, 6);
					}
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					house_Save(var);
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas les clefs.");return 1;}
				return 1;
	        }
	        else if(strcmp(tmp,"mobi",true) == 0 || strcmp(tmp,"mobilier",true) == 0)
	        {
	            if(gPlayerInHouse[playerid] == -1)
	            	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être dans une maison.");return 1;}
	            	
	            if((strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 1 || strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 1 || strcmp(PlayerInfo[playerid][pRealName], house[gPlayerInHouse[playerid]][owner], true) == 1) && AdminDuty[playerid] == 0)
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas le propriétaire.");return 1;}

				if(IsPlayerInRangeOfPoint(playerid,25.0,223.9703,1291.1472,1082.1406))
				    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible dans un HLM.");}

				ShowPlayerDialog(playerid,26,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Mobilier","{FFFFFF}- Acheter un mobilier\n- Editer un mobilier (Liste)\n- Editer un mobilier (Clique)\n- Vendre un mobilier (Liste)\n- Vendre un mobilier (Clique)\n- Vendre tout le mobilier","Valider","Annuler");
                player_Dialog[playerid]=0;
	        	return 1;
	        }
	    }
		return 1;
	}
	else if(strcmp(cmd, "/v", true) == 0 || strcmp(cmd, "/vehicule", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
	    {
	    	msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) <nom>");
	        msg_Client(playerid, COLOR_WHITE, "{FFFFB2} coffre - remplir - vitre - delouer - capot - neon - ejecter - radio - jerrican - bruler");
	        msg_Client(playerid, COLOR_WHITE, "{A98500}Proprio :{FFFFB2} vendre - vendrea - localiser - garer - infos - spawn");
	        msg_Client(playerid, COLOR_WHITE, "{A98500}Proprio :{FFFFB2} enlevertunning - portes  - recuperer");
	        msg_Client(playerid, COLOR_WHITE, "{A98500}Autre :{FFFFB2} Appuyez sur 'é' pour allumer les phares .");
	        if(PlayerInfo[playerid][pAdmin] >= 2)
	            {msg_Client(playerid, COLOR_WHITE, "{A98500}Admin :{FFFFB2} slap - reparer - arespawn - ainfos - aremplir - id - remplirall");}
	        return 1;
	    }
		if(strcmp(tmp,"vendre",true) == 0)
		{
			if(!IsAtDealership(playerid))
				{return msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'êtes pas au concessionnaire.");}
			if(vehicle[idcar][SQLID] != PlayerInfo[playerid][pCar][0] && vehicle[idcar][SQLID] != PlayerInfo[playerid][pCar][1] && vehicle[idcar][SQLID] != PlayerInfo[playerid][pCar][2] && vehicle[idcar][SQLID] != PlayerInfo[playerid][pCar][3] && vehicle[idcar][SQLID] != PlayerInfo[playerid][pCar][4] && vehicle[idcar][SQLID] != PlayerInfo[playerid][pCar][5])
				{return msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule ne vous appartient pas.");}
			var=-1;
			if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][0]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][1]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][2]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][3]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][4]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][5]) { var = idcar; }
			if(var != -1)
			{
				new carsellprice = vehicle[var][cValue] / 4 * 3;
				SafeGivePlayerMoney(playerid,carsellprice,"Voiture vendu");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Vous avez vendu votre voiture pour : ~n~~g~$%d", carsellprice);
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				DestroyVehicle(var);
		        format(sql,sizeof(sql),"DELETE FROM lvrp_server_vehicles WHERE id=%d",vehicle[var][SQLID]);
				mysql_pquery(MYSQL,sql);
				if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][0]) { PlayerInfo[playerid][pCar][0] = -1; }
				else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][1]) { PlayerInfo[playerid][pCar][1] = -1; }
				else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][2]) { PlayerInfo[playerid][pCar][2] = -1; }
				else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][3]) { PlayerInfo[playerid][pCar][3] = -1; }
				else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][4]) { PlayerInfo[playerid][pCar][4] = -1; }
				else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][5]) { PlayerInfo[playerid][pCar][5] = -1; }
				vehicle[var][SQLID]=-1;
				vehicle[var][used]=0;
				car_Reset(var,0,false,true);
				return 1;
			}
			else
			    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce véhicule ne vous appartient pas !");}
		}
		else if(strcmp(tmp,"remplir",true) == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être dans un véhicule.");}
			var=-1;
			for(new ubiz = 0; ubiz<MAX_STATION; ubiz++)
			{
				if(PlayerToPoint(15, playerid, sbizz[ubiz][ubSpecial_pos_x],sbizz[ubiz][ubSpecial_pos_y],sbizz[ubiz][ubSpecial_pos_z]))
					{var=ubiz; break;}
			}
			if(var==-1)
				{return msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Station Essence «{FFFFFF} Aucune station essence où celle ci n'est pas en service.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) remplir <montant>");
				format(string,sizeof(string),"{A98500}Info:{FFFFFF} Prix du litre : $%d - Max Litre à remplir : %d",sbizz[var][ubPriceArticle][0],(100-vehicle[idcar][cGas]));
				return msg_Client(playerid, COLOR_WHITE, string);
			}

			if((strval(tmp)*sbizz[var][ubPriceArticle][0]) > PlayerInfo[playerid][pCash] && vehicle[idcar][cType] < 1 && vehicle[idcar][cType] > 5)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");}
			if((strval(tmp)+vehicle[idcar][cGas]) > 100)
				{return msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Maximum 100 litres.");}

            if(strval(tmp) < 0)
				{return msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Erreur dans le montant.");}

			vehicle[idcar][cGas] += strval(tmp);
			GameTextForPlayer(playerid,"Le plein est fait",3000,0);
			format(string,sizeof(string),"{8BE2E2}» Véhicule «{FFFFFF} Le plein a été fait pour $%d.",(strval(tmp)*sbizz[var][ubPriceArticle][0]));
			msg_Client(playerid,COLOR_WHITE,string);
			if(vehicle[idcar][cType] >=1 && vehicle[idcar][cType] <=10)
				{msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} L'état paye à votre place.");}
			else
				{SafeGivePlayerMoney(playerid, -(strval(tmp)*sbizz[var][ubPriceArticle][0]),"Plein véhicule");}

			sbizz[var][ubCaisse] += (strval(tmp)*sbizz[var][ubPriceArticle][0]);
			sbizz[var][ubProduits] -= strval(tmp);
			uniquebizz_Save(var);
			speedometer_Update(playerid,8,0);
			return 1;
		}
		else if(strcmp(tmp,"jerricain",true) == 0 || strcmp(tmp,"jerrican",true) == 0)
		{
			if(inventory_GetItemQuantity(playerid,1650) <= 0)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de jerrican.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) jerrican <nom>");
				return msg_Client(playerid, COLOR_WHITE, "{FFFFB2} remplir - utiliser");
			}
			if(strcmp(tmp,"remplir",true) == 0)
			{
				var=-1;
				for(new ubiz = 0; ubiz<MAX_STATION; ubiz++)
				{
					if(PlayerToPoint(15, playerid, sbizz[ubiz][ubSpecial_pos_x],sbizz[ubiz][ubSpecial_pos_y],sbizz[ubiz][ubSpecial_pos_z]) && sbizz[ubiz][ubOwned] == 1)
						{var=ubiz; break;}
				}
				if(var==-1)
					{return msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Station Essence «{FFFFFF} Aucune station essence où celle ci n'est pas en service.");}

				if((20*sbizz[var][ubPriceArticle][0]) > PlayerInfo[playerid][pCash])
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");return 1;}

				PlayerInfo[playerid][pJerricainFuel]=1;
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le jerrican a été rempli.");
				SafeGivePlayerMoney(playerid, -(20*sbizz[var][ubPriceArticle][0]),"Plain jérricain");
				sbizz[var][ubCaisse] += (20*sbizz[var][ubPriceArticle][0]);
				sbizz[var][ubProduits] -= 20;
				uniquebizz_Save(var);
			}
			else if(strcmp(tmp,"utiliser",true) == 0)
			{
				if(PlayerInfo[playerid][pJerricainFuel] != 1)
			 		{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Votre jerrican est vide.");}
				if(IsPlayerInAnyVehicle(playerid))
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible dans un véhicule.");}

				new counter = 0,car;
				for(new i; i <= totalVehicles; i++)
				{
					if(CheckPlayerDistanceToVehicle(3.5, playerid, i))
						{car = i; counter++;}
				}
				if(counter == 0)
					{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Aucun véhicule pret de vous.");}
				else if(counter > 1)
					{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Trop de véhicule prêt de vous.");}

				vehicle[car][cGas]+=20;
				PlayerInfo[playerid][pJerricainFuel]=0;
				format(string, sizeof(string), "* %s remplit son véhicule à l'aide de son jérrican.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			return 1;
		}
		else if(strcmp(tmp,"vendrea",true) == 0)
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être dans un véhicule ou conducteur de ce véhicule.");}

			var = vehicle[idcar][SQLID];
			if(var!=PlayerInfo[playerid][pCar][0] && var!=PlayerInfo[playerid][pCar][1] && var!=PlayerInfo[playerid][pCar][2] && var!=PlayerInfo[playerid][pCar][3] && var!=PlayerInfo[playerid][pCar][4] && var!=PlayerInfo[playerid][pCar][5])
				{return msg_Client(playerid,COLOR_INFO,"{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule ne vous appartient pas.");}
			if(strcmp(PlayerInfo[playerid][pRealName], vehicle[var][cOwner], true) == 1)
				{return msg_Client(playerid,COLOR_INFO,"{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule ne vous appartient pas.");}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) vendrea <id/joueur> <prix>");}
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté.");}
			if(!ProxDetectorS(8.0, playerid, giveplayerid))
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas à côté de vous.");}
            if(giveplayerid == playerid)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible à vous même.");}
			if(PlayerInfo[giveplayerid][pCar][0]!=-1 && PlayerInfo[giveplayerid][pCar][1]!=-1 && PlayerInfo[giveplayerid][pCar][2]!=-1 && (PlayerInfo[giveplayerid][pCar][3]!=-1 && PlayerInfo[giveplayerid][pCarDev4]==1) && (PlayerInfo[giveplayerid][pCar][4]!=-1 && PlayerInfo[giveplayerid][pCarDev5]==1) && (PlayerInfo[giveplayerid][pCar][5]!=-1 && PlayerInfo[giveplayerid][pCarDev6]==1))
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'a plus de slot de véhicule.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) vendrea <id/joueur> <prix>");}

			if(strval(tmp) < 1 || strval(tmp) > 1500000)
				{return msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Le prix ne peut pas être inférieur à 1$ ou supérieur à 1 500 000$ !");}

			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous proposez à %s de vendre votre véhicule pour $%d.", PlayerInfo[giveplayerid][pName], strval(tmp));
			msg_Client(playerid, COLOR_INFO, string);
			format(string, sizeof(string), "%s vous propose de vous vendre son véhicule pour $%d.", PlayerInfo[playerid][pName], strval(tmp));
			ShowPlayerDialog(giveplayerid,32,DIALOG_STYLE_MSGBOX,"» Véhicule « Achat",string,"Accepter","Refuser");

			car_SellOffer[giveplayerid] = playerid;
			car_SellId[giveplayerid] = var;
			car_SellPrice[giveplayerid] = strval(tmp);
			return 1;
		}
		else if(strcmp(tmp,"bruler",true) == 0)
		{
			msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Comamnde temporairement désactivée.");
			/*if(inventory_GetItemQuantity(playerid,1650) <= 0 && PlayerInfo[playerid][pJerricainFuel] == 0 && inventory_GetItemQuantity(playerid,2351) <= 0)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas les objets nécéssaires (Jerrican plein + briquet).");}
			new counter = 0;
			var=-1;
			for(new i; i <= totalVehicles; i++)
			{
				if(CheckPlayerDistanceToVehicle(3.5, playerid, i))
					{var = i; counter++;}
			}
			if(counter == 0)
				{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Aucun véhicule pret de vous.");}
			else if(counter > 1)
				{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Trop de véhicule prêt de vous.");}

			new Float:x,Float:y,Float:z;
			GetVehiclePos(var,x,y,z);
			SafeSetVehicleHealth(var,250.0);
			msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Le véhicule brûle, attention !");
			PlayerInfo[playerid][pJerricainFuel]=0;
			inventory_UpdateItem(playerid,2351,-1);
			msg_Radio(999,COLOR_RED,"» Alerte « Un véhicule à brûlé.");
			for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == 999)
			 		{SetPlayerCheckpoint(playerid,x,y,z,8.0);}
			}*/
			return 1;
		}
		else if(strcmp(tmp,"garer",true) == 0)
		{
			new Float:x,Float:y,Float:z;
			new Float:a;
			var=-1;
			if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][0]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][1]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][2]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][3]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][4]) { var = idcar; }
			else if(vehicle[idcar][SQLID] == PlayerInfo[playerid][pCar][5]) { var = idcar; }
			else { return 1; }
			GetVehiclePos(var, x, y, z);
			GetVehicleZAngle(var, a);
			if(!IsPlayerInVehicle(playerid,var) && vehicle[var][cOwned] == 1)
				{return msg_Client(playerid,COLOR_INFO,"{8BE2E2}» Véhicule «{FFFFFF} Vous devez être dans votre véhicule.");}
			if(vehicle[idcar][SQLID] != vehicle[var][SQLID])
				{return 1;}
			if(gPlayerInGarage[playerid] !=-1) // Il est dans un garage
				{vehicle[var][cVW]=gPlayerInGarage[playerid];vehicle[var][cInt]=1;}
			else
				{vehicle[var][cVW]=0; vehicle[var][cInt]=0;}

			vehicle[var][cLocationx] = x;
			vehicle[var][cLocationy] = y;
			vehicle[var][cLocationz] = z;
			vehicle[var][cAngle] = a;
			msg_Client(playerid,COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Il réapparaîtra à cet endroit & dans cette position.");
			vehicle_Save(var,1,0);
			car_Recreate(playerid,idcar);
			TogglePlayerControllable(playerid, 1);
			if(vehicle[idcar][cEngine])
				{SetTimerEx("StartingTheVehicle",1,0,"i",playerid);vehicle[idcar][cEngine] = true;}
			return 1;
		}
		else if(strcmp(tmp,"enlevertunning",true) == 0 || strcmp(tmp,"enlevertuning",true) == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_INFO,"{8BE2E2}» Véhicule «{FFFFFF} Vous devez être dans un véhicule.");}
			if(vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][0] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][1] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][2] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][3] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][4] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][5])
			{
				for(new comp=0; comp < 9; comp++)
					{tuning_RemoveComponent(idcar, comp);}

				vehicle[idcar][tExhausts] = 0;
				vehicle[idcar][tFrontBumper] = 0;
				vehicle[idcar][tRearBumper] = 0;
				vehicle[idcar][tRoof] = 0;
				vehicle[idcar][tSpoilers] = 0;
				vehicle[idcar][tSideBumper] = 0;
				vehicle[idcar][tWheels] = 0;
				vehicle[idcar][tHydraulics] = 0;
				vehicle[idcar][tNitro] = 0;
				vehicle[idcar][tSideBumper2] = 0;

				msg_Client(playerid,COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous avez supprimé le tunning de votre véhicule.");
				vehicle_Save(idcar,1,0);
				car_Recreate(playerid,idcar);
				return 1;
			}
		}
		else if(strcmp(tmp,"porte",true) == 0 || strcmp(tmp,"portes",true) == 0)
		{
			var =-1;
			if(IsPlayerInAnyVehicle(playerid))
				{var = GetPlayerVehicleID(playerid);}
			else
			{
				new Float:vehX, Float:vehY, Float:vehZ;
				GetVehiclePos(vehicle_GetId(PlayerInfo[playerid][pCar][0]), vehX, vehY, vehZ);
				if(PlayerToPoint(5, playerid, vehX, vehY, vehZ) && PlayerInfo[playerid][pCar][0] != -1)
					{var = vehicle_GetId(PlayerInfo[playerid][pCar][0]);}

				GetVehiclePos(vehicle_GetId(PlayerInfo[playerid][pCar][1]), vehX, vehY, vehZ);
				if(PlayerToPoint(5, playerid, vehX, vehY, vehZ) && PlayerInfo[playerid][pCar][1] != -1)
					{var = vehicle_GetId(PlayerInfo[playerid][pCar][1]);}

				GetVehiclePos(vehicle_GetId(PlayerInfo[playerid][pCar][2]), vehX, vehY, vehZ);
				if(PlayerToPoint(5, playerid, vehX, vehY, vehZ) && PlayerInfo[playerid][pCar][2] != -1)
					{var = vehicle_GetId(PlayerInfo[playerid][pCar][2]);}

				GetVehiclePos(HireCar[playerid], vehX, vehY, vehZ);
				if(PlayerToPoint(5, playerid, vehX, vehY, vehZ) && HireCar[playerid] != -1)
					{var = HireCar[playerid];}

				GetVehiclePos(vehicle_GetId(PlayerInfo[playerid][pCar][3]), vehX, vehY, vehZ);
				if(PlayerToPoint(5, playerid, vehX, vehY, vehZ) && PlayerInfo[playerid][pCar][3] != -1 && PlayerInfo[playerid][pCarDev4]==1)
					{var = vehicle_GetId(PlayerInfo[playerid][pCar][3]);}

				GetVehiclePos(vehicle_GetId(PlayerInfo[playerid][pCar][4]), vehX, vehY, vehZ);
				if(PlayerToPoint(5, playerid, vehX, vehY, vehZ) && PlayerInfo[playerid][pCar][4] != -1 && PlayerInfo[playerid][pCarDev5]==1)
					{var = vehicle_GetId(PlayerInfo[playerid][pCar][4]);}

				GetVehiclePos(vehicle_GetId(PlayerInfo[playerid][pCar][5]), vehX, vehY, vehZ);
				if(PlayerToPoint(5, playerid, vehX, vehY, vehZ) && PlayerInfo[playerid][pCar][5] != -1 && PlayerInfo[playerid][pCarDev6]==1)
					{var = vehicle_GetId(PlayerInfo[playerid][pCar][5]);}

			}
			if(var != -1 && (IsABike(var) || IsAMoto(var)))
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce véhicule n'a pas de portes."); return 1;}
			if(var != -1 && vehicle[var][cType] == CAR_OWN || AdminDuty[playerid]==1)
			{
				if(vehicle[var][cLock] == 1)// Fermées
				{
					GameTextForPlayer(playerid, "~w~ Portes ~g~Ouvertes", 4000, 3);
					format(string, sizeof(string), "* %s ouvre les portes de son véhicule.", PlayerInfo[playerid][pName]);
					vehicle[var][cLock] = 0;
				}
				else // Ouvertes
				{
					GameTextForPlayer(playerid, "~w~ Portes ~r~Fermees", 4000, 3);
					format(string, sizeof(string), "* %s ferme les portes de son véhicule.", PlayerInfo[playerid][pName]);
					vehicle[var][cLock] = 1;
				}

				SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);

				for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
				{
					if (IsPlayerConnected(i))
						{SetVehicleParamsForPlayer(var,i,0,vehicle[var][cLock]);}
				}
				vehicle_Save(var,0,0);
				return 1;
			}
		}
		/*else if(strcmp(tmp,"spawn",true) == 0)
		{
		    new car1[64]="1\tAucun\t/\t/",car2[64]="2\tAucun\t/\t/",car3[64]="3\tAucun\t/\t/",car4[64],car5[64],car6[64];
			if(PlayerInfo[playerid][pCar][0] != -1)
			{
			    format(sql, sizeof(sql), "SELECT Model FROM lvrp_server_vehicles WHERE id=%d",PlayerInfo[playerid][pCar][0]);
	    		mysql_query(MYSQL,sql); var = cache_get_value_index_int(0,0);
				format(car1,sizeof(car1),"1\t%s\t%d",vehName[var-400],PlayerInfo[playerid][pCar][0]);
			}
			if(PlayerInfo[playerid][pCar][1]!=-1)
			{
			    format(sql, sizeof(sql), "SELECT Model FROM lvrp_server_vehicles WHERE id=%d",PlayerInfo[playerid][pCar][1]);
	    		mysql_query(MYSQL,sql); var = cache_get_value_index_int(0,0);
				format(car2,sizeof(car2),"2\t%s\t%d",vehName[var-400],PlayerInfo[playerid][pCar][1]);
			}
			if(PlayerInfo[playerid][pCar][2]!=-1)
			{
				format(sql, sizeof(sql), "SELECT Model FROM lvrp_server_vehicles WHERE id=%d",PlayerInfo[playerid][pCar][2]);
	    		mysql_query(MYSQL,sql); var = cache_get_value_index_int(0,0);
				format(car3,sizeof(car3),"3\t%s\t%d",vehName[var-400],PlayerInfo[playerid][pCar][2]);
			}
			if(PlayerInfo[playerid][pCar][3]!=-1 && PlayerInfo[playerid][pCarDev4] == 1)
			{
			    format(sql, sizeof(sql), "SELECT Model FROM lvrp_server_vehicles WHERE id=%d",PlayerInfo[playerid][pCar][3]);
	    		mysql_query(MYSQL,sql); var = cache_get_value_index_int(0,0);
				format(car4,sizeof(car4),"4\t%s\t%d",vehName[var-400],PlayerInfo[playerid][pCar][3]);
			}
			if(PlayerInfo[playerid][pCar][4]!=-1 && PlayerInfo[playerid][pCarDev5] == 1)
			{
				format(sql, sizeof(sql), "SELECT Model FROM lvrp_server_vehicles WHERE id=%d",PlayerInfo[playerid][pCar][4]);
	    		mysql_query(MYSQL,sql); var = cache_get_value_index_int(0,0);
				format(car5,sizeof(car5),"5\t%s\t%d",vehName[var-400],PlayerInfo[playerid][pCar][4]);
			}
			if(PlayerInfo[playerid][pCar][5]!=-1 && PlayerInfo[playerid][pCarDev6] == 1)
			{
				format(sql, sizeof(sql), "SELECT Model FROM lvrp_server_vehicles WHERE id=%d",PlayerInfo[playerid][pCar][5]);
	    		mysql_query(MYSQL,sql); var = cache_get_value_index_int(0,0);
				format(car6,sizeof(car6),"6\t%s\t%d",vehName[var-400],PlayerInfo[playerid][pCar][5]);
			}

			format(string,sizeof(string),"Emplacement\tNom\tSQLID\n%s \n%s \n%s \n%s \n%s \n%s",car1,car2,car3,car4,car5,car6);
			ShowPlayerDialog(playerid,3,DIALOG_STYLE_TABLIST_HEADERS,"» Véhicule « Spawn",string,"Spawn","Quitter");
			return 1;
		}*/
		else if(strcmp(tmp,"localiser",true) == 0)
		{
		    if(job_Start[playerid]== 1)
		        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible en job service.");}
			new car1[64]="1\tAucun\t/\t/",car2[64]="2\tAucun\t/\t/",car3[64]="3\tAucun\t/\t/",car4[64],car5[64],car6[64];
			new key1 = vehicle_GetId(PlayerInfo[playerid][pCar][0]);
			new key2 = vehicle_GetId(PlayerInfo[playerid][pCar][1]);
			new key3 = vehicle_GetId(PlayerInfo[playerid][pCar][2]);
			new key4 = vehicle_GetId(PlayerInfo[playerid][pCar][3]);
			new key5 = vehicle_GetId(PlayerInfo[playerid][pCar][4]);
			new key6 = vehicle_GetId(PlayerInfo[playerid][pCar][5]);

			if(key1!=-1)
				{format(car1,sizeof(car1),"1\t%s\t%d\t%d",vehName[GetVehicleModel(key1)-400],key1,PlayerInfo[playerid][pCar][0]);}
			if(key2!=-1)
				{format(car2,sizeof(car2),"2\t%s\t%d\t%d",vehName[GetVehicleModel(key2)-400],key2,PlayerInfo[playerid][pCar][1]);}
			if(key3!=-1)
				{format(car3,sizeof(car3),"3\t%s\t%d\t%d",vehName[GetVehicleModel(key3)-400],key3,PlayerInfo[playerid][pCar][2]);}
			if(key4!=-1 && PlayerInfo[playerid][pCarDev4] == 1)
				{format(car4,sizeof(car4),"4\t%s (Id: %d\t%d",vehName[GetVehicleModel(key4)-400],key4,PlayerInfo[playerid][pCar][3]);}
			if(key5!=-1 && PlayerInfo[playerid][pCarDev5] == 1)
				{format(car5,sizeof(car5),"5\t%s\tId: %d\t%d",vehName[GetVehicleModel(key5)-400],key5,PlayerInfo[playerid][pCar][4]);}
			if(key6!=-1 && PlayerInfo[playerid][pCarDev6] == 1)
				{format(car6,sizeof(car6),"6\t%s\tId: %d\t%d",vehName[GetVehicleModel(key6)-400],key6,PlayerInfo[playerid][pCar][5]);}

			format(string,sizeof(string),"Emplacement\tNom\tId\tSQLID\n%s \n%s \n%s \n%s \n%s \n%s",car1,car2,car3,car4,car5,car6);
			ShowPlayerDialog(playerid,93,DIALOG_STYLE_TABLIST_HEADERS,"» Véhicule « Localisation",string,"Localiser","Quitter");
			return 1;
		}
		else if(strcmp(tmp,"respawn",true) == 0)
		{
		    new car1[64]="1\tAucun\t/\t/",car2[64]="2\tAucun\t/\t/",car3[64]="3\tAucun\t/\t/",car4[64],car5[64],car6[64];
			new key1 = vehicle_GetId(PlayerInfo[playerid][pCar][0]);
			new key2 = vehicle_GetId(PlayerInfo[playerid][pCar][1]);
			new key3 = vehicle_GetId(PlayerInfo[playerid][pCar][2]);
			new key4 = vehicle_GetId(PlayerInfo[playerid][pCar][3]);
			new key5 = vehicle_GetId(PlayerInfo[playerid][pCar][4]);
			new key6 = vehicle_GetId(PlayerInfo[playerid][pCar][5]);

			if(key1!=-1)
				{format(car1,sizeof(car1),"1\t%s\t%d\t%d",vehName[GetVehicleModel(key1)-400],key1,PlayerInfo[playerid][pCar][0]);}
			if(key2!=-1)
				{format(car2,sizeof(car2),"2\t%s\t%d\t%d",vehName[GetVehicleModel(key2)-400],key2,PlayerInfo[playerid][pCar][1]);}
			if(key3!=-1)
				{format(car3,sizeof(car3),"3\t%s\t%d\t%d",vehName[GetVehicleModel(key3)-400],key3,PlayerInfo[playerid][pCar][2]);}
			if(key4!=-1 && PlayerInfo[playerid][pCarDev4] == 1)
				{format(car4,sizeof(car4),"4\t%s (Id: %d\t%d",vehName[GetVehicleModel(key4)-400],key4,PlayerInfo[playerid][pCar][3]);}
			if(key5!=-1 && PlayerInfo[playerid][pCarDev5] == 1)
				{format(car5,sizeof(car5),"5\t%s\tId: %d\t%d",vehName[GetVehicleModel(key5)-400],key5,PlayerInfo[playerid][pCar][4]);}
			if(key6!=-1 && PlayerInfo[playerid][pCarDev6] == 1)
				{format(car6,sizeof(car6),"6\t%s\tId: %d\t%d",vehName[GetVehicleModel(key6)-400],key6,PlayerInfo[playerid][pCar][5]);}

			format(string,sizeof(string),"Emplacement\tNom\tId\tSQLID\n%s \n%s \n%s \n%s \n%s \n%s",car1,car2,car3,car4,car5,car6);
			ShowPlayerDialog(playerid,94,DIALOG_STYLE_TABLIST_HEADERS,"» Véhicule « Respawn - $300",string,"Respawn","Quitter");
			return 1;
		}
		else if(strcmp(tmp,"neon",true) == 0)
		{
			if(vehicle[idcar][cNeon] != 0 && (car_Neon1[idcar] == 0 || car_Neon2[idcar] == 0))
			{
				format(string, sizeof(string), "* %s allume les néons de son véhicule.", PlayerInfo[playerid][pName]);
				SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
				car_Neon1[idcar] = CreateDynamicObject(vehicle[idcar][cNeon],0,0,0,0,0,0,-1,-1,-1,100.0);
				car_Neon2[idcar] = CreateDynamicObject(vehicle[idcar][cNeon],0,0,0,0,0,0,-1,-1,-1,100.0);
				AttachDynamicObjectToVehicle(car_Neon1[idcar], idcar, -0.8, 0.0, -0.45, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(car_Neon2[idcar], idcar, 0.8, 0.0, -0.45, 0.0, 0.0, 0.0);
			}
			else if(vehicle[idcar][cNeon] != 0 && (car_Neon1[idcar] != 0 || car_Neon2[idcar] != 0))
			{
				format(string, sizeof(string), "* %s éteint les néons de son véhicule.", PlayerInfo[playerid][pName]);
				SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
				if(IsValidDynamicObject(car_Neon1[idcar]))
					{DestroyDynamicObject(car_Neon1[idcar]);}
				if(IsValidDynamicObject(car_Neon2[idcar]))
					{DestroyDynamicObject(car_Neon2[idcar]);}
				car_Neon1[idcar] = 0;
				car_Neon2[idcar] = 0;
			}
			else
				{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule n'a pas de néons.");}
		}
		else if(strcmp(tmp,"vitre",true) == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être dans un véhicule.");}
			if(!IsACar(idcar) && ! IsPoidLourd(idcar))
				{return msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule n'a pas de fenetre.");}
				
            new frontRightWindow, frontLeftWindow, backRightWindow, backLeftWindow;
			GetVehicleParamsCarWindows(idcar, frontRightWindow, frontLeftWindow, backRightWindow, backLeftWindow);

			if(vehicle[idcar][cWindows][GetPlayerVehicleSeat(playerid)] == false)
			{
    			vehicle[idcar][cWindows][GetPlayerVehicleSeat(playerid)] = true;
				format(string, sizeof(string), "* %s ouvre sa fenêtre.", PlayerInfo[playerid][pName]);
			}
			else if(vehicle[idcar][cWindows][GetPlayerVehicleSeat(playerid)] == true)
			{
				vehicle[idcar][cWindows][GetPlayerVehicleSeat(playerid)] = false;
				format(string, sizeof(string), "* %s ferme sa fenêtre.", PlayerInfo[playerid][pName]);
			}
			if(vehicle[idcar][cWindows][0] == true) 		{SetVehicleParamsCarWindows(idcar, VEHICLE_PARAMS_ON, frontLeftWindow, backRightWindow, backLeftWindow);}
			else if (vehicle[idcar][cWindows][0] == false)	{SetVehicleParamsCarWindows(idcar, VEHICLE_PARAMS_OFF, frontLeftWindow, backRightWindow, backLeftWindow);}
            if(vehicle[idcar][cWindows][1] == true) 		{SetVehicleParamsCarWindows(idcar, frontRightWindow, VEHICLE_PARAMS_ON, backRightWindow, backLeftWindow);}
			else if (vehicle[idcar][cWindows][1] == false)	{SetVehicleParamsCarWindows(idcar, frontRightWindow, VEHICLE_PARAMS_OFF, backRightWindow, backLeftWindow);}
            if(vehicle[idcar][cWindows][2] == true) 		{SetVehicleParamsCarWindows(idcar, frontRightWindow, frontLeftWindow, VEHICLE_PARAMS_ON, backLeftWindow);}
			else if (vehicle[idcar][cWindows][2] == false)	{SetVehicleParamsCarWindows(idcar, frontRightWindow, frontLeftWindow, VEHICLE_PARAMS_OFF, backLeftWindow);}
			if(vehicle[idcar][cWindows][3] == true) 		{SetVehicleParamsCarWindows(idcar, frontRightWindow, frontLeftWindow, backRightWindow, VEHICLE_PARAMS_ON);}
			else if (vehicle[idcar][cWindows][3] == false)	{SetVehicleParamsCarWindows(idcar, frontRightWindow, frontLeftWindow, backRightWindow, VEHICLE_PARAMS_OFF);}
			SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
			return 1;
		}
		else if(strcmp(tmp,"capot",true) == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être dans un véhicule.");}
			if(!IsACar(idcar))
				{return msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule n'a pas de capot.");}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) capot <ouvrir - fermer>");}

            new engine,lights,alarm,doors,bonnet,boot,objective;
            GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
			if (strcmp(tmp, "ouvrir", true)==0)
			{
				format(string, sizeof(string), "* %s ouvre le capot de son véhicule.", PlayerInfo[playerid][pName]);
    			SetVehicleParamsEx(idcar,engine,lights,alarm,doors,1,boot,objective);
				msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous avez ouvert le capot.");
			}
			else if (strcmp(tmp, "fermer", true)==0)
			{
				format(string, sizeof(string), "* %s ferme le capot de son véhicule.", PlayerInfo[playerid][pName]);
				SetVehicleParamsEx(idcar,engine,lights,alarm,doors,0,boot,objective);
				msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous avez fermé le capot.");
			}
			SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
			return 1;
		}
		else if(strcmp(tmp,"coffre",true) == 0)
		{
			new counter = 0,mycar;
			for(new i; i <= totalVehicles; i++)
			{
				if(CheckPlayerDistanceToVehicle(3.5, playerid, i))
					{mycar = i; counter++;}
			}
			if(car_PlayerInSafe[playerid] !=0)
				{mycar = car_PlayerInSafe[playerid];}
			else if(counter == 0)
				{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Aucun véhicule pret de vous.");}
			else if(counter > 1)
				{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Trop de véhicule prêt de vous.");}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) coffre <nom>");
				if(car_SafeStatut[mycar] == false)
					{msg_Client(playerid, COLOR_WHITE, "{FFFFB2} ouvrir");}
				else if(car_SafeStatut[mycar] == true)
					{msg_Client(playerid, COLOR_WHITE, "{FFFFB2} fermer - entrer - sortir - gerer - cadavre");}
				return 1;
			}
			if(car_SafeStatut[mycar] == false)
			{
				if (IsPlayerInAnyVehicle(playerid))
					{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous devez être en dehors du véhicule.");}

				if (strcmp(tmp, "ouvrir", true)==0)
				{
					if(vehicle[mycar][SQLID] == PlayerInfo[playerid][pCar][0] || mycar == HireCar[playerid] || vehicle[mycar][SQLID] == PlayerInfo[playerid][pCar][1] || vehicle[mycar][SQLID] == PlayerInfo[playerid][pCar][2] || vehicle[mycar][SQLID] == PlayerInfo[playerid][pCar][3] ||
					 vehicle[mycar][SQLID] == PlayerInfo[playerid][pCar][4] || vehicle[mycar][SQLID] == PlayerInfo[playerid][pCar][5] || vehicle[mycar][cType] == PlayerInfo[playerid][pMember] && vehicle[mycar][cType] != 0 || AdminDuty[playerid]==1)
					{
						if(IsABike(mycar))
							{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule n'a pas de coffre.");}
						if (GetPlayerVehicleSeat(playerid) > 50 && IsPlayerInAnyVehicle(playerid))
							{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Impossible de l'ouvrir depuis le coffre.");}

						car_SafeStatut[mycar] = true;
						format(string, sizeof(string), "* %s ouvre le coffre de son véhicule.", PlayerInfo[playerid][pName]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
						new engine,lights,alarm,doors,bonnet,boot,objective;
						GetVehicleParamsEx(mycar,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(mycar,engine,lights,alarm,doors,bonnet,1,objective);
						return 1;
					}
					else
						{return msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas les clefs du coffre!");}
				}
			}
			else if(car_SafeStatut[mycar] == true)
			{
				if (strcmp(tmp, "fermer", true)==0)
				{
					if (GetPlayerVehicleSeat(playerid) > 50 && IsPlayerInAnyVehicle(playerid))
						{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Impossible de l'ouvrir depuis le coffre.");}

					car_SafeStatut[mycar] = false;
					format(string, sizeof(string), "* %s ferme le coffre.", PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
					new engine,lights,alarm,doors,bonnet,boot,objective;
					GetVehicleParamsEx(mycar,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(mycar,engine,lights,alarm,doors,bonnet,0,objective);
					return 1;
				}
				else if (strcmp(tmp, "entrer", true)==0)
				{
					if(IsAMoto(mycar) || IsABike(mycar))
						{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule n'a pas de coffre.");}
					if (IsPlayerInAnyVehicle(playerid))
						{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous devez être en dehors du véhicule.");}
					if(car_InSafe[mycar] == true)
						{return msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Quelqun est déjà caché dans le coffre.");}

					car_InSafe[mycar] = true;
					car_PlayerInSafe[playerid] = mycar;
					TextDrawShowForPlayer(playerid,Text_Safe);
					format(string, sizeof(string), "* %s entre dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
					TogglePlayerControllable(playerid,0);
					server_SetPlayerVirtualWorld(playerid,mycar);
					return 1;
				}
				else if (strcmp(tmp, "sortir", true)==0)
				{
					if(IsAMoto(mycar) || IsABike(mycar))
						{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule n'a pas de coffre.");}
					if (car_SafeStatut[mycar]==false)
						{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Impossible, le coffre est fermé de l'extérieur.");}

					server_SetPlayerVirtualWorld(playerid,0);
					car_InSafe[mycar] = false;
					car_PlayerInSafe[playerid]=0;
					new Float:slx, Float:sly, Float:slz;
					GetVehiclePos(mycar, slx, sly, slz);
					SafeSetPlayerPos(playerid, slx, sly, slz+5);
					TextDrawHideForPlayer(playerid,Text_Safe);
					TogglePlayerControllable(playerid,1);
					format(string, sizeof(string), "* %s sort du coffre.", PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
					return 1;
				}
				else if (strcmp(tmp, "cadavre", true)==0 || strcmp(tmp, "corps", true)==0)
				{
				    if(IsAMoto(mycar))
				        {return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Impossible sur ce genre de véhicule.");}
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) coffre cadavre <mettre - prendre>");}
                    if (strcmp(tmp, "mettre", true)==0)
					{
					    if(player_CarryBody[playerid] == -1)
					        {return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous devez avoir un cadavre dans les mains.");}
						if(vehicle[mycar][cBody] != -1)
						    {return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Il y a déjà un cadavre dans le coffre.");}
					    vehicle[mycar][cBody]=player_CarryBody[playerid];
                        body_StopCarry(playerid,1);
					}
					else if (strcmp(tmp, "prendre", true)==0)
					{
					    if(vehicle[mycar][cBody] == -1)
						    {return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Il n'y a pas de cadavre dans le coffre.");}
					    if(player_CarryBody[playerid] != -1)
					        {return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous avez déjà un cadavre dans les mains.");}
                        body_Carry(playerid,vehicle[mycar][cBody]);
                        vehicle[mycar][cBody]=-1;
					}
					else
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) coffre cadavre <mettre - prendre>");}
					return 1;
				}
				else if (strcmp(tmp, "gestion", true)==0 || strcmp(tmp, "gerer", true)==0)
					{return car_ShowDialogTrunk(playerid,mycar);}
			}
		}
		else if(strcmp(tmp,"reparer",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous devez etre dans un véhicule.");}
			SafeSetVehicleHealth(idcar,1000.0);
			RepairVehicle(idcar);
			PlayerPlaySound(playerid, 1056, 0, 0, 0);
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous venez de réparer ce véhicule.");
			format(string, sizeof(string), "%s à réparé le vehicule, id: %d.",PlayerInfo[playerid][pRealName],idcar);
			log_Admin(string);
			return 1;
		}
		else if(strcmp(tmp,"slap",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) slap <id/joueur>");}

			giveplayerid = ReturnUser(tmp);
			new Float:slx, Float:sly, Float:slz;
			if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}

			GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
			SafeSetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz+5);
			PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
			format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s à slappé le véhicule de %s",PlayerInfo[playerid][pRealName] ,PlayerInfo[giveplayerid][pRealName]);
			msg_Admin(COLOR_LIGHTRED,string,1);
			format(string, sizeof(string), "%s à slappé le véhicule de %s.",PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName]);
			log_Admin(string);
			return 1;
		}
		else if(strcmp(tmp,"arespawn",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) arespawn <nom>");
				msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} all - id <vehid> - (inut)ilises - job <jobid>");
				return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} faction <factionid> - this - location");
			}
			if(strcmp(tmp,"all",true) == 0)
			{
				format(string,sizeof(string),"» Information « Tout les véhicules ont été respawn par %s.",PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(COLOR_WHITE,string);
				for(new car = 1; car <= totalVehicles; car++)
					{vehicle[car][cEngine] = false; SetVehicleToRespawn(car);}
			}
			else if(strcmp(tmp,"id",true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) arespawn id <vehid>");}

				if(strval(tmp)<0 || strval(tmp)>totalVehicles)
					{return 1;}

				SetVehicleToRespawn(strval(tmp));
				format(string,sizeof(string),"» Information « Respawn du véhicule %d.",strval(tmp));
				msg_Client(playerid,COLOR_WHITE, string);
				vehicle[strval(tmp)][cEngine]=false;
			}
			else if(strcmp(tmp,"inut",true) == 0 || strcmp(tmp,"inutilises",true) == 0)
			{
				format(string,sizeof(string),"» Information « Tout les véhicules inutilisés ont été respawn par %s.",PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(COLOR_WHITE,string);
				new bool:unwanted[MAX_CAR];
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerInAnyVehicle(i) || job_TempVar[i] != 0 && job_Start[i] == 1 && PlayerInfo[i][pJob] == 10)
						{unwanted[GetPlayerVehicleID(i)]=true;}
				}
				for(new car = 1; car <= totalVehicles; car++)
				{
					if(!unwanted[car])
						{vehicle[car][cEngine] = false; SetVehicleToRespawn(car);}
				}
			}
			else if(strcmp(tmp,"job",true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) arespawn job <numero>");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Numéros:{FFFFFF} 1. Livreur de Pizza - 2. Fermier - 3. Mineur - 4. Eboueur - 5. Ouvrier - 6. Pilote de Ligne");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Numéros:{FFFFFF} 7. Facteur - 8. Pecheur - 9. Transporteur de fonds - 10. Livreur marchandises - 11. Pilote de train");
					return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Numéros:{FFFFFF} 12. Chauffeur de bus - 13. Chauffeur de Taxi");
				}
				format(string,sizeof(string),"» Information « Tout les véhicules du job {00FFC8}%s{FFFFFF} ont été respawn par %s.",GetJobName(strval(tmp)),PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(COLOR_WHITE,string);
				new bool:unwanted[MAX_CAR];
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerInAnyVehicle(i) || job_TempVar[i] != 0 && job_Start[i] == 1 && PlayerInfo[i][pJob] == 10)
					{
						unwanted[GetPlayerVehicleID(i)]=true;
						if(job_TempVar[i] != 0 && job_Start[i] == 1 && PlayerInfo[i][pJob] == 10)
							{unwanted[job_TempVar[i]]=true;}
					}
				}
				for(new v=1; v <= totalVehicles; v++)
				{
					if(vehicle[v][cType] == 30+strval(tmp))
					{
						if(!unwanted[v])
							{vehicle[v][cEngine] = false; SetVehicleToRespawn(v);}
					}
				}
			}
			else if(strcmp(tmp,"faction",true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) arespawn faction <factionid>");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}{A98500}Numéro:{FFFFFF} 1. L.S.P.D - 2. S.F.P.D - 3. L.V.P.D - 4. S.A.S.D - 5. F.B.I");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}{A98500}Numéro:{FFFFFF} 6. Gouv LS - 7. Gouv SF - 8. Gouv LV - 9. Gouv SA - 10. San News");
					return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}{A98500}Numéro:{FFFFFF} Gangs/Mafias>=200");
				}
				format(string,sizeof(string),"» Information « Tout les véhicules de la faction {00FFC8}%s{FFFFFF} ont été respawn par %s.",GetFactionName(strval(tmp)),PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(COLOR_WHITE,string);
				new bool:unwanted[MAX_CAR];
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerInAnyVehicle(i))
						{unwanted[GetPlayerVehicleID(i)]=true;}
				}
				for(new v=1; v <= totalVehicles; v++)
				{
					if(vehicle[v][cType] == strval(tmp))
					{
						if(!unwanted[v])
							{vehicle[v][cEngine] = false; SetVehicleToRespawn(v);}
					}
				}
				return 1;
			}
			else if(strcmp(tmp,"this",true) == 0)
			{
				if(!IsPlayerInAnyVehicle(playerid))
					{return msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Vous n'êtes pas dans un véhicule.");}

				SetVehicleToRespawn(idcar);
				format(string,sizeof(string),"» Information « Respawn du véhicule {00FFC8}%d{FFFFFF}.",idcar);
				msg_Client(playerid,COLOR_WHITE, string);
				vehicle[idcar][cEngine]=false;
			}
			else if(strcmp(tmp,"location",true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) arespawn location <nom>");
					return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} 1. moto - 2. voiture - 3. velo - 4. bateau - 5. avion");
				}
				format(string,sizeof(string),"» Information « Tout les %ss de location ont été respawn par {00FFC8}%s{FFFFFF}",GetLocationName(strval(tmp)),PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(COLOR_WHITE,string);
				new bool:unwanted[MAX_CAR];
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerInAnyVehicle(i))
						{unwanted[GetPlayerVehicleID(i)]=true;}
				}
				for(new v=1; v <= totalVehicles; v++)
				{
					if(vehicle[v][cType] == 10+strval(tmp))
					{
						if(!unwanted[v])
							{vehicle[v][cEngine] = false; SetVehicleToRespawn(v);}
					}
				}
			}
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) arespawn <nom>");
				msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} all - id <vehid> - (inut)ilises - job <jobid>");
				return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} faction <factionid> - this - location");
			}
			return 1;
		}
		else if(strcmp(tmp,"remplirall",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
			for(new c=0;c<=totalVehicles;c++)
			{
				vehicle[c][cGas] = 100;
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerInVehicle(i,c) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{speedometer_Update(i,8,0);}
				}
			}

			SendClientMessageToAll(COLOR_WHITE, "» Information « Les réservoirs de toutes les voitures on été remplis.");
			format(string, sizeof(string), "%s à remplis les réservoirs de tout les véhicules.",PlayerInfo[playerid][pRealName]);
			log_Admin(string);
		}
		else if(strcmp(tmp,"aremplir",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) aremplir <montant>");}
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_GREY,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas dans un véhicule.");}

			vehicle[idcar][cGas]=strval(tmp);
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} L'essence du véhicule a été changé.");
			format(string, sizeof(string), "%s à remplis le réservoir du véhicule %d à %d litres.",PlayerInfo[playerid][pRealName],idcar,strval(tmp));
			log_Admin(string);
			speedometer_Update(playerid,8,0);
			vehicle_Save(idcar,0,0);
		}
		else if(strcmp(tmp,"monde",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) monde <montant>");}
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_GREY,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas dans un véhicule.");}

			SetVehicleVirtualWorld(idcar,strval(tmp));
			vehicle[idcar][cVW]=strval(tmp);
			format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le monde viruel du véhicule en %d.",strval(tmp));
			msg_Client(playerid,COLOR_WHITE,string);
			format(string, sizeof(string), "%s a changé le monde du véhicule %d à %d.",PlayerInfo[playerid][pRealName],idcar,strval(tmp));
			log_Admin(string);
			vehicle_Save(idcar,0,0);
		}
		else if(strcmp(tmp,"interieur",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /v(ehicule) interieur <montant>");}
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_GREY,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas dans un véhicule.");}

			LinkVehicleToInterior(idcar,strval(tmp));
			vehicle[idcar][cInt]=strval(tmp);
			format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé l'interieur du véhicule en %d.",strval(tmp));
			msg_Client(playerid,COLOR_WHITE,string);
			format(string, sizeof(string), "%s a changé linterieur du véhicule %d à %d.",PlayerInfo[playerid][pRealName],idcar,strval(tmp));
			log_Admin(string);
			vehicle_Save(idcar,0,0);
		}
		else if(strcmp(tmp,"id",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
			format(string, sizeof(string), "{8BE2E2}» Véhicule «{FFFFFF} Id du véhicule : IG : %d - SQLID : %d",idcar,vehicle[idcar][SQLID]);
			msg_Client(playerid,COLOR_WHITE,string);
		}
		else if(strcmp(tmp,"radio",true) == 0)
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		        {return msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous n'êtes pas conducteur.");}
			if(inventory_GetItemQuantity(playerid,1719) <= 0)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de radioFM.");}
			player_Dialog[playerid]=0;
			return ShowPlayerDialog(playerid, 80, DIALOG_STYLE_LIST, "[Radio Fm]","{FFFFFF}- Arreter la radio \n- FunRadio\n- Skyrock\n- Vibrassion\n- Plus FM\n- NRJ\n- Partenaire\n- Rap US\n- Lien Stream ..","OK", "Quitter");
		}
		else if(strcmp(tmp,"ejecter",true) == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'êtes pas dans un véhicule.");}
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER)
				{return msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous n'êtes pas conducteur.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /v(ehicule) ejecter <id/joueur>");}
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid))
				{return msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Ce joueur n'est pas connecté.");}
			if(playerid == giveplayerid)
				{msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous ne pouvez pas vous ejecter vous même !");}
			if(!IsPlayerInVehicle(giveplayerid,idcar))
				{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Ce joueur n'est pas dans votre véhicule.");}
			return RemovePlayerFromVehicle(giveplayerid);
		}
		else if(strcmp(tmp,"ainfos",true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
			new Owner[128], Date[32],tmpOwner[64];

			format(sql, sizeof(sql), "SELECT * FROM lvrp_users WHERE Name = '%s' LIMIT 1",vehicle[idcar][cOwner]);
			mysql_query(MYSQL,sql);
			new count = 0;
			if(cache_get_row_count(count) && count > 0)
				{cache_get_value_name(0,"LastLog",Field, 32); format(Date,sizeof(Date),"%s",date(strval(Field),1));}

			if(vehicle[idcar][cOwned] == 0){format(Owner,sizeof(Owner),"A vendre (0)"); format(tmpOwner,sizeof(tmpOwner),"A vendre");}
			else if(vehicle[idcar][cOwned] == 1){format(Owner,sizeof(Owner),"A un joueur (1) [%s]\nDernière connexion : %s",vehicle[idcar][cOwner],Date);}
			else if(vehicle[idcar][cOwned] == 2){format(Owner,sizeof(Owner),"Faction (2)"); format(tmpOwner,sizeof(tmpOwner),"%s",GetFactionName(vehicle[idcar][cType]));}
            else if(vehicle[idcar][cOwned] == 3){format(Owner,sizeof(Owner),"Job (3)"); format(tmpOwner,sizeof(tmpOwner),"%s",GetJobName(vehicle[idcar][cType]-30));}
            
			format(string,sizeof(string),"[Générale]\nProprietaire : %s\nOwned : %d\nFaction/Job : %s\nPrix : %d $\nCouleur 1 : %d  -  Couleur 2 : %d\nSQLid : %d\nId SAMP : %d",
			Owner,vehicle[idcar][cOwned],tmpOwner,vehicle[idcar][cValue],vehicle[idcar][cColorOne],vehicle[idcar][cColorTwo],vehicle[idcar][SQLID],idcar);
			ShowPlayerDialog(playerid,91,DIALOG_STYLE_MSGBOX, "» Véhicule « Info", string, "OK","");
			return 1;
		}
		else
		{
			msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /v(ehicule) <nom>");
			msg_Client(playerid, COLOR_WHITE, "{FFFFB2} coffre - remplir - vitre - capot");
			msg_Client(playerid, COLOR_WHITE, "{FFFFB2} neon - ejecter - radio - jerrican - bruler");
			msg_Client(playerid, COLOR_WHITE, "{A98500}Proprio :{FFFFB2} vendre - vendrea - localiser - garer - infos");
			msg_Client(playerid, COLOR_WHITE, "{A98500}Proprio :{FFFFB2} enlevertunning - portes - cadena (Juste pour vélo) - recuperer");
			msg_Client(playerid, COLOR_WHITE, "{A98500}Autre :{FFFFB2} Appuyez sur 'é' pour allumer les phares .");
			if(PlayerInfo[playerid][pAdmin] >= 2)
				{msg_Client(playerid, COLOR_WHITE, "{A98500}Admin :{FFFFB2} slap - reparer - arespawn - ainfos - aremplir - id - remplirall");}
			return 1;
		}
	    return 1;
	}
	else if(strcmp(cmdtext,"/gps",true)==0)
	{
	    if(inventory_GetItemQuantity(playerid,18875) <= 0)
	    	{return msg_Box(playerid, "~b~", "Info", "Vous n'avez pas de GPS, allez en acheter dans une station essence.", 5000);}
	   	if(!IsPlayerInAnyVehicle(playerid))
	        {return msg_Box(playerid, "~b~", "GPS", "Le GPS ne peut être utilisé qu'en véhicule.", 5000);}
	     	
	    ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"» GPS/Carte « Ville","{FFFFFF}- Los Santos\n- San Fierro\n- Las Venturas\n- Fort Carson\n- Bay Side\n- Angel Pine\n- Dillimore\n- Blueberry\n- Montgomery\n- Palomino Creek\n- Las Payasdas\n- Las Barbancas\n- El Quebrados","Valider","Eteindre");
	    player_Dialog[playerid]=0;
	    return 1;
	}
	else if(strcmp(cmdtext,"/enlevergps",true)==0)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpoint[playerid] = 0;
		msg_Box(playerid, "~b~", "GPS", "Desactivé.", 5000);
	    return 1;
	}
	else if(strcmp(cmd, "/credits", true) == 0)
    {
        format(string,sizeof(string),"{FFFFFF}GameMode LVRP basé sur le célèbre {00F5FF}U2C{FFFFFF}.\n- Scripté par {FF0000}DarkRider{FFFFFF} ({FF0000}Billy_Braxton{FFFFFF})\n- Mappé par {00FF00}Lurtz59'{FFFFFF} ({00FF00}Taylor_Braxton{FFFFFF}) et la communauté.\n\n- Site : {AA00FF}%s{FFFFFF}\n- TS3 : {AA00FF}%s{FFFFFF}\n\nRemerciment à la communauté française du forum SA-MP.",FORUM_NAME,TS_NAME);
        return ShowPlayerDialog(playerid, 999,DIALOG_STYLE_MSGBOX,"» Crédits «",string,"Valider","");
	}
	else if(strcmp(cmd, "/rapport", true) == 0 || strcmp(cmd, "/report", true) == 0 || strcmp(cmd, "/repport", true) == 0 || strcmp(cmd, "/raport", true) == 0)
	{
		if(TimeRapport[playerid] !=0 && PlayerInfo[playerid][pDonateRank] ==0)
	    	{return msg_Box(playerid, "~b~", "Info", "Une minute d'interval entre chaque rapport/question.", 5000);}
	            
 		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/re)port <id/joueur> <raison>");}
				
		giveplayerid = ReturnUser(tmp);
		if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
		{
		    if(IsPlayerNPC(giveplayerid))
		        {return msg_Box(playerid, "~b~", "Info", "Impossible de reporter un bot !", 5000);}
           	new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
				{idx++;}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
			result[idx - offset] = EOS;
					
			if(!strlen(result))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/re)port <id/joueur> <raison>");}
					
		    format(string, sizeof(string), "[Rapport] %s (%d) a rapporté %s (%d): %s",PlayerInfo[playerid][pRealName], playerid, PlayerInfo[giveplayerid][pRealName], giveplayerid, (result));
		    msg_Admin(COLOR_LIGHTRED,string,1);
		    format(string,sizeof(string),"[Rapport] Votre message a été transmis aux Staff de %s connectés.",NICK_NAME);
		    msg_Client(playerid, COLOR_YELLOW, string);
		    TimeRapport[playerid]=1;
		    SetTimerEx("player_ResetTimeRapport", 60000,0,"i",playerid);
		    return 1;
	    }
	    else
	        {return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas connecté.", 5000);}
	}
	else if(strcmp(cmd, "/marche", true) == 0 )
	{
		var=-1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		    {return msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /marche <id>");}
		var = strval(tmp);

		if(var <= 0 || var > 13)
			{return msg_Box(playerid, "~y~", "Marche", "Vous ne pouvez pas choisir ce style de marche.", 5000);}
		msg_Box(playerid, "~y~", "Marche", "Style de marche changée.", 5000);
		WalkStyle[playerid] = var;
		return 1;
	}
	else if(strcmp(cmd, "/course", true) == 0 )
	{
		var=-1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		    {return msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /course <id>");}
		var = strval(tmp);

		if(var <= 0 || var > 11)
			{return msg_Client(playerid, COLOR_ORANGE, "{FF9900}» Course «{FFFFFF} Vous ne pouvez pas choisir ce style de course.");}
		msg_Client(playerid, COLOR_ORANGE, "{FF9900}» Course «{FFFFFF} Style de course changée.");
		RunStyle[playerid] = var;
		return 1;
	}
	else if(strcmp("/laser", cmdtext, true, 10) == 0)
	{
	    if(inventory_GetItemQuantityIn(playerid,19080,19084) <= 0 && inventory_GetItemQuantity(playerid,18643) <= 0)
	        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de laser.");}

		if(laser_Statue[playerid]==0)
			{ShowPlayerDialog(playerid,148,DIALOG_STYLE_LIST,"» Laser «","- Rouge\n- Bleu\n- Rose\n- Orange\n- Vert\n- Jaune","Valider","Quitter");}
		else
		{
		    RemovePlayerAttachedObject(playerid,laser_Object[playerid]);
		    msg_Box(playerid, "~b~", "Info", "Vous avez retiré votre laser.", 5000);
		    laser_Statue[playerid]=0; laser_Colour[playerid]=0;
		}
		return 1;
	}
	else if(strcmp("/basket", cmdtext, true, 10) == 0)
	{
	    if(inventory_GetItemQuantity(playerid,1946) <= 0)
	        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de ballon de basket.");}

		if(basket_Ball[playerid] != -1)
		{
		    if(IsValidDynamicObject(basket[basket_Ball[playerid]][object]))
		    	{DestroyDynamicObject(basket[basket_Ball[playerid]][object]);}
		    basket[basket_Ball[playerid]][used]=0;
		    basket[basket_Ball[playerid]][owner]=-1;
		    basket[basket_Ball[playerid]][statut]=0;
		    basket[basket_Ball[playerid]][bounce]=0;
		    basket[basket_Ball[playerid]][shooting]=0;
            basket_Ball[playerid] = -1;
		}
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        for(new i=0; i<MAX_BALL; i++)
        {
            if(basket[i][used] == 0)
            {
	            basket[i][object] = CreateDynamicObject(2114, x+random(3), y+random(3), z-0.8, 0, 0, 96,0,0,-1,300.0);
	            basket_Ball[playerid]=i;
	            basket[i][used]=1;
	            break;
            }
        }
		return 1;
	}
	else if(strcmp(cmd,"/aide",true)==0)// Menu aide
	{
	    aide_Dialog[playerid]=0;
		return ShowPlayerDialog(playerid,1,DIALOG_STYLE_LIST,"» Aide «","[Général]\n[Tchat]\n[Job]\n[Faction]\n[Maison(s)]\n[Biz]\n[Voiture(s)]\n[Garage(s)]","Ouvrir","Fermer");
	}
	else if(strcmp(cmd,"/fps",true)==0)
	{
	    if(gPlayerFPS[playerid] == false)
	    {
	        msg_Box(playerid, "~b~", "Info", "Mode FPS activé.", 5000);
	        gPlayerFPS[playerid] = true;
	        fpsObject[playerid] = CreateObject(19300, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
			AttachObjectToPlayer(fpsObject[playerid],playerid,0.0, 0.3, 0.7, 0, 0, 0);
			AttachCameraToObject(playerid, fpsObject[playerid]);
	    }
	    else
	    {
	        msg_Box(playerid, "~b~", "Info", "Mode FPS désactivé.", 5000);
	        SetCameraBehindPlayer(playerid);
	        gPlayerFPS[playerid] = false;
			if(IsValidObject(fpsObject[playerid]))
				{DestroyObject(fpsObject[playerid]);}
	    }
	    return 1;
	}
//---------------------------[ BRAQUAGE ]---------------------------------------
	else if(strcmp(cmd,"/decoder",true)==0)
	{
	    if(inventory_GetItemQuantity(playerid,1718) <= 0)
	    	{return msg_Box(playerid, "~b~", "Info", "Vous ne possédez pas de décodeur.", 5000);}
	    if(PlayerInfo[playerid][pLevel] < 3)
	        {return msg_Box(playerid, "~b~", "Info", "Vous devez être minimum niveau 3 pour pouvoir braquer la banque.", 5000);}
        if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <=6)
	        {return msg_Box(playerid, "~b~", "Info", "Les factions légales ne peuvent pas pirater la banque.", 5000);}
		if(!PlayerToPoint(3, playerid,2142.5330,1625.7997,993.6882))
			{return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas dans la banque.", 5000);}

        msg_Box(playerid, "~y~", "Banque", "Vous prenez votre décodeur et commencez à décoder.(Temps estimé : 30 secondes)", 7000);
		SetTimerEx("Decodage",30000,0,"d",playerid);
		inventory_UpdateItem(playerid,1718,-1);
		return 1;
	}
	else if(strcmp(cmd, "/braquer", true) == 0 || strcmp(cmd, "/braquage", true) ==0)
	{
	    if(PlayerInfo[playerid][pMember] < 200)
	    	{return msg_Box(playerid, "~b~", "Info", "Vous ne pouvez pas braquer la banque car vous ne faites pas parti d'une mafia.", 5000);}
		if(!PlayerToPoint(3, playerid, 2144.0420,1638.5311,993.5761))
			{return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas à la banque.", 5000);}
		if(bank_HasBeenRob==1)
			{return msg_Box(playerid, "~b~", "Info", "Banque déjà braquée aujourd'hui.", 5000);}
        if(bank_PlayerRob[playerid] == true)
            {return msg_Box(playerid, "~b~", "Info", "Vous êtes déjà en train de commettre le braquage.", 5000);}
        if(PlayerInfo[playerid][pLevel] < 3)
            {return msg_Box(playerid, "~b~", "Info", "Vous devez être minimum niveau 3 pour pouvoir cambrioler la Banque.", 5000);}
        if(bank_Robers == 2)
			{return msg_Box(playerid, "~b~", "Info", "Il y a déjà deux braqueurs.", 5000);}
        if(PlayerInfo[playerid][pRobTime] >0)
	      	{return msg_Box(playerid, "~b~", "Info", "Vous avez déja essayé ou cambriolé la banque récemment.", 5000);}
		if(Flicservice <= 6)
			{return msg_Box(playerid, "~y~", "Banque", "Il faut au moins 7 policiers en service pour pouvoir braquer la Banque.", 5000);}
        if (GetPlayerWeapon(playerid) <= 1)
            {return msg_Box(playerid, "~y~", "Banque", "Vous devez être armé. (et tenir votre arme en main)", 5000);}
        if(PlayerInfo[playerid][probbank] > 0)
            {return msg_Box(playerid, "~y~", "Banque", "Vous avez déja essayé ou cambriolé la banque récemment.", 5000);}
            
		bank_Robers ++;
		if(bank_Robers == 2)
			{bank_HasBeenRob=1; SetTimer("bank_ResetRob", 20 * 60000, 0);}
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0);
		msg_Client(playerid, COLOR_RED, " ");
		PlayerInfo[playerid][probbank] += CAN_ROB_TIME_BANK;
					
		SendClientMessageToAll(COLOR_BLUE, "* Un braquage à la banque à lieu *");
		SendClientMessageToAll(COLOR_BLUE, "* Que personne n'approche du périmètre de sécurité  ! *");
					
		format(string, sizeof(string), "*** A TOUTES LES UNITES : Un braquage de banque est en cours  ! ***");
		msg_Radio(1, TEAM_RADIO_COLOR, string);
		msg_Radio(3, TEAM_RADIO_COLOR, string);
		msg_Radio(4, TEAM_RADIO_COLOR, string);
					
		format(string, 256, "[Warning] %s braque la Banque.", PlayerInfo[playerid][pRealName]);
		msg_Admin(COLOR_LIGHTRED,string,2);
		SetPlayerCriminal(playerid,-1,-1,"Braque la Banque",6);
		msg_Client(playerid, COLOR_BANK, "{AADD66}» Banque «{FFFFFF} Il vous faut 8 minutes pour remplir votre sac de billets au complet !");
	    msg_Client(playerid, COLOR_BANK, "{AADD66}» Banque «{FFFFFF} Vous devrez donc résister 8 minutes dans la salle des coffres tout en agissant RolePlay.");
	    msg_Client(playerid, COLOR_BANK, "{AADD66}» Banque «{FFFFFF} Si vous quittez la zone, le braquage sera considéré comme échoué.");
		bank_RobTime[playerid]=BANK_ROB_TIME;
		bank_Rob = true;
		bank_PlayerRob[playerid] = true;
		format(string, sizeof(string), "* QG: L'uniforme SWAT est maintenant autorisé *");
		msg_Radio(1, COLOR_CASIER, string); msg_Radio(3, COLOR_CASIER, string); msg_Radio(4, COLOR_CASIER, string);
		police_Swat[0] = 1; police_Swat[2] = 1; police_Swat[3] = 1;
		return 1;
	}
	else if(strcmp(cmd, "/braqueur", true) == 0)
	{
		if (PlayerInfo[playerid][probbank] <= 2000)
			{return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas en train de braquer.", 5000);}
		if(bank_PlayerRob[playerid] == false)
			{return msg_Box(playerid, "~b~", "Info", "Seul les braqueurs peuvent utilisés cette commande.", 5000);}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /braqueur <texte>");}
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pAdmin] > 0)
				{
					msg_Client(playerid,COLOR_WHITE,"{FFFFFF}================= {B90000}Braqueurs {FFFFFF}=================");
					format(string, sizeof(string), "%s(id:%d): %s " , PlayerInfo[playerid][pRealName], playerid, result);
					msg_Client(i,COLOR_RED,string);
				}
				else if(PlayerInfo[i][pMember]>=1 && PlayerInfo[i][pMember]<=4)
				{
					format(string, sizeof(string), "[BRAQUEUR] %s " ,result);
					msg_Client(i,COLOR_RED,string);
				}
			}
		}
		return 1;
	}
	else if(strcmp(cmd, "/pirater", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] < 200 || FactionInfo[PlayerInfo[playerid][pMember]-200][fType] != 2)
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Seul les mafias peuvent braquées.");}
	    if(bank_HasBeenRob==1)
     		{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Banque déjà braquée aujourd'hui.");}
	    if(!PlayerToPoint(20.0,playerid,2167.1189,1600.0259,999.9740))
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas dans les locaux de la banque.");}
	    if(bank_Hack==true)
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} La banque se fait déjà pirater.");}
	    if(Flicservice < 6)
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} 6 forces de l'ordres minimum pour pirater.");}
	    if(PlayerInfo[playerid][pLevel] < 3)
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être level 3 minimum !");}
		if(JoueurPirateBanque[playerid] != 0)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous piratez déjà !");}
		bank_Hack=true;
		JoueurPirateBanqueTemps[playerid] = BANK_HACK_TIME; // 1mn 40
  		JoueurPirateBanque[playerid] = 1;
	    PourcentPiratage[playerid]=0;
	    msg_Client(playerid,COLOR_BANK,"{AADD66}» Banque «{FFFFFF} Vous êtes en train de pirater le système de sécurité de la banque.");
	    msg_Client(playerid,COLOR_BANK,"{AADD66}» Banque «{FFFFFF} Vous pourrez après, braquer le coffre.");
	    format(string,sizeof(string),"{AADD66}» Banque «{FFFFFF} Intrusion dans le système de sécurité ...");
	    msg_Radio(1,COLOR_BANK,string);
	    msg_Radio(2,COLOR_BANK,string);
	    msg_Radio(3,COLOR_BANK,string);
	    msg_Radio(4,COLOR_BANK,string);
	    TogglePlayerControllable(playerid,false);
	    TextDrawShowForPlayer(playerid,Bank_TextBackGround);
	    TextDrawShowForPlayer(playerid,Bank_TextPourcent);
	    TextDrawShowForPlayer(playerid,Bank_TextMsg[0]);
		return 1;
	}
	else if(strcmp(cmd, "/terroriste", true) == 0 || strcmp(cmd, "/terro", true) == 0)
	{
		if(PlayerInfo[playerid][pRank] < 4)
			{return msg_Box(playerid, "~b~", "Info", "Vous devez être rang 4 ou plus.", 5000);}
		if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 10)
			{return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas parti d'une faction illégale !", 5000);}
        if(PlayerInfo[playerid][pJailed] >= 1)
			{return msg_Box(playerid, "~b~", "Info", "Le /terroriste est interdit en prison.", 5000);}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /terro(riste) <texte>");

		msg_City(playerid,COLOR_RED, "=============== Annonce Terroriste ===============");
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(PlayerInfo[i][pAdmin] > 1)
			    {format(string, sizeof(string), "Terroriste[ID: %d] : %s",playerid, result);}
			else
				{format(string, sizeof(string), "Terroriste : %s", result);}
			msg_City(playerid,COLOR_RED,string);
		}
		return 1;
	}
	else if(strcmp(cmd, "/code", true) == 0)
	{
		if(PlayerToPoint(3, playerid,2142.5330,1625.7997,993.6882))
		{
	        if(PlayerInfo[playerid][pLevel] < 3)
	        	{return msg_Box(playerid, "~b~", "Info", "Vous devez être minimum Level 3 pour pouvoir braquer la Banque.", 5000);}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			    {return msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /code <mdp>");}
			var = strval(tmp);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /code <mot de passe>");
				msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Vous avez droit à qu'un essai !");
				return 1;
		 	}
	   		if(var == mdpbanque)
	    	{
		   		MoveDynamicObject(bank_Blind,2146.1977539063, 1626.7004394531, 994.26220703125, 2.0000);
			    format(string, sizeof(string), "* %s entre le mot de passe et coffre s'ouvre.", PlayerInfo[playerid][pName]);
			}
			else if(var == 1998)
			{
			    MoveDynamicObject(bank_Blind,2146.1977539063, 1626.7004394531, 994.26220703125, 2.0000);
	            format(string, sizeof(string), "* %s entre le mot de passe et le coffre s'ouvre.", PlayerInfo[playerid][pName]);
			}
			else
				{format(string, sizeof(string), "* %s tape le mauvais mot de passe et la grille de securité se ferme.", PlayerInfo[playerid][pName]);}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else
			{msg_Box(playerid, "~b~", "Info", "Vous êtes trop loin de la porte.", 5000);}
		return 1;
	}
	
	else if(strcmp(cmd, "/pma", true)==0 || strcmp(cmd, "/question", true) == 0 || strcmp(cmd, "/i", true) == 0 || strcmp(cmd, "/irc", true) == 0)
	{
	    if(TimeRapport[playerid] !=0 && PlayerInfo[playerid][pDonateRank] == 0)
     		{return msg_Box(playerid, "~b~", "Info", "Une minute d'interval entre chaque rapport/question.", 5000);}
    	ShowPlayerDialog(playerid,69,DIALOG_STYLE_INPUT,"» Question «","Ecriver votre question, elle sera envoyée aux admins connectés :","Envoyer","Annuler");
	    return 1;
	}

	// HANDSUP
 	else if(strcmp(cmd, "/levermains", true) == 0 || strcmp(cmd, "/handsup", true) == 0)
 	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);}
	}

	// carjacked
    else if(strcmp(cmd, "/carjacked1", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_jackedLHS",4.0,0,1,1,1,0);
         return 1;
    }

    // carjacked
    else if(strcmp(cmd, "/carjacked2", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_jackedRHS",4.0,0,1,1,1,0);
         return 1;
    }

    // CELLPHONE IN
 	else if(strcmp(cmd, "/cellin", true) == 0) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
        return 1;
    }

    // CELLPHONE OUT
 	else if(strcmp(cmd, "/cellout", true) == 0) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
        return 1;
    }

    // Drunk
    else if(strcmp(cmd, "/drunk", true) == 0) {
		LoopingAnim(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);
		return 1;
    }

	// Place a Bomb
    else if(strcmp("/bomb", cmdtext, true) == 0) {
		ClearAnimations(playerid);
		LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0); // Place Bomb
		return 1;
	}
	else if(strcmp("/coucou", cmdtext, true) == 0) {
		ClearAnimations(playerid);
		LoopingAnim(playerid, "ped","endchat_03",4.0,0,0,0,0,0); // coucou
		return 1;
	}
	else if(strcmp("/disperser", cmdtext, true) == 0) {
		ClearAnimations(playerid);
		LoopingAnim(playerid, "ped","Shove_Partial",4.0,0,0,0,0,0); // disperser
		return 1;
	}
	// Police Arrest
    else if(strcmp("/getarrested", cmdtext, true) == 0) {
	      LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); // Gun Arrest
		  return 1;
    }
	// Laugh
    else if(strcmp("/rire", cmdtext, true) == 0) {
          LoopingAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
		  return 1;
	}
	// Laugh
    else if(strcmp("/mdr", cmdtext, true) == 0) {
          LoopingAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
		  return 1;
	}
	// Rob Lookout
    else if(strcmp("/lookout", cmdtext, true) == 0) {
          LoopingAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
		  return 1;
	}
	// Rob Threat
    else if(strcmp("/robman", cmdtext, true) == 0) {
          LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); // Rob
		  return 1;
	}
	else if(strcmp(cmd, "/crossarms", true) == 0 || strcmp(cmd, "/cross", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /cross <1-5>");}
    	switch (strval(tmp))
    	{
    	    case 1:LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
        	case 2: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
         	case 3: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE_01", 4.1, 0, 1, 1, 1, 1, 1);
         	case 4: ApplyAnimation(playerid,"GRAVEYARD","mrnM_loop",4.1, 0, 1, 1, 1, 1, 1);
         	case 5: ApplyAnimation(playerid,"GRAVEYARD","prst_loopa",4.1, 0, 1, 1, 1, 1, 1);
        	default: msg_Client(playerid,0xEFEFF7AA,"{A98500}» Usage «{FFFFB2} /cross <1-5>");
    	}
        return 1;
    }
	// Lay Down
    else if(strcmp("/lay", cmdtext, true) == 0) {
          LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); // Lay down
		  return 1;
    }
	// Take Cover
    else if(strcmp("/hide", cmdtext, true) == 0) {
          LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); // Taking Cover
		  return 1;
	}
	// Vomit
    else if(strcmp("/vomir", cmdtext, true) == 0) {
	      LoopingAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
		  return 1;
	}
	// Eat Burger
    else if(strcmp("/eat", cmdtext, true) == 0) {
	      LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
		  return 1;
	}
	// Wave
    else if(strcmp("/vague", cmdtext, true) == 0) {
	      LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave
		  return 1;
	}
	// Wave
    else if(strcmp("/wave", cmdtext, true) == 0) {
	      LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave
		  return 1;
	}
	// Slap Ass
    else if(strcmp("/slapass", cmdtext, true) == 0) {
   		LoopingAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0); // Ass Slapping
 		return 1;
	}
	// Dealer
    else if(strcmp("/deal", cmdtext, true) == 0) {
          LoopingAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0); // Deal Drugs
		  return 1;
	}
	// Crack Dieing
    else if(strcmp("/crack", cmdtext, true) == 0) {
          LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); // Dieing of Crack
		  return 1;
	}
	// Smoking animations
	else if(strcmp(cmd, "/smokeanim", true) == 0)
    {
        if (!strlen(cmdtext[7])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /smoke [1-4]");
    	switch (cmdtext[7])
    	{
        	case '1': LoopingAnim(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); // male
        	case '2': LoopingAnim(playerid,"SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0); //female
        	case '3': LoopingAnim(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0); // standing-fucked
        	case '4': LoopingAnim(playerid,"SMOKING","M_smk_out", 4.0, 1, 0, 0, 0, 0); // standing
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /smoke [1-4]");
    	}
    	return 1;
    }
	// Sit
    if (strcmp("/groundsit", cmdtext, true) == 0 || strcmp("/gro", cmdtext, true) == 0) {
          LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0); // Sit
		  return 1;
    }
    // Idle Chat
    else if(strcmp(cmd, "/chat", true) == 0) {
		 LoopingAnim(playerid,"PED","Idle_Chat_02",4.0,1,0,0,1,0);
         return 1;
    }
    // Fucku
    else if(strcmp(cmd, "/fucku", true) == 0) {
		 LoopingAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
         return 1;
    }
    // Fucku
    else if(strcmp(cmd, "/fuck", true) == 0) {
		 LoopingAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
         return 1;
    }
    // TaiChi
    else if(strcmp(cmd, "/taichi", true) == 0) {
		 LoopingAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
         return 1;
    }
    else if(strcmp(cmd, "/selever", true) == 0 || strcmp(cmd, "/debout", true) == 0) {
		 LoopingAnim(playerid,"PED","SEAT_up",4.0,0,0,0,0,0);
         return 1;
    }

    else if(strcmp(cmd, "/assis2", true) == 0 || strcmp(cmd, "/chairsit2", true) == 0) {
		 SetPlayerSpecialAction(playerid,12);
         return 1;
    }

    // Fall on the ground
    else if(strcmp(cmd, "/tomber", true) == 0) {
		 LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
         return 1;
    }

    // Fall
    else if(strcmp(cmd, "/fallback", true) == 0) {
		 LoopingAnim(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
         return 1;
    }

    // kiss
    else if(strcmp(cmd, "/kiss", true) == 0) {
		 LoopingAnim(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 1, 1, 1, 0);
         return 1;
    }

    // kiss
    else if(strcmp(cmd, "/bisous", true) == 0) {
		 LoopingAnim(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 1, 1, 1, 0);
         return 1;
    }

    // Injujred
    else if(strcmp(cmd, "/blesser", true) == 0) {
		 LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
         return 1;
    }

    // Homie animations
    else if(strcmp(cmd, "/sup", true) == 0)
    {
        if (!strlen(cmdtext[5])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /sup [1-3]");
    	switch (cmdtext[5])
    	{
        	case '1': LoopingAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
         	case '2': LoopingAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
         	case '3': LoopingAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /sup [1-3]");
    	}
    	return 1;
    }
    else if(strcmp(cmd, "/npc_clochard", true) == 0)
	{
	    ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.1, 1, 1, 1, 1, 0, 1);
	}
	else if(strcmp(cmd, "/npc_eat", true) == 0)
	{
	    ApplyAnimation(playerid,"PED","SEAT_down",4.1, 1, 1, 1, 1, 0, 1);
	}
    // ChairSit
    else if(strcmp(cmd, "/assis", true) == 0 || strcmp(cmd, "/chairsit", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /assis <1-12>");}
    	switch (strval(tmp))
    	{
    	    case 1:LoopingAnim(playerid,"PED","SEAT_down",4.1,0,1,1,1,0);
        	case 2: ApplyAnimation(playerid,"BEACH","bather",4.1, 0, 1, 1, 1, 1, 1);
         	case 3: ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1, 0, 1, 1, 1, 1, 1);
         	case 4: ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",4.1, 0, 1, 1, 1, 1, 1);
         	case 5: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1, 0, 1, 1, 1, 1, 1);
         	case 6: ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.1, 0, 1, 1, 1, 1, 1);
         	case 7: ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1, 0, 1, 1, 1, 1, 1);// Not looping
            case 8: ApplyAnimation(playerid,"CRIB","PED_Console_Loop",4.1, 0, 1, 1, 1, 1, 1);
            case 9: ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1, 0, 1, 1, 1, 1, 1); // Not looping
            case 10: ApplyAnimation(playerid,"MISC","SEAT_LR",4.1, 0, 1, 1, 1, 1, 1);
            case 11: ApplyAnimation(playerid,"MISC","Seat_talk_01",4.1, 0, 1, 1, 1, 1, 1);
            case 12: ApplyAnimation(playerid,"MISC","Seat_talk_02",4.1, 0, 1, 1, 1, 1, 1);
        	default: msg_Client(playerid,0xEFEFF7AA,"{A98500}» Usage «{FFFFB2} /assis <1-12>");
    	}
        return 1;
    }

    // Rap animations
    else if(strcmp(cmd, "/rap", true) == 0)
    {
        if (!strlen(cmdtext[5])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /rap [1-4]");
    	switch (cmdtext[5])
    	{
    	    case '1': LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
        	case '2': LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
        	case '3': LoopingAnim(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0);
        	case '4': LoopingAnim(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1);
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /rap [1-4]");
    	}
    	return 1;
    }

    // Violence animations
    else if(strcmp(cmd, "/push", true) == 0) {
		 LoopingAnim(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
         return 1;
    }

    else if(strcmp(cmd, "/akick", true) == 0) {
		 LoopingAnim(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
         return 1;
    }

    else if(strcmp(cmd, "/lowbodypush", true) == 0) {
		 LoopingAnim(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
         return 1;
    }

    // Spray
    else if(strcmp(cmd, "/spray", true) == 0) {
		 LoopingAnim(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
         return 1;
    }

    // Headbutt
    else if(strcmp(cmd, "/headbutt", true) == 0) {
		 LoopingAnim(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
         return 1;
    }

    // Medic
    else if(strcmp(cmd, "/medic", true) == 0) {
		 LoopingAnim(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
         return 1;
    }

    // KO Face
    else if(strcmp(cmd, "/koface", true) == 0) {
		 LoopingAnim(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0);
         return 1;
    }

    // KO Stomach
    else if(strcmp(cmd, "/kostomach", true) == 0) {
		 LoopingAnim(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0);
         return 1;
    }

    // Jump for your life!
    else if(strcmp(cmd, "/lifejump", true) == 0) {
		 LoopingAnim(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
         return 1;
    }

    // Exhausted
    else if(strcmp(cmd, "/exhaust", true) == 0) {
		 LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
         return 1;
    }

    else if(strcmp(cmd, "/fatiguer", true) == 0) {
		 LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
         return 1;
    }
    // Left big slap
    else if(strcmp(cmd, "/leftslap", true) == 0) {
		 LoopingAnim(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
         return 1;
    }

    // Big fall
    else if(strcmp(cmd, "/rollfall", true) == 0) {
		 LoopingAnim(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
         return 1;
    }

    // Locked
    else if(strcmp(cmd, "/carlock", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    else if(strcmp(cmd, "/rcarjack1", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_pulloutL_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    else if(strcmp(cmd, "/lcarjack1", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_pulloutL_RHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    else if(strcmp(cmd, "/rcarjack2", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_pullout_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    else if(strcmp(cmd, "/lcarjack2", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_pullout_RHS",4.0,0,0,0,0,0);
         return 1;
    }

    // Hood frisked
    else if(strcmp(cmd, "/hoodfrisked", true) == 0) {
		 LoopingAnim(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0);
         return 1;
    }

    // Lighting cigarette
    else if(strcmp(cmd, "/lightcig", true) == 0) {
		 LoopingAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
         return 1;
    }

    // Tap cigarette
    else if(strcmp(cmd, "/tapcig", true) == 0) {
		 LoopingAnim(playerid,"SMOKING","M_smk_tap",3.0,0,0,0,0,0);
         return 1;
    }

    // Bat stance
    else if(strcmp(cmd, "/bat", true) == 0) {
		 LoopingAnim(playerid,"BASEBALL","Bat_IDLE",4.0,1,1,1,1,0);
         return 1;
    }

    // Boxing
    else if(strcmp(cmd, "/box", true) == 0) {
		 LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
         return 1;
    }

    // Lay 2
    else if(strcmp(cmd, "/lay2", true) == 0) {
		 LoopingAnim(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
         return 1;
    }

    // Gogogo
    else if(strcmp(cmd, "/chant", true) == 0) {
		 LoopingAnim(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0);
         return 1;
    }

    // Finger
    else if(strcmp(cmd, "/doigt", true) == 0) {
		 LoopingAnim(playerid,"RIOT","RIOT_FUKU",2.0,0,0,0,0,0);
         return 1;
    }

    // Shouting
    else if(strcmp(cmd, "/shouting", true) == 0) {
		 LoopingAnim(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0);
         return 1;
    }

    // Cop stance
    else if(strcmp(cmd, "/cop", true) == 0) {
		 LoopingAnim(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
         return 1;
    }

    // Elbow
    else if(strcmp(cmd, "/elbow", true) == 0) {
		 LoopingAnim(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
         return 1;
    }

    // Knee kick
    else if(strcmp(cmd, "/kneekick", true) == 0) {
		 LoopingAnim(playerid,"FIGHT_D","FightD_2",4.0,0,1,1,0,0);
         return 1;
    }

    // Fight stance
    else if(strcmp(cmd, "/fstance", true) == 0) {
		 LoopingAnim(playerid,"FIGHT_D","FightD_IDLE",4.0,1,1,1,1,0);
         return 1;
    }

    // Ground punch
    else if(strcmp(cmd, "/gpunch", true) == 0) {
		 LoopingAnim(playerid,"FIGHT_B","FightB_G",4.0,0,0,0,0,0);
         return 1;
    }

    // Air kick
    else if(strcmp(cmd, "/airkick", true) == 0) {
		 LoopingAnim(playerid,"FIGHT_C","FightC_M",4.0,0,1,1,0,0);
         return 1;
    }

    // Ground kick
    else if(strcmp(cmd, "/gkick", true) == 0) {
		 LoopingAnim(playerid,"FIGHT_D","FightD_G",4.0,0,0,0,0,0);
         return 1;
    }

    // Low throw
    else if(strcmp(cmd, "/lowthrow", true) == 0) {
		 LoopingAnim(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
         return 1;
    }

    // Ground kick
    else if(strcmp(cmd, "/highthrow", true) == 0) {
		 LoopingAnim(playerid,"GRENADE","WEAPON_throw",4.0,0,0,0,0,0);
         return 1;
    }

    // Deal stance
    else if(strcmp(cmd, "/dealstance", true) == 0) {
		 LoopingAnim(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);
         return 1;
    }

    // Deal stance
    else if(strcmp(cmd, "/pee", true) == 0 || strcmp(cmd, "/pepe", true) == 0 || strcmp(cmd, "/peepee", true) == 0 || strcmp(cmd, "/pepee", true) == 0)
	{
	    if(PlayerInfo[playerid][pSex] == 2) return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous êtes une fille !");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
		return 1;
    }
    // Deal stance
    else if(strcmp(cmd, "/pisser", true) == 0) {
		 SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
         return 1;
    }

    // Knife animations
    else if(strcmp(cmd, "/knife", true) == 0)
    {
        if (!strlen(cmdtext[7])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /knife [1-4]");
    	switch (cmdtext[7])
    	{
    	    case '1': LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0);
        	case '2': LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0);
        	case '3': LoopingAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
        	case '4': LoopingAnim(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1);
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /knife [1-4]");
    	}
    	return 1;
    }

    else if(strcmp(cmd, "/couteau", true) == 0)
    {
        if (!strlen(cmdtext[7])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /knife [1-4]");
    	switch (cmdtext[7])
    	{
    	    case '1': LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0);
        	case '2': LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0);
        	case '3': LoopingAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
        	case '4': LoopingAnim(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1);
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /knife [1-4]");
    	}
    	return 1;
    }
    // Basket-ball
    else if(strcmp(cmd, "/basket", true) == 0)
    {
        if (!strlen(cmdtext[8])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /basket [1-6]");
    	switch (cmdtext[8])
    	{
        	case '1': LoopingAnim(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0);
        	case '2': LoopingAnim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
        	case '3': LoopingAnim(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
        	case '4': LoopingAnim(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
        	case '5': LoopingAnim(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
        	case '6': LoopingAnim(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /basket [1-6]");
    	}
    	return 1;
    }

    // Reloading guns
    else if(strcmp(cmd, "/reload", true) == 0 || strcmp(cmd, "/recharger", true) == 0)
    {
        if (!strlen(cmdtext[8])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /reload [deagle/smg/ak/m4]");
       	if (strcmp("deagle",cmdtext[8],true) == 0)
   	    {
   			LoopingAnim(playerid,"COLT45","colt45_reload",4.0,0,0,0,0,1);
 	    }
 	    else if (strcmp("smg",cmdtext[8],true) == 0 || strcmp("ak",cmdtext[8],true) == 0 || strcmp("m4",cmdtext[8],true) == 0)
   	    {
   			LoopingAnim(playerid,"UZI","UZI_reload",4.0,0,0,0,0,0);
 	    }
       	else msg_Client(playerid,0xEFEFF7AA,"USAGE: /reload [deagle/smg/ak/m4]");
    	return 1;
    }
    else if(strcmp(cmd, "/gwalk", true) == 0)
    {
        if (!strlen(cmdtext[6])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /gwalk [1/2]");
        var = strval(cmdtext[6]);
       	if (var == 1)
   	    {
   			LoopingAnim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
 	    }
 	    else if (var == 2)
   	    {
   			LoopingAnim(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
 	    }
       	else msg_Client(playerid,0xEFEFF7AA,"USAGE: /gwalk [1/2]");
    	return 1;
    }

    //Aiming animation
    else if(strcmp(cmd, "/aim", true) == 0)
    {
        if (!strlen(cmdtext[5])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /aim [1-.]");
    	switch (cmdtext[5])
    	{
        	case '1': LoopingAnim(playerid,"PED","gang_gunstand",4.0,1,1,1,1,1);
        	case '2': LoopingAnim(playerid,"PED","Driveby_L",4.0,0,1,1,1,1);
        	case '3': LoopingAnim(playerid,"PED","Driveby_R",4.0,0,1,1,1,1);
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /aim [1-3]");
    	}
    	return 1;
    }

    // Leaning animation
    else if(strcmp(cmd, "/lean", true) == 0)
    {
        if (!strlen(cmdtext[6])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /lean [1-2]");
    	switch (cmdtext[6])
    	{
        	case '1': LoopingAnim(playerid,"GANGS","leanIDLE",4.0,0,1,1,1,0);
        	case '2': LoopingAnim(playerid,"MISC","Plyrlean_loop",4.0,0,1,1,1,0);
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /lean [1-2]");
    	}
    	return 1;
    }

    else if(strcmp(cmd, "/run", true) == 0)
    {
		LoopingAnim(playerid,"PED","sprint_civi",floatstr(cmdtext[5]),1,1,1,1,1);
		printf("%f",floatstr(cmdtext[5]));
    	return 1;
    }

    // Clear
    else if(strcmp(cmd, "/clearanim", true) == 0) {
		 //ClearAnimations(playerid);
		 ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
         return 1;
    }

    // Strip
    else if(strcmp(cmd, "/strip", true) == 0)
    {
        if (!strlen(cmdtext[7])) return msg_Client(playerid,0xEFEFF7AA,"USAGE: /strip [A-G]");
    	switch (cmdtext[7])
    	{
        	case 'a', 'A': LoopingAnim(playerid,"STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1 );
        	case 'b', 'B': LoopingAnim(playerid,"STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1 );
        	case 'c', 'C': LoopingAnim(playerid,"STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1 );
        	case 'd', 'D': LoopingAnim(playerid,"STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1 );
        	case 'e', 'E': LoopingAnim(playerid,"STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1 );
        	case 'f', 'F': LoopingAnim(playerid,"STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1 );
        	case 'g', 'G': LoopingAnim(playerid,"STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1 );
        	default: msg_Client(playerid,0xEFEFF7AA,"USAGE: /strip [A-G]");
    	}
    	return 1;
    }

    // Bed Sleep R
    else if(strcmp(cmd, "/inbedright", true) == 0) {
		 LoopingAnim(playerid,"INT_HOUSE","BED_Loop_R",4.0,1,0,0,0,0);
         return 1;
    }
    // Bed Sleep L
    else if(strcmp(cmd, "/inbedleft", true) == 0) {
		 LoopingAnim(playerid,"INT_HOUSE","BED_Loop_L",4.0,1,0,0,0,0);
         return 1;
    }


	// START DANCING
 	else if(strcmp(cmd, "/dance", true) == 0) {

			// Get the dance style param
      		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				msg_Client(playerid,0xFF0000FF,"USAGE: /dance [style 1-4]");
				return 1;
			}
			var = strval(tmp);
			if(var < 1 || var > 4) {
			    msg_Client(playerid,0xFF0000FF,"USAGE: /dance [style 1-4]");
			    return 1;
			}

			if(var == 1) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			} else if(var == 2) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			} else if(var == 3) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			} else if(var == 4) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
			}
 	  		return 1;
	}
	
	else if(strcmp(cmd, "/cagoule", true) == 0 || strcmp(cmd, "/nomoff", true) == 0)
	{
	    if(PlayerInfo[playerid][pMask] == 0)
	   	 	{return msg_Box(playerid, "~b~", "Info", "Vous n'avez pas de Cagoule.", 5000);}
        if(PlayerInfo[playerid][pLevel] < 5)
	    	{return msg_Box(playerid, "~b~", "Info", "Vous devez être niveau 5 pour pouvoir mettre une cagoule.", 5000);}
		if(gPlayerMask[playerid] != 0)
		{
		    gPlayerMask[playerid] = 0;
			player_Mask(playerid,true);
			if(IsValidDynamic3DTextLabel(player_ID[playerid]))
				{DestroyDynamic3DTextLabel(player_ID[playerid]);}
			strmid(PlayerInfo[playerid][pName], PlayerInfo[playerid][pRealName], 0,  MAX_PLAYER_NAME+1, MAX_PLAYER_NAME+1);
			msg_Box(playerid, "~b~", "Info", "Vous avez enlever le Nom Off.", 5000);
	      	format(string, sizeof(string), "* %s retire sa cagoule.", PlayerInfo[playerid][pName]);
	      	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else
		{
		    new name[24];
			var =  1000+random(500)+random(500);
			gPlayerMask[playerid] = var;
			player_Mask(playerid,false);
			format(string,sizeof(string),"[Id d'inconnu : %d]",gPlayerMask[playerid]);
			player_ID[playerid] = CreateDynamic3DTextLabel(string,0xFFFFFF99,0,0,0.1,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
			format(name,sizeof(name),"Inconnu[%d]",gPlayerMask[playerid]);
			strmid(PlayerInfo[playerid][pName], name, 0,  MAX_PLAYER_NAME+1, MAX_PLAYER_NAME+1);
			msg_Box(playerid, "~b~", "Info", "Vous êtes en Nom Off (/nomoff pour l'afficher).", 5000);
	      	format(string, sizeof(string), "* %s met sa cagoule.", PlayerInfo[playerid][pName]);
	      	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
      	}
		return 1;
	}
	else if(strcmp(cmd, "/porter", true) == 0 || strcmp(cmd, "/accessoire", true) == 0)
	{
	    accessory_ShowDialog(playerid);
	    return 1;
	}
	else if(strcmp(cmd, "/ko", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pLevel] < 3)
	        	{msg_Client(playerid, COLOR_GREY, "Vous devez être au moins niveau 3 pour utiliser cette commande.");return 1;}
	        if(KnockedDown[playerid] == 1)
	        	{msg_Client(playerid, COLOR_GREY, "Vous ne pouvez pas frapper quand vous êtes à terre.");return 1;}
            if(PlayerInfo[playerid][pSex] == 2)
            	{msg_Client(playerid, COLOR_GREY, "Vous êtes trop faible pour frapper quelqu'un.");return 1;}
            
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
				{msg_Client(playerid, COLOR_WHITE, "USAGE: /ko [Playerid/PartOfName]");return 1;}
				
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(1.0, playerid, giveplayerid))
			        {
           				if(KnockedDown[giveplayerid] != 1)
			        	{
			        	    if(giveplayerid == playerid)
			        	    	{msg_Client(playerid, COLOR_GREY, "Vous ne pouvez pas vous frappez vous même.");return 1;}
			        	    	
			        	    if(PlayerInfo[giveplayerid][pSex] == 2)
			        	    	{msg_Client(playerid, COLOR_GREY, "Quelle Honte ! Vous avez frappez une femme !");return 1;}
			        	    	
			        	    if(IsPlayerInAnyVehicle(giveplayerid))
			        	    	{return 1;}
			        	    
			            	new rands = random(2)+1;
                            ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
							if(rands == 1)
							{
							    TogglePlayerControllable(giveplayerid, 0);
								ApplyAnimation(giveplayerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
								SetTimerEx("ClearKnock", 20000, false, "i", giveplayerid);
								KnockedDown[giveplayerid] = 1;
							}
							return 1;
						}
						else
							{msg_Client(playerid, COLOR_GREY, "Ce joueur est déjà KO.");}
			        }
			        else
			        	{msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas près de vous.");}
			    }
			}

		}
		return 1;
	}
	else if(strcmp(cmd, "/porte", true) ==0)
	{
        new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /porte <mot de passe>");}
			
  		gate_Check(playerid,0,result);
	    return 1;
	}
	else if(strcmp(cmd, "/debug", true) ==0)
	{
	    server_SetPlayerVirtualWorld(playerid,0);
	    server_SetPlayerInterior(playerid,0);
	    msg_Box(playerid, "~b~", "Info", "Votre intérieur et monde virtuel ont été mis à 0.", 5000);
	    return 1;
	}
   	else if(strcmp(cmd, "/trailer", true) ==0)
	{
	    if(gPlayerTrailer[playerid] == 0)
	    {
	        gPlayerTrailer[playerid]=1;
	        payday_HideTexts(playerid);
			job_HideTexts(playerid);
			speedometer_Hide(playerid);
			PlayerTextDrawHide(playerid, TextVie[playerid]);
			PlayerTextDrawHide(playerid, TextArmure[playerid]);
			TextDrawHideForPlayer(playerid, DisigFaim1);
			TextDrawHideForPlayer(playerid, DisigFaim2);
			PlayerTextDrawHide(playerid, BarUpdateFaim[playerid]);
			PlayerTextDrawHide(playerid, TextFaim[playerid]);
			TextDrawHideForPlayer(playerid, DisigSoif1);
			TextDrawHideForPlayer(playerid, DisigSoif2);
			PlayerTextDrawHide(playerid, BarUpdateSoif[playerid]);
			PlayerTextDrawHide(playerid, TextSoif[playerid]);
			PlayerTextDrawHide(playerid,zoneLocation[playerid]);
			DestroyDynamic3DTextLabel(player_ID[playerid]);
		}
		else
		{
		    if(IsPlayerInAnyVehicle(playerid))
		        {speedometer_Show(playerid);}
		    gPlayerTrailer[playerid]=0;
		    stats_Show(playerid);
		    PlayerTextDrawShow(playerid,zoneLocation[playerid]);
		    //format(string,sizeof(string),"[Id : %i]",playerid);
	    	//player_ID[playerid] = CreateDynamic3DTextLabel(string,0xFFFFFF99,0,0,0.1,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);

		}
		return 1;
	}
	else if(strcmp(cmd, "/epouser", true) ==0 || strcmp(cmd, "/épouser", true) ==0)
	{
	    if(!IsPlayerInRangeOfPoint(playerid,3.0,1964.0453,-368.9279,1093.7289))
	        {return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas dans l'église.", 5000);}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /epouser <id/joueur>");}
	    giveplayerid = ReturnUser(tmp);
	    if(giveplayerid == playerid)
			{return msg_Box(playerid, "~b~", "Info", "Vous ne pouvez pas vous marier vous même.", 5000);}
	    if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
			{return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas connecté.", 5000);}
		if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 3)
		    {return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas à côté de vous.", 5000);}
		    
		format(string,sizeof(string),"Vous avez demandé %s en marriage.",PlayerInfo[giveplayerid][pRealName]);
        msg_Box(playerid, "~b~", "Info", string, 7000);
        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s vous demande en marriage. (/accepter marriage pour accepter)",PlayerInfo[playerid][pRealName]);
        msg_Client(giveplayerid,COLOR_INFO,string);
        MariageOffer[giveplayerid]=playerid;
		return 1;
	}
	else if(strcmp(cmd, "/donner", true) ==0)
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
		    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /donner <nom> <id/joueur>");
			return msg_Client(playerid, COLOR_WHITE, "{FFFFB2} arme - objet - argent");
		}
		if(strcmp(tmp, "objet", true) ==0)
		{
		    tmp = strtok(cmdtext, idx);
	        giveplayerid = ReturnUser(tmp);
	        if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas connecté.", 5000);}
			if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 5 || WatchingTV[giveplayerid] == 1)
			    {return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas à côté de vous.", 5000);}
		    new tmpstring[40], sacstring[512]="{FFFFFF}Objet\t{FFFFFF}Quantité\n";
			for(new i=0; i<gPlayerInventory[playerid]; i++)
			{
				format(tmpstring,sizeof(tmpstring),"%s\t%d\n",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
		        strins(sacstring,tmpstring,strlen(sacstring),sizeof(sacstring));
			}
			ShowPlayerDialog(playerid,70,DIALOG_STYLE_TABLIST_HEADERS, "» Donner «", sacstring, "Valider","Annuler");
			player_SellOffer[playerid]=giveplayerid; player_SellOther[playerid]=0;
		}
		else if(strcmp(tmp, "arme", true) ==0)
		{
		    if(police_Duty[playerid]==1 || gouv_Duty[playerid] == 1)
	    		{return msg_Box(playerid, "~b~", "Faction", "Impossible de donner vos armes de service.", 5000);}
		    if(GetPlayerWeapon(playerid) == 0)
		        {return msg_Box(playerid, "~b~", "Info", "Aucune arme en main.", 5000);}

			tmp = strtok(cmdtext, idx);
			giveplayerid = ReturnUser(tmp);
	        if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas connecté.", 5000);}
			if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 5 || WatchingTV[giveplayerid] == 1)
			    {return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas à côté de vous.", 5000);}
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /donner arme <id/joueur> <munitions>");}
			var=strval(tmp);
			if(var <0 || var > GetPlayerAmmo(playerid))
				{return msg_Box(playerid, "~b~", "Info", "Erreur dans le montant.", 5000);}

			new ammo2 = GetPlayerAmmo(playerid)-var;
			new wep = GetPlayerWeapon(playerid);
			if(IsABadWeapon(wep))
			    {msg_Box(playerid, "~b~", "Info", "Arme non autorisée.", 5000); RemovePlayerWeapon(playerid,wep); return 1;}
			RemovePlayerWeapon(playerid,wep);
			SafeGivePlayerWeapon(giveplayerid,wep,var);
			SafeGivePlayerWeapon(playerid, wep, ammo2);
			format(string, sizeof(string), "* %s sort une arme et la donne à %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(strcmp(tmp, "argent", true) ==0)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /donner argent <id/joueur> <montant>");}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /donner argent <id/joueur> <montant>");}
			var = strval(tmp);
			if(var < 1 || var > PlayerInfo[playerid][pCash])
				{return msg_Box(playerid, "~b~", "Info", "Vous n'avez pas cette somme.", 5000);}

			if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas connecté.", 5000);}
		 	new Float:x, Float:y, Float:z;
     		GetPlayerPos(giveplayerid,x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 5, x, y, z) || WatchingTV[giveplayerid] == 1)
			    {return msg_Box(playerid, "~b~", "Info", "Ce joueur n'est pas à côté de vous.", 5000);}

			format(string, sizeof(string),"Pay du joueur %s",PlayerInfo[playerid][pName]);
			SafeGivePlayerMoney(giveplayerid, var,string);
			format(string, sizeof(string),"Pay au joueur %s",PlayerInfo[giveplayerid][pName]);
			SafeGivePlayerMoney(playerid, -var,"");
			format(string, sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez reçu $%d de %s.",var,PlayerInfo[playerid][pName]);
			msg_Client(giveplayerid,COLOR_INFO,string);
            format(string, sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez donné $%d à %s.",var,PlayerInfo[giveplayerid][pName]);
			msg_Box(playerid, "~b~", "Info", string, 7000);
			ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
		}
		return 1;
	}
    else if(strcmp(cmd, "/banderyeux", true) == 0 || strcmp(cmd, "/bailloner", true) == 0 || strcmp(cmd, "/bander", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
	        	{msg_Client(playerid, COLOR_WHITE, "USAGE: /banderyeux [playerid/PartOfName]");return 1;}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { return 1; }
			        if(BlindFold[giveplayerid] == 0)
			        {
			        	if(PlayerTied[giveplayerid] == 1)
			        	{
			            	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid))
	        				{
               					msg_Client(playerid, COLOR_GREY, "Vous devez être dans le même véhicule que la personne à qui vous voulez bander les yeux!");
        						return 1;
	        				}
	        				SetPlayerCameraPos(giveplayerid, 2000,-2000,2000);
							SetPlayerCameraLookAt(giveplayerid, 2000,-2000,2000);
			            	BlindFold[giveplayerid] = 1;
			            	format(string, sizeof(string), "* %s met un bandeau sur les yeux de %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			        	}
			        	else
			        	{
			            	msg_Client(playerid, COLOR_GREY, "Le joueur doit être ligotté avant!");
							return 1;
						}
					}
					else
					{
					    new Float:x, Float:y, Float:z;
					    GetPlayerPos(giveplayerid,x,y,z);
					    if(PlayerToPoint(5, playerid, x, y, z))
					    {
					        SetCameraBehindPlayer(giveplayerid);
					    	BlindFold[giveplayerid] = 0;
					    	format(string, sizeof(string), "* %s enleve le foulard des yeux de %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);

						}
						else
						{
						    msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas près de vous!");
						    return 1;
						}
					}
			    }
			}
	    }
	    return 1;
	}
 	else if(strcmp(cmd, "/+1", true) == 0)
 	{
		if(PlayerInfo[playerid][pMember] > 4 || PlayerInfo[playerid][pMember] < 1)
		    {return 1;}
		if(PlayerToPoint(1.0,playerid,210.1814,62.0021,1105.6499))
			{SafeSetPlayerPos(playerid, 1565.0078,-1663.8328,28.3956);}
        else if(PlayerToPoint(1.0,playerid,-1611.2024,691.5895,14.4749))
			{SafeSetPlayerPos(playerid, -1663.3287,689.3226,24.8906);}
        else if(PlayerToPoint(1.0,playerid,617.9194,-540.5110,2997.5996))
			{SafeSetPlayerPos(playerid, 621.3574,-569.6011,26.1432);}
		SetPlayerFacingAngle(playerid, 0);
		GameTextForPlayer(playerid, "~w~Toit du Commisariat",5000,1);
		server_SetPlayerInterior(playerid,0);
		return 1;
 	}
 	else if(strcmp(cmd, "/-1", true) == 0)
 	{
 	    if(PlayerInfo[playerid][pMember] > 4 || PlayerInfo[playerid][pMember] < 1)
		    {return 1;}
        if(PlayerToPoint(1.0,playerid,210.1814,62.0021,1105.6499))
			{SafeSetPlayerPos(playerid, 1524.4834,-1677.8984,6.2188);}
        else if(PlayerToPoint(1.0,playerid,-1611.2024,691.5895,14.4749))
			{SafeSetPlayerPos(playerid, -1606.3068,672.0677,-4.9063);}
        else if(PlayerToPoint(1.0,playerid,617.9194,-540.5110,2997.5996))
			{SafeSetPlayerPos(playerid, 611.0023,-583.8382,18.0547);}
		SetPlayerFacingAngle(playerid, 0);
		GameTextForPlayer(playerid, "~w~Garage du Commisariat",5000,1);
		server_SetPlayerInterior(playerid,0);
		return 1;
	}
    else if(strcmp(cmd, "/sac", true) == 0 || strcmp(cmd, "/inv", true) == 0 || strcmp(cmd, "/inventaire", true) == 0)
    {
        if(PlayerInfo[playerid][pBag] == 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de sac, allez en acheter un dans un magasin de vêtements.");}
        if(PlayerInfo[playerid][pJailed] != 0)
			{return msg_Client(playerid, COLOR_STATS, "{969696}» Sac «{FFFFFF} Votre sac a été vidé à l'entrée en prison !");}
		if(IsPlayerInAnyVehicle(playerid))
			{return msg_Client(playerid, COLOR_STATS, "{969696}» Sac «{FFFFFF} Impossible dans un véhicule.");}
		    
        tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /sac <nom>");
			return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} voir - arme - poser - prendre - afficher");
		}
		if(strcmp(tmp,"voir",true) == 0)
		{
			if(bag[playerid][statut]==1)
			{
			   if(!PlayerToPoint(1.5,playerid,bag[playerid][pos][0],bag[playerid][pos][1],bag[playerid][pos][2]))
			    	{return msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Vous n'êtes pas à côté de votre sac.");}
			}
			new tmpstring[40], sacstring[512];
			var=0;
			for(new i=0; i<gPlayerInventory[playerid]; i++)
			{
			    if(PlayerInfo[playerid][pInvModel][i] != -1)
		    	{
					format(tmpstring,sizeof(tmpstring),"%s : [%d]",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
	                strins(sacstring,tmpstring,strlen(sacstring),sizeof(sacstring));
					if(var == 0)
						{strins(sacstring," - ",strlen(sacstring),sizeof(sacstring));var++;}
	                else if(var == 1)
						{strins(sacstring,"\n",strlen(sacstring),sizeof(sacstring));var=0;}
				}
			}
			if(strlen(tmpstring)==0)
	        	{return msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Votre sac est vide.");}
			ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, "{969696}» Sac «{FFFFFF} Info", sacstring, "Valider","");
		}
		else if(strcmp(tmp,"afficher",true) == 0)
		{
			if(bag[playerid][statut]==1)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez avoir votre sac sur vous.");}
					
			if(bag[playerid][show] ==0)
            	{RemovePlayerAttachedObject(playerid,BagSlotObject[playerid]);bag[playerid][show]=1;}
			else if(bag[playerid][show] == 1)
			    {bag[playerid][show]=0;bag_Load(playerid);}
		}
		else if(strcmp(tmp,"arme",true) == 0)
		{
			if(police_Duty[playerid] != 0)
				{return msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Impossible en duty.");}
			if(bag[playerid][statut]==1)
			{
			    if(!PlayerToPoint(1.5,playerid,bag[playerid][pos][0],bag[playerid][pos][1],bag[playerid][pos][2]))
			    	{return msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Vous n'êtes pas à côté de votre sac.");}
			}
			new slots=4;
			if(PlayerInfo[playerid][pBag]>=2)slots++;
			if(PlayerInfo[playerid][pBag]==3)slots++;
			new tmpstring[128];
			strins(string,"{FFFFFF}Slot\t{FFFFFF}Arme\t{FFFFFF}Balle(s)\n",strlen(string),sizeof(string));
			for(new i=0;i<slots; i++)
		    {
		        if(PlayerInfo[playerid][pInvWeapon][i] != 0)
		        {
				    format(tmpstring,sizeof(tmpstring),"{0000FF}%d{FFFFFF}\t%s\t%d\n",i+1,GetWepName(PlayerInfo[playerid][pInvWeapon][i]),PlayerInfo[playerid][pInvAmmo][i]);
					strins(string,tmpstring,strlen(string),sizeof(string));
				}
		        else
		        {
		            format(tmpstring,sizeof(tmpstring),"{0000FF}%d{FFFFFF}\tVide\t/\n",i+1);
				    strins(string,tmpstring,strlen(string),sizeof(string));
				}
		    }
	   		ShowPlayerDialog(playerid,92,DIALOG_STYLE_TABLIST_HEADERS, "{969696}» Sac «{FFFFFF} Arme", string, "Valider", "Annuler");
		}
		else if(strcmp(tmp,"poser",true) == 0)
		{
			if(bag[playerid][statut]==1)
				{return msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Votre sac est déjà à terre.");}
			        
			new Float:x,Float:y,Float:z,Float:a;
		 	GetPlayerPos(playerid,x,y,z);
			GetPlayerFacingAngle(playerid,a);
			RemovePlayerAttachedObject(playerid,BagSlotObject[playerid]);
			bag[playerid][pos][0]=x;
			bag[playerid][pos][1]=y;
			bag[playerid][pos][2]=z;
			bag[playerid][pos][3]=a;
			bag[playerid][statut]=1;
			bag_Object[playerid]= CreateDynamicObject(3026,x,y,z-1,270,0,a,-1,-1,-1,STREAM_DISTANCE);
			bag_Label[playerid]= CreateDynamic3DTextLabel("[C]",0xFFFF00F6, x,y+0.2,z-0.8,4,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
			if(PlayerInfo[playerid][pBag] == 1)
				{SetDynamicObjectMaterial(bag_Object[playerid],0,-1,"none","none",-16730675);}
            else if(PlayerInfo[playerid][pBag] == 2)
				{SetDynamicObjectMaterial(bag_Object[playerid],0,-1,"none","none",-8092540);}
            else if(PlayerInfo[playerid][pBag] == 3)
			    {SetDynamicObjectMaterial(bag_Object[playerid],0,-1,"none","none",HexToInt("0xFFFF0000"));}
			msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Vous avez posé votre sac à terre. (/sac prendre)");
		}
		else if(strcmp(tmp,"prendre",true) == 0)
		{
			if(bag[playerid][statut]!=1)
				{return msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Votre sac n'est pas à terre.");}
            if(!PlayerToPoint(1.5,playerid,bag[playerid][pos][0],bag[playerid][pos][1],bag[playerid][pos][2]))
				{return msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Vous n'êtes pas à côté de votre sac.");}

           	bag[playerid][pos][0]=0.0;
			bag[playerid][pos][1]=0.0;
			bag[playerid][pos][2]=0.0;
			bag[playerid][pos][3]=0.0;
			bag[playerid][statut]=0;
			if(IsValidDynamicObject(bag_Object[playerid]))
				{DestroyDynamicObject(bag_Object[playerid]);}
			if(IsValidDynamic3DTextLabel(bag_Label[playerid]))
				{DestroyDynamic3DTextLabel(bag_Label[playerid]);}
			bag_Load(playerid);
			msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Vous avez ramassé votre sac.");
		}
		else
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /sac <nom>");
			return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} voir - arme - poser - prendre");
		}
    }
	else if(strcmp(cmd, "/ceinture", true) == 0)
	{
	    var = GetVehicleModel(idcar);
	    if(!IsPlayerInAnyVehicle(playerid))
	    	{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être dans un véhicule pour pouvoir utiliser cette commande!");}
		if(IsABike(idcar) || IsAMoto(idcar) || IsABoat(idcar) || var == 509 || var == 481 || var == 510 || var == 462)
			{return msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule n'a pas de ceinture.");}
	    if(ceinture[playerid] == 0)
	        {ceinture[playerid] = 1;format(string, sizeof(string), "* %s met sa ceinture.", PlayerInfo[playerid][pName]); msg_Box(playerid, "~b~", "Info", "Vous avez mis votre ceinture.", 5000);}
		else if(ceinture[playerid] == 1)
			{ceinture[playerid] = 0;format(string, sizeof(string), "* %s enleve sa ceinture.", PlayerInfo[playerid][pName]); msg_Box(playerid, "~b~", "Info", "Vous avez enlevé votre ceinture.", 5000);}
		SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
		return 1;
	}
	else if(strcmp(cmd, "/casque", true) == 0)
	{
	    if(inventory_GetItemQuantity(playerid,18645) <= 0 && inventory_GetItemQuantityIn(playerid,18976,18979) <= 0)
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de casque.");}
		if(casque[playerid] == 0)
		{
	        SetTimerEx("anime_Casque", 5500, 0, "i", playerid);
	        TogglePlayerControllable(playerid,false);
	        casque[playerid] = 2;
	        LoopingAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
	      	format(string, sizeof(string), "* %s met son casque.", PlayerInfo[playerid][pName]);
	      	msg_Box(playerid, "~b~", "Info", "Vous avez mis votre casque.", 5000);
		}
		else if(casque[playerid] == 1)
		{
			casque[playerid] = 0;
			RemovePlayerAttachedObject(playerid, HelmetSlotObject[playerid]);
	    	format(string, sizeof(string), "* %s enleve son casque.", PlayerInfo[playerid][pName]);
	    	msg_Box(playerid, "~b~", "Info", "Vous avez enlvé votre casque.", 5000);
		}
	    SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
        return 1;
	}
	else if(strcmp(cmd, "/accepter", true) == 0 || strcmp(cmd, "/acc", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
	    if(strcmp(tmp,"serrermain",true) == 0)
		{
  			if(HandshakeOffer[playerid] != -1 && IsPlayerConnected(HandshakeOffer[playerid]))
			{
				if(IsPlayerInAnyVehicle(playerid))
			    	{return msg_Client(playerid, COLOR_LIGHTBLUE, "» Animation « Impossible dans un véhicule.");}
			    if(!ProxDetectorS(2.0, playerid, HandshakeOffer[playerid]))
					{return msg_Client(playerid, COLOR_LIGHTBLUE, "» Animation « Vous n'êtes pas à côté du joueur.");}
				format(string, sizeof(string), "» Animation « Vous avez serré la main de %s.", PlayerInfo[HandshakeOffer[playerid]][pName]);
				msg_Client(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "» Animation « %s a accepté de vous serrer la main.", PlayerInfo[playerid][pName]);
				msg_Client(HandshakeOffer[playerid], COLOR_LIGHTBLUE, string);
				ClearAnimations(playerid);ClearAnimations(HandshakeOffer[playerid]);
				SetPlayerFacingPlayer(playerid, HandshakeOffer[playerid]);
				SetPlayerFacingPlayer(HandshakeOffer[playerid], playerid);
				switch(HandshakeType[playerid])
				{
				    case 1:
				        {ApplyAnimation(playerid, "GANGS","hndshkaa", 4.0,0,0,0,0,0);ApplyAnimation(HandshakeOffer[playerid],"GANGS","hndshkaa",4.0,0,0,0,0,0);}
					case 2:
					    {ApplyAnimation(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);ApplyAnimation(HandshakeOffer[playerid],"GANGS","hndshkba",4.0,0,0,0,0,0);}
					case 3:
					    {ApplyAnimation(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);ApplyAnimation(HandshakeOffer[playerid],"GANGS","hndshkda",4.0,0,0,0,0,0);}
					case 4:
					    {ApplyAnimation(playerid,"GANGS","hndshkea",4.0,0,0,0,0,0);ApplyAnimation(HandshakeOffer[playerid],"GANGS","hndshkea",4.0,0,0,0,0,0);}
					case 5:
					    {ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);ApplyAnimation(HandshakeOffer[playerid],"GANGS","hndshkfa",4.0,0,0,0,0,0);}
					case 6:
						{ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);ApplyAnimation(HandshakeOffer[playerid],"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);}
				}
				HandshakeOffer[playerid] = -1; HandshakeType[playerid] = 0;
				return 1;
			}
			else
				{return msg_Client(playerid, COLOR_LIGHTBLUE, "» Animation « Personne ne vous à proposer de serrer votre main.");}
		}
		else if(strcmp(tmp,"embrasser",true) == 0)
		{
			if(KissOffer[playerid] != -1 && IsPlayerConnected(KissOffer[playerid]))
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    	{return msg_Client(playerid, COLOR_LIGHTBLUE, "» Animation « Impossible dans un véhicule.");}
			    if(!ProxDetectorS(2.0, playerid, KissOffer[playerid]))
					{return msg_Client(playerid, COLOR_LIGHTBLUE, "» Animation « Vous n'êtes pas à côté du joueur.");}
				format(string, sizeof(string), "» Animation « Vous avez embrassé %s.", PlayerInfo[KissOffer[playerid]][pName]);
				msg_Client(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "» Animation « %s a accepté de vous embrasser.", PlayerInfo[playerid][pName]);
				msg_Client(KissOffer[playerid], COLOR_LIGHTBLUE, string);
				ClearAnimations(playerid);ClearAnimations(KissOffer[playerid]);
				SetPlayerFacingPlayer(playerid, KissOffer[playerid]);
				SetPlayerFacingPlayer(KissOffer[playerid], playerid);
				LoopingAnim(KissOffer[playerid], "KISSING", "Grlfrd_Kiss_02", 3.0, 0, 0, 0, 0, 0);
				KissOffer[playerid] = -1;
				return 1;
			}
			else
				{return msg_Client(playerid, COLOR_LIGHTBLUE, "» Animation « Personne ne vous à proposer de vous embrasser.");}
		}
		else if(strcmp(tmp,"mort",true) == 0)
		{
			if(gServerMedics < 1)
			{
				if(medic_PlayerNeedMedic[playerid] == 1 && medic_PlayerMedicTime[playerid] !=0)
				    {SafeSetPlayerHealth(playerid,0);}
				else
				    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas blessé.");}
			}
			else
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Les urgences sont en route pour vous secourir.");}
		}
		else if(strcmp(tmp,"marriage",true) == 0 || strcmp(tmp,"mariage",true) == 0)
		{
		    if(MariageOffer[playerid] == -1)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Personne ne vous a demandé en marriage.");}

            format(string,sizeof(string),"» Un marriage a lieu à %s !",GetCityName(interiors[GetPlayerVirtualWorld(playerid)-1][city]));
	        msg_City(interiors[GetPlayerVirtualWorld(playerid)-1][city],COLOR_WHITE,string);
            MariageOffer[MariageOffer[playerid]]=playerid;
			new tmpId = player_IsAtNpcPoint(playerid,4,5.0);
			MariageBot[playerid] = tmpId; MariageBot[MariageOffer[playerid]] = tmpId;
			ApplyAnimation(tmpId,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
			ProxDetector(30.0, tmpId, "Prêtre: Nous sommes aujourd'hui réuni dans ces lieux pour unir cet homme et cette femme par les liens du marriage.", COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
			SetActorChatBubble(tmpId,"Nous sommes aujourd'hui réuni dans ces lieux pour unir cet homme et cette femme par les liens du marriage.",0xFFFFFFDD,NAME_DISTANCE,5000);
			SafeSetPlayerPos(playerid,1963.0883,-369.1959,1093.7289);
			SetPlayerFacingAngle(playerid,270.0);
			SafeSetPlayerPos(MariageOffer[playerid],1965.2607,-369.1674,1093.7289);
			SetPlayerFacingAngle(MariageOffer[playerid],90.0);
			TogglePlayerControllable(playerid,false);
			TogglePlayerControllable(MariageOffer[playerid],false);
			SetTimerEx("mariage_Step",5000,0,"dddd",MariageOffer[playerid],playerid,tmpId,1);
		}
		else if(strcmp(tmp,"pizza",true) == 0)
		{
		    if(player_SellId[playerid]!=2543)
		        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Personne ne vous a proposé de pizza.");}
		        
			SafeGivePlayerMoney(playerid,-player_SellOther[playerid],"Achat pizza");
			PlayerInfo[player_SellOffer[playerid]][pJobBonus]+=player_SellOther[playerid];
			inventory_UpdateItem(playerid,19571,1);
			format(string,sizeof(string),"Vous avez vendu une pizza à %s pour $%d.",PlayerInfo[playerid][pName],player_SellOther[playerid]);
   			msg_Client(player_SellOffer[playerid],COLOR_JOB,string);
   			format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez acheté une pizza à %s pour $%d. (/utiliser aliment)",PlayerInfo[player_SellOffer[playerid]][pName],player_SellOther[playerid]);
   			msg_Client(playerid,COLOR_INFO,string);
   			player_SellOffer[playerid]=0; player_SellId[playerid]=-1; player_SellOther[playerid]=0;
		}
		return 1;
	}
	else if(strcmp(cmd, "/serrermain", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /serrermain <id/joueur> <1-6>");}
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /serrermain <id/joueur> <1-6>");}
		var = strval(tmp);
		if(var < 1 || var > 6)
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /serrermain <id/joueur> <1-6>");}
		if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas prêt de vous.");}
		if(!ProxDetectorS(2.0, playerid, giveplayerid))
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas prêt de vous.");}
		if(giveplayerid == playerid)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous serrez votre propre main !");}

		format(string, sizeof(string), "» Animation « Vous proposez à %s de lui serrer la main.", PlayerInfo[giveplayerid][pName]);
		msg_Client(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "» Animation « %s vous propose de serrer votre main. (Utilisez /accepter serrermain pour accepter.)", PlayerInfo[playerid][pName]);
		msg_Client(giveplayerid, COLOR_LIGHTBLUE, string);
		HandshakeOffer[giveplayerid] = playerid; HandshakeType[giveplayerid] = var;
		return 1;
	}
	else if(strcmp(cmd, "/embrasser", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /embrasser <id/joueur>");}

		giveplayerid = ReturnUser(tmp);
        if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté.");}
		if(!ProxDetectorS(2.0, playerid, giveplayerid))
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas prêt de vous.");}
		if(giveplayerid == playerid)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous embrassez vous même !");}

		format(string, sizeof(string), "» Animation « Vous proposez à %s de l'embrasser.", PlayerInfo[giveplayerid][pName]);
		msg_Client(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "» Animation « %s vous propose de vous embrasser. (Utilisez /accepter embrasser pour accepter.)", PlayerInfo[playerid][pName]);
		msg_Client(giveplayerid, COLOR_LIGHTBLUE, string);
		KissOffer[giveplayerid] = playerid;
	    return 1;
	}
	else if(strcmp(cmd, "/fumer", true) == 0 || strcmp(cmd, "/fummer", true) == 0)
	{
	    if(IsSmoking[playerid] > 0)
     		{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous êtes déjà en train de fumer.");}
	    if(inventory_GetItemQuantity(playerid,2351) <= 0)
	        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de briquet.");}
	    if(inventory_GetItemQuantity(playerid,19897) <= 0)
	        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de cigarette.");}
		var = random(4)+1;
  		if(var == 1)
		{
		    inventory_UpdateItem(playerid,2351,-1);
			format(string, sizeof(string), "* %s prend un briquet et une cigarette et essaye d'allumer sa cigarette mais n'y arrive pas.", PlayerInfo[playerid][pName]);
		}
		else
		{
		    LoopingAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
		    inventory_UpdateItem(playerid,2351,-1); inventory_UpdateItem(playerid,19897,-1);
		    format(string, sizeof(string), "* %s prend un briquet et une cigarette et allume sa cigarette.", PlayerInfo[playerid][pName]);
		    IsSmoking[playerid] = 60;
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
			msg_Client(playerid, COLOR_WHITE, "» Conseil « Vous pouvez /jettercigarette ou /fumeranim.");
		}
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		return 1;
	}
	else if(strcmp(cmd, "/jettercigarette", true) == 0)
	{
	    if(IsSmoking[playerid] <= 0)
    		{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes pas en train de fumer.");}
	    IsSmoking[playerid] = 0;
	    format(string, sizeof(string), "* %s jette et écrase son mégot par terre.", PlayerInfo[playerid][pName]);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	    if(UsingSmokeAnim[playerid] == 1)
	        {ClearAnimations(playerid); SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);}
		return 1;
	}
	else if(strcmp(cmd, "/fumeranim", true) == 0)
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
	    	{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être à pied.");}
	    if(IsSmoking[playerid] == 0)
	    	{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes pas en train de fumer.");}
	    UsingSmokeAnim[playerid] = 1;
	    ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	    return 1;
	}
//------------------------------[ CANNAUX ]-------------------------------------
	else if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
		if ((gServerOOC) && PlayerInfo[playerid][pAdmin] < 1)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Le canal OOC a été désactivé par un Administrateur.");}
		if(gPlayerMuteOOC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/o)oc <texte>");}
		format(string, sizeof(string), "(([OOC] %s : {FFFFFF}%s{009BFF} ))" , PlayerInfo[playerid][pRealName], result);
		msg_OOC(0x009BFFFF,string);
		return 1;
	}
	else if(strcmp(cmd, "/noooc", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 && (!gServerOOC))
		{
			gServerOOC = 1;
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Le canal OOC a été désactivé par un Administrateur.");
			msg_Admin(COLOR_RED,string,1);
		}
		else if (PlayerInfo[playerid][pAdmin] >= 1 && (gServerOOC))
		{
			gServerOOC = 0;
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Le canal OOC a été activé par un Administrateur.");
		 	msg_Admin(COLOR_RED,string,1);
		}
		else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
		return 1;
	}
	else if(strcmp(cmd, "/noaide", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 && (!gServerHelp))
		{
			gServerHelp = 1;
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Le canal aide a été désactivé par un Administrateur.");
			msg_Admin(COLOR_RED,string,1);
		}
		else if (PlayerInfo[playerid][pAdmin] >= 1 && (gServerHelp))
		{
			gServerHelp = 0;
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Le canal aide a été activé par un Administrateur.");
		 	msg_Admin(COLOR_RED,string,1);
		}
		else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
		return 1;
	}
	else if(strcmp(cmd, "/nob", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2 && (!gServerBas))
		{
			gServerBas = 1;
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Le canal /b a été désactivé par un Administrateur.");
			msg_Admin(COLOR_RED,string,1);
		}
		else if (PlayerInfo[playerid][pAdmin] >= 2 && (gServerBas))
		{
			gServerBas = 0;
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Le canal /b a été activé par un Administrateur.");
			msg_Admin(COLOR_RED,string,1);
		}
		else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
		return 1;
	}
	else if(strcmp(cmd, "/ao", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 1)
			{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/ao) <texte>");}

		switch(PlayerInfo[playerid][pAdmin])
		{
		    case 1,2:
		        {format(string, sizeof(string), "{009100}[%s] %s:{00D300} %s " ,GetAdminName(PlayerInfo[playerid][pAdmin]), PlayerInfo[playerid][pRealName], result);}
			case 3:
			    {format(string, sizeof(string), "{FF0005}[%s] %s:{FF5C5B} %s " ,GetAdminName(PlayerInfo[playerid][pAdmin]), PlayerInfo[playerid][pRealName], result);}
			case 4:
			    {format(string, sizeof(string), "{9A0000}[%s] %s:{CD0000} %s " ,GetAdminName(PlayerInfo[playerid][pAdmin]), PlayerInfo[playerid][pRealName], result);}
		}
		msg_OOC(COLOR_WHITE,string);
	    return 1;
	}
	else if(strcmp(cmd, "/mooc", true) == 0 || strcmp(cmd, "/mo", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 1)
			{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/mo)oc <texte>");}
		format(string, sizeof(string), "[MOOC] %s %s: %s " ,GetAdminName(PlayerInfo[playerid][pAdmin]), PlayerInfo[playerid][pRealName], result);
        msg_OOC(0x62B382AA,string);
		return 1;
	}
	else if(strcmp(cmd, "/nouveau", true) == 0 || strcmp(cmd, "/n", true) == 0 || strcmp(cmd, "/noob", true) == 0)
	{
	    if(gPlayerMuteOOC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}
			
        if ((gServerHelp) && PlayerInfo[playerid][pAdmin] < 1)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Le canal aide a été désactivé par un Administrateur.");}
			
		if(inscription_Step[playerid] != 0)
		    {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Impossible pendant l'inscription.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/n)ouveau <texte>");}
		new arank[42];
		if(PlayerInfo[playerid][pAdmin] >= 1) { format(arank,sizeof(arank),"{FF0000}%s{FFFFFF}",GetAdminName(PlayerInfo[playerid][pAdmin]));}
        else if(PlayerInfo[playerid][pHelper] == 1) { arank = "{AA00FF}Helpeur{FFFFFF}"; }
        else if(PlayerInfo[playerid][pLevel] == 1) { arank = "{FFFFFF}Débutant{FFFFFF}"; }
		else { arank = "Modérateur"; }
   		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] == 1 || PlayerInfo[playerid][pLevel] == 1)
		{
			format(string, sizeof(string), "{00D7FF}[Cannal Aide]{FFFFFF} [%d] %s %s : %s ", playerid, arank, PlayerInfo[playerid][pRealName], result);
			msg_Newbie(COLOR_WHITE, string);
			return 1;
		}
		else
   			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes pas Level 1 ou V.I.P/Helpeur.");}
	}
    else if(strcmp(cmd, "/moi", true) ==0 || strcmp(cmd, "/me", true) == 0)
	{
	    if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /me <action>");}
		format(string, sizeof(string), "* %s %s", PlayerInfo[playerid][pName], result);
		ProxDetector(40.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		log_Chat(string);
		return 1;
	}
    else if(strcmp(cmd, "/fait", true) == 0 || strcmp(cmd, "/do", true) == 0 || strcmp(cmd, "/faire", true) == 0)
	{
	    if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /do <action>");}
		format(string, sizeof(string), "* %s (( %s ))", result, PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		log_Chat(string);
		return 1;
	}
	else if(strcmp(cmd, "/b", true)==0 || strcmp(cmd, "/(", true)==0)//local ooc
	{
		if ((gServerBas) && PlayerInfo[playerid][pAdmin] < 1)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Le canal /b a été désactivé par un Administrateur.");}
	    if(gPlayerMuteOOC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /b <message>");}
		format(string, sizeof(string), "(( %s : %s ))", PlayerInfo[playerid][pName], result);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,true);
		log_Chat(string);
		return 1;
	}
	else if(strcmp(cmd, "/bas", true)==0||strcmp(cmd, "/vb", true)==0||strcmp(cmd, "/voixbasse", true) == 0)
	{
	    if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /bas <texte>");}
		format(string, sizeof(string), "[Voix basse] %s : %s", PlayerInfo[playerid][pName], result);
		ProxDetector(6.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,true);
		log_Chat(string);
		return 1;
	}
    else if(strcmp(cmd, "/crier", true)==0||strcmp(cmd, "/c", true)==0||strcmp(cmd, "/s", true) == 0)
	{
	    if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/c)rier <texte>");}
		if(gPlayerInInterior[playerid] != -1)
		{
		    format(string, sizeof(string), "[Interieur] %s %s crie : %s !!",prefix[playerid], PlayerInfo[playerid][pName], result);
		    ProxDetectorPoint(5.0, interiors[gPlayerInInterior[playerid]][pos][0], interiors[gPlayerInInterior[playerid]][pos][1], interiors[gPlayerInInterior[playerid]][pos][2], string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		}
		else if(gPlayerInBizz[playerid] != -1)
		{
		    format(string, sizeof(string), "[Biz] %s %s crie : %s !!",prefix[playerid], PlayerInfo[playerid][pName], result);
		    ProxDetectorPoint(5.0, bizz[gPlayerInBizz[playerid]][pos][0], bizz[gPlayerInBizz[playerid]][pos][1], bizz[gPlayerInBizz[playerid]][pos][2], string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		}
		else if(gPlayerInSBizz[playerid] != -1)
		{
		    format(string, sizeof(string), "[Biz] %s %s crie : %s !!",prefix[playerid], PlayerInfo[playerid][pName], result);
		    ProxDetectorPoint(5.0, sbizz[gPlayerInSBizz[playerid]-1000][ubEntrance_x], sbizz[gPlayerInSBizz[playerid]-1000][ubEntrance_y], sbizz[gPlayerInSBizz[playerid]-1000][ubEntrance_z], string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		}
		else if(gPlayerInGarage[playerid] != -1)
		{
		    format(string, sizeof(string), "[Garage] %s %s crie : %s !!",prefix[playerid], PlayerInfo[playerid][pName], result);
		    ProxDetectorPoint(5.0, garage[gPlayerInGarage[playerid]][pos][0], garage[gPlayerInGarage[playerid]][pos][1], garage[gPlayerInGarage[playerid]][pos][2], string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		}
		else if(gPlayerInFaction[playerid] != -1)
		{
		    format(string, sizeof(string), "[QG] %s %s crie : %s !!",prefix[playerid], PlayerInfo[playerid][pName], result);
		    ProxDetectorPoint(5.0, FactionInfo[gPlayerInFaction[playerid]][fEntrance][0], FactionInfo[gPlayerInFaction[playerid]][fEntrance][1], FactionInfo[gPlayerInFaction[playerid]][fEntrance][2], string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		}
		else if(gPlayerInHouse[playerid] != -1)
		{
		    format(string, sizeof(string), "[Maison] %s %s crie : %s !!",prefix[playerid], PlayerInfo[playerid][pName], result);
		    ProxDetectorPoint(5.0, house[gPlayerInHouse[playerid]][pos][0], house[gPlayerInHouse[playerid]][pos][1], house[gPlayerInHouse[playerid]][pos][2], string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		}
		
		format(string, sizeof(string), "%s %s crie : %s !!",prefix[playerid], PlayerInfo[playerid][pName], result);
		ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2,true);
		log_Chat(string);
		return 1;
	}
	else if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] <1 || PlayerInfo[playerid][pMember] > 5)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes pas des forces de l'ordres.");}
		if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /m(egaphone) <texte>");}

     	format(string, sizeof(string), "[Megaphone] %s : %s", PlayerInfo[playerid][pName], result);
		ProxDetector(90.0, playerid, string,JAUNE,JAUNE,JAUNE,JAUNE,JAUNE,true);
		log_Chat(string);
		return 1;
	}
	else if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
	    if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}
	    if(PlayerInfo[playerid][pMember] > 10 || PlayerInfo[playerid][pMember] == 0)
	        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes pas dans une faction légale.");}
        if(PlayerInfo[playerid][pJailed] != 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} La radio est interdite en prison.");}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /r(adio) <texte>");}
			
        format(string, sizeof(string), "[Radio] %s %s : %s",GetFactionRank(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]), PlayerInfo[playerid][pRealName], result);
        ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,false);
		msg_Radio(PlayerInfo[playerid][pMember], 0x0062FFFF, string);
		log_Chat(string);
		return 1;
	}
	else if(strcmp(cmd, "/talkiewalkie", true) ==0 || strcmp(cmd, "/talkie", true) ==0 || strcmp(cmd, "/ta", true) ==0 || strcmp(cmd, "/tal", true) ==0)
	{
		if(inventory_GetItemQuantity(playerid,2966) <= 0)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de Talkie Walkie.");}
        if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}
        if(PlayerInfo[playerid][pJailed] != 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Le talkie walkie est interdit en prison.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /ta(lkie) <texte>");}
		if(gPlayerFreq[playerid] > 0 && gPlayerFreq[playerid] < 1000000)
		{
		    format(string, sizeof(string), "[Talkie Walkie] %s %s : %s",prefix[playerid], PlayerInfo[playerid][pName], result);
			msg_Wt(gPlayerFreq[playerid], COLOR_WT, string);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,false);
			log_Chat(string);
			return 1;
		}
		else
			{return msg_Client(playerid, COLOR_LIGHTBLUE, "» Talkie Walkie « La fréquence sur laquelle vous êtes n'est pas valide ! Changez la en utilisant /freq !");}
	}
	else if(strcmp(cmd, "/setfreq", true) == 0 || strcmp(cmd, "/freq", true) ==0 || strcmp(cmd, "/frequence", true) ==0)
	{
	    if(inventory_GetItemQuantity(playerid,2966) <= 0)
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de Talkie Walkie.");}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /freq(uence) <frequence>");}
		var = strval(tmp);
   		if (var < 1 || var > 999999)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} La fréquence doit être comprise entre 1 et 999999.");}
   		gPlayerFreq[playerid] = var;
		format(string, sizeof(string), "» Talkie Walkie « Vous avez réglé votre fréquence à : %d", var);
		msg_Client(playerid,COLOR_LIGHTBLUE, string);
		return 1;
	}
    else if(strcmp(cmd, "/departement", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] < 1 || PlayerInfo[playerid][pMember] > 9)
	        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faites pas parti d'une faction légale.");}
        if(gPlayerMuteIC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}
        if(PlayerInfo[playerid][pJailed] >= 1)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Le canal departement est interdit en prison.");}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /d(epartement) <texte>");}
        format(string, sizeof(string), "[Dep.][%s] %s %s: %s", GetFactionName(PlayerInfo[playerid][pMember]),GetFactionRank(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]), PlayerInfo[playerid][pRealName], result);
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
		    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] >0 && PlayerInfo[i][pMember] <= 9)
		    	{msg_Client(i,COLOR_ALLDEPT,string);}
		}
		return 1;
	}
//--------------------------------[ JOUEUR ]------------------------------------
	else if(strcmp(cmd, "/stats", true) == 0)
	{
	    ShowStats(playerid,playerid);
		return 1;
	}
	else if(strcmp(cmd, "/skill", true) == 0 || strcmp(cmd, "/skills", true) == 0)
	{
		format(string,sizeof(string),"[Armes]\nColt45 : %d  - Silencieux : %d\nShotGun : %d - Tec9 : %d\nUzi : %d - Mp5 : %d\nAk47 : %d - M4 : %d",
		PlayerInfo[playerid][pSkill][0],PlayerInfo[playerid][pSkill][1],PlayerInfo[playerid][pSkill][2],PlayerInfo[playerid][pSkill][3],PlayerInfo[playerid][pSkill][4],PlayerInfo[playerid][pSkill][5],PlayerInfo[playerid][pSkill][6],PlayerInfo[playerid][pSkill][7]);
		ShowPlayerDialog(playerid,91,DIALOG_STYLE_MSGBOX,"[Skill]",string,"Valider","");
		return 1;
	}
	else if(strcmp(cmd, "/root", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] < 1 || PlayerInfo[playerid][pMember] > 10)
	        {return msg_Box(playerid, "~b~", "Info", "Vous ne faites pas parti d'une faction légale.", 5000);}
	    tmp = strtok(cmdtext, idx);
 		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /root texte <Texte> ou /root desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Vous ne pouvez mettre que 64 caractères !");
		}
		if(strcmp(tmp, "desactiver", true) == 0)
		{
			msg_Box(playerid, "~b~", "Info", "Vous avez enlevé votre root.", 5000);
	        return memcpy(playerRoot[playerid], " ", 0, 64*4, 64*4);
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}

		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /root texte <Texte> ou /root desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Vous ne pouvez mettre que 64 caractères !");
		}
		strmid(playerRoot[playerid], result, 0, 64, 64);
		format(string,sizeof(string),"Vous avez mis comme root : %s.",result);
		msg_Box(playerid, "~b~", "Info", string, 5000);
		return 1;
	}
	else if(strcmp(cmd, "/prefix", true) == 0 || strcmp(cmd, "/pretexte", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
 		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /prefix texte <Texte> ou /prefix desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Vous ne pouvez mettre que 16 caractères !");
		}
		if(strcmp(tmp, "desactiver", true) == 0)
		{
			msg_Client(playerid, COLOR_STATS, "{CF9756}» Préfix «{FFFFFF} Vous avez enlevé le préfix.");
	        return memcpy(prefix[playerid], "[Anglais]", 0, 16*4, 16*4);
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}

		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /prefix texte <Texte> ou /prefix desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Vous ne pouvez mettre que 16 caractères !");
		}
		strmid(prefix[playerid], result, 0, 16, 16);
		format(string,sizeof(string),"{CF9756}» Préfix «{FFFFFF} Vous avez mit avant votre nom : \"%s\".",result);
		msg_Client(playerid, COLOR_STATS, string);
		return 1;
	}
    else if(strcmp(cmd, "/tme", true) == 0)
	{
 		tmp = strtok(cmdtext, idx);
 		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /tme texte <Texte> ou /tme desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Utiliser un \n pour sauter de ligne");
		}
		if(strcmp(tmp, "desactiver", true) == 0)
		{
			msg_Client(playerid, COLOR_STATS, "{CF9756}» TME «{FFFFFF} Vous avez enlevé le message de votre tête.");
	        return memcpy(TME[playerid], "Aucun", 0, 128*4, 128*4);
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
				
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /tme texte <Texte> ou /tme desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} utiliser un \n pour sauter de ligne");
		}
		strmid(TME[playerid], result, 0, 128, 128);
		format(string,sizeof(string),"{CF9756}» TME «{FFFFFF} Vous avez mit sur votre tête : \"%s\".",result);
		msg_Client(playerid, COLOR_STATS, string);
		return 1;
	}
	else if(strcmp(cmd, "/vme", true) == 0)
	{
     	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» VME «{FFFFFF} Vous devez être le conducteur.");}
	    tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /vme texte <Texte> ou /vme desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Utiliser un \n pour sauter de ligne");
		}
		if(strcmp(tmp, "desactiver", true) == 0)
		{
			msg_Client(playerid, COLOR_STATS, "{CF9756}» VME «{FFFFFF} Vous avez enlevé le message du véhicule.");
			if(IsValidDynamic3DTextLabel(VME[idcar]))
	        	{DestroyDynamic3DTextLabel(VME[idcar]);}
			return 1;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /vme texte <Texte> ou /vme desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} utiliser un \n pour sauter de ligne");
		}
		if(IsValidDynamic3DTextLabel(VME[idcar]))
			{DestroyDynamic3DTextLabel(VME[idcar]);}
		VME[idcar] = CreateDynamic3DTextLabel(result,COLOR_PINK,0.0,0.0,1.6,25.0,INVALID_PLAYER_ID,idcar,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
		format(string,sizeof(string),"{CF9756}» VME «{FFFFFF} Vous avez posé : \"%s\".",result);
		msg_Client(playerid, COLOR_STATS, string);
		return 1;
	}
	else if(strcmp(cmd, "/pme", true) == 0 || strcmp(cmd, "/sme", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /pme texte <Texte> ou /pme desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} Utiliser un \n pour sauter de ligne");
		}
		if(strcmp(tmp, "desactiver", true) == 0)
		{
			msg_Client(playerid, COLOR_STATS, "{CF9756}» PME «{FFFFFF} Vous avez enlevé le message au sol.");
			if(IsValidDynamic3DTextLabel(PME[playerid]))
	        	{DestroyDynamic3DTextLabel(PME[playerid]);}
			return 1;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /pme texte <Texte> ou /pme desactiver");
			return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} utiliser un \n pour sauter de ligne");
		}
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		if(IsValidDynamic3DTextLabel(PME[playerid]))
			{DestroyDynamic3DTextLabel(PME[playerid]);}
		PME[playerid] = CreateDynamic3DTextLabel(result,COLOR_PINK,x,y,z,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
		format(string,sizeof(string),"{CF9756}» PME «{FFFFFF} Vous avez posé : \"%s\".",result);
		msg_Client(playerid, COLOR_STATS, string);
		return 1;
	}
//----------------------------[ Factions ]--------------------------------------
	else if(strcmp(cmd, "/fouriere", true) == 0 || strcmp(cmd, "/four", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pJob] == 17)
	 	 	{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /four(iere) <nom>");
						return msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} g(arer) - rem(orquer) - enl(ever)");
					}
					else if(strcmp(tmp,"g",true) == 0 || strcmp(tmp,"garer",true) == 0)
					{
						new Float:x,Float:y,Float:z,Float:a;
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						if(!PlayerToPoint(60, playerid, 2183.4607,-1992.8525,13.5469) && (PlayerInfo[playerid][pJob] == 17))
							{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être à la fourrière.");}
						if(!IsPlayerInAnyVehicle(playerid))
							{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans un véhicule.");}
						if(vehicle[idcar][cStatut] > 0)
							{return msg_Client(playerid,COLOR_GREEN,"{9EC73D}» Fourrière «{FFFFFF} Véhicule déjà à la fourrière.");}
                        if(vehicle[idcar][cType] != CAR_OWN)
							{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Ce véhicule n'appartient pas à un joueur !");}
		 				if(PlayerInfo[playerid][pJob] == 17)
						{
							var=(random(50-5)+10);
							PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} Vous gagnez $%d pour avoir garé en fourrière ce véhicule.",var);
							msg_Client(playerid, COLOR_JOB, string);
							SafeGivePlayerMoney(playerid, var,"Job, mécano");
							vehicle[idcar][cStatut] = 1;
						}
						else
							{vehicle[idcar][cStatut] = 2;}
						vehicle[idcar][cVW]=0;
						vehicle[idcar][cInt]=0;
						vehicle[idcar][cLocationx] = x;
						vehicle[idcar][cLocationy] = y;
						vehicle[idcar][cLocationz] = z;
						vehicle[idcar][cAngle] = a;
						msg_Client(playerid,COLOR_GREEN,"{9EC73D}» Fourrière «{FFFFFF} Véhicule correctement garé à la fourrière.");
						vehicle_Save(idcar,0,0);
						tuning_Load(idcar);
					}
					else if(strcmp(tmp,"enl",true) == 0 || strcmp(tmp,"enlever",true) == 0)
					{
					    if(PlayerInfo[playerid][pJob] == 17)
					    {
                            if(!IsPlayerInAnyVehicle(playerid))
								{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans un véhicule.");}
                            if(vehicle[idcar][cStatut] != 2)
								{return msg_Client(playerid,COLOR_GREEN,"{9EC73D}» Fourrière «{FFFFFF} Ce véhicule n'est pas en fourrière police !");}
                            vehicle[idcar][cStatut]=0;
                            vehicle_Save(idcar,0,0);
							tuning_Load(idcar);
					    }
					    else
					        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne faîtes pas parti des mécaniciens.");}
					}
					else if(strcmp(tmp,"rem",true) == 0 || strcmp(tmp,"remorquer",true) == 0)
					{
						if(GetPlayerState(playerid)!=2)
						{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans un véhicule et conducteur.");}
						if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)
						{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans une dépanneuse.");}
						new Float:pX,Float:pY,Float:pZ;
						GetPlayerPos(playerid,pX,pY,pZ);
						new Float:veX,Float:veY,Float:veZ;
						new Found=0;
						new vid=0;
						while((vid<MAX_CAR)&&(!Found))
						{
							vid++;
							GetVehiclePos(vid,veX,veY,veZ);
							if ((floatabs(pX-veX)<7.0)&&(floatabs(pY-veY)<7.0)&&(floatabs(pZ-veZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
							{
								Found=1;
								if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
								{DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));}
								else
								{AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));}
							}
						}
						if(!Found)
						{return msg_Client(playerid,0xFFFF00AA,"{9EC73D}» Fourrière «{FFFFFF} Pas de voiture pres de vous (Bug syncro? Monter dans le véhicule a remorquer).");}
					}
            }
 			else
				{msg_Client(playerid,0xFFFF00AA,"{9EC73D}» Fourrière «{FFFFFF} Vous ne faites pas parti des mécaniciens.");return 1;}
		}
		return 1;
	}
	else if(strcmp(cmd, "/police", true) == 0 || strcmp(cmd, "/p", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4)
			{
		    	tmp = strtok(cmdtext, idx);
		    	if(!strlen(tmp))
				{
				    if(PlayerInfo[playerid][pRank] >= 1)
					{
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) <nom>");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}1{FFFFB2}: (su)spect - arreter - rechercher - confisquer - menotter - demenotter - droits - alcootest");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}1{FFFFB2}: forcer - besoinassistance (ba) - stopbesoinassistance (sba) - tazer - badge - localiser");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}1{FFFFB2}: herse - amende - fouiller - casier - plaque - (gyro)phare - bar(rage) - retirerpoint");
				    }
				    if(PlayerInfo[playerid][pRank] >= 2)
						{msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}2{FFFFB2}: civil - sabot - tracerdernierappel (tda) - gardeavue (gav)");}
					if(PlayerInfo[playerid][pRank] >= 5)
						{msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}5{FFFFB2}: inviter - virer - vidercasier - garer - ann(once) - swat - rang");}
                    if(PlayerInfo[playerid][pRank] >= 8)
						{msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}8{FFFFB2}: gestion - vrang");}
					return 1;
				}
				if(strcmp(tmp,"su",true) == 0 || strcmp(tmp,"suspect",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
						
    				tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) (su)spect <id/joueur> <level> <description>");return 1;}
				    giveplayerid = ReturnUser(tmp);
				    
				    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) (su)spect <id/joueur> <level> <description>");return 1;}
						var=strval(tmp);
						if(var > 6)
							{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Level max 6 !"); return 1;}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx]; idx++;}
						result[idx - offset] = EOS;
						if(!strlen(result))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) (su)spect <id/joueur> <level> <description>");return 1;}
						SetPlayerCriminal(giveplayerid,playerid,-1, result,var);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else if(strcmp(tmp,"rechercher",true) == 0)
				{
				    	for(new i=0; i <MAX_PLAYERS_CURRENT+1; i++)
						{
						    if(IsPlayerConnected(i))
							{
							    if(PlayerInfo[i][pWanted] >= 1)
								{
								    format(string, sizeof(string), "- %s: %d",PlayerInfo[i][pRealName],PlayerInfo[i][pWanted]);
									SendClientMessage(playerid,COLOR_POLICE,string);
								}
							}
						}
				}
			    else if(strcmp(tmp,"fouriere",true) == 0 || strcmp(tmp,"four",true) == 0)
				{
				    if(IsPlayerConnected(playerid))
				    {
				    	if (PlayerInfo[playerid][pMember] == 1)
				 	 	{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p four(iere) <nom>");
									return msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} g(arer) - rem(orquer) - enl(ever)");
								}
								else if(strcmp(tmp,"g",true) == 0 || strcmp(tmp,"garer",true) == 0)
								{
								    if(police_Duty[playerid] != 1)
								    {return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être en service !");}
									new Float:x,Float:y,Float:z,Float:a;
									GetVehiclePos(idcar, x, y, z);
									GetVehicleZAngle(idcar, a);
									if(!PlayerToPoint(60, playerid, 1625.4692,-1812.0320,13.7127) && (PlayerInfo[playerid][pMember] == 1))
										{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être à la fourrière - LSPD.");}
									if(!IsPlayerInAnyVehicle(playerid))
										{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans un véhicule.");}
									if(vehicle[idcar][cStatut] > 0)
										{return msg_Client(playerid,COLOR_GREEN,"{9EC73D}» Fourrière «{FFFFFF} Véhicule déjà à la fourrière - LSPD.");}
			                        if(vehicle[idcar][cType] != CAR_OWN)
										{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Ce véhicule n'appartient pas à un joueur !");}
					 				if(PlayerInfo[playerid][pJob] == 17)
									{
										var=(random(50-5)+10);
										PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
										msg_Client(playerid, COLOR_JOB, string);
										vehicle[idcar][cStatut] = 1;
									}
									else
										{vehicle[idcar][cStatut] = 2;}
									vehicle[idcar][cVW]=0;
									vehicle[idcar][cInt]=0;
									vehicle[idcar][cLocationx] = x;
									vehicle[idcar][cLocationy] = y;
									vehicle[idcar][cLocationz] = z;
									vehicle[idcar][cAngle] = a;
									msg_Client(playerid,COLOR_GREEN,"{9EC73D}» Fourrière «{FFFFFF} Véhicule correctement garé à la fourrière - LSPD.");
									vehicle_Save(idcar,0,0);
									tuning_Load(idcar);
								}
								else if(strcmp(tmp,"enl",true) == 0 || strcmp(tmp,"enlever",true) == 0)
								{
								    if(PlayerInfo[playerid][pMember] == 1)
								    {
								        if(police_Duty[playerid] != 1)
								            {return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être en service !");}
			                            if(!IsPlayerInAnyVehicle(playerid))
											{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans un véhicule.");}
			                            if(vehicle[idcar][cStatut] != 2)
											{return msg_Client(playerid,COLOR_GREEN,"{9EC73D}» Fourrière «{FFFFFF} Ce véhicule n'est pas en fourrière - LSPD !");}
			                            vehicle[idcar][cStatut]=0;
			                            vehicle_Save(idcar,0,0);
										tuning_Load(idcar);
								    }
								    else
								        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne faîtes pas parti de la police.");}
								}
								else if(strcmp(tmp,"rem",true) == 0 || strcmp(tmp,"remorquer",true) == 0)
								{
									if(GetPlayerState(playerid)!=2)
									{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans un véhicule et conducteur.");}
									if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)
									{return msg_Client(playerid, COLOR_GREEN, "{9EC73D}» Fourrière «{FFFFFF} Vous devez être dans une dépanneuse.");}
									new Float:pX,Float:pY,Float:pZ;
									GetPlayerPos(playerid,pX,pY,pZ);
									new Float:veX,Float:veY,Float:veZ;
									new Found=0;
									new vid=0;
									while((vid<MAX_CAR)&&(!Found))
									{
										vid++;
										GetVehiclePos(vid,veX,veY,veZ);
										if ((floatabs(pX-veX)<7.0)&&(floatabs(pY-veY)<7.0)&&(floatabs(pZ-veZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
										{
											Found=1;
											if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
											{DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));}
											else
											{AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));}
										}
									}
									if(!Found)
									{return msg_Client(playerid,0xFFFF00AA,"{9EC73D}» Fourrière «{FFFFFF} Pas de voiture pres de vous (Bug syncro? Monter dans le véhicule a remorquer).");}
								}
			            }
			 			else
							{msg_Client(playerid,0xFFFF00AA,"{9EC73D}» Fourrière «{FFFFFF} Vous ne faites pas parti de la LSPD.");return 1;}
					}
					return 1;
				}
				else if(strcmp(tmp,"retirerpoint",true) == 0 || strcmp(tmp,"rp",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}

    				tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) (rp)/retirerpoint <id/joueur> <point(s)>");return 1;}
				    giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) (rp)/retirerpoint <id/joueur> <point(s)>");return 1;}
                        var=strval(tmp);
                        PlayerInfo[giveplayerid][pPointPermis]-=var;
                        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} L'Officier %s vous a enlevé %d points de votre permis.",PlayerInfo[playerid][pRealName],var);
                        msg_Client(giveplayerid,COLOR_INFO,string);
                        format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Vous avez enlevé %d point(s) du permis de %s.",var,PlayerInfo[giveplayerid][pRealName]);
                        msg_Client(playerid,COLOR_INFO,string);
						return 1;
					}
                    else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else if(strcmp(tmp,"swat",true) == 0 || strcmp(tmp,"swat",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 5)
				        {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 5 minimum."); return 1;}

					if(police_Swat[PlayerInfo[playerid][pMember]-1] ==0)
					{
					    format(string,sizeof(string),"* L'équipement swat a été activé par %s.",PlayerInfo[playerid][pRealName]);
					    msg_Client(playerid,COLOR_WHITE,string);
					    police_Swat[PlayerInfo[playerid][pMember]-1] = 1;
					}
					else
					{
					    format(string,sizeof(string),"* L'équipement swat a été désactivé par %s.",PlayerInfo[playerid][pRealName]);
					    msg_Client(playerid,COLOR_WHITE,string);
					    police_Swat[PlayerInfo[playerid][pMember]-1]=0;
					}
				}
				else if(strcmp(tmp,"vidercasier",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 5)
				        {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 5 minimum."); return 1;}
                    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) vidercasier <id/joueur>");return 1;}
				    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    format(sql, sizeof(sql), "SELECT * FROM lvrp_users_casiers WHERE SQLid=%d", PlayerInfo[giveplayerid][pSQLID]);
						mysql_query(MYSQL,sql);
						new tmp2 = 0;
						cache_get_row_count(tmp2);
						if(tmp2 == 0)
				  		    {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce nom n'existe pas ou le casier est vide !"); return 1;}

					  	format(sql, sizeof(sql), "DELETE FROM lvrp_users_casiers WHERE SQLid = %d",PlayerInfo[giveplayerid][pSQLID]);
					  	mysql_pquery(MYSQL,sql);
					  	format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Le casier de %s a été vidé.",PlayerInfo[giveplayerid][pRealName]);
					  	msg_Client(playerid,COLOR_POLICE,string);
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					return 1;
				}
				else if(strcmp(tmp,"casier",true) == 0)
				{
				    ShowPlayerDialog(playerid,41,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Casier Judiciaire","Entrez le nom du joueur que vous voulez voir :","Valider","Annuler");
				    return 1;
				}
				else if(strcmp(tmp,"alcootest",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{return msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");}
                    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) alcootest <id/joueur>");}
                    giveplayerid = ReturnUser(tmp);
                    if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
						{return msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");}

					format(string,sizeof(string),"{FFFFFF}L'Agent %s vous demande de souffler dans l'alcootest.",PlayerInfo[playerid][pName]);
                    ShowPlayerDialog(giveplayerid,43,DIALOG_STYLE_MSGBOX,"{FFFFFF}» Alcootest «",string,"Accepter","Refuser");
					format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Vous avez proposé à %s de souffler dans l'alcootest.",PlayerInfo[giveplayerid][pName]);
					msg_Client(playerid, COLOR_POLICE, string);
					player_SellOffer[giveplayerid]=playerid;
					return 1;
				}
				else if(strcmp(tmp,"localiser",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) localiser <id_vehicule_police>");return 1;}
					var=strval(tmp);
					if(var < 0 || var > totalVehicles)
					    {return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Id incorrecte.");}
					if((vehicle[var][cType] == CAR_LSPD || vehicle[var][cType] == CAR_SFPD || vehicle[var][cType] == CAR_LVPD || vehicle[var][cType] == CAR_SASD) && GetVehicleSpeed(var) <5)
					{
					    new Float:x, Float:y, Float:z;
					    GetVehiclePos(var, x,y,z);
					    SetPlayerCheckpoint(playerid,x,y,z,8.0);
					    msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Véhicule de police localisé. (Point rouge minimap)");
					    return 1;
					}
					else
					    {return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce véhicules ne fait pas parti de la police ou il est en mouvement.");}
				}
				else if(strcmp(tmp,"ann",true) == 0 || strcmp(tmp,"annonce",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 5)
				    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être rang 5 minimum.");}
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
						{idx++;}
					new offset = idx;
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{result[idx - offset] = cmdtext[idx];idx++;}
					result[idx - offset] = EOS;
					if(!strlen(result))
						{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /p(olice) ann(once) <texte>");return 1;}
					if(PlayerInfo[playerid][pMember] == 3)
					    {var=0;}
					else
					    {var=PlayerInfo[playerid][pMember]-1;}
					msg_County(var,COLOR_WHITE, "{FFFFFF}======== {33CCFF}Annonce Police Departement {FFFFFF}========");
					if(PlayerInfo[playerid][pRank] == 7)
						{format(string, sizeof(string), "%s %s : %s",police[PlayerInfo[playerid][pMember]-1][rank7], PlayerInfo[playerid][pRealName], result);}
					else if(PlayerInfo[playerid][pRank] == 8)
						{format(string, sizeof(string), "%s %s : %s",police[PlayerInfo[playerid][pMember]-1][rank8], PlayerInfo[playerid][pRealName], result);}
					msg_County(var,COLOR_WHITE, string);
					return 1;
				}
				else if(strcmp(tmp,"gardeavue",true) == 0 || strcmp(tmp,"gav",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					if(IsAtArrestedPlace(playerid) == -1)
						{return msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas dans la zone d'arrestation.");}
						
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) gav <temps (minutes)>");return 1;}
					var = strval(tmp);
					if(var < 1 || var > 30)
						{return msg_Client(playerid, COLOR_GREY, "{007AFF}» Police «{FFFFFF} Le temps de garde à vue ne peut être en dessous de 1 et au dessus de 30 minutes.");}
                    new suspect = GetClosestPlayer(playerid);
					if(IsPlayerConnected(suspect))
					{
						if(GetDistanceBetweenPlayers(playerid,suspect) > 5)
							{return msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Personne à emprisonner.");}
                        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez mis en garde à vue %s.", PlayerInfo[suspect][pRealName]);
						msg_Client(playerid, COLOR_POLICE, string);
						PlayerInfo[suspect][pJailTime] = var * 60;
						PlayerInfo[suspect][pJailed] = 3;
						format(string, sizeof(string), "~r~ Garde à vue par %s", PlayerInfo[playerid][pRealName]);
						format(string, sizeof(string), "Vous êtes en garde à vue pour %d secondes.", PlayerInfo[suspect][pJailTime]);
						msg_Client(suspect, COLOR_WHITE, string);
						GameTextForPlayer(suspect, string, 5000, 5);
						SafeResetPlayerWeapons(suspect);
						player_Cuffed[suspect] = 0;
						player_CuffedTime[suspect] = 0;
						ClearAnimations(suspect);
						RemovePlayerAttachedObject(suspect, HandCuffsSlotObject[suspect]);
						HandCuffsSlotObject[suspect]=-1;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
						police_TempJail(suspect);
					}
				}
				else if(strcmp(tmp,"arreter",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					if(IsAtArrestedPlace(playerid) != -1)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");return 1;}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 99999) { msg_Client(playerid, COLOR_GREY, "{007AFF}» Police «{FFFFFF} Le prix de prison ne peut être en dessous de $1 et au dessus de $99999."); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");
							return 1;
						}
						new times = strval(tmp);
						if(times < 1 || times > 60) { msg_Client(playerid, COLOR_GREY, "{007AFF}» Police «{FFFFFF} Le temps de prison ne peut être en dessous de 1 et au dessus de 60 minutes."); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");
							return 1;
						}
						new bail = strval(tmp);
						if(bail < 0 || bail > 1) { msg_Client(playerid, COLOR_GREY, "{007AFF}» Police «{FFFFFF} La caution doit être de 0 ou 1."); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");
							return 1;
						}
						new bailprice = strval(tmp);
						if(bailprice < 0 || bailprice > 3000000) { msg_Client(playerid, COLOR_GREY, "{007AFF}» Police «{FFFFFF} Le prix de la caution ne peut être en dessous de $0 et au dessus de $3000000."); return 1; }
						new suspect = GetClosestPlayer(playerid);
						if(IsPlayerConnected(suspect))
						{
						    if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
							{
								if(PlayerInfo[suspect][pWanted] == 0)
								{
							    	msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur doit avoir au moins un niveau de recherche.");
							    	return 1;
								}
								format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez arreté %s.", PlayerInfo[suspect][pRealName]);
								msg_Client(playerid, COLOR_POLICE, string);
								PlayerInfo[suspect][pAccount]-=moneys;
								format(string, sizeof(string), "Arreter par %s ~n~  pour $%d", PlayerInfo[playerid][pRealName], moneys);
								GameTextForPlayer(suspect, string, 5000, 5);
								SafeResetPlayerWeapons(suspect); // On suprime les armes du suspet
								/*if(PlayerInfo[playerid][pMember]==1)
								{
								    new currank[64];
			    					if(PlayerInfo[playerid][pRank] == 1) { currank = "Cadet"; }
									else if(PlayerInfo[playerid][pRank] == 2) { currank = "Officier"; }
									else if(PlayerInfo[playerid][pRank] == 3) { currank = "Corporal"; }
									else if(PlayerInfo[playerid][pRank] == 4) { currank = "Sergeant"; }
									else if(PlayerInfo[playerid][pRank] == 5) { currank = "Lieutenant"; }
		        					else if(PlayerInfo[playerid][pRank] == 6) { currank = "Capitaine"; }
		        					else if(PlayerInfo[playerid][pRank] == 7) { currank = "Chef Adjoint"; }
		        					else if(PlayerInfo[playerid][pRank] == 8) { currank = "Chef"; }
									else { currank = "Cadet"; }
									format(string, sizeof(string), "|New| %s %s vient d'arrêter %s.", police[PlayerInfo[playerid][pMember]-1][] ,PlayerInfo[playerid][pRealName], PlayerInfo[suspect][pRealName]);
									msg_OOCNews(COLOR_BLUE, string);
								}*/
								prison_Jail(suspect,IsAtArrestedPlace(playerid));
								PlayerInfo[suspect][pJailTime] = times * 60;
								player_Cuffed[suspect] = 0;
								RemovePlayerAttachedObject(suspect, HandCuffsSlotObject[suspect]);
								HandCuffsSlotObject[suspect]=-1;
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								TogglePlayerControllable(suspect, 1);
								if(bail == 1)
								{
									format(string, sizeof(string), "Vous êtes en prison pour %d secondes. Amende: $%d,   Caution: $%d", PlayerInfo[suspect][pJailTime],moneys, bailprice);
									msg_Client(suspect, COLOR_WHITE, string);
								}
								else
								{
									format(string, sizeof(string), "Vous êtes en prison pour %d secondes. Amende: $%d,  Caution: Aucune", PlayerInfo[suspect][pJailTime],moneys);
									msg_Client(suspect, COLOR_WHITE, string);
								}
								PlayerInfo[suspect][pJailed] = 1;
								PlayerInfo[suspect][pWanted] = 0;
								format(sql, sizeof(sql), "UPDATE lvrp_users_casiers SET Arrested=Arrested+1 WHERE SQLid=%d",PlayerInfo[suspect][pSQLID]);
								mysql_pquery(MYSQL,sql);
								player_Cuffed[suspect] = 0;
								player_CuffedTime[suspect] = 0;
								ClearAnimations(suspect);
								if(bank_PlayerRob[suspect] == true)
								{
								    if(bank_Rob == true)
								    {
								        RemovePlayerAttachedObject(suspect,9);
								        msg_Client(suspect, COLOR_RED, "Vous êtes arrêté, tout l'argent que vous avez gagné vous a été retiré.");
								        bank_RobMoney[suspect] = 0;
								        bank_PlayerRob[suspect] = false;
								        bank_RobTime[suspect] = 0;
							    		format(string, sizeof(string), "*** A TOUTES LES UNITES : %s est en prison, un sac a été remis à la banque. ! ***",PlayerInfo[suspect][pRealName]);
										msg_Radio(1, TEAM_RADIO_COLOR, string);
										msg_Radio(3, TEAM_RADIO_COLOR, string);
										msg_Radio(4, TEAM_RADIO_COLOR, string);
									}
								}
							}
					    }
					    else
					    {
					        msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Personne à emprisonner.");
					        return 1;
					    }
					}
					else
					{
					    msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas dans la zone d'arrestation.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"gestion",true) == 0 || strcmp(tmp,"gerer",true) == 0)
				{
				    if(police_Duty[playerid]!=0)
		            	{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Impossible en service."); return 1;}
		            	
				    if(PlayerInfo[playerid][pRank] >= 8)
				        {police_Gestion(playerid);}
					else
					    {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous n'avez pas accès à cette commande."); return 1;}
				}
				else if(strcmp(tmp,"gyrophare",true) == 0 || strcmp(tmp,"gyro",true) == 0 || strcmp(tmp,"siren",true) == 0)
				{
				    if(IsPlayerInAnyVehicle(playerid))
				    {
				        if(police_Siren[idcar]!=0)
				        {
				            msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous avez retiré le gyrophare.");
				            if(IsValidDynamicObject(police_Siren[idcar]))
				            	{DestroyDynamicObject(police_Siren[idcar]);}
				            police_Siren[idcar]=0;
				            return 1;
				        }
				        else
				        {
				            msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous avez mis le gyrophare.");
				        	police_Siren[idcar] = CreateDynamicObject(18646, 10.0, 10.0, 10.0, 0, 0, 0,-1,-1,-1,100);
                 			AttachDynamicObjectToVehicle(police_Siren[idcar], idcar, -0.43, 0.0, 0.785, 0.0, 0.1, 0.0);
                 			return 1;
						}
				    }
				    else
						{return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être dans un véhicule.");}
				}
				else if(strcmp(tmp,"plaque",true) == 0)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
						{idx++;}
						
					new offset = idx;
					
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{result[idx - offset] = cmdtext[idx];idx++;}
						
					result[idx - offset] = EOS;
					if(!strlen(result))
						{msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) plaque <nom de la plaque>");return 1;}
						
					var=-1;
					for(new car=1;car<=totalVehicles;car++)
						{var=car; break;}
					if(var == -1 )
					    {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Plaque inconnue ...");}
					    
                    msg_Client(playerid, COLOR_CASIER,"______-=Base de données de la Police=-______");
					format(string,sizeof(string),"Plaque: %s",(result));
					msg_Client(playerid,COLOR_WHITE,string);
					format(string,sizeof(string),"Propriétaire: %s",vehicle[var][cOwner]);
					msg_Client(playerid,COLOR_WHITE,string);
					msg_Client(playerid, COLOR_CASIER,"____________________________________________");
					return 1;
				}
                else if(strcmp(tmp,"menotter",true) == 0 ||strcmp(tmp,"men",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service !");return 1;}
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) (men)otter <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
				   		if(PlayerInfo[giveplayerid][pMember] >= 1 && PlayerInfo[giveplayerid][pMember] <= 5)
					    	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas menotter un force de l'ordre.");return 1;}
					    if(player_Cuffed[giveplayerid] == 1)
				 			{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur est déjà menotter.");return 1;}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid)
								{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas vous menotte vous même.");return 1;}
							if(GetPlayerState(giveplayerid) != GetPlayerState(playerid))
								{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur doit etre en dehors du véhicule (ou vous devez etre en dehors).");return 1;}
							if(GetPlayerState(playerid) == 1)
						    {
						        if(player_GetSlotObject(giveplayerid) != -1)
	   								{HandCuffsSlotObject[giveplayerid]=player_GetSlotObject(giveplayerid); SetPlayerAttachedObject(giveplayerid, HandCuffsSlotObject[giveplayerid], 19418, 5, 0.002000, 0.033000, 0.016000, 9.600016, 54.000114, 98.599990, 1, 1 ,1);}
								format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été menotté par %s, jusqu'à ce qu'un force de l'ordre vous démenotte.", PlayerInfo[playerid][pName]);
								msg_Client(giveplayerid, COLOR_INFO, string);
								format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez menotté %s, seul un force de l'ordre pourra le démenotter.", PlayerInfo[giveplayerid][pName]);
								msg_Client(playerid, COLOR_POLICE, string);
								format(string, sizeof(string), "* %s à menotté %s, il ne poura allez nul part.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								GameTextForPlayer(giveplayerid, "~r~Menotter", 2500, 3);
								player_Cuffed[giveplayerid] = 1;
								SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
								return 1;
						    }
						    else
                                {msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas dans votre voiture, ou vous n'êtes pas le conducteur.");return 1;}
						}
						else
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else if(strcmp(tmp,"garer",true) == 0)
				{
					if(PlayerInfo[playerid][pRank]<= 4)
						{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez êtes rang 5 ou plus pour faire cette action.");return 1;}
					if(GetPlayerState(playerid) != 2)
						{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");return 1;}
					if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
					{
						new Float:x,Float:y,Float:z,Float:a;
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						vehicle[idcar][cLocationx] = x;
						vehicle[idcar][cLocationy] = y;
						vehicle[idcar][cLocationz] = z;
						vehicle[idcar][cAngle] = a;
						vehicle_Save(idcar,0,0);
						car_Recreate(playerid,idcar);
						msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Véhicule de police parké.");
						return 1;
					}
					else
					    {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce véhicule ne fait pas parti de la police."); return 1;}
				}
				else if(strcmp(tmp,"vrang",true) == 0)
				{
					if(PlayerInfo[playerid][pRank]< 8)
						{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez êtes rang 8 ou plus pour faire cette action.");return 1;}
					if(GetPlayerState(playerid) != 2)
						{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");return 1;}
					if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
					{
					    tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) vrang <rang>");return 1;}
						if(strval(tmp) > 8 || strval(tmp) < 1)
						    {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Rang compris entre 1 et 8."); return 1;}
                        vehicle[idcar][cRank] = strval(tmp);
						vehicle_Save(idcar,0,0);
						car_Recreate(playerid,idcar);
						format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Rang du véhicule réglé à %d ou supérieur.",strval(tmp));
						msg_Client(playerid,COLOR_POLICE,string);
						return 1;
					}
					else
					    {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce véhicule ne fait pas parti de la police."); return 1;}
				}
				else if(strcmp(tmp,"confisquer",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) confisquer <id/joueur> <nom>");
				  		msg_Client(playerid, COLOR_GREY, "{A98500}Noms Disponibles(Permis):{FFFFFF} conduite, vol, navigation, portarme, poidlourd, moto, train");
				  		msg_Client(playerid, COLOR_GREY, "{FFFFB2} arme, drogue, materiaux, pointpermis, telephone");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    tmp = strtok(cmdtext, idx);
							    if(!strlen(tmp))
								{
								    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi confisquer <id/joueur> <nom>");
							  		msg_Client(playerid, COLOR_GREY, "{A98500}Noms Disponibles(Permis):{FFFFFF} conduite, vol, navigation, portarme, poidlourd, moto, train");
							  		msg_Client(playerid, COLOR_GREY, "{FFFFB2} arme, drogue, materiaux, pointpermis, telephone");
									return 1;
								}
								if(strcmp(tmp,"conduite",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré le permis de conduire à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de conduire.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pCarLic] = 0;
							        PlayerInfo[giveplayerid][pPointPermis] = 0;
							        return 1;
								}
								if(strcmp(tmp,"vol",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré le permis de vol à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de vol.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pFlyLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"navigation",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré le permis de navigation à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de navigation.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pBoatLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"portarme",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré le permis de port d'arme à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de port d'arme.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pGunLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"poidlourd",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré le permis de poidlourd à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de poidlourd.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pLourdLic] = 0;
							        PlayerInfo[giveplayerid][pPointPermis] = 0;
							        return 1;
								}
								if(strcmp(tmp,"moto",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré le permis de moto à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de moto.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pMotoLic] = 0;
							        PlayerInfo[giveplayerid][pPointPermis] = 0;
							        return 1;
								}
								if(strcmp(tmp,"train",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré le permis de Train à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de Train.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pTrainLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"arme",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez confisqué les armes à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué vos armes.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        SafeResetPlayerWeapons(giveplayerid);
							        for(new i=0; i<6; i++)
	    								{PlayerInfo[giveplayerid][pInvWeapon][i]=0; PlayerInfo[giveplayerid][pInvAmmo][i]=0;}
							        return 1;
								}
								if(strcmp(tmp,"drogue",true) == 0)
								{
								    format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez confisqué la drogue à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué vos/votre drogues.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        inventory_UpdateItem(giveplayerid,1575,0);
							        inventory_UpdateItem(giveplayerid,1578,0);
							        inventory_UpdateItem(giveplayerid,1579,0);
							        inventory_UpdateItem(giveplayerid,1580,0);
							        return 1;
								}
								if(strcmp(tmp,"materiaux",true) == 0)
								{
								    format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez confisqué les matériaux à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué votre materiel.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        inventory_UpdateItem(playerid,1576,0);
							        return 1;
								}
								if(strcmp(tmp,"pointpermis",true) == 0)
								{
							        format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez retiré 1 point sur le permis à %s.", PlayerInfo[giveplayerid][pName]);
							        msg_Client(playerid, COLOR_POLICE, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré 1 point sur votre permis.", PlayerInfo[playerid][pName]);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pPointPermis] --;
							        return 1;
								}
								if(strcmp(tmp,"telephone",true) == 0)
								{
	                                format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez confisqué le téléphone appartenant à %s.", PlayerInfo[giveplayerid][pName]);
	                                msg_Client(playerid, COLOR_POLICE, string);
	                                format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué votre téléphone.", PlayerInfo[playerid][pName]);
	                                msg_Client(giveplayerid, COLOR_WHITE, string);
	                                PlayerInfo[giveplayerid][pNumber] = 0;
	                                return 1;
								}
								else
								{
								    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) confisquer <id/joueur> <nom>");
							  		msg_Client(playerid, COLOR_GREY, "{A98500}Noms Disponibles(Permis):{FFFFFF} conduite, vol, navigation, portarme, poidlourd, moto, train");
							  		msg_Client(playerid, COLOR_GREY, "{FFFFB2} arme, drogue, materiaux, pointpermis, telephone");
									return 1;
								}
							}
							else
								{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
					    }
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					return 1;
				}
				else if(strcmp(tmp,"amende",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) amende <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
		            if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new tmpstring[64],finestring[512],ifx=0;
							for(new fines=0;fines<totalFines; fines++)
							{
								if(fine[fines][used] == true && fine[fines][city] == PlayerInfo[playerid][pMember])
								{
									format(tmpstring,sizeof(tmpstring),"%s\t$%d",fine[fines][tmpName],fine[fines][price]);
									strins(finestring,tmpstring,strlen(finestring),sizeof(finestring));
									strins(finestring,"\n",strlen(finestring),sizeof(finestring));
									police_GestionCheckFineId[playerid][ifx]=fines;
									ifx++;
								}
							}
							format(string,sizeof(string),"%s",finestring);
							ShowPlayerDialog(playerid,22,DIALOG_STYLE_TABLIST,"{007AFF}» Police «{FFFFFF} Amendes",string,"Valider","Annuler");
							police_TicketOffer[playerid] = giveplayerid;
							return 1;
						}
						else
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas à côté de vous.");return 1;}
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
                else if(strcmp(tmp,"forcer",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) forcer <id/joueur> <place(1,2,3)>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
				 		if (ProxDetectorS(14.0, playerid, giveplayerid))
						{
							if(player_Cuffed[giveplayerid]== 1)
							{
								tmp = strtok(cmdtext, idx);
								new person = strval(tmp);
					    		if(person < 1 || person > 3)
									{return 1;}
						   		format(string, sizeof(string), "* L'Officier %s ouvre la portière et embarque le suspect %s dans le véhicule.",PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName]);
						    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						    	PutPlayerInVehicle(giveplayerid, GetPlayerVehicleID(playerid), person);
						    	return 1;
							}
							else
								{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce joueur doit être menotté."); return 1;}
						}
						else
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else if(strcmp(tmp,"demenotter",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) demenotter <id/joueur> ");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid)
								{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas vous démenotter vous même."); return 1; }
							if(player_Cuffed[giveplayerid] == 1)
							{
								format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été démenotté par %s.", PlayerInfo[playerid][pName]);
								msg_Client(giveplayerid, COLOR_INFO, string);
								format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez demenotté %s.", PlayerInfo[giveplayerid][pName]);
								msg_Client(playerid, COLOR_POLICE, string);
								GameTextForPlayer(giveplayerid, "~g~Demenotter", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								player_Cuffed[giveplayerid] = 0;
								RemovePlayerAttachedObject(giveplayerid, HandCuffsSlotObject[giveplayerid]);
								HandCuffsSlotObject[giveplayerid]=-1;
								SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
								format(string, sizeof(string), "* %s démenotte %s.", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
	      						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	      						return 1;
							}
							else
								{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas menotté.");return 1;}
						}
						else
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else if(strcmp(tmp,"civil",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 2)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous devez être Rang 3 ou supérieur pour cette action.");return 1;}
						
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) civil <skin>");return 1;}
					
	  				if (PlayerToPoint(6, playerid,police[PlayerInfo[playerid][pMember]-1][cmds][3],police[PlayerInfo[playerid][pMember]-1][cmds][4],police[PlayerInfo[playerid][pMember]-1][cmds][5]))
     				{
     				    new Skin = strval(tmp);
     				    if(Skin > 299 || Skin <0)
     				    	{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Skin compris entre 1 et 299.");return 1;}
     				    
     				    SafeResetPlayerWeapons(playerid);
     				    SafeSetPlayerHealth(playerid,100);
     				    SafeSetPlayerArmour(playerid,100);
     				    SetPlayerSkin(playerid,Skin);
     				    SafeGivePlayerWeapon(playerid, 22, 200);
     				    SafeGivePlayerWeapon(playerid, 43, 1000);
	                    SafeGivePlayerWeapon(playerid, 41, 1500);
	                    
						msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Tu t'es infiltré.");
						return 1;
     				}
     				else
     					{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Tu n'es pas dans le vestiaire.");return 1;}
				}
				else if(strcmp(tmp,"besoinassistance",true) == 0 || strcmp(tmp,"ba",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					
	                format(string,sizeof(string), "* %s active sa demande d'assistance.", PlayerInfo[playerid][pName]);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	                format(string, sizeof(string), "[Alerte] %s demande une assistance immédiate !", PlayerInfo[playerid][pName]);
	                player_Backup[playerid] = true;
	                new Float:X, Float:Y, Float:Z;
					GetPlayerPos(playerid, X, Y, Z);
	                for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
							{SetPlayerMarkerForPlayer(i, playerid, COLOR_BK); msg_Client(i, COLOR_BK, string);}
					}
					return 1;
				}
				else if(strcmp(tmp,"stopbesoinassistance",true) == 0 || strcmp(tmp,"sba",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					
	                format(string,sizeof(string), "* %s désactive sa demande d'assistance.", PlayerInfo[playerid][pName]);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	                player_Backup[playerid] = false;
					for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
							{SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);}
					}
					return 1;
				}
				else if(strcmp(tmp,"sabot",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 2)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous devez être Rang 2 ou supérieur pour cette action.");return 1;}
					if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
						
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) sabot <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FFFFB2} mettre - enlever");
						return 1;
	  				}
	  				if(strcmp(tmp,"mettre",true) == 0)
	                {
						new counter = 0;
					    new car;
					    for(new i; i != MAX_VEHICLES; i++)
					    {
					        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
					        if(dist)
					        	{car = i;counter++;}
					    }
					    if(counter == 0)
			  				{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Aucun véhicule pret de vous.");return 1;}
			  			else if(counter > 1)
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Trop de véhicule prêt de vous.");return 1;}
							
                        if(IsPlayerInAnyVehicle(playerid))
		      				{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas mettre de sabot depuis l'interieur.");return 1;}
		      				
		      			if(IsAPlane(car) || IsABike(car) || IsABoat(car) || vehicle[car][cType] != CAR_OWN)
						  	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Il est impossible de mettre un sabot sur ce véhicule.");return 1;}

                        new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
						if(!strlen(result))
							{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /p(olice) sabot mettre <raison>");}

						strmid(vehicle[car][sabotDesc],result,0,64,64);
						vehicle[car][sabot] = true;
		                format(string, sizeof(string), "* %s met un sabot dans les roues du véhicules.", PlayerInfo[playerid][pName]);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						return 1;
					}
					else if(strcmp(tmp,"enlever",true) == 0)
	                {
	                    new counter = 0;
					    new car;
					    for(new i; i != MAX_VEHICLES; i++)
					    {
					        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
					        if(dist)
					        	{car = i;counter++;}
					    }
					    if(counter == 0)
			  				{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Aucun véhicule pret de vous.");return 1;}
			  			else if(counter > 1)
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Trop de véhicule prêt de vous.");return 1;}

                        if(IsPlayerInAnyVehicle(playerid))
		      				{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas enlever de sabot depuis l'interieur.");return 1;}

		      			if(IsAPlane(car) || IsABike(car) || IsABoat(car) || vehicle[car][cType] != CAR_OWN)
						  	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Il est impossible d'enlever un sabot de ce véhicule.");return 1;}

						vehicle[car][sabot] = false;
						strmid(vehicle[car][sabotDesc],"Aucune",0,64,64);
		                format(string, sizeof(string), "* %s enleve le sabot des roues du véhicule.", PlayerInfo[playerid][pName]);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						return 1;
					}
					else
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) sabot <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FFFFB2} mettre - enlever");
						return 1;
					}
				}
				else if(strcmp(tmp,"tazer",true) == 0)
				{
				    if(IsPlayerInAnyVehicle(playerid))
				    	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas utiliser cette commande dans un véhicule.");return 1;}
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    if(police_Tazer[playerid] == 0)
					    {
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} prendre");
							return 1;
						}
						else
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} ranger");
							return 1;
						}
	  				}
	  				if(strcmp(tmp,"prendre",true) == 0)
					{
					    if(police_Tazer[playerid] == 0)
					    {
		                    format(string, sizeof(string), "* %s prend son tazer.", PlayerInfo[playerid][pName]);
		                  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					        SetPlayerAttachedObject(playerid, 9, 18642, 6, 0.06, 0.01, 0.08, 180.0, 0.0, 0.0);
					        police_Tazer[playerid] = 1;
					        msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous prennez votre tazer dans votre main.");
					    }
					    else
		 					{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous avez déjà votre tazer en main."); return 1;}
				    }
				    else if(strcmp(tmp,"ranger",true) == 0)
					{
					    if(police_Tazer[playerid] == 1)
					    {

             				format(string, sizeof(string), "* %s range son tazer.", PlayerInfo[playerid][pName]);
		                  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					        RemovePlayerAttachedObject(playerid, 9);
					        police_Tazer[playerid] = 0;
					        msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ranger votre tazer.");
					    }
					    else
					    	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'avez pas de tazer en main.");return 1;}
				    }
				    else
				    {
				        if(police_Tazer[playerid] == 0)
					    {
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} prendre");
							return 1;
						}
						else
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} ranger");
							return 1;
						}
				    }
				    return 1;
				}
				else if(strcmp(tmp,"badge",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) badge <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
					 		if(giveplayerid == playerid)
								{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas vous montrez votre badge à vous même."); return 1; }
							format(string, sizeof(string), "* %s montre son badge à %s.", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank8], PlayerInfo[playerid][pRealName]); }
					        else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank7], PlayerInfo[playerid][pRealName]); }
					        else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank6], PlayerInfo[playerid][pRealName]); }
					        else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank5], PlayerInfo[playerid][pRealName]); }
					        else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank4], PlayerInfo[playerid][pRealName]); }
					        else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank3], PlayerInfo[playerid][pRealName]); }
					        else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank2], PlayerInfo[playerid][pRealName]); }
					        else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %s %s", police[PlayerInfo[playerid][pMember]][rank1], PlayerInfo[playerid][pRealName]); }
							msg_Client(giveplayerid, COLOR_GREY, string);
					        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} %s vous montre son badge.", PlayerInfo[playerid][pName]);
							msg_Client(giveplayerid, COLOR_INFO, string);
							format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez montré votre badge à %s.", PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_POLICE, string);
							return 1;
						}
						else
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas pret de vous.");return 1;}
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else if(strcmp(tmp,"tracerdernierappel",true) == 0 || strcmp(tmp,"tda",true) == 0)
				{
				    if(pdtrace1 == 0 || pdtrace[0] == 0 || pdtrace[1] == 0 || pdtrace[2] == 0)
		            	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Impossible de tracer le dernier appel.");return 1;}
		            msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} L'endroit ou a été effectué l'appel est marqué sur votre carte (marqueur rouge).");
					SetPlayerCheckpoint(playerid,pdtrace[0],pdtrace[1],pdtrace[2],8.0);
		            return 1;
				}
				else if(strcmp(tmp,"fouiller",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
						
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) fouiller <id/joueur>");return 1;}
					
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
						{
						    if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid)
									{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas vous fouillez vous même."); return 1;}

							    format(string, sizeof(string), "* %s fouille le corp %s et cherche des objets.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								
								format(string, sizeof(string), "|__________ Objets - %s __________|", PlayerInfo[giveplayerid][pName]);
						        msg_Client(playerid, COLOR_STATS, string);
						        if(PlayerInfo[giveplayerid][pCash] > 0)
								{
								    format(string,sizeof(string),"| Porte-feuille $%d",PlayerInfo[giveplayerid][pCash]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								
								if(bag[giveplayerid][statut]==1)
								    {return 1;}
								
						        if(PlayerInfo[giveplayerid][pIdentie] > 0) { msg_Client(playerid,COLOR_WHITE,"| Carte d'itentité"); }
                                if(inventory_GetItemQuantity(giveplayerid,1575) > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) de weed",inventory_GetItemQuantity(giveplayerid,1575));
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(inventory_GetItemQuantity(giveplayerid,1579) > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) d'Héroïne",inventory_GetItemQuantity(giveplayerid,1579));
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(inventory_GetItemQuantity(giveplayerid,1578) > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) de cocaïne",inventory_GetItemQuantity(giveplayerid,1578));
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(inventory_GetItemQuantity(giveplayerid,1580) > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) d'ecstasy",inventory_GetItemQuantity(giveplayerid,1580));
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(inventory_GetItemQuantity(giveplayerid,1576) > 0)
								{
								    format(string,sizeof(string),"| %d matériaux",inventory_GetItemQuantity(giveplayerid,1576));
									msg_Client(playerid,COLOR_WHITE,string);
								}
                                if(PlayerInfo[giveplayerid][pInvWeapon][0] > 0 && PlayerInfo[giveplayerid][pInvAmmo][0] > 0)
								{
									format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][0]),PlayerInfo[giveplayerid][pInvAmmo][0]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][1] > 0 && PlayerInfo[giveplayerid][pInvAmmo][1] > 0)
								{
									format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][1]),PlayerInfo[giveplayerid][pInvAmmo][1]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][2] > 0 && PlayerInfo[giveplayerid][pInvAmmo][2] > 0)
								{
									format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][2]),PlayerInfo[giveplayerid][pInvAmmo][2]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][3] > 0 && PlayerInfo[giveplayerid][pInvAmmo][3] > 0)
								{
									format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][3]),PlayerInfo[giveplayerid][pInvAmmo][3]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][4] > 0 && PlayerInfo[giveplayerid][pInvAmmo][4] > 0)
								{
									format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][4]),PlayerInfo[giveplayerid][pInvAmmo][4]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][5] > 0 && PlayerInfo[giveplayerid][pInvAmmo][5] > 0)
								{
									format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][5]),PlayerInfo[giveplayerid][pInvAmmo][5]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
							}
							else
								{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
						}
	 				}
	 				else
	 					{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
	 				return 1;
				}
				else if(strcmp(tmp,"droits",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) droits <id/joueur> <Desc. delit>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
								{idx++;}
							new offset = idx;
								
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
								{result[idx - offset] = cmdtext[idx];idx++;}
							result[idx - offset] = EOS;
							if(!strlen(result))
								{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) droits <id/joueur> <texte>");return 1;}
							format(string, sizeof(string), "%s dit: Vous êtes en état d'arrestation.", PlayerInfo[playerid][pRealName]);
				            ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
							format(string, sizeof(string), "%s dit: Pour avoir commis le délit suivant %s.", PlayerInfo[playerid][pRealName], result);
				            ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
							format(string, sizeof(string), "%s dit: Vous avez le droit de garder le silence.", PlayerInfo[playerid][pRealName]);
       						ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
							format(string, sizeof(string), "%s dit: Tout ce que vous direz pourra être retenu contre vous devant le tribunal.", PlayerInfo[playerid][pRealName]);
				            ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
							format(string, sizeof(string), "%s dit: Vous pouvez appeler un avocat.", PlayerInfo[playerid][pRealName]);
				            ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
				            return 1;
						}
						else
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
					}
					else
	 					{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else if(strcmp(tmp,"herse",true) == 0)
				{
				    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
					tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) herse <nom>");
					    msg_Client(playerid, COLOR_WHITE, "{FFFFB2} creer - sup(primer) - [enlevertousherse (eth) <-Rang 6]");
						return 1;
					}
					if(strcmp(tmp,"creer",true) == 0)
					{
					    if(IsPlayerInAnyVehicle(playerid))
					    	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas mettre de herse dans un véhicule!");return 1;}
					    if(totalSpikes>=MAX_SPIKE)
    						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Le nombre Max de herses a été atteint.");return 1;}
    					format(string, sizeof(string), "* %s deploie une herse sur la route.", PlayerInfo[playerid][pName]);
				      	ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
    					new Float:tmpX,Float:tmpY,Float:tmpZ,Float:tmpA;
						GetPlayerPos(playerid,tmpX,tmpY,tmpZ);
						GetPlayerFacingAngle(playerid, tmpA);
						spike_Create(tmpX,tmpY,tmpZ,tmpA,PlayerInfo[playerid][pMember]);
						LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
						return 1;
					}
					else if(strcmp(tmp,"sup",true) == 0 ||strcmp(tmp,"supprimer",true) == 0)
						{spike_Remove(playerid);}
					else if(strcmp(tmp,"enlevertousherse",true) == 0 ||strcmp(tmp,"eth",true) == 0)
					{
						if(PlayerInfo[playerid][pRank] < 6)
			            	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous devez être rang 6 ou plus pour pouvoir faire cette action.");return 1;}
			            spike_RemoveAll(playerid);
			            
			            format(string, sizeof(string), "QG: Tous les herses ont été levé sous ordre de %s.", PlayerInfo[playerid][pName]);
						for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
									{msg_Client(i, COLOR_CASIER, string);}
							}
						}
					}
					return 1;
				}
				else if(strcmp(tmp,"bar",true) == 0 || strcmp(tmp,"barrage",true) == 0)
				{
                    if(police_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous n'êtes pas en service!");return 1;}
		            tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) bar(rage) <nom>");
					    msg_Client(playerid, COLOR_WHITE, "{FFFFB2} creer - sup(primer) - [enlevertousbar(rage) (etb) <-Rang 6]");
						return 1;
					}
					if(strcmp(tmp,"creer",true) == 0)
					{
					    if(IsPlayerInAnyVehicle(playerid))
					    	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous ne pouvez pas mettre de barrage dans un véhicule!");return 1;}
					    if(totalBars>=MAX_BAR)
    						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Le nombre Max de barrages a été atteint.");return 1;}
    					tmp = strtok(cmdtext, idx);
    					if(!strlen(tmp))
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /p(olice) bar(rage) creer <numéro>");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 1. Petit - 2. Moyen - 3. Grand - 4. Cone");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 5. Panneau - 6. Accès Interdit - 7. Route fermé");
							return 1;
						}
						new num = strval(tmp);
						new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
					    GetPlayerPos(playerid, plocx, plocy, plocz);
					    GetPlayerFacingAngle(playerid,ploca);
						if (num == 1)
						{
					        bar_Create(1459,plocx,plocy,plocz-0.5,ploca,PlayerInfo[playerid][pMember]);
							format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			          		GameTextForPlayer(playerid,"~w~Barrage ~b~Place !",3000,1);
						}
						else if (num == 2)
						{
					        bar_Create(978,plocx,plocy,plocz-0.3,ploca,PlayerInfo[playerid][pMember]);
							format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			          		GameTextForPlayer(playerid,"~w~Barrage ~b~Place !",3000,1);
						}
						else if (num == 3)
						{
					        bar_Create(981,plocx,plocy,plocz-0.2,ploca+180,PlayerInfo[playerid][pMember]);
							format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			          		GameTextForPlayer(playerid,"~w~Barrage ~b~Place !",3000,1);
						}
						else if (num == 4)
						{
					        bar_Create(1238,plocx,plocy,plocz-0.7,ploca,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une cone sur la route.", PlayerInfo[playerid][pName]);
			          		GameTextForPlayer(playerid,"~w~Cone ~b~Place !",3000,1);
						}
						else if (num == 5)
						{
					        bar_Create(1425,plocx,plocy,plocz-0.7,ploca+180,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			          		GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
						}
						else if (num == 6)
						{
					        bar_Create(3265,plocx,plocy,plocz-0.8,ploca+180,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			          		GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
						}
						else if (num == 7)
						{
					        bar_Create(3091,plocx,plocy,plocz-0.5,ploca+180,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			          		GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				      	ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						return 1;
					}
					else if(strcmp(tmp,"sup",true) == 0 || strcmp(tmp,"suprimer",true) == 0)
						{bar_Remove(playerid);}
					else if(strcmp(tmp,"etb",true) == 0 || strcmp(tmp,"enlevertousbarrage",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] < 6)
			            	{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous devez être rang 6 ou plus pour pouvoir faire cette action.");return 1;}
					    bar_RemoveAll(playerid);

						format(string, sizeof(string), "QG: Tous les barrages routiers de la zone ont été levé sous ordre de %s.", PlayerInfo[playerid][pName]);
						for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
									{msg_Client(i, COLOR_CASIER, string);}
							}
						}
					}
				}
				else if(strcmp(tmp,"inviter",true) == 0)
				{
					if(PlayerInfo[playerid][pRank] >= 5)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /p(olice) inviter <id/joueur>");return 1;}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{
						    if(giveplayerid == playerid)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter dans votre propre faction !");return 1;}
        					if(PlayerInfo[giveplayerid][pMember] != 0)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur fait déjà parti d'une faction.");return 1;}
							format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez invité %s.",PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_POLICE, string);
							format(string,sizeof(string),"%s vous invite à rejoindre sa faction.",PlayerInfo[playerid][pName]);
							ShowPlayerDialog(giveplayerid,54,DIALOG_STYLE_MSGBOX,"|Invitation|",string,"Accepter","Refuser");
							invited_Player[giveplayerid]=playerid;
							return 1;
						}
						else
							{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					}
					else
						{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
				}
				else if(strcmp(tmp,"rang",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 5)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /p(olice) rang <id/joueur> <rang>");return 1;}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{
					    	if(giveplayerid == playerid)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous changer votre rang vous meme !");return 1;}
                            if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
					    	tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
								{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /p(olice) rang <id/joueur> <rang>");return 1;}
							new rang = strval(tmp);
							if(rang < 1 || rang > 6)
								{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Rang compri entre 1 et 6."); return 1;}
							PlayerInfo[giveplayerid][pRank] = rang;
							format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été promus rang %d par %s.",rang,PlayerInfo[playerid][pName]);
							msg_Client(giveplayerid, COLOR_INFO, string);
							format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez mis rang %d, %s.",rang,PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_POLICE, string);
							return 1;
						}
						else
							{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					}
					else
						{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
				}
				else if(strcmp(tmp,"virer",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 5)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /p(olice) virer <id/joueur>");return 1;}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{
						    if(giveplayerid == playerid)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous virer vous meme !");return 1;}
                            if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
							PlayerInfo[giveplayerid][pRank] = 0;
							PlayerInfo[giveplayerid][pLeader] = 0;
							PlayerInfo[giveplayerid][pMember] = 0;
							format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été virer par %s",PlayerInfo[playerid][pName]);
							msg_Client(giveplayerid, COLOR_INFO, string);
							format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez virer %s.",PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_POLICE, string);
							OnPlayerUpdateSQL(giveplayerid);
							return 1;
						}
						else
							{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					}
					else
						{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
				}
				else
				{
				    if(PlayerInfo[playerid][pRank] >= 1)
					{
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /p(olice) <nom>");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}1{FFFFB2}: (su)spect - arreter - rechercher - confisquer - menotter - demenotter - droits - alcootest");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}1{FFFFB2}: forcer - besoinassistance (ba) - stopbesoinassistance (sba) - tazer - badge - localiser");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}1{FFFFB2}: herse - amende - fouiller - casier - plaque - (gyro)phare - bar(rage) - retirerpoint");
				    }
				    if(PlayerInfo[playerid][pRank] >= 2)
						{msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}2{FFFFB2}: civil - sabot - tracerdernierappel (tda) - gardeavue (gav)");}
					if(PlayerInfo[playerid][pRank] >= 5)
						{msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}5{FFFFB2}: inviter - virer - vidercasier - garer - ann(once) - swat - rang");}
                    if(PlayerInfo[playerid][pRank] >= 8)
						{msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FFFFFF}8{FFFFB2}: gestion - vrang");}
					return 1;
				}
			}
			else
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne faites pas parti de la police.");return 1;}
	    }
	    return 1;
	}
	/*else if(strcmp(cmd, "/fbi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pMember] == 5)
			{
		    	tmp = strtok(cmdtext, idx);
		    	if(!strlen(tmp))
				{
				    if(PlayerInfo[playerid][pRank] >= 1)
					{
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /fbi <nom>");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}1{A98500}:{FFFFFF} (su)spect - arreter - duty - rechercher - confisquer - menotter - demenotter - droits - equiper");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}1{A98500}:{FFFFFF} forcer - besoinassistance (ba) - stopbesoinassistance (sba) - tazer - badge - casier - plaque");
				    }
				    if(PlayerInfo[playerid][pRank] >= 2)
					{
						msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}2{A98500}:{FFFFFF} amende - civil - fouiller - herse - bar(rage)");
					}
					if(PlayerInfo[playerid][pRank] >= 6)
					{
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}6{A98500}:{FFFFFF} tactique - inviter - virer - rang - vidercasier");
					}
					return 1;
				}
				if(strcmp(tmp,"su",true) == 0 || strcmp(tmp,"suspect",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /fbi (su)spect <id/joueur> <level> <description>");
						return 1;
					}
				    giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
				    	{
				    	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							tmp = strtok(cmdtext, idx);
                            if(!strlen(tmp))
							{
								msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi (su)spect <id/joueur> <level> <description>");
								return 1;
							}
							new lvl=strval(tmp);
							if(lvl > 6){msg_Client(playerid,COLOR_FBI,"|Fbi| Level max 6 !"); return 1;}
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi (su)spect <id/joueur> <level> <description>*");
								return 1;
							}
							SetPlayerCriminal(giveplayerid,playerid,-1, result,lvl);
							return 1;
				    	}
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"arreter",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
				    	msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
				    	return 1;
					}
					if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391) || PlayerToPoint(50.0, playerid,266.7490,77.5669,1001.0391) || PlayerToPoint(15.0, playerid,1537.2515,-1674.9572,13.3828) || PlayerToPoint(6.0, playerid, 1528.9080,-1678.0759,5.8906)|| PlayerToPoint(15.0, playerid,2292.0945,2452.4775,10.8203)|| PlayerToPoint(6.0, playerid,1658.6390,-1691.3785,15.6094)|| PlayerToPoint(15.0, playerid,2293.1460,2467.8892,10.8203) || PlayerToPoint(15.0, playerid,1535.8269,-1672.6747,13.3828))
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 99999) { msg_Client(playerid, COLOR_FBI, "|Fbi| Le prix de prison ne peux être en desous de $1 et au desus de $99999."); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");
							return 1;
						}
						new time = strval(tmp);
						if(time < 1 || time > 10) { msg_Client(playerid, COLOR_FBI, "|Fbi| Le temps de prison ne peux être en desous de 1 et au desus de 10 minutes."); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");
							return 1;
						}
						new bail = strval(tmp);
						if(bail < 0 || bail > 1) { msg_Client(playerid, COLOR_FBI, "|Fbi| La caution doit être de 0 ou 1."); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi arreter <prix> <temps (minutes)> <caution (0=non 1=Oui)> <prixcaution>");
							return 1;
						}
						new bailprice = strval(tmp);
						if(bailprice < 0 || bailprice > 3000000) { msg_Client(playerid, COLOR_FBI, "|Fbi| Le prix de la caution ne peu être en desous de $0 et au desus de $3000000."); return 1; }
						new suspect = GetClosestPlayer(playerid);
						if(IsPlayerConnected(suspect))
						{
						    if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
							{
							    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								if(PlayerInfo[suspect][pWanted] == 0)
								{
							    	msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur doit avoir au moin 1 niveau de recherche.");
							    	return 1;
								}
								format(string, sizeof(string), "|Fbi| Vous avez arreté %s.", giveplayer);
								msg_Client(playerid, COLOR_FBI, string);
								SafeGivePlayerMoney(suspect, -moneys,"Joueur arrêté");
								format(string, sizeof(string), "Arreter par %s ~n~  pour $%d", sendername, moneys);
								GameTextForPlayer(suspect, string, 5000, 5);
								SafeResetPlayerWeapons(suspect); // On suprime les arme du suspect
								if(PlayerInfo[playerid][pMember]==1)
								{
								    new currank[64];
			    					if(PlayerInfo[playerid][pRank] == 1) { currank = "Agent Consultant"; }
									else if(PlayerInfo[playerid][pRank] == 2) { currank = "Agent Aspirant"; }
									else if(PlayerInfo[playerid][pRank] == 3) { currank = "Agent Fédéral"; }
									else if(PlayerInfo[playerid][pRank] == 4) { currank = "Agent Spécial"; }
									else if(PlayerInfo[playerid][pRank] == 5) { currank = "Agent Spécial Cdl"; }
		        					else if(PlayerInfo[playerid][pRank] == 6) { currank = "Sous-Directeur"; }
		        					else if(PlayerInfo[playerid][pRank] == 7) { currank = "Directeur"; }
									else { currank = "Agent Consultant"; }
									format(string, sizeof(string), "|New| %s %s vient d'arreter %s.", currank ,sendername, giveplayer);
									msg_OOCNews(COLOR_BLUE, string);
								}
								server_SetPlayerInterior(suspect, 6);
								SafeSetPlayerPos(suspect,264.6288,77.5742,1001.0391);
								PlayerInfo[suspect][pJailTime] = time * 60;
								player_Cuffed[suspect] = 0;
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								TogglePlayerControllable(suspect, 1);
								if(bail == 1)
								{
									format(string, sizeof(string), "Vous êtes en prison pour %d secondes.   Caution: $%d", PlayerInfo[suspect][pJailTime], bailprice);
									msg_Client(suspect, COLOR_WHITE, string);
								}
								else
								{
									format(string, sizeof(string), "Vous êtes en prison pour %d secondes.   Caution: Aucune", PlayerInfo[suspect][pJailTime]);
									msg_Client(suspect, COLOR_WHITE, string);
								}
								PlayerInfo[suspect][pJailed] = 1;
								PlayerInfo[suspect][pWanted] = 0;
					     	   	format(sql, sizeof(sql), "UPDATE lvrp_users_casiers SET Arrested+1 WHERE SQLid=%d",PlayerInfo[suspect][pSQLID]);
								mysql_pquery(MYSQL,sql);
								player_Cuffed[suspect] = 0;
								player_CuffedTime[suspect] = 0;
								ClearAnimations(giveplayerid);
							}
					    }
					    else
					    {
					        msg_Client(playerid, COLOR_FBI, "|Fbi| Personne à emprisonné.");
					        return 1;
					    }
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas dans la zone d'arrestation.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"gestion",true) == 0 || strcmp(tmp,"gerer",true) == 0)
				{
				    if(police_Duty[playerid]!=0)
		            	{msg_Client(playerid,COLOR_FBI,"|Fbi| Impossible en service."); return 1;}
				    if(PlayerInfo[playerid][pRank] >= 7)
				        {fbi_Gestion(playerid);}
				}
				else if(strcmp(tmp,"siren",true) == 0)
				{
				    if(IsPlayerInAnyVehicle(playerid))
				    {
				        if(police_Siren[idcar]!=0)
				        {
				            msg_Client(playerid,COLOR_FBI,"|Fbi| Vous avez retiré la siren.");
				            if(IsValidDynamicObject(police_Siren[idcar]))
				            	{DestroyDynamicObject(police_Siren[idcar]);}
				            police_Siren[idcar]=0;
				            return 1;
				        }
				        else
				        {
				            msg_Client(playerid,COLOR_FBI,"|Fbi| Vous avez mis la siren.");
				        	police_Siren[idcar] = CreateDynamicObject(18646, 10.0, 10.0, 10.0, 0, 0, 0,-1,-1,-1,100);
                 			AttachDynamicObjectToVehicle(police_Siren[idcar], idcar, -0.43, 0.0, 0.785, 0.0, 0.1, 0.0);
                 			return 1;
						}
				    }
				    else return msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être dans un véhicule.");
				}
				else if(strcmp(tmp,"duty",true) == 0)
				{
				    GetPlayerName(playerid, sendername, sizeof(sendername));
				    if (PlayerToPoint(2, playerid,222.6777,188.2729,1003.0313))
					{
					    if(police_Duty[playerid]==0)
			        	{
			        	    new time = DUTY_TIME-PlayerInfo[playerid][pDutyTime];
			        	    if(time > 0)
			        	    {
								format(string,sizeof(string),"|Fbi| Vous devez encore travailler %d minute(s) pour obtenir la paye.",time);
				        	    msg_Client(playerid,COLOR_FBI,string);
			        	    }
			        	    format(string, sizeof(string), "* L'Agent %s ouvre son casier et prend son Badge.", sendername);
			        	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			        	    SafeSetPlayerArmour(playerid, 100);
                        	SetPlayerColor(playerid,0x33CCFF00);
							police_Duty[playerid] = 1;
			            }
			            else if(police_Duty[playerid]==1)
			            {
			                format(string, sizeof(string), "* L'Agent %s a remis son Badge et son calibre dans son casier.", sendername);
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			                SafeResetPlayerWeapons(playerid);
							SafeSetPlayerArmour(playerid, 0);
							SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
							police_Duty[playerid] = 0;
							SetPlayerColor(playerid,0xFFFFFF00);
			            }
					}
					else
						{msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas dans les vestiaires !");return 1;}
					return 1;
				}
				else if(strcmp(tmp,"rechercher",true) == 0)
				{
				    if (PlayerToPoint(2, playerid,216.1088,183.2545,1003.0313))
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Suspects actuelement recherchés:");
					    for(new i=0; i <MAX_PLAYERS_CURRENT+1; i++)
						{
						    if(IsPlayerConnected(i))
							{
							    if(PlayerInfo[i][pWanted] >= 1)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    format(string, sizeof(string), "- %s: %d",giveplayer,PlayerInfo[i][pWanted]);
									msg_Client(playerid,COLOR_POLICE,string);
								}
							}
						}
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas au bon endroit.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"plaque",true) == 0)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /fbi plaque <nom de la plaque>");
						return 1;
					}
					for(new car=1;car<=totalVehicles;car++)
					{
						if(strcmp((result), vehicle[car][cLicense], true) == 0)
						{
						    msg_Client(playerid, COLOR_CASIER,"______-=Base de données de Los Santos=-______");
						    format(string,sizeof(string),"Plaque: %s",(result));
							msg_Client(playerid,COLOR_WHITE,string);
							format(string,sizeof(string),"Propriétaire: %s",vehicle[car][cOwner]);
							msg_Client(playerid,COLOR_WHITE,string);
						    msg_Client(playerid, COLOR_CASIER,"_____________________________________________");
						    return 1;
						}
						else{msg_Client(playerid,COLOR_FBI,"|Fbi| Plaque inconnue ...");}
					}
					return 1;
				}
                else if(strcmp(tmp,"menotter",true) == 0 ||strcmp(tmp,"men",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi (men)otter <id/joueur>");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
				    	{
				    	    if(PlayerInfo[giveplayerid][pMember] == 1 || PlayerInfo[giveplayerid][pMember] == 2 || PlayerInfo[giveplayerid][pMember] == 3 || PlayerInfo[giveplayerid][pMember] == 14 || PlayerInfo[giveplayerid][pMember] == 19 || PlayerInfo[giveplayerid][pMember] == 8)
					        {
					            msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas menotter un force de l'ordre.");
						        return 1;
					        }
					        if(player_Cuffed[giveplayerid] == 1)
						    {
						        msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur est déjà menotté.");
						        return 1;
						    }
						    if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid)
								{
									msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas vous menottez vous même.");
									return 1;
								}
								if(GetPlayerState(giveplayerid) != GetPlayerState(playerid))
								{
									msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur doit être en dehors du véhicule (ou vous devez être en dehors).");
									return 1;
								}
								if(GetPlayerState(playerid) == 1)
						    	{
						    	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été menotté par %s, jusqu'à ce qu'un force de l'ordre vous démenotte.", sendername);
									msg_Client(giveplayerid, COLOR_INFO, string);
									format(string, sizeof(string), "|Fbi| Vous avez menotté %s, seul un force de l'ordre pourra le démenotter.", giveplayer);
									msg_Client(playerid, COLOR_FBI, string);
									format(string, sizeof(string), "* %s a menotté %s, il ne poura allez nul part.", sendername ,giveplayer);
									ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
									GameTextForPlayer(giveplayerid, "~r~Menotter", 2500, 3);
									player_Cuffed[giveplayerid] = 1;
									SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
						    	}
						    	else
							    {
							        msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas dans votre voiture, ou vous n'êtes pas le conducteur.");
							        return 1;
							    }
							}
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas près de vous.");
						    	return 1;
							}
				    	}
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"confisquer",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service!");
					    return 1;
					}
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi confisquer <id/joueur> <nom>");
				  		msg_Client(playerid, COLOR_GREY, "{A98500}Noms Disponibles(Permis):{FFFFFF} conduite, vol, navigation, portarme, poidlourd, moto, train");
				  		msg_Client(playerid, COLOR_GREY, "{FFFFB2} arme, drogue, materiaux, pointpermis, telephone");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    tmp = strtok(cmdtext, idx);
							    if(!strlen(tmp))
								{
								    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi confisquer <id/joueur> <nom>");
							  		msg_Client(playerid, COLOR_GREY, "{A98500}Noms Disponibles(Permis):{FFFFFF} conduite, vol, navigation, portarme, poidlourd, moto, train");
							  		msg_Client(playerid, COLOR_GREY, "{FFFFB2} arme, drogue, materiaux, pointpermis, telephone");
									return 1;
								}
								if(strcmp(tmp,"conduite",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré le permis de conduire à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de conduire.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pCarLic] = 0;
							        PlayerInfo[giveplayerid][pPointPermis] = 0;
							        return 1;
								}
								if(strcmp(tmp,"vol",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré le permis de vol à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de vol.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pFlyLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"navigation",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré le permis de navigation à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de navigation.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pBoatLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"portarme",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré le permis de port d'arme à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de port d'arme.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pGunLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"poidlourd",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré le permis de poidlourd à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de poidlourd.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pLourdLic] = 0;
							        PlayerInfo[giveplayerid][pPointPermis] = 0;
							        return 1;
								}
								if(strcmp(tmp,"moto",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré le permis de moto à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de moto.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pMotoLic] = 0;
							        PlayerInfo[giveplayerid][pPointPermis] = 0;
							        return 1;
								}
								if(strcmp(tmp,"train",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré le permis de Train à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré votre permis de Train.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pTrainLic] = 0;
							        return 1;
								}
								if(strcmp(tmp,"arme",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez confisqué les armes à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué vos armes.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        SafeResetPlayerWeapons(giveplayerid);
							        PlayerInfo[giveplayerid][pGun1] = 0; PlayerInfo[giveplayerid][pAmmo1] = 0;
							        PlayerInfo[giveplayerid][pGun2] = 0; PlayerInfo[giveplayerid][pAmmo2] = 0;
							        PlayerInfo[giveplayerid][pGun3] = 0; PlayerInfo[giveplayerid][pAmmo3] = 0;
							        PlayerInfo[giveplayerid][pGun4] = 0; PlayerInfo[giveplayerid][pAmmo4] = 0;
							        PlayerInfo[giveplayerid][pInvWeapon][0] = 0; PlayerInfo[giveplayerid][pInvAmmo][0] = 0;
							        return 1;
								}
								if(strcmp(tmp,"drogue",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
								    format(string, sizeof(string), "|Fbi| Vous avez confisqué la drogue à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué votre drogues.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pWeed] = 0;
							        PlayerInfo[giveplayerid][pHeroine] = 0;
							        PlayerInfo[giveplayerid][pCocaine] = 0;
							        PlayerInfo[giveplayerid][pEcstasy] = 0;
							        return 1;
								}
								if(strcmp(tmp,"materiaux",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
								    format(string, sizeof(string), "|Fbi| Vous avez confisqué les matériaux à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué votre materiel.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pMats] = 0;
							        return 1;
								}
								if(strcmp(tmp,"pointpermis",true) == 0)
								{
								    new giveplayername[64];
								    GetPlayerName(playerid, sendername, sizeof(sendername));
								    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							        format(string, sizeof(string), "|Fbi| Vous avez retiré 1 point sur le permis à %s.", giveplayername);
							        msg_Client(playerid, COLOR_FBI, string);
							        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à retiré 1 point sur votre permis.", sendername);
							        msg_Client(giveplayerid, COLOR_WHITE, string);
							        PlayerInfo[giveplayerid][pPointPermis] --;
							        return 1;
								}
								if(strcmp(tmp,"telephone",true) == 0)
								{
								    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	                                GetPlayerName(playerid, sendername, sizeof(sendername));
	                                format(string, sizeof(string), "|Fbi| Vous avez confisqué le téléphone appartenant à %s.", giveplayer);
	                                msg_Client(playerid, COLOR_FBI, string);
	                                format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Agent %s vous à confisqué votre téléphone.", sendername);
	                                msg_Client(giveplayerid, COLOR_WHITE, string);
	                                PlayerInfo[giveplayerid][pNumber] = 0;
	                                return 1;
								}
								else
								{
								    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi confisquer <id/joueur> <nom>");
							  		msg_Client(playerid, COLOR_GREY, "{A98500}Noms Disponibles(Permis):{FFFFFF} conduite, vol, navigation, portarme, poidlourd, moto, train");
							  		msg_Client(playerid, COLOR_GREY, "{FFFFB2} arme, drogue, materiaux, pointpermis, telephone");
									return 1;
								}
							}
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas près de vous.");
							    return 1;
							}
					    }
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"amende",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
					if(PlayerInfo[playerid][pRank] < 1)
					{
						msg_Client(playerid, COLOR_FBI, "|Fbi| Vous devez être Rang 3 ou supérieur pour cette action.");
	     				return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi amende <id/joueur> <prix> <raison>");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi amende <id/joueur> <prix> <raison>");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 5000) { msg_Client(playerid, COLOR_FBI, "|Fbi| Le prix de l'amande ne peux pas être en desous de 1$ et au desus de 5000."); return 1; }
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								new length = strlen(cmdtext);
								while ((idx < length) && (cmdtext[idx] <= ' '))
								{
									idx++;
								}
								new offset = idx;
								
								while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
								{
									result[idx - offset] = cmdtext[idx];
									idx++;
								}
								result[idx - offset] = EOS;
								if(!strlen(result))
								{
									msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi amende <id/joueur> <prix> <raison>");
									return 1;
								}
								format(string, sizeof(string), "|Fbi| Vous avez donné une amende à %s pour $%d, raison: %s", giveplayer, moneys, (result));
								msg_Client(playerid, COLOR_FBI, string);
								format(string, sizeof(string), "L'Agent %s vous donne une amende, pour $%d\nraison : %s", sendername, moneys, (result));
								ShowPlayerDialog(giveplayerid,22,DIALOG_STYLE_MSGBOX,"|Amende|",string,"Accepeter","Refuser");
								police_TicketOffer[giveplayerid] = playerid;
								police_TicketPrice[giveplayerid] = moneys;
								return 1;
							}
							else
							{
								msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas près de vous.");
								return 1;
							}
						}
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
					    return 1;
					}
					return 1;
				}
                else if(strcmp(tmp,"forcer",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi forcer <id/joueur> <place(1,2,3)>");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
						{
						    if (ProxDetectorS(14.0, playerid, giveplayerid))
							{
							    if(player_Cuffed[giveplayerid] > 0)
								{
								    new person = strval(tmp);
					    			if(person < 1 || person > 3){ return 1;}
					    			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
						            format(string, sizeof(string), "* L'Agent %s ouvre la portière et embarque le suspect %s dans le véhicule.",sendername,giveplayer);
						            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						            PutPlayerInVehicle(giveplayerid, GetPlayerVehicleID(playerid), person);
						            return 1;
								}
								else{msg_Client(playerid,COLOR_FBI,"|Fbi| Ce joueur doit être menotté."); return 1;}
							}
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas près de vous.");
							    return 1;
							}
						}
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
					    return 1;
					}
			        return 1;
				}
				else if(strcmp(tmp,"demenotter",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_POLICE, "|COLOR_FBI| Vous n'êtes pas en service !");
					    return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi demenotter <id/joueur> ");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
						    if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid) { msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas vous démenottez vous même."); return 1; }
								if(player_Cuffed[giveplayerid] == 1)
								{
								    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
								    format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été démenotté par %s.", sendername);
									msg_Client(giveplayerid, COLOR_INFO, string);
									format(string, sizeof(string), "|Fbi| Vous avez demenotté %s.", giveplayer);
									msg_Client(playerid, COLOR_FBI, string);
									GameTextForPlayer(giveplayerid, "~g~Demenotter", 2500, 3);
									TogglePlayerControllable(giveplayerid, 1);
									player_Cuffed[giveplayerid] = 0;
									SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
									format(string, sizeof(string), "* %s démenotte %s.", sendername, giveplayer);
	      							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								}
								else
								{
								    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas menotté.");
								    return 1;
								}
							}
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas près de vous.");
							    return 1;
							}
						}
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"civil",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 2)
						{msg_Client(playerid, COLOR_FBI, "|Fbi| Vous devez être Rang 3 ou supérieur pour cette action.");return 1;}
					
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi civil <skin>");return 1;}
					
	  				if (PlayerToPoint(6, playerid,222.3618,184.8408,1003.0313))
     				{
     				    new Skin = strval(tmp);
     				    if(Skin > 299 || Skin <0)
     				    	{msg_Client(playerid,COLOR_FBI,"|Fbi| Skin compris entre 1 et 299.");return 1;}
     				    	
     				    SafeResetPlayerWeapons(playerid);
     				    SafeSetPlayerHealth(playerid,100);
     				    SafeSetPlayerArmour(playerid,100);
     				    SetPlayerSkin(playerid,Skin);
     				    SafeGivePlayerWeapon(playerid, 22, 200);
     				    SafeGivePlayerWeapon(playerid, 43, 1000);
	                    SafeGivePlayerWeapon(playerid, 41, 1500);

						msg_Client(playerid,COLOR_FBI,"|Fbi| Tu t'es infiltré.");
						return 1;
     				}
     				else
     					{msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas dans le vestiaire.");return 1;}
				}
				else if(strcmp(tmp,"besoinassistance",true) == 0 || strcmp(tmp,"ba",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
	                format(string,sizeof(string), "* %s active sa demande d'assistance.", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	                format(string, sizeof(string), "[Alerte] %s demande une assistance immédiate !", sendername);
	                new Float:X, Float:Y, Float:Z;
					GetPlayerPos(playerid, X, Y, Z);
	                for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] || IsPlayerConnected(i) && PlayerInfo[i][pMember]==1)
						{
						    SetPlayerMarkerForPlayer(i, playerid, 0x33CCFFFF);
						    msg_Client(i, COLOR_BK, string);
						}
					}
					return 1;
				}
				else if(strcmp(tmp,"stopbesoinassistance",true) == 0 || strcmp(tmp,"sba",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
	                format(string,sizeof(string), "* %s désactive sa demande d'assistance.", sendername);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] || IsPlayerConnected(i) && PlayerInfo[i][pMember]==1)
						{
						    SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);
						}
					}
					return 1;
				}
				else if(strcmp(tmp,"tactique",true) == 0)
				{
				    if(PlayerToPoint(2,playerid,213.8998,185.1251,1003.0313))
					{
					    if(PlayerInfo[playerid][pRank] < 6)
						{
							msg_Client(playerid, COLOR_FBI, "|Fbi| Vous devez être Rang 6 ou supérieur pour cette action.");
		     				return 1;
						}
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi tactique <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} on - off");
							return 1;
		  				}
		  				if(strcmp(tmp,"on",true) == 0)
		                {
		                    authorizetactical = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* QG: L'Agent %s vous permet de vous changer en Tactique. *", sendername);
							msg_Radio(2, COLOR_CASIER, string);
		                }
		                else if(strcmp(tmp,"off",true) == 0)
		                {
		                    authorizetactical = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* QG: L'Agent %s ne vous permet plus de vous changer en Tactique.",sendername);
							msg_Radio(2, COLOR_CASIER, string);
		                }
		                else
		                {
		                    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi tactique <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} on - off");
							return 1;
		                }
	                }
	                else
		            {
		                msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas au bon endroit.");
		                return 1;
		            }
	                return 1;
				}
				else if(strcmp(tmp,"tazer",true) == 0)
				{
				    if(IsPlayerInAnyVehicle(playerid))
				    {
				        msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas utiliser cette commande dans un véhicule.");
				        return 1;
				    }
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    if(police_Tazer[playerid] == 0)
					    {
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} prendre");
							return 1;
						}
						else
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} tazer - ranger");
							return 1;
						}
	  				}
	  				if(strcmp(tmp,"prendre",true) == 0)
					{
					    if(police_Tazer[playerid] == 0)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
		                    format(string, sizeof(string), "* %s prend son tazer.", sendername);
		                  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					        SetPlayerAttachedObject(playerid, 9, 18642, 6, 0.06, 0.01, 0.08, 180.0, 0.0, 0.0);
					        police_Tazer[playerid] = 1;
					        msg_Client(playerid, COLOR_FBI, "|Fbi| Vous prennez votre {FF6600}tazer{1111BB} dans votre main.");
					    }
					    else
		 				{
		 				    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous avez déjà votre {FF6600}tazer{1111BB} en main.");
		 				    return 1;
		 				}
				    }
				    else if(strcmp(tmp,"ranger",true) == 0)
					{
					    if(police_Tazer[playerid] == 1)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
             				format(string, sizeof(string), "* %s range son tazer.", sendername);
		                  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					        RemovePlayerAttachedObject(playerid, 9);
					        police_Tazer[playerid] = 0;
					        msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ranger votre {FF6600}tazer{1111BB}.");
					    }
					    else
					    {
					        msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'avez pas de {FF6600}tazer{1111BB} en main.");
					        return 1;
					    }
				    }
				    else if(strcmp(tmp,"tazer",true) == 0)
					{
					    if(police_Tazer[playerid] == 1)
					    {
					        new suspect = GetClosestPlayer(playerid);
					        if(IsPlayerConnected(suspect))
							{
							    if(player_Cuffed[suspect] > 0)
							    {
							        msg_Client(playerid, COLOR_FBI, "|Fbi| Joueur déjà menotté!");
							        return 1;
							    }
							    if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
							    {
								    if(IsPlayerInAnyVehicle(suspect))
								    {
								        msg_Client(playerid, COLOR_FBI, "|Fbi| Suspect embarqué !");
								        return 1;
								    }
								    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									new randt = random(4)+1;
									if(randt == 1)
									{
									    format(string, sizeof(string), "* %s essaye de tazer %s, mais rate.", sendername ,giveplayer);
										ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
									}
									else
									{
										format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été Tazé par un Agent pendant 8 secondes.");
										msg_Client(suspect, COLOR_INFO, string);
										format(string, sizeof(string), "|Fbi| Vous tazez le suspect pour 8 secondes.");
										msg_Client(playerid, COLOR_FBI, string);
										format(string, sizeof(string), "* %s vient de tazer %s.", sendername ,giveplayer);
										ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
										GameTextForPlayer(suspect, "~r~Taze", 2500, 3);
										TogglePlayerControllable(suspect, 0);
										LoopingAnim(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
										player_Cuffed[suspect] = 10;
										player_CuffedTime[suspect] = 8;
									}
					            }
					            else
								{
								    msg_Client(playerid, COLOR_FBI, "|Fbi| Personne à tazer !");
								    return 1;
								}
							}
							else
	   						{
	   						    msg_Client(playerid, COLOR_FBI, "|Fbi| Persone à tazer.");
	   						    return 1;
							}
					    }
					    else
					    {
					        msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'avez pas de {FF6600}tazer{1111BB} en main.");
					        return 1;
					    }
					}
				    else
				    {
				        if(police_Tazer[playerid] == 0)
					    {
							msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} prendre");
							return 1;
						}
						else
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi tazer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} tazer - ranger");
							return 1;
						}
				    }
				    return 1;
				}
				else if(strcmp(tmp,"equiper",true) == 0)
			    {
			    	if(PlayerToPoint(2,playerid,222.3618,184.8408,1003.0313))
			     	{
			        	if(police_Duty[playerid] != 1) return msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être en service !");
			         	tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi equiper <numero>");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 1. Normal - 2. Agent");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 3. Tactique stardard - 4. Tactique M4");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 5. Tactique Shotgun - 6. Tactique Sniper");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 7. Vie + Armure");
						    return 1;
						}
						new item = strval(tmp);
						if (item == 1)
						{
						    if(PlayerInfo[playerid][pRank] == 1)
							{
								SafeResetPlayerWeapons(playerid);
			                  	SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
			                  	SetPlayerSkin(playerid, 286);
			                  	SafeSetPlayerArmour(playerid, 100);
			                  	SafeSetPlayerHealth(playerid, 100);
			                  	GetPlayerName(playerid, sendername, sizeof(sendername));
			                  	format(string, sizeof(string), "* %s à pris son équipement de Agent Consultant dans le casier.", sendername);
			                  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		                  	}
		                  	else if(PlayerInfo[playerid][pRank] == 2)
							{
						 		SafeResetPlayerWeapons(playerid);
			                    SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
			                  	SafeGivePlayerWeapon(playerid, 29, 500);
			                    SetPlayerSkin(playerid, 286);
			                    SafeSetPlayerArmour(playerid, 100);
			                    SafeSetPlayerHealth(playerid, 100);
			                    GetPlayerName(playerid, sendername, sizeof(sendername));
			                    format(string, sizeof(string), "* %s à pris son équipement d'Agent Aspirant dans le casier.", sendername);
			                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							}
							else if(PlayerInfo[playerid][pRank] == 3)
							{
							    SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
			                  	SafeGivePlayerWeapon(playerid, 29, 500);
			                    SetPlayerSkin(playerid, 286);
			                    SafeSetPlayerArmour(playerid, 100);
			                    SafeSetPlayerHealth(playerid, 100);
			                    GetPlayerName(playerid, sendername, sizeof(sendername));
			                    format(string, sizeof(string), "* %s à pris son équipement de d'Agent Fédéral dans le casier.", sendername);
			                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							}
							else if(PlayerInfo[playerid][pRank] == 4)
							{
							    SafeResetPlayerWeapons(playerid);
			                    SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
			                  	SafeGivePlayerWeapon(playerid, 29, 500);
			                    SetPlayerSkin(playerid, 286);
			                    SafeSetPlayerArmour(playerid, 100);
			                    SafeSetPlayerHealth(playerid, 100);
			                    GetPlayerName(playerid, sendername, sizeof(sendername));
			                    format(string, sizeof(string), "* %s à pris son équipement d'Agent Spécial dans le casier.", sendername);
			                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							}
							else if(PlayerInfo[playerid][pRank] == 5)
							{
							    SafeResetPlayerWeapons(playerid);
			                    SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
			                  	SafeGivePlayerWeapon(playerid, 29, 500);
			                    SetPlayerSkin(playerid, 286);
			                    SafeSetPlayerArmour(playerid, 100);
			                    SafeSetPlayerHealth(playerid, 100);
			                    GetPlayerName(playerid, sendername, sizeof(sendername));
			                    format(string, sizeof(string), "* %s à pris son équipement d'Agent Spécial Cdl dans le casier.", sendername);
			                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							}
							else if(PlayerInfo[playerid][pRank] == 6)
							{
							    SafeResetPlayerWeapons(playerid);
			                    SafeResetPlayerWeapons(playerid);
			                    SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
			                  	SafeGivePlayerWeapon(playerid, 29, 500);
			                  	SafeGivePlayerWeapon(playerid, 31, 500);
			                    SetPlayerSkin(playerid, 286);
			                    SafeSetPlayerArmour(playerid, 100);
			                    SafeSetPlayerHealth(playerid, 100);
			                    GetPlayerName(playerid, sendername, sizeof(sendername));
			                    format(string, sizeof(string), "* %s à pris son équipement de Sous-Directeur dans le casier.", sendername);
			                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							}
							else if(PlayerInfo[playerid][pRank] == 7)
							{
							    SafeResetPlayerWeapons(playerid);
			                    SafeResetPlayerWeapons(playerid);
			                    SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
			                  	SafeGivePlayerWeapon(playerid, 29, 500);
			                  	SafeGivePlayerWeapon(playerid, 31, 500);
			                    SetPlayerSkin(playerid, 286);
			                    SafeSetPlayerArmour(playerid, 100);
			                    SafeSetPlayerHealth(playerid, 100);
			                    GetPlayerName(playerid, sendername, sizeof(sendername));
			                    format(string, sizeof(string), "* %s à pris son équipement de Directeur dans le casier.", sendername);
			                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							}
							return 1;
						}
						else if (item == 2)
						{
						    if(PlayerInfo[playerid][pRank] >= 2)
							{
							    SafeResetPlayerWeapons(playerid);
								//SafeGivePlayerWeapon(playerid, 31, 250);
								SafeGivePlayerWeapon(playerid, 41, 1000);
			                  	SafeGivePlayerWeapon(playerid, 3, 1);
			                  	SafeGivePlayerWeapon(playerid, 23, 200);
								SafeSetPlayerArmour(playerid, 100);
								SafeSetPlayerHealth(playerid, 100);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s à pris son équipement d'Agent dans le casier.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								return 1;
	   						}
						}
						else if (item == 3)
						{
						    if(authorizetactical == 1)
						    {
								SafeResetPlayerWeapons(playerid);
						    	SafeGivePlayerWeapon(playerid, 41, 999);
								SafeSetPlayerArmour(playerid, 100);
								SafeSetPlayerHealth(playerid, 100);
	 		 					SetPlayerSkin(playerid, 285);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s à pris son équipement de Tactique standard dans le casier.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								return 1;
	                        }
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| L'équipement Tactique n'est pas autorisé.");
							}
						}
						else if (item == 4)
						{
						    if(authorizetactical == 1)
						    {
								SafeResetPlayerWeapons(playerid);
						    	SafeGivePlayerWeapon(playerid, 41, 999);
						    	SafeGivePlayerWeapon(playerid, 17, 5);
					    		//SafeGivePlayerWeapon(playerid, 31, 600);
					    		SafeGivePlayerWeapon(playerid, 27, 300);
								SafeSetPlayerArmour(playerid, 100);
								SafeSetPlayerHealth(playerid, 100);
	 		 					SetPlayerSkin(playerid, 285);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s à pris son équipement de Tactique M4 dans le casier.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								return 1;
							}
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| L'équipement Tactique n'est pas autorisé.");
							}
						}
						else if (item == 5)
						{
						    if(authorizetactical == 1)
						    {
			   			    	SafeResetPlayerWeapons(playerid);
						    	SafeGivePlayerWeapon(playerid, 41, 999);
						    	SafeGivePlayerWeapon(playerid, 16, 5);
						    	SafeGivePlayerWeapon(playerid, 27, 100);
								SafeSetPlayerArmour(playerid, 100);
								SafeSetPlayerHealth(playerid, 100);
								SetPlayerSkin(playerid, 285);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s à pris son équipement de Tactique shotgun dans le casier.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								return 1;
	                        }
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| L'équipement Tactique n'est pas autorisé.");
							}
						}
						else if (item == 6)
						{
						    if(authorizetactical == 1)
						    {
						    	SafeResetPlayerWeapons(playerid);
						    	SafeGivePlayerWeapon(playerid, 34, 50);
						    	SafeGivePlayerWeapon(playerid, 27, 300);
						    	SafeGivePlayerWeapon(playerid, 29, 300);
						    	SafeGivePlayerWeapon(playerid, 31, 300);
								SafeSetPlayerArmour(playerid, 100);
								SafeSetPlayerHealth(playerid, 100);
								SetPlayerSkin(playerid, 285);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s à pris son équipement de Tactique sniper dans le casier.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								return 1;
	                        }
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| L'équipement Tactique n'est pas autorisé.");
							}
						}
						else if (item == 7)
						{
						    SafeSetPlayerArmour(playerid, 100);
	    	                SafeSetPlayerHealth(playerid, 100);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s prends son gilet pare-balles et mange un donut's.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						}
						else
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi equiper <numero>");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 1. Normal - 2. Agent");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 3. Tactique stardard - 4. Tactique M4");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 5. Tactique Shotgun - 6. Tactique Sniper");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéros disponibles:{FFFFFF} 7. Vie + Armure");
						    return 1;
						}
				    }
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas dans les vestiaires.");
					    return 1;
					}
					return 1;
			    }
				else if(strcmp(tmp,"badge",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service!");
					    return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi badge <id/joueur>");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
						{
						    if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid) { msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas vous montrez votre badge à vous même."); return 1; }
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s montre son badge à %s.", sendername,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						    	if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "* Directeur %s", sendername); }
					        	else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* Sous-Directeur %s", sendername); }
					        	else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* Agent Spécial Cdl %s", sendername); }
					        	else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* Agent Spécial %s", sendername); }
					        	else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* Agent Fédéral %s", sendername); }
					        	else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* Agent Aspirant %s", sendername); }
					        	else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* Agent Consultant %s", sendername); }
								msg_Client(giveplayerid, COLOR_GREY, string);
					        	format(string, sizeof(string), "%s vous montre son badge.", sendername);
								msg_Client(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "|Fbi| Vous avez montré votre badge à %s.", giveplayer);
								msg_Client(playerid, COLOR_FBI, string);
							}
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas pret de vous.");
							    return 1;
							}
						}
					}
					else
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
					    return 1;
					}
					return 1;
				}
				else if(strcmp(tmp,"fouiller",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi fouiller <id/joueur>");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
						{
						    if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid)
									{msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas vous fouillez vous même."); return 1;}

							    format(string, sizeof(string), "* %s fouille le corp %s et cherche des objets.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);

								format(string, sizeof(string), "|__________ Objets - %s __________|", PlayerInfo[giveplayerid][pName]);
						        msg_Client(playerid, COLOR_STATS, string);
						        if(PlayerInfo[giveplayerid][pCash] > 0)
								{
								    format(string,sizeof(string),"| Porte-feuille $%d",PlayerInfo[giveplayerid][pCash]);
									msg_Client(playerid,COLOR_WHITE,string);
								}

								if(bag[giveplayerid][statut]==1)
								    {return 1;}

						        new wep[64];
						        if(PlayerInfo[giveplayerid][pIdentie] > 0) { msg_Client(playerid,COLOR_WHITE,"| Carte d'itentité"); }
                                if(PlayerInfo[giveplayerid][pWeed] > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) de weed",PlayerInfo[giveplayerid][pWeed]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pHeroine] > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) d'Héroïne",PlayerInfo[giveplayerid][pHeroine]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pCocaine] > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) de cocaïne",PlayerInfo[giveplayerid][pCocaine]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pEcstasy] > 0)
								{
								    format(string,sizeof(string),"| %d gamme(s) d'ecstasy",PlayerInfo[giveplayerid][pEcstasy]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pMats] > 0)
								{
								    format(string,sizeof(string),"| %d matériaux",PlayerInfo[giveplayerid][pMats]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
                                if(PlayerInfo[giveplayerid][pInvWeapon][0] > 0 && PlayerInfo[giveplayerid][pInvAmmo][0] > 0)
								{
								    GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon][0],wep,sizeof(wep));
									format(string,sizeof(string),"| %s (%d balle(s))",wep,PlayerInfo[giveplayerid][pInvAmmo][0]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][1] > 0 && PlayerInfo[giveplayerid][pInvAmmo][1] > 0)
								{
								    GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon][1],wep,sizeof(wep));
									format(string,sizeof(string),"| %s (%d balle(s))",wep,PlayerInfo[giveplayerid][pInvAmmo][1]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][2] > 0 && PlayerInfo[giveplayerid][pInvAmmo][2] > 0)
								{
								    GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon][2],wep,sizeof(wep));
									format(string,sizeof(string),"| %s (%d balle(s))",wep,PlayerInfo[giveplayerid][pInvAmmo][2]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][3] > 0 && PlayerInfo[giveplayerid][pInvAmmo][3] > 0)
								{
								    GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon][3],wep,sizeof(wep));
									format(string,sizeof(string),"| %s (%d balle(s))",wep,PlayerInfo[giveplayerid][pInvAmmo][3]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][4] > 0 && PlayerInfo[giveplayerid][pInvAmmo][4] > 0)
								{
								    GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon][4],wep,sizeof(wep));
									format(string,sizeof(string),"| %s (%d balle(s))",wep,PlayerInfo[giveplayerid][pInvAmmo][4]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
								if(PlayerInfo[giveplayerid][pInvWeapon][5] > 0 && PlayerInfo[giveplayerid][pInvAmmo][5] > 0)
								{
								    GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon][5],wep,sizeof(wep));
									format(string,sizeof(string),"| %s (%d balle(s))",wep,PlayerInfo[giveplayerid][pInvAmmo][5]);
									msg_Client(playerid,COLOR_WHITE,string);
								}
							}
							else
								{msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas près de vous.");return 1;}
						}
	 				}
	 				else
	 				{
	 				    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
	 				    return 1;
	 				}
	 				return 1;
				}
				else if(strcmp(tmp,"droits",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service !");
					    return 1;
					}
					tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi droits <id/joueur> <Desc. delit>");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new length = strlen(cmdtext);
								while ((idx < length) && (cmdtext[idx] <= ' '))
								{
									idx++;
								}
								new offset = idx;
								
								while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
								{
									result[idx - offset] = cmdtext[idx];
									idx++;
								}
								result[idx - offset] = EOS;
								if(!strlen(result))
								{
								    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi droits <id/joueur> <texte>");
									return 1;
								}
								new nom[MAX_PLAYER_NAME];
								GetPlayerName(playerid, nom, sizeof(nom));
								format(string, sizeof(string), "%s dit: Vous êtes en état d'arrestation.", nom);
				                ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
								format(string, sizeof(string), "%s dit: Pour avoir commis le délit suivant %s.", nom, result);
				                ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
								format(string, sizeof(string), "%s dit: Vous avez le droit de garder le silence.", nom);
				                ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
								format(string, sizeof(string), "%s dit: Tout ce que vous direz pourra être retenu contre vous devant le tribunal.", nom);
				                ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
								format(string, sizeof(string), "%s dit: Vous pouvez appeler un avocat.", nom);
				                ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
				                return 1;
							}
							else
							{
							    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas près de vous.");
							    return 1;
							}
					    }
					}
					else
	 				{
	 				    msg_Client(playerid, COLOR_FBI, "|Fbi| Ce joueur n'est pas connecté.");
	 				    return 1;
	 				}
	 				return 1;
				}
				else if(strcmp(tmp,"herse",true) == 0)
				{
				    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service!");
					    return 1;
					}
					if(PlayerInfo[playerid][pRank] < 2)
		            {
		                msg_Client(playerid, COLOR_FBI, "|Fbi| Vous devez être rang 2 ou plus pour pouvoir faire cette action.");
		                return 1;
		            }
		            tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi herse <nom>");
					    msg_Client(playerid, COLOR_WHITE, "{FFFFB2} creer - sup(primer) - [enlevertousherse (eth) <-Rang 6]");
						return 1;
					}
					if(strcmp(tmp,"creer",true) == 0)
					{
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas mettre de herse dans un véhicule!");
					        return 1;
					    }
					    if(totalSpikes>=MAX_SPIKE)
    					{
    					    msg_Client(playerid, COLOR_FBI, "|Fbi| Le nombre Max de herses a été atteint.");
    					    return 1;
    					}
    					GetPlayerName(playerid, sendername, sizeof(sendername));
    					format(string, sizeof(string), "* %s deploie une herse sur la route.", sendername);
				      	ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
    					new Float:tmpX,Float:tmpY,Float:tmpZ,Float:tmpA;
						GetPlayerPos(playerid,tmpX,tmpY,tmpZ);
						GetPlayerFacingAngle(playerid, tmpA);
						spike_Create(tmpX,tmpY,tmpZ,tmpA,PlayerInfo[playerid][pMember]);
						return 1;
					}
					else if(strcmp(tmp,"sup",true) == 0 ||strcmp(tmp,"supprimer",true) == 0)
					{
					    spike_Remove(playerid);
					}
					else if(strcmp(tmp,"enlevertousherse",true) == 0 ||strcmp(tmp,"eth",true) == 0)
					{
						if(PlayerInfo[playerid][pRank] < 6)
			            {
			                msg_Client(playerid, COLOR_FBI, "|Fbi| Vous devez être rang 6 ou plus pour pouvoir faire cette action.");
			                return 1;
			            }
			            spike_RemoveAll(playerid);
					}
					return 1;
				}
				else if(strcmp(tmp,"bar",true) == 0 || strcmp(tmp,"barrage",true) == 0)
				{
                    if(police_Duty[playerid] != 1 && PlayerInfo[playerid][pMember] == 2)
					{
					    msg_Client(playerid, COLOR_FBI, "|Fbi| Vous n'êtes pas en service!");
					    return 1;
					}
					if(PlayerInfo[playerid][pRank] < 2)
		            {
		                msg_Client(playerid, COLOR_FBI, "|Fbi| Vous devez être rang 2 ou plus pour pouvoir faire cette action.");
		                return 1;
		            }
		            tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi bar(rage) <nom>");
					    msg_Client(playerid, COLOR_WHITE, "{FFFFB2} creer - sup(primer) - [enlevertousbar(rage) (etb) <-Rang 6]");
						return 1;
					}
					if(strcmp(tmp,"creer",true) == 0)
					{
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        msg_Client(playerid, COLOR_FBI, "|Fbi| Vous ne pouvez pas mettre de herse dans un véhicule!");
					        return 1;
					    }
					    if(totalBars>=MAX_BAR)
    					{
    					    msg_Client(playerid, COLOR_FBI, "|Fbi| Le nombre Max de barrages a été atteint.");
    					    return 1;
    					}
    					tmp = strtok(cmdtext, idx);
    					if(!strlen(tmp))
						{
						    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fbi bar(rage) creer <numéro>");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 1. Petit - 2. Moyen - 3. Grand - 4. Cone");
						    msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 5. Panneau - 6. Accès Interdit - 7. Route fermé");
							return 1;
						}
						new num = strval(tmp);
						new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
					    GetPlayerPos(playerid, plocx, plocy, plocz);
					    GetPlayerFacingAngle(playerid,ploca);
					    GetPlayerName(playerid, sendername, sizeof(sendername));
						if (num == 1)
						{
					        bar_Create(1459,plocx,plocy,plocz-0.5,ploca,PlayerInfo[playerid][pMember]);
							format(string, sizeof(string), "* %s deploie une barrage sur la route.", sendername);
			          		GameTextForPlayer(playerid,"~w~Barrage ~b~Place !",3000,1);
						}
						else if (num == 2)
						{
					        bar_Create(978,plocx,plocy,plocz-0.3,ploca,PlayerInfo[playerid][pMember]);
							format(string, sizeof(string), "* %s deploie une barrage sur la route.", sendername);
			          		GameTextForPlayer(playerid,"~w~Barrage ~b~Place !",3000,1);
						}
						else if (num == 3)
						{
					        bar_Create(981,plocx,plocy,plocz-0.2,ploca+180,PlayerInfo[playerid][pMember]);
							format(string, sizeof(string), "* %s deploie une barrage sur la route.", sendername);
			          		GameTextForPlayer(playerid,"~w~Barrage ~b~Place !",3000,1);
						}
						else if (num == 4)
						{
					        bar_Create(1238,plocx,plocy,plocz-0.7,ploca,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une cone sur la route.", sendername);
			          		GameTextForPlayer(playerid,"~w~Cone ~b~Place !",3000,1);
						}
						else if (num == 5)
						{
					        bar_Create(1425,plocx,plocy,plocz-0.7,ploca+180,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une barrage sur la route.", sendername);
			          		GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
						}
						else if (num == 6)
						{
					        bar_Create(3265,plocx,plocy,plocz-0.8,ploca+180,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une barrage sur la route.", sendername);
			          		GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
						}
						else if (num == 7)
						{
					        bar_Create(3091,plocx,plocy,plocz-0.5,ploca+180,PlayerInfo[playerid][pMember]);
					        format(string, sizeof(string), "* %s deploie une barrage sur la route.", sendername);
			          		GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				      	ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
                        format(string, sizeof(string), "HQ: Un barrage a été déployé par %s, il a été marqué sur votre map (marqueur rouge).", sendername);
						for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 5)
								{
									SetPlayerCheckpoint(playerid, plocx, plocz, plocz-10, 1.0);
									msg_Client(i, COLOR_CASIER, string);
									if (PlayerInfo[i][pRank] >= 6)
										{msg_Client(i, COLOR_FBI, "|Fbi| Vous pouvez enlever tous les barrages, Tapez /fbi bar(rage) etb");}
								}
							}
						}
						return 1;
					}
					else if(strcmp(tmp,"sup",true) == 0 || strcmp(tmp,"suprimer",true) == 0)
					{
					    bar_Remove(playerid);
					}
					else if(strcmp(tmp,"etb",true) == 0 || strcmp(tmp,"enlevertousbarrage",true) == 0)
					{
					    bar_RemoveAll(playerid);
					    GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "QG: Tous les barrages routiers de la zone ont été levé sous ordre de %s.", sendername);
						for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 5)
									{msg_Client(i, COLOR_CASIER, string);}
							}
						}
					}
				}
				else if(strcmp(tmp,"inviter",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_FBI, "|Fbi| /fbi inviter <id/joueur>");
							return 1;
						}
						new para1;
						para1 = ReturnUser(tmp);
						if(IsPlayerConnected(para1))
						{
						  	if(para1 != INVALID_PLAYER_ID)
						   	{
								    if(para1 == playerid) {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter vous même !");return 1;}
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(para1, giveplayer, sizeof(giveplayerid));
									PlayerInfo[para1][pMember] = 2;
									PlayerInfo[para1][pRank] = 1;
									format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été invité dans la faction police par %s.",sendername);
									msg_Client(para1, COLOR_INFO, string);
									format(string,sizeof(string),"|Fbi| Vous avez invité %s.",giveplayer);
									msg_Client(playerid,COLOR_FBI,string);
									OnPlayerUpdateSQL(para1);
									return 1;
							}
						}
						else
						{
							msg_Client(playerid,COLOR_FBI,"|Fbi| Ce joueur n'est pas connecté.");
							return 1;
						}
					}
					else
					{
					    msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être rang 6 ou plus pour faire cette action.");
						return 1;
					}
				}
				else if(strcmp(tmp,"rang",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_FBI, "|Fbi| /fbi rang <id/joueur> <rang>");
							return 1;
						}
						new para1;
						para1 = ReturnUser(tmp);
						if(IsPlayerConnected(para1))
						{
						  	if(para1 != INVALID_PLAYER_ID)
						   	{
							   	if (PlayerInfo[para1][pMember] == PlayerInfo[playerid][pMember] || PlayerInfo[para1][pLeader] == PlayerInfo[playerid][pLeader])
								{
								    if(para1 == playerid) {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas changez votre rang vous meme!");return 1;}
								    tmp = strtok(cmdtext, idx);
								    if(!strlen(tmp))
									{
										msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} /fbi rang <id/joueur> <rang>");
										return 1;
									}
								    new rang = strval(tmp);
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(para1, giveplayer, sizeof(giveplayerid));
									PlayerInfo[para1][pRank] = rang;
									format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Votre rang de faction a été changé à %d.",rang);
									msg_Client(para1, COLOR_INFO, string);
									format(string,sizeof(string),"|Fbi| Vous avez changé le rang de %s à %d.",giveplayer,rang);
									msg_Client(playerid,COLOR_FBI,string);
									return 1;
								}
						   		else
								{
								    msg_Client(playerid, COLOR_FBI,"|Fbi| Ce joueur n'est pas dans votre faction.");
								    return 1;
								}
							}
						}
						else
						{
							msg_Client(playerid,COLOR_FBI,"|Fbi| Ce joueur n'est pas connecté.");
							return 1;
						}
					}
					else
					{
					    msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être rang 6 ou plus pour faire cette action.");
						return 1;
					}
				}
				else if(strcmp(tmp,"virer",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_FBI, "|Fbi| /fbi virer <id/joueur> ");
							return 1;
						}
						new para1;
						para1 = ReturnUser(tmp);
						if(IsPlayerConnected(para1))
						{
						  	if(para1 != INVALID_PLAYER_ID)
						   	{
							   	if (PlayerInfo[para1][pMember] == PlayerInfo[playerid][pMember] || PlayerInfo[para1][pLeader] == PlayerInfo[playerid][pLeader])
								{
								    if(para1 == playerid) {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous virez vous meme!");return 1;}
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(para1, giveplayer, sizeof(giveplayerid));
									PlayerInfo[para1][pRank] = 0;
									PlayerInfo[para1][pMember] = 0;
									PlayerInfo[para1][pLeader] = 0;
									format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été viré de votre faction par %s.",sendername);
									msg_Client(para1, COLOR_INFO, string);
									format(string,sizeof(string),"|Fbi| Vous avez virer %s.",giveplayer);
									msg_Client(playerid,COLOR_FBI,string);
									OnPlayerUpdateSQL(para1);
									return 1;
								}
						   		else
								{
								    msg_Client(playerid, COLOR_FBI,"|Fbi| Ce joueur n'est pas dans votre faction.");
								    return 1;
								}
							}
						}
						else
						{
							msg_Client(playerid,COLOR_FBI,"|Fbi| Ce joueur n'est pas connecté.");
							return 1;
						}
					}
					else
					{
					    msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être rang 6 ou plus pour faire cette action.");
						return 1;
					}
				}
				else
				{
				    if(PlayerInfo[playerid][pRank] >= 1)
					{
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /fbi <nom>");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}1{A98500}:{FFFFFF} (su)spect - arreter - duty - rechercher - confisquer - menotter - demenotter - droits - equiper");
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}1{A98500}:{FFFFFF} forcer - besoinassistance (ba) - stopbesoinassistance (sba) - tazer - badge - casier - plaque");
				    }
				    if(PlayerInfo[playerid][pRank] >= 2)
					{
						msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}2{A98500}:{FFFFFF} amende - civil - fouiller - herse - bar(rage)");
					}
					if(PlayerInfo[playerid][pRank] >= 6)
					{
				    	msg_Client(playerid, COLOR_POLICE, "{A98500}Rang {FF0000}6{A98500}:{FFFFFF} tactique - inviter - virer - rang - vidercasier");
					}
					return 1;
				}
			}
			else
			{
			    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne faite pas parti du F.B.I.");
				return 1;
			}
	    }
	    return 1;
	}*/
	else if(strcmp(cmd, "/po", true) == 0 ||strcmp(cmd, "/pompier", true) == 0 || strcmp(cmd, "/pompiers", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 999 || PlayerInfo[playerid][pMember] == 999)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
				    	msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /pompier <nom>");
				    	msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}1{FFFFB2}: grille - tda - ba - sba");
				    }
					if(PlayerInfo[playerid][pRank] >= 6)
						{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}: inviter - rang - virer - garer - ann(once) - gestion - feu - feumanuel - vrang");}
					return 1;
				}
				if(strcmp(tmp,"ann",true) == 0 || strcmp(tmp,"annonce",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 5)
				    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être rang 5 minimum."); return 1;}
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
						{idx++;}
					new offset = idx;

					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{result[idx - offset] = cmdtext[idx];idx++;}
					result[idx - offset] = EOS;
					if(!strlen(result))
						{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /po(mpier) ann(once) <texte>");return 1;}
					SendClientMessageToAll(COLOR_WHITE, "{FFFFFF}======== {E600FF}Annonce Fire Departement {FFFFFF}========");
					if(PlayerInfo[playerid][pRank] == 5)
						{format(string, sizeof(string), "%s %s : %s",FireInfo[rank5], PlayerInfo[playerid][pRealName], result);}
					else if(PlayerInfo[playerid][pRank] == 6)
						{format(string, sizeof(string), "%s %s : %s",FireInfo[rank6], PlayerInfo[playerid][pRealName], result);}
					SendClientMessageToAll(COLOR_WHITE, string);
					return 1;
				}
				else if(strcmp(tmp,"tracerdernierappel",true) == 0 || strcmp(tmp,"tda",true) == 0)
				{
					    if(emdtrace1 == 0 || emdtrace[0] == 0 || emdtrace[1] == 0 || emdtrace[2] == 0)
			            	{msg_Client(playerid, COLOR_POMPIER, "{C7006C}» Pompier «{FFFFFF} Erreur, impossible de tracer l'appel");return 1;}
			            msg_Client(playerid, COLOR_POMPIER, "{C7006C}» Pompier «{FFFFFF} L'endroit ou a été effectué l'appel est marqué sur votre carte (marqueur rouge)");
			            msg_Client(playerid, COLOR_POMPIER, "{C7006C}» Pompier «{FFFFFF} Note: /enlevergps pour enlever le marquer rouge");
						SetPlayerCheckpoint(playerid,emdtrace[0],emdtrace[1],emdtrace[2],8.0);
			            return 1;
				}
				else if(strcmp(tmp,"besoinassistance",true) == 0 || strcmp(tmp,"ba",true) == 0)
				{
				    if(fire_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POMPIER, "{C7006C}» Pompier «{FFFFFF} Vous n'êtes pas en service!");return 1;}

	                format(string,sizeof(string), "* %s active sa demande d'assistance.", PlayerInfo[playerid][pName]);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	                format(string, sizeof(string), "[Alerte] %s demande une assistance immédiate !", PlayerInfo[playerid][pName]);
	                new Float:X, Float:Y, Float:Z;
	                player_Backup[playerid] = true;
					GetPlayerPos(playerid, X, Y, Z);
	                for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
							{SetPlayerMarkerForPlayer(i, playerid, COLOR_BK); msg_Client(i, COLOR_BK, string);}
					}
					return 1;
				}
				else if(strcmp(tmp,"stopbesoinassistance",true) == 0 || strcmp(tmp,"sba",true) == 0)
				{
				    if(fire_Duty[playerid] != 1)
						{msg_Client(playerid, COLOR_POMPIER, "{C7006C}» Pompier «{FFFFFF} Vous n'êtes pas en service!");return 1;}

	                format(string,sizeof(string), "* %s désactive sa demande d'assistance.", PlayerInfo[playerid][pName]);
	                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	                player_Backup[playerid] = false;
					for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
							{SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);}
					}
					return 1;
				}
				else if(strcmp(tmp,"gerer",true) == 0 || strcmp(tmp,"gestion",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank]<6)
				        {msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action."); return 1;}
				    if(fire_Duty[playerid]==1)
				        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible en service !"); return 1;}
                    fire_Gestion(playerid);
					return 1;
				}
				else if(strcmp(tmp,"feu",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
					    new rand = random(7);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
					    CreateExplosion(gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 1, 500);
						SendFamilyMessage(5,COLOR_RED,"» Alerte « Un feu s'est déclaré (Point rouge minimap)");
						msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous avez déclaré un feu.");
						for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
						{
						    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == 5)
						        {SetPlayerCheckpoint(i,gFirePoints[rand][0], gFirePoints[rand][1], gFirePoints[rand][2], 8);}
						}
						return 1;
					}
				}
				else if(strcmp(tmp,"feumanuel",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
					    new Float:x,Float:y,Float:z;
					    GetPlayerPos(playerid,x,y,z);
					    SetTimerEx("fire_StartFire", 15000, false, "fff", x,y,z);
					    SendFamilyMessage(5,COLOR_RED,"» Alerte « Un feu s'est déclaré (Point rouge minimap)");
						msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous avez déclaré un feu à cette endroit dans 15 secondes.");
						for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
						{
						    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == 5)
						        {SetPlayerCheckpoint(i,x, y, z, 8);}
						}
					}
				}
				else if(strcmp(tmp,"inviter",true) == 0)
				{
					if(PlayerInfo[playerid][pRank] >= 6)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /po(mpier) inviter <id/joueur>");return 1;}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{
						    if(giveplayerid == playerid)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter dans votre propre faction !");return 1;}
        					if(PlayerInfo[giveplayerid][pMember] != 0)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur fait déjà parti d'une faction.");return 1;}
							format(string, sizeof(string), "{C7006C}» Pompier «{FFFFFF} Vous avez invité %s.",PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_POMPIER, string);
							format(string,sizeof(string),"%s vous invite à rejoindre sa faction.",PlayerInfo[playerid][pName]);
							ShowPlayerDialog(giveplayerid,54,DIALOG_STYLE_MSGBOX,"|Invitation|",string,"Accepter","Refuser");
							invited_Player[giveplayerid]=playerid;
							return 1;
						}
						else
							{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					}
					else
						{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");return 1;}
				}
				else if(strcmp(tmp,"rang",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /po(mpier) rang <id/joueur> <rang>");return 1;}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{
					    	if(giveplayerid == playerid)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous changer votre rang vous meme !");return 1;}
                            if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
					    	tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
								{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /po(mpier) rang <id/joueur> <rang>");return 1;}
							var = strval(tmp);
							if(var < 1 || var > 6)
								{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Rang compri entre 1 et 6."); return 1;}
							PlayerInfo[giveplayerid][pRank] = var;
							format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été promus rang %d par %s.",var,PlayerInfo[playerid][pName]);
							msg_Client(giveplayerid, COLOR_INFO, string);
							format(string, sizeof(string), "{C7006C}» Pompier «{FFFFFF} Vous avez mis rang %d, %s.",var,PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_POMPIER, string);
							return 1;
						}
						else
							{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					}
					else
						{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");return 1;}
				}
				else if(strcmp(tmp,"virer",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /po(mpier) virer <id/joueur>");return 1;}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{
						    if(giveplayerid == playerid)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous virer vous meme !");return 1;}
                            if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
							PlayerInfo[giveplayerid][pRank] = 0;
							PlayerInfo[giveplayerid][pLeader] = 0;
							PlayerInfo[giveplayerid][pMember] = 0;
							format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été virer par %s",PlayerInfo[playerid][pName]);
							msg_Client(giveplayerid, COLOR_INFO, string);
							format(string, sizeof(string), "{C7006C}» Pompier «{FFFFFF} Vous avez virer %s.",PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_POMPIER, string);
							OnPlayerUpdateSQL(giveplayerid);
							return 1;
						}
						else
							{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
					}
					else
						{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");return 1;}
				}
				else if(strcmp(tmp,"garer",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 6)
					{
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
					    	{
                        		new Float:x,Float:y,Float:z;
								new Float:a;
								GetVehiclePos(idcar, x, y, z);
								GetVehicleZAngle(idcar, a);
								vehicle[idcar][cLocationx] = x;
								vehicle[idcar][cLocationy] = y;
								vehicle[idcar][cLocationz] = z;
								vehicle[idcar][cAngle] = a;
								vehicle_Save(idcar,0,0);
								car_Recreate(playerid,idcar);
						    	msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Véhicule parké.");
						    	return 1;
							}
						}
						else
							{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être dans un véhicule."); return 1;}
					}
					else
						{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");return 1;}
				}
				else if(strcmp(tmp,"vrang",true) == 0)
				{
					if(PlayerInfo[playerid][pRank]< 6)
						{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez êtes rang 6 ou plus pour faire cette action.");return 1;}
					if(GetPlayerState(playerid) != 2)
						{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");return 1;}
					if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
					{
					    tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /po(mpier) vrang <rang>");return 1;}
						if(strval(tmp) > 6 || strval(tmp) < 1)
						    {msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Rang compris entre 1 et 6."); return 1;}
                        vehicle[idcar][cRank] = strval(tmp);
						vehicle_Save(idcar,0,0);
						car_Recreate(playerid,idcar);
						format(string,sizeof(string),"{C7006C}» Pompier «{FFFFFF} Rang du véhicule réglé à %d ou supérieur.",strval(tmp));
						msg_Client(playerid,COLOR_POMPIER,string);
						return 1;
					}
					else
					    {msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Ce véhicule ne fait pas parti des pompiers."); return 1;}
				}
			}
			else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite pas parti des pompiers."); return 1;}
		}
		return 2;
	}
	else if(strcmp(cmd, "/med", true) == 0 ||strcmp(cmd, "/medecin", true) == 0 || strcmp(cmd, "/médecin", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] != 11)
	        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite pas parti des médecins.");}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /med(ecin) <nom>");
			msg_Client(playerid, COLOR_USAGE, "{A98500}Noms disponibles :{FFFFB2} soigner - tracerdernierappel (tda) - grille");
			return 1;
		}
		if(strcmp(tmp,"soigner",true) == 0)
		{
			if(job_Start[playerid] != 1)
				{return msg_Client(playerid, COLOR_ALLDEPT, "{FF8282}» Médecin «{FFFFFF} Vous n'êtes pas en service!");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /med(ecin) soigner <id/joueur> <prix>");}
			giveplayerid = ReturnUser(tmp);
		    if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Client(playerid, COLOR_ALLDEPT, "{FF8282}» Médecin «{FFFFFF} Ce joueur n'est pas connecté.");}
			if (!ProxDetectorS(8.0, playerid, giveplayerid))
				{return msg_Client(playerid, COLOR_ALLDEPT, "{FF8282}» Médecin «{FFFFFF} Ce joueur n'est pas à côté de vous.");}
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /med(ecin) soigner <id/joueur> <prix>");}
			var = strval(tmp);
            if(var < 100 || var > 2000)
                {return msg_Client(playerid, COLOR_ALLDEPT, "{FF8282}» Médecin «{FFFFFF} Le prix doit être compris entre $100 et $2000.");}
			format(string,sizeof(string),"{FFFFFF}%s vous propose de vous soigner pour $%d.",PlayerInfo[playerid][pRealName],var);
			ShowPlayerDialog(giveplayerid,111,DIALOG_STYLE_MSGBOX,"{FF8282}» Médecin «{FFFFFF} Soins",string,"Valider","Annuler");
			player_SellOffer[giveplayerid] = playerid; player_SellOther[giveplayerid] = var;
		}
		else if(strcmp(tmp,"tracerdernierappel",true) == 0 || strcmp(tmp,"tda",true) == 0)
		{
			if(emdtrace1 == 0 || emdtrace[0] == 0 || emdtrace[1] == 0 || emdtrace[2] == 0)
		    	{return msg_Client(playerid, COLOR_ALLDEPT, "{FF8282}» Médecin «{FFFFFF} Erreur, impossible de tracer l'appel");}
		    msg_Client(playerid, COLOR_ALLDEPT, "{FF8282}» Médecin «{FFFFFF} L'endroit ou a été effectué l'appel est marqué sur votre carte (marqueur rouge)");
	     	msg_Client(playerid, COLOR_ALLDEPT, "{FF8282}» Médecin «{FFFFFF} Note: /enlevergps pour enlever le marquer rouge");
			SetPlayerCheckpoint(playerid,emdtrace[0],emdtrace[1],emdtrace[2],8.0);
		}
	    return 1;
	}
	else if(strcmp(cmd, "/fouiller", true) == 0)
	{
	    if(PlayerInfo[playerid][pLevel] < 3)
	    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être level 3 minimum."); return 1;}

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /fouiller <id/joueur>");return 1;}
			
        giveplayerid = ReturnUser(tmp);
		if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
		{
			if (ProxDetectorS(2.0, playerid, giveplayerid))
			{
			    if(giveplayerid == playerid)
					{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous fouillez vous même."); return 1;}

				format(string, sizeof(string), "* %s fouille le corp %s et cherche des objets.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				
                format(string, sizeof(string), "|__________ Objets - %s __________|", PlayerInfo[giveplayerid][pName]);
				msg_Client(playerid, COLOR_STATS, string);
                if(PlayerInfo[giveplayerid][pCash] > 0)
					{format(string,sizeof(string),"| Porte-feuille $%d",PlayerInfo[giveplayerid][pCash]);msg_Client(playerid,COLOR_WHITE,string);}
					
				if(bag[giveplayerid][statut]==1)
				    {return 1;}

				if(PlayerInfo[giveplayerid][pIdentie] > 0)
					{msg_Client(playerid,COLOR_WHITE,"| Carte d'itentité");}
				if(inventory_GetItemQuantity(giveplayerid,1575) > 0)
					{format(string,sizeof(string),"| %d gamme(s) de weed",inventory_GetItemQuantity(giveplayerid,1575));msg_Client(playerid,COLOR_WHITE,string);}
				if(inventory_GetItemQuantity(giveplayerid,1579) > 0)
					{format(string,sizeof(string),"| %d gamme(s) d'Héroïne",inventory_GetItemQuantity(giveplayerid,1579));msg_Client(playerid,COLOR_WHITE,string);}
				if(inventory_GetItemQuantity(giveplayerid,1578) > 0)
					{format(string,sizeof(string),"| %d gamme(s) de cocaïne",inventory_GetItemQuantity(giveplayerid,1578));msg_Client(playerid,COLOR_WHITE,string);}
                if(inventory_GetItemQuantity(giveplayerid,1580) > 0)
					{format(string,sizeof(string),"| %d gamme(s) d'ecstasy",inventory_GetItemQuantity(giveplayerid,1580));msg_Client(playerid,COLOR_WHITE,string);}
				if(inventory_GetItemQuantity(giveplayerid,1576) > 0)
					{format(string,sizeof(string),"| %d matériaux",inventory_GetItemQuantity(giveplayerid,1576));msg_Client(playerid,COLOR_WHITE,string);}
                if(PlayerInfo[giveplayerid][pInvWeapon][0] > 0 && PlayerInfo[giveplayerid][pInvAmmo][0] > 0)
				{
					format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][0]),PlayerInfo[giveplayerid][pInvAmmo][0]);
					msg_Client(playerid,COLOR_WHITE,string);
				}
				if(PlayerInfo[giveplayerid][pInvWeapon][1] > 0 && PlayerInfo[giveplayerid][pInvAmmo][1] > 0)
				{
					format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][1]),PlayerInfo[giveplayerid][pInvAmmo][1]);
					msg_Client(playerid,COLOR_WHITE,string);
				}
				if(PlayerInfo[giveplayerid][pInvWeapon][2] > 0 && PlayerInfo[giveplayerid][pInvAmmo][2] > 0)
				{
					format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][2]),PlayerInfo[giveplayerid][pInvAmmo][2]);
					msg_Client(playerid,COLOR_WHITE,string);
				}
				if(PlayerInfo[giveplayerid][pInvWeapon][3] > 0 && PlayerInfo[giveplayerid][pInvAmmo][3] > 0)
				{
					format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][3]),PlayerInfo[giveplayerid][pInvAmmo][3]);
					msg_Client(playerid,COLOR_WHITE,string);
				}
				if(PlayerInfo[giveplayerid][pInvWeapon][4] > 0 && PlayerInfo[giveplayerid][pInvAmmo][4] > 0)
				{
					format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][4]),PlayerInfo[giveplayerid][pInvAmmo][4]);
					msg_Client(playerid,COLOR_WHITE,string);
				}
				if(PlayerInfo[giveplayerid][pInvWeapon][5] > 0 && PlayerInfo[giveplayerid][pInvAmmo][5] > 0)
				{
					format(string,sizeof(string),"| %s (%d balle(s))",GetWepName(PlayerInfo[giveplayerid][pInvWeapon][5]),PlayerInfo[giveplayerid][pInvAmmo][5]);
					msg_Client(playerid,COLOR_WHITE,string);
				}
				return 1;
			}
			else
	 			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas à côté de vous.");return 1;}
		}
		else
	 		{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
	}
	else if(strcmp(cmd, "/piedbiche", true) == 0)
	{
	    if(inventory_GetItemQuantity(playerid,18634) > 0)
	    {
	        if(UsePiedBiche[playerid]==0 && !IsPlayerAttachedObjectSlotUsed(playerid,8))
	        {
	            SetPlayerAttachedObject( playerid, 8, 18634, 5, 0.104315, 0.024154, -0.002412, 351.485473, 284.184387, 85.579017, 1.000000, 1.000000, 1.000000 );
	            UsePiedBiche[playerid]=1;
	            msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez sorti votre pied de biche.");
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,8))
			{
			    RemovePlayerAttachedObject(playerid,8);
                UsePiedBiche[playerid]=0;
                msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez rangé votre pied de biche.");
			}
	    }
	    else
	        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de pied de biche.");}
	    return 1;
	}
	else if(strcmp(cmd, "/gang", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] >= 200 || PlayerInfo[playerid][pLeader] >= 200)
	        {
	            new facID = PlayerInfo[playerid][pMember]-200;
	            if(FactionInfo[facID][fType] == 1)
	            {
	            	tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang <nom>");
						msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}1{FFFFB2}: voler - crackhouse - weed - defoncer - tag");
						if(PlayerInfo[playerid][pRank] >= 5)
							{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}5{FFFFB2}: coffre - garer - qg - inviter");}
						if(PlayerInfo[playerid][pRank] >= 6)
							{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}: gestion - rang - virer - vrang");}
						return 1;
					}
					if(strcmp(tmp,"voler",true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang voler <nom>");
							msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FF0000}1{A98500}:{FFFFFF} vehicule - biz - maison - joueur");
							return 1;
						}
						if(strcmp(tmp,"vehicule",true) == 0)
						{
							new forcedCar = GetPlayerVehicleID(playerid);
							if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid)==2)
					    		{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez être conducteur d'une voiture.");return 1;}
							if(vehicle[forcedCar][cType] == CAR_OWN && vehicle[forcedCar][cOwned] == 1) // Un vehicule a un joueur
							{
							    if(PlayerInfo[playerid][pRobTimeCar] >0)
									{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous avez déjà volé un véhicule récemment.");return 1;}
                                if(Flicservice < 2)
									{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Il faut 3 policiers en service.");return 1;}
                                if(FactionInfo[facID][fRobCar] != 0)
									{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Votre gang à déjà volé un véhicule récemment.");return 1;}
							    if(vehicle[forcedCar][SQLID]==PlayerInfo[playerid][pCar][0] || vehicle[forcedCar][SQLID]==PlayerInfo[playerid][pCar][1] || vehicle[forcedCar][SQLID]==PlayerInfo[playerid][pCar][2] || vehicle[forcedCar][SQLID]==PlayerInfo[playerid][pCar][3] || vehicle[forcedCar][SQLID]==PlayerInfo[playerid][pCar][4] || vehicle[forcedCar][SQLID]==PlayerInfo[playerid][pCar][5])
									{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible de voler votre propre véhicule.");return 1;}
							    if(vehicle[forcedCar][cRob] == 1)
									{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Impossible de volé un véhicule qui a déjà été volé depuis 30mns.");return 1;}
								if(!vehicle[forcedCar][cEngine])
								{
									format(string, sizeof(string), "* %s raccorde les cables et tente de voler le véhicule.", PlayerInfo[playerid][pName]);
									ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
									SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
									SetTimerEx("StartingTheVehicleVoler",60000,0,"i",playerid);
									msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Attendez 1 minute le temps du raccord des fils.");
								}
								msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous avez 2 minutes pour déposer ce véhicule au garage. (Après raccord)");
								SetPlayerCheckpoint(playerid,2691.7244,-2468.4001,13.6454,5.0);
								PlayerInfo[playerid][pRobTimeCar] = CAN_ROB_TIME_CAR; // 1 heure
								gang_PlayerVoleCar[playerid] = 1;
								vehicle[forcedCar][cRob]=5;
								FactionInfo[facID][fRobCar]=2;
								gang_TimerForVoleCar[playerid] = 120;
								format(string, sizeof(string), "» Alerte « Un voleur de véhicule a été reperé! (Point rouge, minimap).");
								msg_Radio(1, COLOR_LIGHTRED, string); msg_Radio(3, COLOR_LIGHTRED, string); msg_Radio(4, COLOR_LIGHTRED, string);
								SetPlayerCriminal(playerid,-1,-1,"Vol de véhicule",1);
								new Float:X,Float:Y,Float:Z;
								GetPlayerPos(playerid,X,Y,Z);
								for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
								{
								    if(PlayerInfo[i][pMember] == GetCountyPlayer(playerid)+1)
								    	{SetPlayerCheckpoint(i,X,Y,Z,5.0);}
								}
						 	}
							else
								{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Impossible de voler ce vehicule (il faut que celui la soit un véhicule acheté).");return 1;}
							return 1;
						}
						else if(strcmp(tmp,"biz",true) == 0 || strcmp(tmp,"bizz",true) == 0)
						{
						    if(gang_PlayerIsBrakeBizz[playerid] == 1)
						    	{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous êtes déjà en train de braquer.");return 1;}
						    if(FactionInfo[facID][fRobTime] > 0)
								{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Votre faction a déjà volé un biz récemment.");return 1;}
						    if(PlayerInfo[playerid][pRobTimeBizz] >0)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà volé un biz récemment.");return 1;}
						    if(gPlayerInBizz[playerid] == -1)
						    	{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être dans un biz.");return 1;}
                            if(bizz_TodayRob[gPlayerInBizz[playerid]]==true)
							    {msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce biz a déjà été cambriolé aujourd'hui.");return 1;}
							if(Flicservice < 4)
								{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Il faut 4 policiers en service.");return 1;}
							new bizid = gPlayerInBizz[playerid];
							if(bizz_IsRob[bizid] == true)
								{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce biz est déjà en train d'être braqué.");return 1;}
							for(new i = 0; i<MAX_PLAYERS_CURRENT+1; i++)
							{
							    if(IsPlayerConnected(i))
							    {
								    if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pMember] == 4)
								    {
								        msg_Client(i,COLOR_LIGHTRED,"» Alerte « Un biz se fait cambrioler! (Point rouge, minimap).");
								        SetPlayerCheckpoint(i, bizz[bizid][pos][0], bizz[bizid][pos][1], bizz[bizid][pos][2], 2);
									}
								}
							}
							format(string, sizeof(string), "* %s braque le biz.", PlayerInfo[playerid][pName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							gang_PlayerIsBrakeBizz[playerid] = 1;
							gang_TimerPlayerVoleBizz[playerid] = GANG_BIZZ_TIME; // 6mns
							msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Braquage en cours... Patientez pendant 5mns.");
							FactionInfo[facID][fRobTime] = 5;
							faction_Save(facID);
							PlayerInfo[playerid][pRobTimeBizz] = CAN_ROB_TIME_BIZZ; // 2h
							SetPlayerCriminal(playerid,-1,-1,"Braquage de biz",2);
							bizz_IsRob[bizid]=true;
							bizz_TodayRob[bizid]=true;
							ApplyDynamicActorAnimation(bizz[bizid][actorId][0], "ROB_BANK","SHP_HandsUp_Scr", 4.0, 0, 1, 1, 1, 0);
						    return 1;
						}
						else if(strcmp(tmp,"joueur",true) == 0)
						{
						    if(PlayerInfo[playerid][pRobTimePocket] >0)
								{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà volé quelqu'un récemment.");return 1;}
						    new targetid = GetClosestPlayer(playerid);
						    if(!IsPlayerConnected(targetid) || IsPlayerNPC(targetid))
								{return 1;}
							if(afk_Check[targetid]==-1)
							    {return msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce joueur est AFK !");}
						    if(GetDistanceBetweenPlayers(playerid, targetid) > 6)
				    			{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Personne est a coté de vous.");return 1;}
							new rand=random(100);
							if(rand>=25) // Raté
								{msg_Client(playerid, COLOR_GANG, "|Faction| Pickpocket raté.");return 1;}
							else
							{
								if(PlayerInfo[targetid][pCash] <= 0)
									{msg_Client(playerid, COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce joueur n'a rien dans son porte-feuille.");return 1;}
								new randTargetPerceive = random(100);
							    new randCash = random(PlayerInfo[targetid][pCash]);
							    if(randCash > 1000) { randCash = 1000; }
						        SafeGivePlayerMoney(playerid, randCash,"PickPocket");
						        SafeGivePlayerMoney(targetid, -randCash,"PickPocket");
								msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Pickpocket réussi.");
								if(randTargetPerceive < 25)
						     	{
						     	    SetPlayerCriminal(playerid,-1,-1,"Pickpocket",1);
								 	GameTextForPlayer(targetid, "~r~Pickpocket", 2000, 4);
									format(string, sizeof(string), "* %s essaye de voler %s, mais n'est pas discret.", PlayerInfo[playerid][pName], PlayerInfo[targetid][pName]);
									ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								}
								PlayerInfo[playerid][pRobTimePocket] = CAN_ROB_TIME_POCKET; // 10 mn
								return 1;
							}
						}
					}
					else if(strcmp(tmp,"defoncer",true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang defoncer <nom>");
							msg_Client(playerid, COLOR_USAGE, "{FFFFB2} voiture - maison - garage - coffre");
							return 1;
						}
						if(UsePiedBiche[playerid] ==1)
						{
						    if(strcmp(tmp,"voiture",true) == 0)
							{
							    new counter = 0;
							    new mycar;
							    for(new i=1; i <= totalVehicles; i++)
							    {
							        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
							        if(dist)
							        	{mycar = i;counter++;}
							    }
							    if(counter == 0)
			  						{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Aucun véhicule pret de vous.");return 1;}
			  					else if(counter > 1)
									{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Trop de véhicule prêt de vous.");return 1;}

								vehicle[mycar][cLock]=0;
								for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
								{
									if (IsPlayerConnected(i))
										{SetVehicleParamsForPlayer(mycar,i,0,vehicle[mycar][cLock]);}
								}
								format(string, sizeof(string), "* %s defonce la porte du véhicule.", PlayerInfo[playerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							    return 1;
							}
							else if(strcmp(tmp,"maison",true) == 0)
							{
							    new ma = -1;
								for(new i = 0; i<totalHouses; i++)
								{
									if(PlayerToPoint(3, playerid,house[i][pos][0],house[i][pos][1],house[i][pos][2]))
										{ma = i; break;}
								}
								if(ma==-1)
									{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous n'êtes pas à côté d'une maison.");return 1;}
									
								house[ma][lock]=0;
								format(string, sizeof(string), "* %s defonce la porte de la maison.", PlayerInfo[playerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							    return 1;
							}
							else if(strcmp(tmp,"garage",true) == 0)
							{
							    new gara = -1;
								for(new i = 0; i<totalGarages; i++)
								{
									if(PlayerToPoint(3, playerid,garage[i][pos][0],garage[i][pos][1],garage[i][pos][2]))
										{gara = i; break;}
								}
								if(gara==-1)
									{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous n'êtes pas à côté d'un garage.");return 1;}

								garage[gara][lock]=0;
								format(string, sizeof(string), "* %s defonce la porte du garage.", PlayerInfo[playerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							    return 1;
							}
							else if(strcmp(tmp,"coffre",true) == 0)
							{
							    if(PlayerInfo[playerid][pRobTimeTrunk]> 0)
				            		{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà défoncer un coffre il y moins de trois heures.");}
							    new counter = 0;
							    new mycar;
							    for(new i=1; i <= totalVehicles; i++)
							    {
							        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
							        if(dist)
							        	{mycar = i;counter++;}
							    }
							    if(counter == 0)
			  						{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Aucun véhicule pret de vous.");return 1;}
			  					else if(counter > 1)
									{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Trop de véhicule prêt de vous.");return 1;}

								car_SafeStatut[mycar] = true;
								PlayerInfo[playerid][pRobTimeTrunk]=3;
								format(string, sizeof(string), "* %s defonce le coffre du véhicule.", PlayerInfo[playerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							    return 1;
							}
						}
						else
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous n'avez pas de pied de biche en main.");return 1;}
					}
					else if(strcmp(tmp,"tag",true) == 0)
					{
					    if(FactionInfo[facID][fColor] <= 0)
					        {return msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Votre gang n'a pas encore choisi de couleur.");}
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang tag <nom>");
							msg_Client(playerid, COLOR_USAGE, "{FFFFB2} creer - effacer - retaguer - effacertout (et)");
							return 1;
						}
						if(strcmp(tmp,"creer",true) == 0)
						{
						    /*new bool:nearTag=false;
						    for(new i=0; i<totalTags; i++)
						    {
						        if(PlayerToPoint(75.0,playerid,tag[i][pos][0],tag[i][pos][1],tag[i][pos][2]))
						        	{nearTag=true;break;}
						    }
						    if(nearTag==true)
								{return msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Vous êtes trop prêt d'un autre tag.");}*/
							player_Dialog[playerid]=0;
							ShowPlayerDialog(playerid, 150, DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Tag","{FFFFFF}Entrez votre tag (Texte) :","Valider","Quitter");
						}
						else if(strcmp(tmp,"effacer",true) == 0)
						{
						    new tagId=-1;
						    for(new i=0; i<totalTags; i++)
						    {
						        if(PlayerToPoint(2.0,playerid,tag[i][pos][0],tag[i][pos][1],tag[i][pos][2]) && tag[i][faction] == facID)
						        	{tagId=i;break;}
						    }
						    if(tagId==-1)
								{return msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Vous n'êtes pas à côté d'un tag ou celui n'appartient pas à votre gang.");}
							tag_Remove(tagId);
							msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Vous avez retiré ce tag.");
						}
						else if(strcmp(tmp,"effacertout",true) == 0 || strcmp(tmp,"et",true) == 0)
						{
						    if(PlayerInfo[playerid][pRank] < 5)
						        {return msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Vous devez être rang 5 minimum pour effectuer cette commande.");}
						    for(new i=0; i<totalTags; i++)
						    {
						        if(tag[i][faction] == facID)
						        	{tag_Remove(i);}
						    }
							msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Vous avez retiré tous les tags.");
						}
						else if(strcmp(tmp,"retaguer",true) == 0)
						{
						    if(PlayerInfo[playerid][pRank] < 3)
						        {return msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Vous devez être rang 3 minimum pour effectuer cette commande.");}
						    new tagId=-1;
						    for(new i=0; i<totalTags; i++)
						    {
						        if(PlayerToPoint(2.0,playerid,tag[i][pos][0],tag[i][pos][1],tag[i][pos][2]))
						        	{tagId=i;break;}
						    }
						    if(tagId==-1)
								{return msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Vous n'êtes pas à côté d'un tag.");}
								
                            player_Variable[playerid]=tagId;
							format(string,sizeof(string),"{FFFFFF}Ancien tag : {00FF00}%s\n{FFFFFF}Entrez le nouveau tag :",tag[tagId][description]);
							ShowPlayerDialog(playerid,151,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Retaguer",string,"Valider","Quitter");
						}
						else
						{
						    msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang tag <nom>");
							msg_Client(playerid, COLOR_USAGE, "{FFFFB2} creer - effacer - retaguer - effacertout (et)");
							return 1;
						}
					}
					else if(strcmp(tmp,"crackhouse",true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang crackhouse <nom>");
							msg_Client(playerid, COLOR_USAGE, "{FFFFB2} deposer - retirer - recolter");
							return 1;
						}
						if(strcmp(tmp, "recolter", true) == 0 || strcmp(tmp, "recolte", true) == 0)
						{
			                msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Les récoltes se font au champ de weed (Point rouge Minimap).");
							msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Acheter des graines de weed et plantés-les (/gang weed planter).");
							SetPlayerCheckpoint(playerid,-1063.9878,-1623.1086,76.0413,5.0);
							return 1;
						}
						if(!PlayerToPoint(3,playerid,2446.3767,-1971.1740,13.5469))
						{
							SetPlayerCheckpoint(playerid,2446.3767,-1971.1740,13.5469,5.0);
							msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez vous trouver au crackHouse (point rouge minimap).");
							return 1;
						}
						else if(strcmp(tmp, "deposer", true) == 0)
						{
						    if(gang_PlayerFeuilleWeed[playerid] <=0)
						   		{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous n'avez pas de feuilles, aller au champ de plantations et recoltez en.");return 1;}
						   		
							MySQLCheckConnexion();
							format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_crackhouses WHERE SQLid=%d LIMIT 1",PlayerInfo[playerid][pSQLID]);
							mysql_query(MYSQL,sql);
							new tmp2 = 0;
							cache_get_row_count(tmp2);
							if (tmp2 != 0)
								{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous avez déjà déposer de la weed dans votre crackhouse, récuperer là d'abord entierement.");return 1;}
							
							format(sql, sizeof(sql), "INSERT INTO lvrp_factions_illegals_crackhouses SET SQLid=%d, Weed=%d, Time=%d",PlayerInfo[playerid][pSQLID], gang_PlayerFeuilleWeed[playerid], gang_PlayerFeuilleWeed[playerid]*1);
							mysql_pquery(MYSQL,sql);
							format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez déposer %d feuilles de weed dans le CrackHouse (%d grammes pour %d mns).", gang_PlayerFeuilleWeed[playerid]*5, gang_PlayerFeuilleWeed[playerid],gang_PlayerFeuilleWeed[playerid]);
							msg_Client(playerid, COLOR_GANG, string);
							gang_PlayerFeuilleWeed[playerid] = 0;
							return 1;
						}
						else if(strcmp(tmp, "retirer", true) == 0)
						{
						    tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
								{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang crackhouse retirer <montant>");return 1;}
							new montant = strval(tmp);
							MySQLCheckConnexion();
							format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_crackhouses WHERE SQLid=%d LIMIT 1",PlayerInfo[playerid][pSQLID]);
							mysql_query(MYSQL,sql);
							new tmp2 = 0;
							cache_get_row_count(tmp2);
							if(tmp2 > 0)
							{
							    new weed, times, weedtime, weedisok;
							    cache_get_value_name_int(0,"Weed", weed);
							    cache_get_value_name_int(0,"Time", times);
							    
							    weedtime = weed - times;
							    weedisok = floatround(weedtime ,floatround_floor);
							    if(weedisok < 1 || montant > weedisok)
									{msg_Client(playerid, COLOR_GANG, "{006500}» Récolte «{FFFFFF} Vous n'avez pas assez de weed prête.");return 1;}
					    			
                                inventory_UpdateItem(playerid,1575,montant);
                                format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez pris %d gramme(s) de Weed.", montant);
								msg_Client(playerid, COLOR_GANG, string);
								if((weed-montant)==0)
									{format(sql, sizeof(sql), "DELETE FROM lvrp_factions_illegals_crackhouses WHERE SQLid=%d",PlayerInfo[playerid][pSQLID]);}
								else
									{format(sql, sizeof(sql), "UPDATE lvrp_factions_illegals_crackhouses SET Weed=%d WHERE SQLid=%d",(weed-montant),PlayerInfo[playerid][pSQLID]);}
								mysql_pquery(MYSQL,sql);
								return 1;
							}
							else
							    {msg_Client(playerid, COLOR_GANG, "{006500}» Récolte «{FFFFFF} Vous n'avez pas de weed stockée.");return 1;}
						}
					}
					else if(strcmp(tmp,"weed",true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang weed <nom>");
							msg_Client(playerid, COLOR_USAGE, "{FFFFB2} planter - recolter");
							return 1;
						}
						if(strcmp(tmp, "planter", true) == 0)
						{
			                if(!PlayerToPoint(50,playerid,-1063.9878,-1623.1086,76.0413))
			                	{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous n'êtes pas aux champs de plantation.");return 1;}
			                	
			                /*MySQLCheckConnexion();
							format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_crackhouses WHERE SQLid=%d LIMIT 1",PlayerInfo[playerid][pSQLID]);
							mysql_query(MYSQL,sql);
							if (cache_get_row_count() != 0)
								{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous avez déjà déposer de la weed dans votre crackhouse, récuperer là d'abord entierement.");cache_delete();return 1;}
							cache_delete();*/

			                if(inventory_GetItemQuantity(playerid,1577) <= 0)
			                	{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous n'avez pas de graine.");return 1;}
			                	
			                new number=-1;
			                for(new i = 0; i < totalSeeds; i++)
							{
								if(seed[i][sqlid]==PlayerInfo[playerid][pSQLID] )
					 				{number++;}
							}
							if(number==4)
								{msg_Client(playerid,COLOR_GANG,"{006500}» Récolte «{FFFFFF} Vous avez déjà 5 plants de weed plantés.");return 1;}
								
							inventory_UpdateItem(playerid,1577,-1);
							new Float:posSe_x,Float:posSe_y,Float:posSe_z;
							GetPlayerPos(playerid,posSe_x,posSe_y,posSe_z);
							new id=-1;
							for(new i = 0; i<totalSeeds; i++)
							{
								if(seed[i][used] == 0)
									{id=i;break;}
							}
							if(id==-1)
							{
							    format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_seeds");
								mysql_query(MYSQL,sql);
								cache_get_row_count(id);
								format(sql, sizeof(sql), "INSERT INTO lvrp_factions_illegals_seeds SET id=%d, Created=1, SQLid=%d, Time=4, Step=1, Model=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f",id+1, PlayerInfo[playerid][pSQLID], SEED_WEED, posSe_x, posSe_y, posSe_z);
								mysql_pquery(MYSQL,sql);
								totalSeeds++;
							}
					  		LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
							seed[id][used] =1;
							seed[id][sqlid] = PlayerInfo[playerid][pSQLID];
						 	seed[id][time]=4; // 4 minutes
							seed[id][step]=1;
							seed[id][model]=SEED_WEED;
							seed[id][pos][0]=posSe_x;
							seed[id][pos][1]=posSe_y;
							seed[id][pos][2]=posSe_z;
							seed_UpdateInfos(id);
							seed_Save(id);
							msg_Client(playerid, COLOR_GANG, "{006500}» Récolte «{FFFFFF} Vous avez planté un plant de weed, venez le recolter dans 4 minutes.");
							return 1;
						}
						if(strcmp(tmp, "recolter", true) == 0)
						{
						    new seedid=-1;
						    for(new i = 0; i<totalSeeds; i++)
							{
							    if(PlayerToPoint(0.4,playerid,seed[i][pos][0],seed[i][pos][1],seed[i][pos][2]))
			                	{
			                	    if(seed[i][used]==1)
			                	    {
			                	        if(seed[i][sqlid]==PlayerInfo[playerid][pSQLID] && seed[i][model] == SEED_WEED)
					 					{
				                	        if(seed[i][time]==0)
				                	        	{seedid=i;}
     	     							}
			                	    }
			                	}
							}
							if(seedid==-1)
								{msg_Client(playerid,COLOR_GANG,"{006500}» Récolte «{FFFFFF} Impossible de recolter un plant."); return 1;}
							gang_PlayerFeuilleWeed[playerid]+=2;
							LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
							seed[seedid][used] =0;
							seed[seedid][sqlid] =-1;
							seed[seedid][time]=0;
							seed[seedid][step]=0;
							seed[seedid][model]=-1;
							seed[seedid][pos][0]=0;
							seed[seedid][pos][1]=0;
							seed[seedid][pos][2]=0;
							seed_Save(seedid);
							seed_UpdateInfos(seedid);
							format(string,sizeof(string),"{006500}» Récolte «{FFFFFF} Vous avez récolté 2 grammes de weed. (Soit 10 feuilles)[Total: %d grammes]",gang_PlayerFeuilleWeed[playerid]);
							msg_Client(playerid,COLOR_GANG,string);
							return 1;
						}
					}
					else if(strcmp(tmp,"coffre",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] < 5)
							{return msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");}
						if(!PlayerToPoint(3,playerid,FactionInfo[facID][fSafe][0],FactionInfo[facID][fSafe][1],FactionInfo[facID][fSafe][2]))
								{return msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous n'etes pas à coté du coffre!");}
						return faction_ShowDialogSafe(playerid);
					}
					else if(strcmp(tmp,"inviter",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] >= 5)
						{
						    tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
								{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang inviter <id/joueur>");return 1;}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
							{
						    	if(giveplayerid == playerid)
									{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter dans votre propre faction !");return 1;}
	                            if(PlayerInfo[giveplayerid][pMember] != 0)
									{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur fait déjà parti d'une faction.");return 1;}
								format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez invité %s.",PlayerInfo[giveplayerid][pName]);
								msg_Client(playerid, COLOR_GANG, string);
								format(string,sizeof(string),"%s vous invite à rejoindre sa faction.",PlayerInfo[playerid][pName]);
								ShowPlayerDialog(giveplayerid,54,DIALOG_STYLE_MSGBOX,"|Invitation|",string,"Accepter","Refuser");
								invited_Player[giveplayerid]=playerid;
								return 1;
							}
							else
								{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
						}
						else
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");return 1;}
					}
					else if(strcmp(tmp,"rang",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] >= 6)
						{
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
								{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang rang <id/joueur> <rang>");return 1;}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
							{
						    	if(giveplayerid == playerid)
									{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas changer votre propre rang !");return 1;}
	                            if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
									{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
						    	tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
									{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang rang <id/joueur> <rang>");return 1;}
								new rang = strval(tmp);
								if(rang < 1 || rang > 6)
									{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Rang compri entre 1 et 6."); return 1;}
								PlayerInfo[giveplayerid][pRank] = rang;
								format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été promus rang %d par %s.",rang,PlayerInfo[playerid][pName]);
								msg_Client(giveplayerid, COLOR_INFO, string);
								format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez mis rang %d, %s.",rang,PlayerInfo[giveplayerid][pName]);
								msg_Client(playerid, COLOR_GANG, string);
								return 1;
							}
							else
								{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
						}
						else
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");return 1;}
					}
					else if(strcmp(tmp,"virer",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] >= 6)
						{
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
								{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gang virer <id/joueur>");return 1;}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
							{
							    if(giveplayerid == playerid)
									{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous virer vous meme !");return 1;}
	                            if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
									{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
								PlayerInfo[giveplayerid][pRank] = 0;
								PlayerInfo[giveplayerid][pLeader] = 0;
								PlayerInfo[giveplayerid][pMember] = 0;
								format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été virer par %s",PlayerInfo[playerid][pName]);
								msg_Client(giveplayerid, COLOR_INFO, string);
								format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez virer %s.",PlayerInfo[giveplayerid][pName]);
								msg_Client(playerid, COLOR_GANG, string);
								OnPlayerUpdateSQL(giveplayerid);
								return 1;
							}
							else
								{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
						}
						else
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");return 1;}
					}
					else if(strcmp(tmp,"qg",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] >= 5)
						{
						    if(FactionInfo[facID][fLock] == 1)
						    	{FactionInfo[facID][fLock] = 0;msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous avez ouvert votre qg");return 1;}
						    else
						    	{FactionInfo[facID][fLock] = 1;msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous avez fermé votre qg");return 1;}
						}
						else
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
					}
					else if(strcmp(tmp,"garer",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] >= 5)
						{
						    if(IsPlayerInAnyVehicle(playerid))
							{
							    if(vehicle[idcar][cType] == facID+200)
							    {
							        new Float:x,Float:y,Float:z;
									new Float:a;
									GetVehiclePos(idcar, x, y, z);
									GetVehicleZAngle(idcar, a);
									vehicle[idcar][cLocationx] = x;
									vehicle[idcar][cLocationy] = y;
									vehicle[idcar][cLocationz] = z;
									vehicle[idcar][cAngle] = a;
									vehicle_Save(idcar,0,0);
									car_Recreate(playerid,idcar);
						    		msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Véhicule de gang parké.");
						    		return 1;
							    }
							    else
							    	{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce véhicule n'appartient pas à votre gang.");return 1;}
							}
							else
								{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez etre dans un véhicule.");return 1;}
						}
						else
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
					}
					else if(strcmp(tmp,"vrang",true) == 0)
					{
						if(PlayerInfo[playerid][pRank]< 6)
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez êtes rang 6 ou plus pour faire cette action.");return 1;}
						if(GetPlayerState(playerid) != 2)
							{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");return 1;}
						if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
						{
						    tmp = strtok(cmdtext, idx);
						    if(!strlen(tmp))
								{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /gang vrang <rang>");return 1;}
							if(strval(tmp) > 6 || strval(tmp) < 1)
							    {msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Rang compris entre 1 et 6."); return 1;}
	                        vehicle[idcar][cRank] = strval(tmp);
							vehicle_Save(idcar,0,0);
							car_Recreate(playerid,idcar);
							format(string,sizeof(string),"{006500}» Gang «{FFFFFF} Rang du véhicule réglé à %d ou supérieur.",strval(tmp));
							msg_Client(playerid,COLOR_GANG,string);
							return 1;
						}
						else
						    {msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Ce véhicule ne fait pas parti de votre faction."); return 1;}
					}
					else if(strcmp(tmp,"gestion",true) == 0)
					{
					    if(PlayerInfo[playerid][pRank] >= 6)
						{
						    gang_ShowDialogEdit(playerid);
						    return 1;
						}
						else
						{
						    msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous devez être rang 6.");
							return 1;
						}
					}
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite pas parti d'un gang."); return 1;}
	        }
	        else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite pas parti d'un gang."); return 1;}
	    }
		return 1;
	}
	else if(strcmp(cmd, "/mafia", true) == 0)
	{
	    new faction_Id = PlayerInfo[playerid][pMember]-200;
	    if(PlayerInfo[playerid][pMember] < 200 || (PlayerInfo[playerid][pMember] >= 200 && FactionInfo[faction_Id][fType] != 2))
   			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite pas parti d'une mafia.");}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia <nom>");
			msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}1{FFFFB2}: arme - porte (certaine mafia) - drogue - decodeur");
			if(PlayerInfo[playerid][pRank] >= 5)
				{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}5{FFFFB2}: coffre - garer - qg - inviter");}
			if(PlayerInfo[playerid][pRank] >= 6)
				{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}: gestion - rang - virer - vrang");}
			return 1;
		}
		else if(strcmp(tmp,"drogue",true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue <nom>");
				return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} coca(ine) - hero(ine) - ecst(asy)");
			}
			if(strcmp(tmp,"coca",true) == 0 || strcmp(tmp,"cocaine",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue coca(ine) <nom>");
					return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} planter - recolter - creer");
				}
		    	if(strcmp(tmp,"planter",true) == 0)
				{
					if(!PlayerToPoint(60,playerid,-1116.9491,-1206.2974,129.2188))
						{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'êtes pas aux champs de plantation."),SetPlayerCheckpoint(playerid,-1116.9491,-1206.2974,129.2188,5.0);}

					if(inventory_GetItemQuantity(playerid,1577) <= 0)
						{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas de graine.");}

					new number=-1;
					for(new i = 0; i < totalSeeds; i++)
					{
						if(seed[i][sqlid]==PlayerInfo[playerid][pSQLID] && seed[i][model] == SEED_COCA)
							{number++;}
					}
					if(number==4)
						{return msg_Client(playerid,COLOR_MAFIA,"{006500}» Récolte «{FFFFFF} Vous avez déjà 5 plants de coca plantés.");}

					inventory_UpdateItem(playerid,1577,-1);
					new Float:posSe_x,Float:posSe_y,Float:posSe_z;
					GetPlayerPos(playerid,posSe_x,posSe_y,posSe_z);
					new id=-1;
					for(new i = 0; i<totalSeeds; i++)
					{
						if(seed[i][used] == 0)
							{id=i;break;}
					}
					if(id==-1)
					{
						format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_seeds");
						mysql_query(MYSQL,sql);
						cache_get_row_count(id);
						format(sql, sizeof(sql), "INSERT INTO lvrp_factions_illegals_seeds SET id=%d, Created=1, SQLid=%d, Time=4, Step=1, Model=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f",id+1, PlayerInfo[playerid][pSQLID], SEED_COCA, posSe_x, posSe_y, posSe_z);
						mysql_pquery(MYSQL,sql);
						totalSeeds++;
					}
					LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					seed[id][used] =1;
					seed[id][sqlid] = PlayerInfo[playerid][pSQLID];
					seed[id][time]=5; // 5 minutes
					seed[id][step]=1;
					seed[id][model]=SEED_COCA;
					seed[id][pos][0]=posSe_x;
					seed[id][pos][1]=posSe_y;
					seed[id][pos][2]=posSe_z;
					seed_UpdateInfos(id);
					seed_Save(id);
					msg_Client(playerid, COLOR_MAFIA, "{006500}» Récolte «{FFFFFF} Vous avez planté un plant de coca, venez le recolter dans 5 minutes.");
				}
				else if(strcmp(tmp, "recolter", true) == 0)
				{
					new seedid=-1;
					for(new i = 0; i<totalSeeds; i++)
					{
						if(PlayerToPoint(0.4,playerid,seed[i][pos][0],seed[i][pos][1],seed[i][pos][2]))
						{
							if(seed[i][used]==1)
							{
								if(seed[i][sqlid]==PlayerInfo[playerid][pSQLID] && seed[i][model] == SEED_COCA)
								{
									if(seed[i][time]==0)
										{seedid=i;}
								}
							}
						}
					}
					if(seedid==-1)
						{return msg_Client(playerid,COLOR_GANG,"{006500}» Récolte «{FFFFFF} Impossible de recolter un plant.");}
					mafia_DrugBrute[playerid][0]+=2;
					LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					seed[seedid][used] =0;
					seed[seedid][sqlid] =-1;
					seed[seedid][time]=0;
					seed[seedid][step]=0;
					seed[seedid][model]=-1;
					seed[seedid][pos][0]=0;
					seed[seedid][pos][1]=0;
					seed[seedid][pos][2]=0;
					seed_Save(seedid);
					seed_UpdateInfos(seedid);
					format(string,sizeof(string),"{006500}» Récolte «{FFFFFF} Vous avez récolté 2 grammes de coca. (Soit 10 feuilles)[Total: %d grammes]",mafia_DrugBrute[playerid][0]);
					msg_Client(playerid,COLOR_GANG,string);
					return 1;
				}
				else if(strcmp(tmp,"creer",true) == 0)
				{
				    if(!PlayerToPoint(2,playerid,-1079.8894,-1195.6946,130.2344))
						{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'êtes pas au lieu de création."),SetPlayerCheckpoint(playerid,-1079.8894,-1195.6946,130.2344,3.0);}
                    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue coca(ine) creer <gramme>");
						format(string,sizeof(string),"{FFFFB2} 1 gramme = 5 feuilles | Vous avez %d feuilles",mafia_DrugBrute[playerid][0]*5);
						return msg_Client(playerid, COLOR_USAGE, string);
					}
					var = strval(tmp);
					if(var <= 0 ||(var) >mafia_DrugBrute[playerid][0])
					    {return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous navez pas assez de feuilles.");}
					    
					new times = var*10;
                    mafia_PlayerConceptionAmount[1][playerid] = var;
					mafia_FreezeCreation[playerid] = times;
					mafia_DrugBrute[playerid][0]-=var;
					mafia_PlayerCreateDrug[playerid] = 1;
					format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Vous avez utilisé %d feuilles de coca pour fabriquer %d gramme(s) de cocaïne.",(var*5),var);
					msg_Client(playerid,COLOR_MAFIA,string);
					format(string,sizeof(string),"* %s fabrique de la cocaïne.",PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					TogglePlayerControllable(playerid, false);
				}
				else
				{
				    msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue coca(ine) <nom>");
					return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} planter - recolter - creer");
				}
			}
			else if(strcmp(tmp,"hero",true) == 0 || strcmp(tmp,"heroine",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue hero(ine) <synt(hetiser)>");}
		    	if(strcmp(tmp,"synthetiser",true) == 0 || strcmp(tmp,"synt",true) == 0)
				{
				    if(!PlayerToPoint(2,playerid,-1068.0846,-1211.5310,129.7813))
						{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'êtes pas au lieu de création."),SetPlayerCheckpoint(playerid,-1068.0846,-1211.5310,129.7813,3.0);}

					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue heroïne creer <gramme>");
						format(string,sizeof(string),"{FFFFB2} 1 mL = 2 L de morphine | Vous avez %d litre(s) de morphine",inventory_GetItemQuantity(playerid,1950));
						return msg_Client(playerid, COLOR_USAGE, string);
					}
					var = strval(tmp);
					if(var <= 0 ||(var*2) >inventory_GetItemQuantity(playerid,1950))
					    {return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous navez pas assez de morphine.");}

					new times = var*20;
                    mafia_PlayerConceptionAmount[0][playerid] = var;
					mafia_FreezeCreation[playerid] = times;
					inventory_UpdateItem(playerid,1950,-(var*2));
					mafia_PlayerCreateDrug[playerid] = 1;
					format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Vous avez utilisé %d L de morphine pour fabriquer %d mL d'heroïne.",(var*2),var);
					msg_Client(playerid,COLOR_MAFIA,string);
					format(string,sizeof(string),"* %s fabrique de l'héroïne.",PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					TogglePlayerControllable(playerid, false);
				}
				else
				    {return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue hero(ine) <synt(hetiser)>");}
			}
			else if(strcmp(tmp,"ecstasy",true) == 0 || strcmp(tmp,"ecst",true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue ecst(asy) <nom>");
					return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} planter - recolter - creer");
				}
				if(strcmp(tmp,"planter",true) == 0)
				{
					if(!PlayerToPoint(60,playerid,-1116.9491,-1206.2974,129.2188))
						{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'êtes pas aux champs de plantation."),SetPlayerCheckpoint(playerid,-1116.9491,-1206.2974,129.2188,5.0);}

					if(inventory_GetItemQuantity(playerid,1577) <= 0)
						{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas de graine.");}

					new number=-1;
					for(new i = 0; i < totalSeeds; i++)
					{
						if(seed[i][sqlid]==PlayerInfo[playerid][pSQLID] && seed[i][model] == SEED_SASSAFRAS)
							{number++;}
					}
					if(number==4)
						{return msg_Client(playerid,COLOR_MAFIA,"{006500}» Récolte «{FFFFFF} Vous avez déjà 5 plants de sassafras plantés.");}

					inventory_UpdateItem(playerid,1577,-1);
					new Float:posSe_x,Float:posSe_y,Float:posSe_z;
					GetPlayerPos(playerid,posSe_x,posSe_y,posSe_z);
					new id=-1;
					for(new i = 0; i<totalSeeds; i++)
					{
						if(seed[i][used] == 0)
							{id=i;break;}
					}
					if(id==-1)
					{
						format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_seeds");
						mysql_query(MYSQL,sql);
						cache_get_row_count(id);
						format(sql, sizeof(sql), "INSERT INTO lvrp_factions_illegals_seeds SET id=%d, Created=1, SQLid=%d, Time=4, Step=1, Model=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f",id+1, PlayerInfo[playerid][pSQLID], SEED_SASSAFRAS, posSe_x, posSe_y, posSe_z);
						mysql_pquery(MYSQL,sql);
						totalSeeds++;
					}
					LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					seed[id][used] =1;
					seed[id][sqlid] = PlayerInfo[playerid][pSQLID];
					seed[id][time]=5; // 5 minutes
					seed[id][step]=1;
					seed[id][model]=SEED_SASSAFRAS;
					seed[id][pos][0]=posSe_x;
					seed[id][pos][1]=posSe_y;
					seed[id][pos][2]=posSe_z;
					seed_UpdateInfos(id);
					seed_Save(id);
					msg_Client(playerid, COLOR_MAFIA, "{006500}» Récolte «{FFFFFF} Vous avez planté un plant de sassafras, venez le recolter dans 5 minutes.");
				}
				else if(strcmp(tmp, "recolter", true) == 0)
				{
					new seedid=-1;
					for(new i = 0; i<totalSeeds; i++)
					{
						if(PlayerToPoint(0.4,playerid,seed[i][pos][0],seed[i][pos][1],seed[i][pos][2]))
						{
							if(seed[i][used]==1)
							{
								if(seed[i][sqlid]==PlayerInfo[playerid][pSQLID] && seed[i][model] == SEED_SASSAFRAS)
								{
									if(seed[i][time]==0)
										{seedid=i;}
								}
							}
						}
					}
					if(seedid==-1)
						{return msg_Client(playerid,COLOR_GANG,"{006500}» Récolte «{FFFFFF} Impossible de recolter un plant.");}
					mafia_DrugBrute[playerid][1]+=2;
					LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					seed[seedid][used] =0;
					seed[seedid][sqlid] =-1;
					seed[seedid][time]=0;
					seed[seedid][step]=0;
					seed[seedid][model]=-1;
					seed[seedid][pos][0]=0;
					seed[seedid][pos][1]=0;
					seed[seedid][pos][2]=0;
					seed_Save(seedid);
					seed_UpdateInfos(seedid);
					format(string,sizeof(string),"{006500}» Récolte «{FFFFFF} Vous avez récolté 2 grammes de sassafras. (Soit 10 feuilles)[Total: %d grammes]",mafia_DrugBrute[playerid][1]);
					msg_Client(playerid,COLOR_GANG,string);
					return 1;
				}
				else if(strcmp(tmp,"creer",true) == 0)
				{
				    if(!PlayerToPoint(2,playerid,-1061.5067,-1195.4683,130.3281))
						{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'êtes pas au lieu de création."),SetPlayerCheckpoint(playerid,-1061.5067,-1195.4683,130.3281,3.0);}
                    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue coca(ine) creer <gramme>");
						format(string,sizeof(string),"{FFFFB2} 1 pilule = 2 feuilles | Vous avez %d feuilles",mafia_DrugBrute[playerid][1]);
						return msg_Client(playerid, COLOR_USAGE, string);
					}
					var = strval(tmp);
					if(var <= 0 ||(var*2) >mafia_DrugBrute[playerid][1])
					    {return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous navez pas assez de feuilles.");}

					new times = var*12;
                    mafia_PlayerConceptionAmount[2][playerid] = var;
					mafia_FreezeCreation[playerid] = times;
					mafia_DrugBrute[playerid][1]-=(var*2);
					mafia_PlayerCreateDrug[playerid] = 1;
					format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Vous avez utilisé %d feuilles de sassafras pour fabriquer %d pilule(s) d'ecstasy.",(var*2),var);
					msg_Client(playerid,COLOR_MAFIA,string);
					format(string,sizeof(string),"* %s fabrique de l'ecstasy.",PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					TogglePlayerControllable(playerid, false);
				}
			}
			else
			{
				msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia drogue <nom>");
				return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} coca(ine) - hero(ine) - ecst(asy)");
			}
		}
		else if(strcmp(tmp,"qg",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 5)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez être rang 5 ou plus.");}
			if(FactionInfo[faction_Id][fLock] == 1)
				{FactionInfo[faction_Id][fLock] = 0;msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Vous avez ouvert votre qg");}
			else
				{FactionInfo[faction_Id][fLock] = 1;msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Vous avez fermé votre qg");}
		}
		else if(strcmp(tmp,"coffre",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 5)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez être rang 5 ou plus.");}
			if(gPlayerInFaction[playerid] != -1 && gPlayerInFaction[playerid] == faction_Id)
				{return faction_ShowDialogSafe(playerid);}
		}
		else if(strcmp(tmp,"garer",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 5)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");}
			if(IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez etre dans un véhicule.");}
			if(vehicle[idcar][cType] != PlayerInfo[playerid][pMember])
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Ce véhicule n'appartient pas à votre mafia.");}
			new Float:x,Float:y,Float:z,Float:a;
			GetVehiclePos(idcar, x, y, z);
			GetVehicleZAngle(idcar, a);
			vehicle[idcar][cLocationx] = x;
			vehicle[idcar][cLocationy] = y;
			vehicle[idcar][cLocationz] = z;
			vehicle[idcar][cAngle] = a;
			vehicle_Save(idcar,0,0);
			car_Recreate(playerid,idcar);
			msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Véhicule de mafia parké.");
		}
		else if(strcmp(tmp,"inviter",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 5)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia inviter <id/joueur>");}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter dans votre propre faction !");}
				if(PlayerInfo[giveplayerid][pMember] != 0)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur fait déjà parti d'une faction.");}
				format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez invité %s.",PlayerInfo[giveplayerid][pName]);
				msg_Client(playerid, COLOR_WHITE, string);
				format(string,sizeof(string),"%s vous invite à rejoindre sa faction.",PlayerInfo[playerid][pName]);
				ShowPlayerDialog(giveplayerid,54,DIALOG_STYLE_MSGBOX,"|Invitation|",string,"Accepter","Refuser");
				invited_Player[giveplayerid]=playerid;
			}
			else
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Ce joueur n'est pas connecté.");}
		}
		else if(strcmp(tmp,"rang",true) == 0)
		{
   			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia rang <id/joueur> <rang>");}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous invitez vous meme !");}
				if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia rang <id/joueur> <rang>");}
				new rang = strval(tmp);
				if(rang < 1 || rang > 6)
					{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Rang compri entre 1 et 6.");}
				PlayerInfo[giveplayerid][pRank] = rang;
				format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été promus rang %d par %s.",rang,PlayerInfo[playerid][pName]);
				msg_Client(giveplayerid, COLOR_INFO, string);
				format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez mis rang %d, %s.",rang,PlayerInfo[giveplayerid][pName]);
				msg_Client(playerid, COLOR_MAFIA, string);
			}
			else
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Ce joueur n'est pas connecté.");}
		}
		else if(strcmp(tmp,"virer",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez être rang 6.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia virer <id/joueur>");return 1;}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous invitez vous meme !");}
				if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");}
				PlayerInfo[giveplayerid][pRank] = 0;
				PlayerInfo[giveplayerid][pLeader] = 0;
				PlayerInfo[giveplayerid][pMember] = 0;
				format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été virer par %s",PlayerInfo[playerid][pName]);
				msg_Client(giveplayerid, COLOR_INFO, string);
				format(string, sizeof(string), "{717171}» Mafia «{FFFFFF}Vous avez virer %s.",PlayerInfo[giveplayerid][pName]);
				msg_Client(playerid, COLOR_MAFIA, string);
				OnPlayerUpdateSQL(giveplayerid);
			}
			else
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Ce joueur n'est pas connecté.");}
		}
		else if(strcmp(tmp,"vrang",true) == 0)
		{
			if(PlayerInfo[playerid][pRank]< 6)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez êtes rang 6 ou plus pour faire cette action.");}
			if(GetPlayerState(playerid) != 2)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");}
			if(vehicle[idcar][cType] != PlayerInfo[playerid][pMember])
			    {return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Ce véhicule n'appartient pas à votre mafia.");}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /mafia vrang <rang>");}
			if(strval(tmp) > 6 || strval(tmp) < 1)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Rang compris entre 1 et 6.");}
			vehicle[idcar][cRank] = strval(tmp);
			vehicle_Save(idcar,0,0);
			car_Recreate(playerid,idcar);
			format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Rang du véhicule réglé à %d ou supérieur.",strval(tmp));
			msg_Client(playerid,COLOR_MAFIA,string);
		}
		else if(strcmp(tmp,"arme",true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia arme <nom>");
				return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} creer - matos");
			}
			if(strcmp(tmp, "creer", true) == 0)
			{
			    if(PlayerInfo[playerid][pRank] < 2)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être rang 2 pour faire cette commande.");}

                if(!PlayerToPoint(8.0, playerid, 2141.9185,-2257.4111,13.2985)) // Il est pas au lieu de création
				{
					msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Vous devez être au lieu de création.");
					return SetPlayerCheckpoint(playerid,2141.9185,-2257.4111,13.2985, 8.0);
				}
				if(mafia_ReCreateWeaponTime[playerid] > 0)
					{return msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Attendez avant de pouvoir re-créer une arme.");}
                tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia arme creer <numero>");
					msg_Client(playerid, COLOR_USAGE, "{A98500}Numeros{FFFFB2}: 1. M4 (850 M) - 2. AK47 (800 M) - 3. Tec9 (600 M) - 4. Uzi (600 M)");
					msg_Client(playerid, COLOR_USAGE, "{A98500}Numeros{FFFFB2}: 5. MP5 (700 M) - 6. Colt (400 M) - 7. Silencieux (550 M) - 8. Sniper (1250 M)");
					return msg_Client(playerid, COLOR_USAGE, "{A98500}Numeros{FFFFB2}: 9. Rifle (800 M) - 10. Fusil (700 M) - 11. Katana (250 M) || M = Matos");
				}
				new num = strval(tmp);
				if(num == 1)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 850){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,31,400);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé une M4.");
					inventory_UpdateItem(playerid,1576,-850);
				}
				if(num == 2)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 800){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,30,240);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé une AK47.");
					inventory_UpdateItem(playerid,1576,-800);
				}
				if(num == 3)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 600){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,32,200);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Tec9.");
					inventory_UpdateItem(playerid,1576,-600);
				}
				if(num == 4)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 600){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,28,200);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Uzi.");
					inventory_UpdateItem(playerid,1576,-600);
				}
				if(num == 5)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 700){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,29,240);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé une MP5.");
					inventory_UpdateItem(playerid,1576,-700);
				}
				if(num == 6)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 400){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,22,136);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Colt.");
					inventory_UpdateItem(playerid,1576,-400);
				}
				if(num == 7)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 550){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,23,136);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Silencieux.");
					inventory_UpdateItem(playerid,1576,-550);
				}
				if(num == 8)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 1250){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,34,45);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Sniper.");
					inventory_UpdateItem(playerid,1576,-1250);
				}
				if(num == 9)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 800){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,33,45);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Rifle.");
					inventory_UpdateItem(playerid,1576,-800);
				}
				if(num == 10)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 700){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,25,100);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Fusil.");
					inventory_UpdateItem(playerid,1576,-700);
				}
				if(num == 11)
				{
					if(inventory_GetItemQuantity(playerid,1576) < 250){msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");return 1;}
					SafeGivePlayerWeapon(playerid,8,1);
					msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un Katana.");
					inventory_UpdateItem(playerid,1576,-250);
				}
				mafia_ReCreateWeaponTime[playerid]=30;
				format(string, sizeof(string), "* %s crée une arme à partir de matériaux.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			else if(strcmp(tmp,"matos",true) == 0)
			{
				if(!PlayerToPoint(3,playerid,2229.9646,-2286.3779,14.3751))
				{
					SetPlayerCheckpoint(playerid,2229.9646,-2286.3779,14.3751,3.0);
					return msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Vous devez vous trouvez à la banque de matos (point rouge minimap).");
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mafia achetermatos <quantité>");
					return msg_Client(playerid, COLOR_USAGE, "{A98500}Aide{FFFFB2}: 1 de matos = $2.");
				}
				var = strval(tmp);
				if(IsPlayerInAnyVehicle(playerid))
					{return msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Impossible dans un véhicule.");}
				if(var < 1 || var > 1000)
					{return msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Quantité comprise entre 1 et 1000.");}
				new prices = 2*var;
				if(prices > PlayerInfo[playerid][pCash])
					{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");}

				SafeGivePlayerMoney(playerid,-prices,"Achat de matos");
				inventory_UpdateItem(playerid,1576,var);
				format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Vous avez acheté %d de matos pour $%d.",var,prices);
				msg_Client(playerid,COLOR_MAFIA,string);
			}
			return 1;
		}
		else if(strcmp(tmp,"decodeur",true) == 0)
		{
		    if(inventory_GetItemQuantity(playerid,1718) > 2)
		        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avze déjà un décodeur.");}
		    if(PlayerInfo[playerid][pRank] < 2)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être rang 2 pour faire cette commande.");}
		    if(!IsPlayerInRangeOfPoint(playerid,2.0,2143.7412,-2255.4045,13.2987))
			{
			    msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Vous devez être au lieu de création.");
				return SetPlayerCheckpoint(playerid,2143.7412,-2255.4045,13.2987, 8.0);
			}
			if(inventory_GetItemQuantity(playerid,1576) < 1000)
				{return msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous n'avez pas assez de matériaux");}
			
			msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} Vous avez créé un décodeur.");
			inventory_UpdateItem(playerid,1576,1000);
			inventory_UpdateItem(playerid,1718,1);
			return 1;
		}
		else if(strcmp(tmp,"gerer",true) == 0 || strcmp(tmp,"gestion",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être rang 6 pour utiliser cette commande.");}
			mafia_ShowDialogGestion(playerid);
		}
	    return 1;
	}
    else if(strcmp(cmd, "/biker", true) == 0 || strcmp(cmd, "/bikerz", true) == 0 || strcmp(cmd, "/bikers", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 7)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faites pas parti des biker'z.");}

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /biker <nom>");
			msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}1{FFFFB2}: course - balade - baston");
			if(PlayerInfo[playerid][pRank] >= 5)
				{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}5{FFFFB2}: coffre - garer - qg - inviter");}
			if(PlayerInfo[playerid][pRank] >= 6)
				{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}: gestion - rang - virer - vrang");}
			return 1;
		}
		if(strcmp(tmp,"balade",true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /biker balade <nom>");
				return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} debut - fin - quitter - rejoindre");
			}
			if(strcmp(tmp,"debut",true) == 0)
			{
				if(biker_RideLeader != -1)
					{return msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Une balade est déjà en cours. (/biker balade rejoindre).");}
				format(string,sizeof(string),"{140073}» Biker'z «{FFFFFF} %s propose une balade, (/biker rejoindre)",PlayerInfo[playerid][pName]);
				SendFamilyMessage(7,COLOR_WHITE,string);
				biker_RideLeader=playerid;
			}
			else if(strcmp(tmp,"fin",true) == 0)
			{
				if(biker_RideLeader == playerid || PlayerInfo[playerid][pRank] > 4)
				{
					format(string,sizeof(string),"{140073}» Biker'z «{FFFFFF} %s a terminé la balade.");
					SendFamilyMessage(7,COLOR_WHITE,string);
					biker_RideLeader=-1;
					for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
					{
						if(biker_RideJoined[i] ==1)
							{biker_RideJoined[i] = 0; SetPlayerMarkerForPlayer(i,biker_RideLeader,0xFFFFFF00);}
					}
				}
				else
					{return msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Vous devez être le meneur de la course ou être rang 5 ou plus.");}
			}
			else if(strcmp(tmp,"quitter",true) == 0)
			{
				if(biker_RideJoined[playerid] == 0)
					{return msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Vous n'êtes pas dans une balade.");}
				biker_RideJoined[playerid]=0;
				SetPlayerMarkerForPlayer(playerid,biker_RideLeader,0xFFFFFF00);
				msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Vous avez quitté la balade.");
			}
			else if(strcmp(tmp,"rejoindre",true) == 0)
			{
				if(biker_RideJoined[playerid] == 1)
					{return msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Vous faites déjà parti de la balade.");}
				biker_RideJoined[playerid]=1;
				SetPlayerMarkerForPlayer(playerid,biker_RideLeader,0x140073FF);
				msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Vous avez rejoint la balade. (Suivez le point minimap)");
			}
		}
		else if(strcmp(tmp,"baston",true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /biker baston <nom>");
				return msg_Client(playerid, COLOR_USAGE, "{FFFFB2} debut - fin - quitter - rejoindre");
			}
		}
		else if(strcmp(tmp,"inviter",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= 5)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /biker inviter <id/joueur>");}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter dans votre propre faction !");}
				if(PlayerInfo[giveplayerid][pMember] != 0)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur fait déjà parti d'une faction.");}
				format(string, sizeof(string), "{140073}» Biker'z «{FFFFFF} Vous avez invité %s.",PlayerInfo[giveplayerid][pName]);
				msg_Client(playerid, COLOR_WHITE, string);
				format(string,sizeof(string),"%s vous invite à rejoindre sa faction.",PlayerInfo[playerid][pName]);
				ShowPlayerDialog(giveplayerid,54,DIALOG_STYLE_MSGBOX,"|Invitation|",string,"Accepter","Refuser");
				invited_Player[giveplayerid]=playerid;
			}
			else
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Ce joueur n'est pas connecté.");}
		}
		else if(strcmp(tmp,"rang",true) == 0)
		{
   			if(PlayerInfo[playerid][pRank] >= 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /biker rang <id/joueur> <rang>");}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous invitez vous meme !");}
				if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /biker rang <id/joueur> <rang>");}
				new rang = strval(tmp);
				if(rang < 1 || rang > 6)
					{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Rang compri entre 1 et 6.");}
				PlayerInfo[giveplayerid][pRank] = rang;
				format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été promus rang %d par %s.",rang,PlayerInfo[playerid][pName]);
				msg_Client(giveplayerid, COLOR_INFO, string);
				format(string, sizeof(string), "{140073}» Biker'z «{FFFFFF} Vous avez mis rang %d, %s.",rang,PlayerInfo[giveplayerid][pName]);
				msg_Client(playerid, COLOR_MAIRIE, string);
			}
			else
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Ce joueur n'est pas connecté.");}
		}
		else if(strcmp(tmp,"virer",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /biker virer <id/joueur>");return 1;}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous invitez vous meme !");}
				if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");}
				PlayerInfo[giveplayerid][pRank] = 0;
				PlayerInfo[giveplayerid][pLeader] = 0;
				PlayerInfo[giveplayerid][pMember] = 0;
				format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été virer par %s",PlayerInfo[playerid][pName]);
				msg_Client(giveplayerid, COLOR_INFO, string);
				format(string, sizeof(string), "{140073}» Biker'z «{FFFFFF} Vous avez virer %s.",PlayerInfo[giveplayerid][pName]);
				msg_Client(playerid, COLOR_WHITE, string);
				OnPlayerUpdateSQL(giveplayerid);
			}
			else
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Ce joueur n'est pas connecté.");}
		}
		else if(strcmp(tmp,"garer",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] >= 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");}
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez être dans un véhicule.");}
			if(vehicle[idcar][cType] != PlayerInfo[playerid][pMember])
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Ce véhicule n'appartient pas à votre faction.");}

			new Float:x,Float:y,Float:z,Float:a;
			GetVehiclePos(idcar, x, y, z);
			GetVehicleZAngle(idcar, a);
			vehicle[idcar][cLocationx] = x;
			vehicle[idcar][cLocationy] = y;
			vehicle[idcar][cLocationz] = z;
			vehicle[idcar][cAngle] = a;
			vehicle_Save(idcar,0,0);
			car_Recreate(playerid,idcar);
			msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Véhicule parké.");
		}
		else if(strcmp(tmp,"vrang",true) == 0)
		{
			if(PlayerInfo[playerid][pRank]< 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez êtes rang 6 ou plus pour faire cette action.");}
			if(GetPlayerState(playerid) != 2)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");}
			if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
			    {return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Ce véhicule n'appartient pas à votre faction.");}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /biker vrang <rang>");}
			if(strval(tmp) > 6 || strval(tmp) < 1)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Rang compris entre 1 et 6.");}
			vehicle[idcar][cRank] = strval(tmp);
			vehicle_Save(idcar,0,0);
			car_Recreate(playerid,idcar);
			format(string,sizeof(string),"{140073}» Biker'z «{FFFFFF} Rang du véhicule réglé à %d ou supérieur.",strval(tmp));
			msg_Client(playerid,COLOR_MAIRIE,string);
		}
		else if(strcmp(tmp,"gestion", true) == 0 || strcmp(tmp,"gerer", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{140073}» Biker'z «{FFFFFF} Vous devez être rang 6.");}
			biker_Gestion(playerid);
		}
		return 1;
	}
    else if(strcmp(cmd, "/no", true) == 0 || strcmp(cmd, "/non", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /non <nom>");
			msg_Client(playerid, COLOR_WHITE, "{FFFFB2} pm - rapport - ooc - news - rq");
			return 1;
		}
		if(strcmp(tmp, "pm", true) == 0)
		{
			if(NoPM[playerid]==0)
		        {NoPM[playerid]=1; msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez désactivé les PMs pour vous.");}
		    else
		    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez désormais recevoir des PMs."); NoPM[playerid]=0;}
		}
		else if(strcmp(tmp, "rapport", true) == 0)
		{
	  		if(PlayerInfo[playerid][pAdmin] < 1)
			    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas VIP/Helpeur/Admin.");return 1;}
			if(NoRapport[playerid]==0)
		        {NoRapport[playerid]=1;msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez désactivé les rapports pour vous.");}
		    else
		        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez désormais recevoir les rapports.");NoRapport[playerid]=0;}
		}
		else if(strcmp(tmp, "ooc", true) == 0)
		{
			if(NoOOC[playerid]==0)
		        {NoOOC[playerid]=1;msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez désactivé le canal OOC pour vous.");}
		    else
		        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez désormais recevoir des messages du canal OOC.");NoOOC[playerid]=0;}
		}
		else if(strcmp(tmp, "news", true) == 0)
		{
		    if(NoNews[playerid]==0)
		        {NoNews[playerid]=1;msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez désactivé le canal news pour vous.");}
		    else
		        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez désormais recevoir des messages du canal news.");NoNews[playerid]=0;}
		}
		else if(strcmp(tmp, "rq", true) == 0)
		{
		    if(NoRQ[playerid]==0)
		        {NoRQ[playerid]=1;msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez désactivé le canal /rq pour vous.");}
		    else
		        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez désormais recevoir des messages du canal RQ.");NoRQ[playerid]=0;}
		}
	    return 1;
	}
	else if(strcmp(cmd, "/rq", true) == 0 || strcmp(cmd, "/reponsequestion", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] == 0)
	    	{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /rq <id/joueur> <texte>");}
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
			{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Ce joueur n'est pas connecté !");}
		if(giveplayerid == playerid)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible à vous même.");}
					
        new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /rq <id/joueur> <texte>");}
        msg_Answer(playerid,result,giveplayerid);
        format(string,sizeof(string),"{FF6E00}» Réponse « %s[%d] : {F0F0F0}%s",PlayerInfo[playerid][pRealName],playerid,result);
        msg_Client(giveplayerid,COLOR_WHITE,string);
		return 1;
	}
    else if(strcmp(cmd, "/pm", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /pm <id/joueur> <texte>");}
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté.");}
		if(PlayerInfo[giveplayerid][pAdmin] == 0 && PlayerInfo[giveplayerid][pHelper]==0 && PlayerInfo[giveplayerid][pAnimator]==0 && PlayerInfo[playerid][pDonateRank] == 0 && PlayerInfo[playerid][pAnimator] == 0 && PlayerInfo[playerid][pHelper] == 0 && PlayerInfo[playerid][pAdmin] == 0)
  			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes pas autorisé aux pm.");}
		if(NoPM[giveplayerid]==1 && PlayerInfo[playerid][pAdmin] ==0)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur a désactivé la réception de PMs.");}
		if(giveplayerid == playerid)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible de vous PM vous même !");}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
						
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /pm <id/joueur> <texte>");}
		format(string, sizeof(string), "» PM « %s MP[ID:%d]: %s", PlayerInfo[playerid][pRealName], playerid, (result));
		msg_Client(giveplayerid, 0xBBA033AA, string);
		format(string, sizeof(string), "» PM « [ID:%d] %s: %s", giveplayerid, PlayerInfo[giveplayerid][pRealName], (result));
		msg_Client(playerid,  0xE5C43EAA, string);
		return 1;
	}
    else if(strcmp(cmd, "/chuchoter", true)==0|| strcmp(cmd, "/chu", true) == 0 || strcmp(cmd, "/w", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /chu(choter) <id/joueur> <texte>");}
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté.");}
		if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 5 || WatchingTV[giveplayerid] == 1)
			{return msg_Client(playerid,  COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas près de vous.");}
		if(giveplayerid == playerid)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible de vous chuchoter vous même !");}
		format(string, sizeof(string), "* %s chuchote quelque chose à %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
		ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /chu(choter) <id/joueur> <texte>");}
		format(string, sizeof(string), "%s chuchote: %s", PlayerInfo[playerid][pName], (result));
		msg_Client(giveplayerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez chuchoté à %s: %s", PlayerInfo[giveplayerid][pName], (result));
		msg_Client(playerid,  COLOR_INFO, string);
		return 1;
	}
    else if(strcmp(cmd, "/de", true) == 0 || strcmp(cmd, "/dice", true) == 0 || strcmp(cmd, "/dé", true) == 0)
	{
		if (inventory_GetItemQuantity(playerid,1851) <= 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de dé.");}
        var = random(6)+1;
		format(string, sizeof(string), "* %s lance le dé et tombe sur %d", PlayerInfo[playerid][pName],var);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		return 1;
	}
    else if(strcmp(cmd, "/acheter", true) == 0 || strcmp(cmd, "/buy", true) == 0)
	{
		/*if (PlayerToPoint(25, playerid,304.5870,-141.8801,1004.0625))
		{
		 	if(PlayerInfo[playerid][pWepTrainTime] == 0)
		 	    {ShowPlayerDialog(playerid,132,DIALOG_STYLE_LIST,"|Ecole de tir| Entrainements","Colt45\nPisto Silencieux\nShotGun\nUzi\nMp5\nAk47\nM4","Valider","Annuler");}
		 	else
	 	    {
	 	        format(string,sizeof(string),"|Ecole de tir| Attendez %d mn avant de pouvoir avoir une formation",PlayerInfo[playerid][pWepTrainTime]);
	 	        msg_Client(playerid,COLOR_STATS,string);
			}
		}*/
	 	return 1;
	}
    else if(strcmp(cmd, "/quitter", true) == 0 || strcmp(cmd, "/quit", true) == 0)
	{
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /quitter <job - faction>");}
		if(strcmp(tmp, "job", true) == 0)
		{
			if(PlayerInfo[playerid][pJob] == 0)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de job.");}
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pJobLvl] = 0;
			PlayerInfo[playerid][pJobExp] = 0;
			PlayerInfo[playerid][pJobTime] = 0;
			PlayerInfo[playerid][pJobRemain] = 60;
			msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez quitté votre job.");
			job_End(playerid);
		}
		else if(strcmp(tmp, "faction", true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 0)
			    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas dans une faction.");}
			msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez quitter votre votre Faction, vous êtes redevenu un civil.");
			if(police_Duty[playerid]==1)
				{police_Duty[playerid]=0;}
			PlayerInfo[playerid][pLeader] = 0;
			PlayerInfo[playerid][pMember] = 0;
			PlayerInfo[playerid][pRank] = 0;
			if(PlayerInfo[playerid][pSpawn]==1)
				{PlayerInfo[playerid][pSpawn] = 0;}
			OnPlayerUpdateSQL(playerid);
		}
		else if(strcmp(tmp, "event", true) == 0)
		{
		    if(gPlayerEvent[playerid] != 1)
		        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas dans un event.");}
		        
			gPlayerEvent[playerid] = 0;
			event[parcitipents]--;
			msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez quitté l'event.");
			format(string,sizeof(string),"» Event « %d a quitté l'event.",PlayerInfo[playerid][pRealName]);
			for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			{
				 if(IsPlayerConnected(i) && !IsPlayerNPC(i) && gPlayerEvent[i] == 1)
				 	{msg_Client(i,COLOR_INFO,string);}
			}
		}
		return 1;
	}
	else if(strcmp(cmd, "/delouer", true) == 0 || strcmp(cmd, "/unrent", true) == 0)
	{
	   if(IsPlayerConnected(playerid))
       {
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /delouer <nom>"); msg_Client(playerid, COLOR_WHITE, "{A98500}Noms diponibles :{FFFFFF} vehicule - maison");return 1;}
			if(strcmp(tmp, "vehicule", true) == 0 || strcmp(tmp, "vehicle", true) == 0)
			{
			    if(HireCar[playerid] != -1)
				{
			    	TogglePlayerControllable(playerid, 1);
			    	SetVehicleToRespawn(HireCar[playerid]);
			    	vehicle[HireCar[playerid]][cGas]=100;
			    	vehicle[HireCar[playerid]][cEngine] = false;
					HireCar[playerid] = -1;
					GameTextForPlayer(playerid, "~w~Vous ne louer plus votre vehicule.", 5000, 3);
                	return 1;
                }
			}
			else if(strcmp(tmp, "maison", true) == 0 || strcmp(tmp, "house", true) == 0)
			{
			    var = -1;
				for(new i = 0; i<totalHouses; i++)
				{
					if(PlayerToPoint(3, playerid,house[i][pos][0], house[i][pos][1], house[i][pos][2]))
						{var = i; break;}
				}
				if(var==-1)
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas à côté d'une maison.");return 1;}

				if(house[var][owned] == 1)
				{
					if(strcmp(PlayerInfo[playerid][pRealName], house[var][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[var][owner], true) == 0 || strcmp(PlayerInfo[playerid][pRealName], house[var][owner], true) == 0)
						{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez pas délouer votre propre maison.");return 1;}
					if(PlayerInfo[playerid][pHousekey1] == var || PlayerInfo[playerid][pHousekey2] == var || PlayerInfo[playerid][pHousekey3] == var)
					{
						if(PlayerInfo[playerid][pHousekey1] == var){ PlayerInfo[playerid][pHousekey1] = -1; MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "House1", PlayerInfo[playerid][pHousekey1]);}
						else if(PlayerInfo[playerid][pHousekey2] == var){ PlayerInfo[playerid][pHousekey2] = -1; MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "House2", PlayerInfo[playerid][pHousekey2]);}
						else if(PlayerInfo[playerid][pHousekey3] == var){ PlayerInfo[playerid][pHousekey3] = -1; MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "House3", PlayerInfo[playerid][pHousekey3]);}
						else{ return 1;}
						house[var][rentNb] --;
						msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Vous ne louer plus cette maison.");
						house_Save(var);
						house_UpdateInfos(var);
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne louez pas cette maison.");return 1;}
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cette maison appartient à personne");return 1;}
			}
			else
			    {msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /delouer <nom>"); msg_Client(playerid, COLOR_WHITE, "{A98500}Noms diponibles :{FFFFFF} vehicule - maison");return 1;}
       }
       return 1;
	}
//-----------------------------[ Téléphone ]------------------------------------
	else if(strcmp(cmd, "/forfait", true) ==0)
	{
	    if(PlayerInfo[playerid][pNumber] == 0)
			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de téléphone portable.");return 1;}
		
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /forfait <nom>");
			msg_Client(playerid, COLOR_USAGE, "{FFFFB2} info - quitter");
			return 1;
		}
		if(strcmp(tmp, "info", true) ==0)
		{
		    if(PlayerInfo[playerid][pOperator] == 0)
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas d'opérateur téléphonique.");return 1;}
			
			new operato[32], toto=0;
			if(PlayerInfo[playerid][pOperator] == 1) operato="BellSouth";
			if(PlayerInfo[playerid][pOperator] == 2) operato="AT&T Mobility";
			if(PlayerInfo[playerid][pOperator] == 3) operato="SBC Communications";
			if(PlayerInfo[playerid][pOperator] == 4) operato="Verizon Communication";
			toto=PlayerInfo[playerid][pPhoneTime]/60;
			new prices;
			if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==1){prices=5;}
			else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==2){prices=2;}
			else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==3){prices=1;}
			else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==4){prices=0;}
			if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==1){prices=4;}
			else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==2){prices=3;}
			else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==3){prices=1;}
			else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==4){prices=0;}
			if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==1){prices=3;}
			else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==2){prices=3;}
			else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==3){prices=1;}
			else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==4){prices=0;}
			if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==1){prices=0;}
			else if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==2){prices=0;}
			format(string,sizeof(string),"Opérateur : %s\nFormule : %d\nTemps d'appel restant : %d mins\nPrix SMS: %d",operato,PlayerInfo[playerid][pFormul],toto,prices);
			ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"{CF9756}» Info «{FFFFFF} Forfait téléphonique",string,"Valider","");
		}
		else if(strcmp(tmp, "quitter", true) ==0)
		{
		    if(PlayerInfo[playerid][pOperator] == 0)
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas d'opérateur téléphonique.");return 1;}
			
			PlayerInfo[playerid][pOperator]=0;
			PlayerInfo[playerid][pFormul]=0;
			PlayerInfo[playerid][pPhoneTime]=0;
			msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez résigné votre opérateur téléphonique.");
		}
	    return 1;
	}
	else if(strcmp(cmd, "/annu", true) ==0 || strcmp(cmd, "/annuaire", true) ==0)
	{
		if (inventory_GetItemQuantity(playerid,2894) > 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /annu(aire) <id/joueur ou nom>");
				msg_Client(playerid, COLOR_WHITE, "{FFFFB2} taxi - bus - urgence - police - mecanicien - news");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[giveplayerid][pHideNumber] == 1)
					{format(string, sizeof(string), "[Nom] %s, Tel: Caché",PlayerInfo[giveplayerid][pRealName]);}
				else
					{format(string, sizeof(string), "[Nom] %s, Tel: %d",PlayerInfo[giveplayerid][pRealName],PlayerInfo[giveplayerid][pNumber]);}
                msg_Client(playerid, COLOR_GREEN, string);
                return 1;
			}
				
			if(strcmp(tmp,"taxi", true) == 0)
                {msg_Client(playerid, COLOR_GREEN,"[Taxi] Tel: 444");return 1;}
   			if(strcmp(tmp,"bus", true) == 0)
                {msg_Client(playerid, COLOR_GREEN,"[Bus] Tel: 222");return 1;}
            if(strcmp(tmp,"urgence", true) == 0 || strcmp(tmp,"urgences", true) == 0 || strcmp(tmp,"police", true) == 0)
                {msg_Client(playerid, COLOR_GREEN,"[Urgences] Tel: 911");return 1;}
            if(strcmp(tmp,"mecanicien", true) == 0 || strcmp(tmp,"mecaniciens", true) == 0)
                {msg_Client(playerid, COLOR_GREEN,"[Mecanicien] Tel: 555");return 1;}
            if(strcmp(tmp,"news", true) == 0 || strcmp(tmp,"sannews", true) == 0)
                {msg_Client(playerid, COLOR_GREEN,"[San News] Tel: 123");return 1;}
		}
		else
			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas d'annuaire.");return 1;}
	}
	else if(strcmp(cmd, "/leaders", true) ==0)
	{
	    new tmpTotal, tmpString[128], connected[32], name[24], tmp2 = 0;
	    format(sql,sizeof(sql),"SELECT Name,Leader,Connected FROM lvrp_users WHERE Leader > 0");
	    mysql_query(MYSQL,sql);
     	cache_get_row_count(tmpTotal);
	    for (new i=0; i<tmpTotal; i++)
		{
		    cache_get_value_name(i,"Name",name, 32);
      		cache_get_value_name_int(i, "Connected", tmp2);
			if(tmp2 == 1)	{connected="{00FF00}Connecté";}
			else													{connected="{FF0000}Déconnecté";}
			cache_get_value_name_int(i, "Leader", tmp2);
		    format(tmpString,sizeof(tmpString),"{FF9900}[%s]{FFFFFF} Leader: %s - Statue : %s\n",
			GetFactionName(tmp2),name,connected);
			strcat(string,tmpString);
		}
	    ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX,"» Leaders «",string,"Valider","");
	    return 1;
	}
	else if(strcmp(cmd, "/id", true) ==0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /id <parti du nom/nom>");}
		format(string,sizeof(string),"» Resultat des id et noms :");
		msg_Client(playerid,COLOR_WHITE,string);
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
		    if(strfind(PlayerInfo[i][pRealName], result, true) != -1)
		    {
		        format(string,sizeof(string),"- %s [Id: %d]",PlayerInfo[i][pRealName],i);
		        msg_Client(playerid,COLOR_WHITE,string);
		    }
		}
	    return 1;
	}
	else if(strcmp(cmd, "/rejoindre", true) ==0)
	{
	    if(event[step] != 1)
	        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Aucun event ou celui-ci est déjà lancé.");}
		if(gPlayerEvent[playerid] != 0)
		    {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous êtes déjà dans un event !");}
	        
		gPlayerEvent[playerid] = 1;
		event[parcitipents]++;
		msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez rejoint l'event, pour quitter l'event tappez : (/quitter event)");
		SafeSetPlayerPos(playerid,event[teleport][0],event[teleport][1],event[teleport][2]);
		format(string,sizeof(string),"» Event « %s a rejoint l'event.",PlayerInfo[playerid][pRealName]);
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			 if(IsPlayerConnected(i) && !IsPlayerNPC(i) && gPlayerEvent[i] == 1 && i != playerid)
			 	{msg_Client(i,COLOR_INFO,string);}
		}
		return 1;
	}
	else if(strcmp(cmd, "/t", true) ==0 || strcmp(cmd, "/tel", true) ==0 || strcmp(cmd, "/telephone", true) ==0 || strcmp(cmd, "/phone", true) ==0)
	{
	    if(PlayerInfo[playerid][pNumber] == 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de téléphone portable.");}
		if(PlayerInfo[playerid][pJailed] >= 1)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} L'utilisation du téléphone est interdite lors d'une peine de prison.");}
		if(medic_PlayerNeedMedic[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Impossible quand vous êtes bléssé.");}
			
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			if(phone_Active[playerid]==0)
	        {
	            phone_Show(playerid);
	            if(phone_Type[playerid]==3)
	            {
	                TextDrawHideForPlayer(playerid,phone_Menu);
	                PlayerTextDrawShow(playerid,phone_CallTime[playerid]);
	                PlayerTextDrawShow(playerid,phone_Title[playerid]);
	                PlayerTextDrawSetString(playerid,phone_Title[playerid],"Appel");
	            }
				phone_Active[playerid]=1;
			}
			else
			    {phone_Hide(playerid); phone_Active[playerid]=0;}
		}
		if(strcmp(tmp, "sms", true) ==0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /t(el) sms <numéro> <message>");}
			new numero = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
				{idx++;}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
			result[idx - offset] = EOS;
			if(!strlen(result))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /t(el) sms <numéro> <message>");}
				
			if(numero==123)
			{
				SafeGivePlayerMoney(playerid,-sanNews[abc_SMS],"SMS San News");
				sanNews[abc_Cash]+=sanNews[abc_SMS];
				msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} SMS Envoyé");
				format(string,sizeof(string),"» SMS - SanNews «{FFFFFF} %s(%d) - Num: %d : %s",PlayerInfo[playerid][pRealName],playerid,PlayerInfo[playerid][pNumber],result);
				SendFamilyMessage(10,0x00CDFF48,string);
				sannews_Save();
				return 1;
			}
            /*if(numero==PlayerInfo[playerid][pNumber])
		    	{return msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Impossible à vous même");}*/
			new bool:send=false;
			for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
			{
			    if(IsPlayerConnected(i) && i != INVALID_PLAYER_ID)
				{
				    if(PlayerInfo[i][pNumber] == numero && numero != 0)
					{
					    format(string, sizeof(string), "* %s envoie un sms.", PlayerInfo[playerid][pName]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						format(string, sizeof(string), "* Le téléphone de %s vient de biper.", PlayerInfo[i][pName]);
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} SMS Envoyé");
						format(string, sizeof(string), "[SMS] %s, Numéro du correspondant: %s (%d)", result,PlayerInfo[playerid][pName],PlayerInfo[playerid][pNumber]);
						msg_Client(i, COLOR_YELLOW, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						new prices;
						if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==1){prices=5;}
						else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==2){prices=2;}
						else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==3){prices=1;}
						else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==4){prices=0;}
						if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==1){prices=4;}
						else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==2){prices=3;}
						else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==3){prices=1;}
						else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==4){prices=0;}
						if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==1){prices=3;}
						else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==2){prices=3;}
						else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==3){prices=1;}
						else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==4){prices=0;}
						if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==1){prices=0;}
						else if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==2){prices=0;}
	 					SafeGivePlayerMoney(playerid,-prices,"Envoie SMS");
	 					send=true;
	 					phone_SMS(playerid,i,result);
	 					return 1;
					}
				}
			}
			if(send==false)
		    	{msg_Client(playerid,COLOR_YELLOW,"{8B8B00}» Tel «{FFFFFF} Echec de l'envoie.");}
		}
		else if(strcmp(tmp, "appel", true) ==0 || strcmp(tmp, "appeler", true) ==0 || strcmp(tmp, "appeller", true) ==0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /t(el) appel <numéro>");}
            phone_CallTo(playerid,strval(tmp));
		}
		else if(strcmp(tmp, "rac", true) ==0 || strcmp(tmp, "racrocher", true) ==0 || strcmp(tmp, "racro", true) ==0)
		{
		    if(phone_Type[playerid]==3)
		    {
		        if(IsPlayerConnected(Mobile[playerid]) && Mobile[playerid] != INVALID_PLAYER_ID)
				{
				    if(Mobile[playerid] != -1)
					{
					    if(Mobile[Mobile[playerid]] == playerid)
						{
							msg_Client(Mobile[playerid],  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} La ligne raccroche.");
							CellTime[Mobile[playerid]] = 0;
							Mobile[Mobile[playerid]] = -1;
							SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
							phone_Show(Mobile[playerid]);
							phone_Type[Mobile[playerid]]=0;
						}
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
						msg_Client(playerid,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Vous avez raccroché.");
						Mobile[playerid] = -1;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						phone_Show(playerid);
						phone_Type[playerid]=0;
					}
				}
		    }
		    else
		    {
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		        Mobile[playerid] = -1;
				CellTime[playerid] = 0;
				RingTone[playerid] = 0;
				phone_Show(playerid);
				phone_Type[playerid]=0;
		    }
		}
		else if(strcmp(tmp, "fsms", true) ==0 || strcmp(tmp, "gsms", true) ==0 || strcmp(tmp, "factionsms", true) ==0)
		{
		    if(PlayerInfo[playerid][pMember] == 0)
		        {return msg_Client(playerid,COLOR_YELLOW,"{8B8B00}» Tel «{FFFFFF} Vous ne faite parti d'aucune faction.");}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
				{idx++;}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
			result[idx - offset] = EOS;
			if(!strlen(result))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /t(el) fsms <message>");}
            for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
			{
			    if(IsPlayerConnected(i) && i != INVALID_PLAYER_ID)
				{
				    if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && playerid != i)
					{
						format(string, sizeof(string), "* Le téléphone de %s vient de biper.", PlayerInfo[i][pName]);
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						format(string, sizeof(string), "[SMS] %s, Numéro du correspondant: %s (%d)", result,PlayerInfo[playerid][pName],PlayerInfo[playerid][pNumber]);
						msg_Client(i, COLOR_YELLOW, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					    new prices;
						if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==1){prices=5;}
						else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==2){prices=2;}
						else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==3){prices=1;}
						else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==4){prices=0;}
						if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==1){prices=4;}
						else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==2){prices=3;}
						else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==3){prices=1;}
						else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==4){prices=0;}
						if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==1){prices=3;}
						else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==2){prices=3;}
						else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==3){prices=1;}
						else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==4){prices=0;}
						if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==1){prices=0;}
						else if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==2){prices=0;}
					    SafeGivePlayerMoney(playerid,-prices,"Envoie SMS");
					    phone_SMS(playerid,i,result);
					}
				}
			}
			msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} SMS groupé envoyé.");
			format(string, sizeof(string), "* %s envoie un sms.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		return 1;
	}
//----------------------------------[time]-----------------------------------------------
    else if(strcmp(cmd, "/heure",  true) ==0 || strcmp(cmd, "/time", true) == 0|| strcmp(cmd, "/heures", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			new year, month,day;
			getdate(year, month, day);
			if(month == 1) { mtext = "Janvier"; }
			else if(month == 2) { mtext = "Fevrier"; }
			else if(month == 3) { mtext = "Mars"; }
			else if(month == 4) { mtext = "Avril"; }
			else if(month == 5) { mtext = "Mai"; }
			else if(month == 6) { mtext = "Juin"; }
			else if(month == 7) { mtext = "Juillet"; }
			else if(month == 8) { mtext = "Aout"; }
			else if(month == 9) { mtext = "Septembre"; }
			else if(month == 10) { mtext = "Octobre"; }
			else if(month == 11) { mtext = "Novembre"; }
			else if(month == 12) { mtext = "Decembre"; }
		    new hour,minuite,second;
			gettime(hour,minuite,second);
			if (minuite < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
				    if(inventory_GetItemQuantityIn(playerid,19039,19053) > 0)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Il vous reste %d secondes de temps de prison", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
					}
					else
					{
					    format(string, sizeof(string), "~w~Il vous reste %d secondes de temps de prison", PlayerInfo[playerid][pJailTime]-10);
					}
				}
				else
				{
				    if(inventory_GetItemQuantityIn(playerid,19039,19053) > 0)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
					}
					else
					{
					    format(string, sizeof(string), "~r~Vous n'avez pas de montre");
					}
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
				    if(inventory_GetItemQuantityIn(playerid,19039,19053) > 0)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Il vous reste %d seccondes de temps de prison", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
					}
					else
					{
					    format(string, sizeof(string), "~w~Il vous reste %d secondes de temps de prison", PlayerInfo[playerid][pJailTime]-10);
					}
				}
				else
				{
				    if(inventory_GetItemQuantityIn(playerid,19039,19053) > 0)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
					}
					else
					{
					    format(string, sizeof(string), "~r~Vous n'avez pas de montre");
					}
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
			if(inventory_GetItemQuantityIn(playerid,19039,19053) > 0)
			{
			    format(string, sizeof(string), "* %s lève sa main et regarde sa montre.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
		}
		return 1;
	}
    else if(strcmp(cmd, "/entrer", true) == 0 || strcmp(cmd, "/enter", true) == 0)
	{
		for(new biz = 0; biz < MAX_SBIZZ; biz++)
		{
  			if(!PlayerToPoint(2, playerid,sbizz[biz][ubEntrance_x],sbizz[biz][ubEntrance_y],sbizz[biz][ubEntrance_z]))
				{continue;}
			if(biz >= MAX_STATION && biz < MAX_STATION+MAX_SPRAY) // Les Pay'N spray
		   	{
		   		if(!IsPlayerInAnyVehicle(playerid))
		   			{return msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous devez être dans un véhicule.");}
		   		if(PlayerInfo[playerid][pCash] < sbizz[biz][ubEnterPrice])
		   			 {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");}
				SafeSetVehiclePos(idcar,sbizz[biz][ubExit_x],sbizz[biz][ubExit_y],sbizz[biz][ubExit_z]);
				SetTimerEx("uniquebizz_PaySpray",4000,0,"id",playerid,biz);
				return 1;
		   	}
		   	if(biz >= MAX_STATION+MAX_SPRAY && biz < MAX_STATION+MAX_SPRAY+MAX_TUNING) // Tunning Voiture
		   	{
		   		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		   		{
		   			if(vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][0] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][1] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][2] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][3] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][4] || vehicle[idcar][SQLID]==PlayerInfo[playerid][pCar][5] || vehicle[idcar][cType] == PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pLeader] >=200)
						{bizz_ShowDialogTuning(playerid); player_Variable[playerid]=biz;}
       				else
						{return msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Ce véhicule ne vous appartient pas !");}
			    }
			    else
				   {msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous devez être dans un véhicule."); return 1;}
		   	}
		}
		for(new i = 0; i < totalGarages; i++)
		{
			if(!PlayerToPoint(2, playerid,garage[i][pos][0],garage[i][pos][1],garage[i][pos][2]))
				{continue;}
            if(i == PlayerInfo[playerid][pGarageKey1] || i == PlayerInfo[playerid][pGarageKey2] || i == PlayerInfo[playerid][pGarageKey3] || AdminDuty[playerid]==1 || garage[i][lock] == 0)
			{
			    if(IsPlayerInAnyVehicle(playerid))
 				{
 				    SafeSetVehiclePos(idcar,garage[i][pos][3],garage[i][pos][4],garage[i][pos][5]);
					LinkVehicleToInterior(idcar, 1);
					SetVehicleVirtualWorld(idcar, i);
 				}
 				else
 					{SafeSetPlayerPos(playerid,garage[i][pos][3],garage[i][pos][4],garage[i][pos][5]);}
 				server_SetPlayerInterior(playerid, 1);
				server_SetPlayerVirtualWorld(playerid, i);
				gPlayerInGarage[playerid] = i;
			}
  			else
			  	{GameTextForPlayer(playerid,"~r~Fermer",3000,1);}
		}
		return 1;
	}
    else if(strcmp(cmd, "/sortir", true)==0||strcmp(cmdtext, "/exit", true)==0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    	
		    if(gPlayerInGarage[playerid] != -1)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
				    SafeSetVehiclePos(idcar,garage[gPlayerInGarage[playerid]][pos][0],garage[gPlayerInGarage[playerid]][pos][1],garage[gPlayerInGarage[playerid]][pos][2]);
                    LinkVehicleToInterior(idcar, 0);
					SetVehicleVirtualWorld(idcar, 0);
					server_SetPlayerInterior(playerid, 0);
					server_SetPlayerVirtualWorld(playerid, 0);
					GameTextForPlayer(playerid,MAP_NAME,3000,1);
					gPlayerInGarage[playerid]=-1;
				}
				else
				{
				    SafeSetPlayerPos(playerid,garage[gPlayerInGarage[playerid]][pos][0],garage[gPlayerInGarage[playerid]][pos][1],garage[gPlayerInGarage[playerid]][pos][2]);
                    SetVehicleVirtualWorld(idcar, 0);
					server_SetPlayerInterior(playerid, 0);
					server_SetPlayerVirtualWorld(playerid, 0);
					GameTextForPlayer(playerid,MAP_NAME,3000,1);
					gPlayerInGarage[playerid]=-1;
				}
			    return 1; // Evite de faire sortir le joueur de sa voiture
			}
			
			if(PlayerTied[playerid] == 1)
				{msg_Client(playerid,COLOR_INFO,"|Tuto| Impossible, vous êtes ligotté.");return 1;}
				
        	if(IsPlayerInAnyVehicle(playerid) == 1 && ceinture[playerid] == 1)
        	{
		        format(string, sizeof(string), "* %s retire sa ceinture de sécurité et sort de son vehicule.", PlayerInfo[playerid][pName]);
            	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
        	    printf("%s", string);
        		ceinture[playerid] = 0;
         		RemovePlayerFromVehicle(playerid);
         		TogglePlayerControllable(playerid, 1);
        	}
           	if(IsPlayerInAnyVehicle(playerid) == 1 && casque[playerid] == 1)
            {
        		format(string, sizeof(string), "* %s descend et retire son casque de sécurité.", PlayerInfo[playerid][pName]);
            	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
             	RemovePlayerAttachedObject(playerid, HelmetSlotObject[playerid]);
        	    printf("%s", string);
        		ceinture[playerid] = 0;
        		RemovePlayerFromVehicle(playerid);
        		TogglePlayerControllable(playerid, 1);
         	}
           	else if(IsPlayerInAnyVehicle(playerid) == 1 && ceinture[playerid] == 0)
        	{
 	        	ceinture[playerid] = 0;
 	         	RemovePlayerFromVehicle(playerid);
 	         	TogglePlayerControllable(playerid, 1);
          		return 1;
        	}
	    	if(IsPlayerInAnyVehicle(playerid) && !vehicle[GetPlayerVehicleID(playerid)][cEngine] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || vehicle[idcar][sabot] == true)
	    	{
	    	    TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
		}
		return 1;
	}
//------------------------[ Admin ]---------------------------------------------
    else if(strcmp(cmd, "/gotoincar", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] > 2)
	    {
		     tmp = strtok(cmdtext, idx);
             if(!strlen(tmp))
			 	{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /gotoincar <id/joueur>");return 1;}
			 giveplayerid = ReturnUser(tmp);
		     if(giveplayerid != INVALID_PLAYER_ID)
	 	     	{PutPlayerInVehicle(playerid, GetPlayerVehicleID(giveplayerid), 1);}
        	 else
			 	{msg_Client(playerid, COLOR_RED, "{FF2727}» Admin «{FFABAD} Ce joueur n'es pas connecté."); }
	    }
	    else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autriseé à utiliser cette commande !"); }
    	return 1;
	}
	else if(strcmp(cmd, "/getincar", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] > 2)
	    {
		     tmp = strtok(cmdtext, idx);
             if(!strlen(tmp))
			 	{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /getincar <carid>");return 1;}
			 giveplayerid = ReturnUser(tmp);
		     if(giveplayerid != INVALID_PLAYER_ID)
	 	     	{PutPlayerInVehicle(giveplayerid, GetPlayerVehicleID(playerid), 1);}
        	 else
			 	{msg_Client(playerid, COLOR_RED, "{FF2727}» Admin «{FFABAD} Ce joueur n'es pas connecté."); }
	    }
	    else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autriseé à utiliser cette commande !"); }
    	return 1;
	}
	else if(strcmp(cmd, "/entercar", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /entercar <carid>");return 1;}
		new testcar = strval(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 2)
			{PutPlayerInVehicle(playerid, testcar, 0);msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");}
		else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
		return 1;
	}
	else if(strcmp(cmd, "/nometeo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	 	{
			SetPlayerWeather(playerid, 2);
			format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez mis la météo par defaut.");
			msg_Client(playerid,COLOR_INFO,string);
		}
		return 1;
	}
	else if(strcmp(cmd, "/++flic", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
			{Flicservice ++;msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Flic ++");}
		else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
		return 1;
	}
	else if(strcmp(cmd, "/--flic", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
			{Flicservice --;msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Flic --");}
		else
			{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
		return 1;
	}
	else if(strcmp(cmd, "/ac", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /ac <text>");return 1;}

		format(string, sizeof(string), "{FFFF00}[Admin Chat]{B0B200} %s %s: %s ", GetAdminName(PlayerInfo[playerid][pAdmin]), PlayerInfo[playerid][pRealName], result);
		if (PlayerInfo[playerid][pAdmin] >= 1)
			{msg_Admin(JAUNE, string,1);}
		return 1;
	}
	else if(strcmp(cmd, "/a", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] == 0)
				{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
	        {
	            if (PlayerInfo[playerid][pAdmin] >= 1)
				{
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a <nom>");
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}1{A98500}:{FFFFB2} duty - gethere - getcar - tp - clear - slap - muteooc - muteic");
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}1{A98500}:{FFFFB2} kick - freeze - defreeze - spec - skin - info - (int)erieur - demute");
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}1{A98500}:{FFFFB2} jail - dejail - renvoie - avertir - nomoff - monde - reanimer");
				}
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}2{A98500}:{FFFFB2} ban - bantemps - deavertir - jetpack - localiser - cadavre - meteo");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}2{A98500}:{FFFFB2} mettrejob - deban - debanip - carcasse - changernom - desarmer");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}2{A98500}:{FFFFB2} virer - inviter - leader - rang - vie - armure - faim - soif");
				}
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}3{A98500}:{FFFFB2} kickall - reboot - an - musique - cnnn - event - divorce");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}3{A98500}:{FFFFB2} ip - recup - donner - lotto - jackpot - desarmer - argent");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}3{A98500}:{FFFFB2} id - supprimer - creer - spawn - payday - edit");
				}
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}4{A98500}:{FFFFB2} dao - gmx - chargerfs - dechargerfs - nomserveur - nomgm - adminlevel");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}4{A98500}:{FFFFB2} server - reload - payday");
				}
				return 1;
	        }
	        if(strcmp(tmp, "duty", true) == 0)
			{
			    if(IsPlayerConnected(playerid))
				{
					if (PlayerInfo[playerid][pAdmin] >= 1)
		  			{
					    if(AdminDuty[playerid] == 0)
			        	{
			        	    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s est en Admin service", PlayerInfo[playerid][pRealName]);
			            	AdminDuty[playerid] = 1;
							SafeSetPlayerArmour(playerid, 200);
							SafeSetPlayerHealth(playerid, 200);
							if(PlayerInfo[playerid][pSex] == 1)
								{SetPlayerSkin(playerid, 217);}
							else
							    {SetPlayerSkin(playerid, 211);}
							SetPlayerColor(playerid, 0xFF000000);
							DutyAdmin[playerid] = CreateDynamic3DTextLabel("[Admin En Service]",0xFF000099,0,0,0.3,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
							msg_Admin(COLOR_LIGHTRED,string,1);
							return 1;
			        	}
			        	else 
			        	{
			        	    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s n'est plus en Admin service", PlayerInfo[playerid][pRealName]);
							if(IsValidDynamic3DTextLabel(DutyAdmin[playerid]))
								{DestroyDynamic3DTextLabel(DutyAdmin[playerid]);}
			            	AdminDuty[playerid] = 0;
			            	SafeSetPlayerArmour(playerid, 0);
							SafeSetPlayerHealth(playerid, 100);
	                    	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							SetPlayerColor(playerid,0xFFFFFF00);
							msg_Admin(COLOR_LIGHTRED,string,1);
							return 1;
			        	}
					}
					else
						{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
				}
			}
			else if(strcmp(tmp, "veprice", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] < 3)
		  			{return 1;}

                tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
		        	{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a veprice <model> <prix>");return 1;}
				var = strval(tmp);
				if(var < 400 || var > 611)
				    {return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Model entre 400 et 611.");}
                tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
		        	{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a veprice <model> <prix>");return 1;}

				format(sql,sizeof(sql),"UPDATE lvrp_server_vehicles_prices SET Price=%d WHERE Model=%d",strval(tmp),var);
				mysql_pquery(MYSQL,sql);
				format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le prix du véhicule (%s) à %d$.",vehName[var-400], strval(tmp));
				msg_Client(playerid,COLOR_WHITE,string);
				return 1;
			}
			else if(strcmp(tmp, "end_beta", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] < 4)
		  			{return 1;}
				for(new i=0; i<totalHouses; i++)
				    {house_Reset(i);}
                for(new i=0; i<totalGarages; i++)
				    {garage_Reset(i);}
			}
			else if(strcmp(tmp, "gethere", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
		  		{
		  		    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
		        		{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a gethere <id/joueur>");return 1;}
					new Float:plocx,Float:plocy,Float:plocz;
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						server_SetPlayerInterior(giveplayerid,PlayerInfo[playerid][pInt]);
						server_SetPlayerVirtualWorld(giveplayerid,PlayerInfo[playerid][pVirWorld]);
						if (GetPlayerState(giveplayerid) == 2)
							{SafeSetVehiclePos(GetPlayerVehicleID(giveplayerid), plocx, plocy+4, plocz);}
						else
							{SafeSetPlayerPos(giveplayerid,plocx,plocy+2, plocz);}
						msg_Client(giveplayerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
					}
					else
						{msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
		  		}
		  		else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
				return 1;
			}
			else if(strcmp(tmp, "getcar", true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a getcar <carid>");return 1;}
				new Float:plocx,Float:plocy,Float:plocz;
				giveplayerid = strval(tmp);
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SafeSetVehiclePos(giveplayerid,plocx,plocy+4, plocz);
				SetVehicleVirtualWorld(giveplayerid, GetPlayerVirtualWorld(playerid));
				LinkVehicleToInterior(giveplayerid, GetPlayerInterior(playerid));
				msg_Client(giveplayerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
				return 1;
			}
			else if(strcmp(tmp, "reanimer", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
		  		{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a reanimer <id/joueur>");return 1;}
	                giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    /*if(medic_PlayerNeedMedic[giveplayerid] == 1) // Bléssé
						{*/
							TogglePlayerControllable(giveplayerid,true);
							ClearAnimations(giveplayerid);
							medic_PlayerNeedMedic[giveplayerid]=0; medic_PlayerMedicTime[giveplayerid]=0;
							SetPlayerColor(giveplayerid,0xFFFFFF00);
							format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez réanimé %s.",PlayerInfo[giveplayerid][pRealName]);
							msg_Client(playerid,COLOR_WHITE,string);
                            format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été réanimé par %s.",PlayerInfo[playerid][pRealName]);
							msg_Client(giveplayerid,COLOR_WHITE,string);
							SafeSetPlayerHealth(giveplayerid, 100);
						//}
					}
					else
						{msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
                else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
				return 1;
			}
			else if(strcmp(tmp, "goto", true) == 0 || strcmp(tmp, "tp", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
		  		{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
		        	{
		            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto <nom>");
		            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} joueur - actor - vehicule - concess - maison - biz - garage - pos - sqlcar");
		            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} anpe - banque - qg - hopital - ls- lv - sf - fc - reserve - spawn - porte");
		            	return 1;
					}
					if(strcmp(tmp,"concess",true) == 0)
	  				{
	  					if(!strlen(tmp))
		        			{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto concess");return 1;}
		        		ShowPlayerDialog(playerid, 83, DIALOG_STYLE_LIST, "Concessesions","{FFFFFF}- Luxe \n- Pauvre \n- Moto \n- Bateau \n- Avion\n- 4x4","OK", "Quitter");
		        		return 1;
					}
					else if(strcmp(tmp,"car",true) == 0 || strcmp(tmp,"voiture",true) == 0 || strcmp(tmp,"vehicule",true) == 0)
		        	{
		        	    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto car <carid>");return 1;}
						var = strval(tmp);
						new Float:cwx2,Float:cwy2,Float:cwz2;
						GetVehiclePos(var, cwx2, cwy2, cwz2);
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, cwx2, cwy2, cwz2);}
						else
							{SafeSetPlayerPos(playerid, cwx2, cwy2, cwz2);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						server_SetPlayerVirtualWorld(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
		        	}
		        	else if(strcmp(tmp,"sqlcar",true) == 0)
		        	{
		        	    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto sqlcar <sqlid>");return 1;}
						var = strval(tmp);
						new tmpVeh= vehicle_GetId(var);
						if(tmpVeh == -1)
						    {return msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Ce véhicule n'est pas créé IG.");}
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, vehicle[tmpVeh][cLocationx], vehicle[tmpVeh][cLocationy], vehicle[tmpVeh][cLocationz]);}
						else
							{SafeSetPlayerPos(playerid, vehicle[tmpVeh][cLocationx], vehicle[tmpVeh][cLocationy], vehicle[tmpVeh][cLocationz]);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
		        	}
		        	else if(strcmp(tmp,"maison",true) == 0 || strcmp(tmp,"ma",true) == 0)
		        	{
		        	    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto maison <maisonid>");return 1;}
						var = strval(tmp);
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, house[var][pos][0], house[var][pos][1], house[var][pos][2]);}
						else
							{SafeSetPlayerPos(playerid, house[var][pos][0], house[var][pos][1], house[var][pos][2]);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						server_SetPlayerVirtualWorld(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
		        	}
		        	else if(strcmp(tmp,"biz",true) == 0 || strcmp(tmp,"bizz",true) == 0)
		        	{
		        	    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto biz <maisonid>");return 1;}
						var = strval(tmp);
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, bizz[var][pos][0], bizz[var][pos][1], bizz[var][pos][2]);}
						else
							{SafeSetPlayerPos(playerid, bizz[var][pos][0], bizz[var][pos][1], bizz[var][pos][2]);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						server_SetPlayerVirtualWorld(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
		        	}
		        	else if(strcmp(tmp,"pos",true) == 0)
		        	{
		        	    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto pos <x> <y> <z>");return 1;}
						new Float:tmpX, Float:tmpY, Float:tmpZ;
						tmpX = floatstr(tmp);
						tmp = strtok(cmdtext, idx);
						tmpY = floatstr(tmp);
						tmp = strtok(cmdtext, idx);
						tmpZ = floatstr(tmp);
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, tmpX, tmpY, tmpZ);}
						else
							{SafeSetPlayerPos(playerid, tmpX, tmpY, tmpZ);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
		        	}
		        	else if(strcmp(tmp,"garage",true) == 0)
		        	{
		        	    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto garage <garageid>");return 1;}
						var = strval(tmp);
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, garage[var][pos][0], garage[var][pos][1], garage[var][pos][2]);}
						else
							{SafeSetPlayerPos(playerid, garage[var][pos][0], garage[var][pos][1], garage[var][pos][2]);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
		        	}
		        	else if(strcmp(tmp,"porte",true) == 0)
		        	{
		        	    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto porte <porteid>");return 1;}
						var = strval(tmp);
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, gate[var][pos][0], gate[var][pos][1], gate[var][pos][2]);}
						else
							{SafeSetPlayerPos(playerid, gate[var][pos][0], gate[var][pos][1], gate[var][pos][2]);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						ResetPlayerIntVar(playerid);
						return 1;
		        	}
					else if(strcmp(tmp,"anpe",true) == 0)
		        	{
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, 1722.8861, -1628.6687, 20.2133);}
						else
							{SafeSetPlayerPos(playerid, 1722.8861, -1628.6687, 20.2133);}
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"banque",true) == 0)
	  				{
	   					if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, 1463.1139,-1022.8700,23.8331);}
						else
							{SafeSetPlayerPos(playerid, 1463.1139,-1022.8700,23.8331);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"spawn",true) == 0)
	  				{
						new tmpstring[128];
						for(new i=0; i<MAX_CITY; i++)
						{
						    format(tmpstring,sizeof(tmpstring),"- %s\n",GetCityName(i));
						    strins(string,tmpstring,strlen(string),sizeof(string));
						}
						ShowPlayerDialog(playerid,143,DIALOG_STYLE_LIST,"» Admin « Tp Spawns",string,"Valider","Annuler");
						return 1;
					}
					else if(strcmp(tmp,"hopital",true) == 0)
		        	{
		        	    if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, 1184.1344,-1324.0149,13.5753);}
						else
							{SafeSetPlayerPos(playerid, 1184.1344,-1324.0149,13.5753);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"qg",true) == 0)
		        	{
						new tmpstring[32];
						for(new fac=0;fac<totalFactions; fac++)
						{
						    if(FactionInfo[fac][fCreate] == 1)
						    {
							    format(tmpstring,sizeof(tmpstring),"%s\n",FactionInfo[fac][fName]);
							    strins(string,tmpstring,strlen(string),sizeof(string));
						    }
						}
						new string2[256];
						format(string2,sizeof(string2),"L.S.P.D\nF.B.I\nArmée\nL.S.M.D\nGouvernement\nL.S.F.D\nABC Sudio\nSo Fast Drive\nBAC\n%s",string);
		        		ShowPlayerDialog(playerid, 82, DIALOG_STYLE_LIST, "» Admin « Goto QG", string2, "Valider", "Anuler");
		        		return 1;
					}
					else if(strcmp(tmp,"reserve",true) == 0)
		        	{
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, 2571.3479,2714.3323,29.2371);}
						else
							{SafeSetPlayerPos(playerid, 2571.3479,2714.3323,29.2371);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"ls",true) == 0)
		        	{
						if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, 1529.6,-1691.2,13.3);}
						else
							{SafeSetPlayerPos(playerid, 1529.6,-1691.2,13.3);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"lv",true) == 0)
		        	{
		        		if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, 1699.2, 1435.1, 10.7);}
						else
							{SafeSetPlayerPos(playerid, 1699.2,1435.1, 10.7);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"sf",true) == 0)
		        	{
		        		if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, -1417.0,-295.8,14.1);}
						else
							{SafeSetPlayerPos(playerid, -1417.0,-295.8,14.1);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"fc",true) == 0)
		        	{
		        		if (GetPlayerState(playerid) == 2)
							{SafeSetVehiclePos(idcar, -152.2688,1090.5657,19.7422);}
						else
							{SafeSetPlayerPos(playerid, -152.2688,1090.5657,19.7422);}
						msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						server_SetPlayerInterior(playerid,0);
						ResetPlayerIntVar(playerid);
						return 1;
					}
					else if(strcmp(tmp,"joueur",true) == 0)
		        	{
		        		tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto joueur <id/joueur>");return 1;}
						new Float:plocx,Float:plocy,Float:plocz;
						giveplayerid = ReturnUser(tmp);
						if(giveplayerid == playerid)
						    {return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Impossible à vous même !");}
						if (IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{
							if(Spectate[playerid] != -1)
								{return 1;}
							GetPlayerPos(giveplayerid, plocx, plocy, plocz);
							server_SetPlayerInterior(playerid,PlayerInfo[giveplayerid][pInt]);
							server_SetPlayerVirtualWorld(playerid,PlayerInfo[giveplayerid][pVirWorld]);
							if (GetPlayerState(playerid) == 2)
								{SafeSetVehiclePos(idcar, plocx, plocy+4, plocz);}
							else
								{SafeSetPlayerPos(playerid,plocx,plocy+2, plocz);}
							msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
							ResetPlayerIntVar(playerid);
							return 1;
						}
						else
							{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!"); return 1;}
		        	}
		        	else if(strcmp(tmp,"actor",true) == 0 || strcmp(tmp,"acteur",true) == 0)
		        	{
		        		tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto actor <id>");return 1;}
						new Float:plocx,Float:plocy,Float:plocz;
						giveplayerid = ReturnUser(tmp);
						for(new i = 0, j = GetActorPoolSize(); i <= j; i++)
					    {
					        if(IsValidDynamicActor(i))
					        	{giveplayerid=i;}
					    }
						if (IsValidDynamicActor(giveplayerid) && giveplayerid != INVALID_ACTOR_ID)
						{
							GetActorPos(giveplayerid, plocx, plocy, plocz);
							server_SetPlayerVirtualWorld(playerid,GetActorVirtualWorld(giveplayerid));
							if (GetPlayerState(playerid) == 2)
								{SafeSetVehiclePos(idcar, plocx, plocy+4, plocz);}
							else
								{SafeSetPlayerPos(playerid,plocx,plocy+2, plocz);}
							msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
							ResetPlayerIntVar(playerid);
							return 1;
						}
						else
							{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Cet acteur n'existe pas !"); return 1;}
		        	}
		        	else
		        	{
		        	    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a goto <nom>");
		            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} joueur - vehicule - concess - maison - biz - garage");
		            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} anpe - banque - qg - hopital - ls- lv - sf - fc - reserve - spawn");
		            	return 1;
		        	}
				}
				else
				{
      				msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");
				}
			}
			else if(strcmp(tmp, "clear", true) == 0)
			{
			    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			    	{ClearChatbox(i,50);}
				format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s a effacé le chat.",PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(COLOR_LIGHTRED,string);
				return 1;
			}
			else if(strcmp(tmp, "slap", true) == 0)
			{
	    		if (PlayerInfo[playerid][pAdmin] >= 1)
		  		{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a slap <id/joueur>");return 1;}
					new Float:slx, Float:sly, Float:slz;
					giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerPos(giveplayerid, slx, sly, slz);
						SafeSetPlayerPos(giveplayerid, slx, sly, slz+5);
						PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s a été slappé par %s",PlayerInfo[giveplayerid][pRealName] ,PlayerInfo[playerid][pRealName]);
						msg_Admin(COLOR_LIGHTRED,string,2);
						format(string, sizeof(string), "%s a été slappé par %s.", PlayerInfo[giveplayerid][pRealName] ,PlayerInfo[playerid][pRealName]);
						log_Admin(string);
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
				return 1;
			}
			else if(strcmp(tmp, "demute", true) == 0)
			{
	    		if (PlayerInfo[playerid][pAdmin] >= 1)
		  		{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a demute <id/joueur>");}
					giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
				    {
						gPlayerMuteOOC[giveplayerid] = 0;
						gPlayerMuteIC[giveplayerid] = 0;
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez démuté %s.",PlayerInfo[giveplayerid][pRealName]);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été démuté.");
						msg_Client(giveplayerid,COLOR_INFO,string);
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
				return 1;
			}
			else if(strcmp(tmp, "muteooc", true) == 0)
			{
	    		if (PlayerInfo[playerid][pAdmin] >= 1)
		  		{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a muteooc <id/joueur> <temps(minutes)>");}
					giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
				    {
				        tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a muteooc <id/joueur> <temps(minutes)>");}
						var=strval(tmp);
						gPlayerMuteOOC[giveplayerid] = (var*60);
						format(string,sizeof(string),"» Mute OOC « %s a été réduit au silence par l'Admin %s pendant %d min(s).",PlayerInfo[giveplayerid][pRealName],PlayerInfo[playerid][pRealName],var);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été réduits au silence(OOC) pendant %d minute(s).",var);
						msg_Client(giveplayerid,COLOR_INFO,string);
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
				return 1;
			}
			else if(strcmp(tmp, "muteic", true) == 0)
			{
	    		if (PlayerInfo[playerid][pAdmin] >= 1)
		  		{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a muteic <id/joueur> <temps(minutes)>");}
					giveplayerid = ReturnUser(tmp);
				    if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
				    {
				        tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a muteic <id/joueur> <temps(minutes)>");}
						var=strval(tmp);
						gPlayerMuteIC[giveplayerid] = (var*60);
						format(string,sizeof(string),"» Mute IC « %s a été réduit au silence par l'Admin %s pendant %d min(s).",PlayerInfo[giveplayerid][pRealName],PlayerInfo[playerid][pRealName],var);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été réduits au silence(IC) pendant %d minute(s).",var);
						msg_Client(giveplayerid,COLOR_INFO,string);
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
				return 1;
			}
			else if(strcmp(tmp, "info", true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 1)
			    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a info <id/joueur>");return 1;}
	            	giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
						{ShowStats(playerid,giveplayerid);return 1;}
					else
						{msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "interieur", true) == 0 || strcmp(tmp, "interrieur", true) == 0 || strcmp(tmp, "int", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a (int)errieur <id/joueur> <interrieur>");return 1;}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						server_SetPlayerInterior(giveplayerid, var);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez mis l'intérieur de %s à %d.", PlayerInfo[giveplayerid][pRealName], var);
						msg_Client(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} %s à mis votre intérieur à %d.", PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à mis interrieur de %s à %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
						log_Admin(string);
						return 1 ;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "monde", true) == 0 || strcmp(tmp, "vw", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a monde <id/joueur> <monde>");return 1;}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						server_SetPlayerVirtualWorld(giveplayerid, var);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez mis le monde virtuel du joueur %s à %d.", PlayerInfo[giveplayerid][pRealName], var);
						msg_Client(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} %s à mis votre monde virtuel à %d.", PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à mis le virtual world de %s à %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
						log_Admin(string);
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande !");}
			}
			else if(strcmp(tmp, "kick", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
		    		tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a kick <id/joueur> <raison>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
								
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
						if(!strlen(result))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a kick <id/joueur> <raison>");return 1;}
						format(string,sizeof(string),"[Kick] %s a été kické par l'admin %s, raison : %s ",PlayerInfo[giveplayerid][pRealName],PlayerInfo[playerid][pRealName],(result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "%s à kické %s, raison : %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],result);
						log_Admin(string);
						MySQLKick(giveplayerid,playerid,result);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "ban", true) == 0)
			{
	    		tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a ban <id/joueur> <raison>");return 1;}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID && !IsPlayerNPC(giveplayerid))
			    	{
			        	if(PlayerInfo[giveplayerid][pAdmin] >= PlayerInfo[playerid][pAdmin])
       		        		{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous ne pouvez pas ban un supérieur.");return 1;}

						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
								
						if(!strlen(result))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a ban <id/joueur> <raison>");return 1;}
								
						format(string,sizeof(string),"[Ban] %s a été banni par l'admin %s, raison : %s ",PlayerInfo[giveplayerid][pRealName],PlayerInfo[playerid][pRealName],(result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
                        format(string, sizeof(string), "%s à ban %s, raison : %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],(result));
						log_Admin(string);
                       	MySQLBan(giveplayerid,playerid,(result),-1);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "banip", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] < 2)
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			    new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a banip <ip>");}
					
                format(sql, sizeof(sql), "INSERT INTO lvrp_users_bans SET SQLid=-1, BannedBy='%s', Ip='%s', Reason='Ban IP', Date=UNIX_TIMESTAMP(), Time=-1",PlayerInfo[playerid][pName],result);
				mysql_pquery(MYSQL,sql);

				format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez banni l'ip %s.",result);
				msg_Client(playerid,COLOR_WHITE,string);
				return 1;
			}
			else if(strcmp(tmp, "bantemps", true) == 0)
			{
	    		tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a bantemps <id/joueur> <temps> <raison>");return 1;}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
			        	if(PlayerInfo[giveplayerid][pAdmin] >= PlayerInfo[playerid][pAdmin])
       		        		{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous ne pouvez pas ban un supérieur.");return 1;}
						tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a bantemps <id/joueur> <temps(heure)> <raison>");return 1;}
						var = strval(tmp);

						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
								
						if(!strlen(result))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a ban <id/joueur> <temps(heure)> <raison>");return 1;}
								
						format(string,sizeof(string),"[Ban] %s a été banni temporairement %d heure(s) par l'admin %s, raison : %s ",PlayerInfo[giveplayerid][pRealName],var,PlayerInfo[playerid][pRealName],(result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
                        format(string, sizeof(string), "%s à ban %s, raison : %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],(result));
						log_Admin(string);
                       	MySQLBan(giveplayerid,playerid,(result),var);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "freeze", true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a freeze <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						TogglePlayerControllable(giveplayerid, false);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez freeze %s.",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_WHITE,string);
						GameTextForPlayer(giveplayerid, "~w~Tu es freeze", 5000, 3);
						format(string, sizeof(string), "%s à freeze %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "defreeze", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a defreeze <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						TogglePlayerControllable(giveplayerid, true);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez defreeze %s.",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_WHITE,string);
						GameTextForPlayer(giveplayerid, "~w~Vous pouvez a nouveau bouger", 5000, 3);
						format(string, sizeof(string), "%s à de-freeze %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "spec", true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				new Float:X, Float:Y, Float:Z;
				if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a spec <nom>");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} off - <id/joueur>");
					return 1;
				}
				if(AdminDuty[playerid] == 0)
		    		{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Vous devez être en Service Admin.");return 1;}
		    	if(strcmp(tmp, "off", true) == 0)
				{
				    if(WatchingTV[playerid] == 1)
				    {
				        server_TogglePlayerSpectating(playerid, false);
				        WatchingTV[playerid] = 0;
				        SetPlayerColor(playerid, 0xFF000000);
						DutyAdmin[playerid] = CreateDynamic3DTextLabel("[Admin En Service]",0xFF000099,0,0,0.3,NAME_DISTANCE,playerid,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
						SafeSetPlayerPos(playerid,1514.6956,-1674.7020,14.0469);
						server_SetPlayerInterior(playerid, 0);
				        SafeSetPlayerArmour(playerid, 200);
						SafeSetPlayerHealth(playerid, 200);
						SetPlayerSkin(playerid, 217);
						SetCameraBehindPlayer(playerid);
						SafeSetPlayerPos(playerid, X, Y, Z);
						Spectate[playerid] = -1;
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Vous n'êtes pas en train de spec.");return 1;}
				}
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(giveplayerid == playerid)
					            {return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Impossible de vous spec vous même.");}
					        if(Spectate[playerid]==-1)
					        {
					            if(IsValidDynamic3DTextLabel(DutyAdmin[playerid]))
					            	{DestroyDynamic3DTextLabel(DutyAdmin[playerid]);}
					            server_TogglePlayerSpectating(playerid, true);
					        }
							Spectate[playerid] = giveplayerid;
							if(!IsPlayerInAnyVehicle(giveplayerid))
								{server_PlayerSpectatePlayer(playerid, giveplayerid);}
							else
								{server_PlayerSpectateVehicle(playerid,GetPlayerVehicleID(giveplayerid));}
							server_SetPlayerInterior(playerid,PlayerInfo[giveplayerid][pInt]);
							server_SetPlayerVirtualWorld(playerid, PlayerInfo[giveplayerid][pVirWorld]);
							WatchingTV[playerid] = 1;
							printf("%s spec %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
							return 1;
						}
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "skin", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a skin <id/joueur> <skinid>");return 1;}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
					if(var > 311 || var < 1)
						{msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Id compris entre 1 et 311."); return 1;}
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						PlayerInfo[giveplayerid][pChar] = var; SetPlayerSkin(giveplayerid, var);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Votre skin a été changé par l'Admin %s.", PlayerInfo[playerid][pRealName]);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD}  Vous avez changer le skin de %s en %d.", PlayerInfo[giveplayerid][pRealName],var);
						msg_Client(playerid, COLOR_WHITE, string);
					    format(string, sizeof(string), "%s à changé le skin de %s par %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
						log_Admin(string);
						MySQLUpdatePlayerIntSingle(PlayerInfo[giveplayerid][pSQLID], "Skin", PlayerInfo[giveplayerid][pChar]);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "jailliste", true) == 0 || strcmp(tmp, "jaillist", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
				    msg_Client(playerid, COLOR_BLUE, "{FFFFFF}======== {FF0068}Joueur(s) en jail {FFFFFF}========");
					for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pJailed] == 2) // Jail OOC
					  		{
								format(string, sizeof(string), "- %s[%d], %d secondes soit %d mins", PlayerInfo[i][pRealName],i,PlayerInfo[i][pJailTime],PlayerInfo[i][pJailTime]/60);
								msg_Client(playerid, COLOR_WHITE, string);
							}
						}
					}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "jail", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a jail <id/joueur> <temps(minutes)> <raison>");}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
					if(var < 1)
					    {return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Le temps de jail doit être supérieur à 0.");}
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
						if(!strlen(result))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a jail <id/joueur> <temps(minutes)> <raison>");}
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez emprisoné %s.", PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid, COLOR_LIGHTRED, string);
						MySQLJail(giveplayerid,playerid,result,var);
						return 1;
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "dejail", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
	    		    tmp = strtok(cmdtext, idx);
	    		    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a dejail <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
        				PlayerInfo[giveplayerid][pJailed] = 0;
						PlayerInfo[giveplayerid][pJailTime] = 0;
						SafeSetPlayerPos(giveplayerid,spawn[PlayerInfo[giveplayerid][pCity]][pos][0],spawn[PlayerInfo[giveplayerid][pCity]][pos][1],spawn[PlayerInfo[giveplayerid][pCity]][pos][2]); SetPlayerFacingAngle(giveplayerid,spawn[PlayerInfo[giveplayerid][pCity]][pos][3]);
      					server_SetPlayerInterior(giveplayerid, 0);
						TogglePlayerControllable(giveplayerid, true);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez déjail %s.",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_WHITE,string);
						format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été déjail par l'Admin %s.",PlayerInfo[playerid][pRealName]);
						msg_Client(giveplayerid,COLOR_INFO,string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "renvoie", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a renvoie <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						if (GetPlayerState(giveplayerid) == 2)
						{
							SafeSetVehiclePos(GetPlayerVehicleID(giveplayerid), 1529.6,-1691.2,13.3);
							LinkVehicleToInterior(GetPlayerVehicleID(giveplayerid),0);
							SetVehicleVirtualWorld(GetPlayerVehicleID(giveplayerid),0);
						}
						else
						{
							SafeSetPlayerPos(giveplayerid, 1529.6,-1691.2,13.3);
							server_SetPlayerInterior(giveplayerid,0);
							server_SetPlayerVirtualWorld(giveplayerid,0);
						}
						ResetPlayerIntVar(giveplayerid);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez renvoie %s.",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_WHITE,string);
						server_SetPlayerInterior(giveplayerid,0);
						msg_Client(giveplayerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
   			}
   			else if(strcmp(tmp, "avertir", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
	    			tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a avertir <id/joueur> <raison>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
						if(!strlen(result))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a avertir <id/joueur> <raison>");return 1;}
						PlayerInfo[giveplayerid][pWarnings] += 1;
						if(PlayerInfo[giveplayerid][pWarnings] >= 4)
							{MySQLBan(giveplayerid,-1,"Plus de 4 avertissements",-1);return 1;}
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez reçu un avertissement par l'Admin %s. Raison: %s", PlayerInfo[playerid][pRealName], (result));
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "[Avertissement] %s a reçu un avertissement par l'Admin %s. Raison: %s", PlayerInfo[giveplayerid][pRealName], PlayerInfo[playerid][pRealName], (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "%s à donné un avertissement à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}

				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "nomoff", true) == 0 || strcmp(tmp, "inconnu", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a nomoff <id inconnu>");return 1;}
					giveplayerid = strval(tmp);
					for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
					{
					    if(IsPlayerConnected(i) && gPlayerMask[i] == giveplayerid)
					    {
					        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Nom : %s | Id : %d | Id inconnu : %d | Level : %d",PlayerInfo[i][pRealName],i,gPlayerMask[i],PlayerInfo[i][pLevel]);
							msg_Client(playerid,COLOR_WHITE,string);
							return 1;
					    }
					}
					msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Aucun joueur trouvé.");
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "deavertir", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
	    		    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a deavertir <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			  		if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						PlayerInfo[giveplayerid][pWarnings] -= 1;
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez enlevé un avertissement a %s.",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous a enlevé un avertissement.", PlayerInfo[playerid][pRealName]);
						msg_Client(giveplayerid,COLOR_INFO, string);
						format(string, sizeof(string), "%s à de-averti %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "jetpack", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 2)
				{
				    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
				    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous vous êtes givé un jetpack en tant qu'admin.");
				    return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "localiser", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a localiser <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						SetPlayerMarkerForPlayer(playerid, giveplayerid,COLOR_BLUE);
						msg_Client(playerid,COLOR_GREEN,"{FF2727}» Admin «{FFABAD} Joueur localisé.");
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp,"cadavre",true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
                    tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /a cadavre <nom>");
				    	msg_Client(playerid, COLOR_POLICE, "{FFFFB2} enlever - rechercher - et");
						return 1;
					}
					if(strcmp(tmp,"enlever",true) == 0)
					{
						new bodyid=-1;
						for(new i=0;i<MAX_DEADBODY; i++)
						{
						    if(body[i][used] == 1 && PlayerToPoint(2.0,playerid,body[i][pos][0],body[i][pos][1],body[i][pos][2]))
						    	{bodyid=i; break;}
						}
						if(bodyid==-1)
						    {msg_Client(playerid,COLOR_POLICE,"{FF2727}» Admin «{FFABAD} Aucun cadavre à côté de vous."); return 1;}

                        body_Remove(bodyid);
                        msg_Client(playerid,COLOR_POLICE,"{FF2727}» Admin «{FFABAD} Vous avez enlevé ce cadavre.");
                        return 1;
					}
					else if(strcmp(tmp,"et",true) == 0)
					{
						for(new i=0;i<MAX_DEADBODY; i++)
							{body_Remove(i);}

                        msg_Client(playerid,COLOR_POLICE,"{FF2727}» Admin «{FFABAD} Vous avez enlevé tous les cadavres.");
                        return 1;
					}
					else if(strcmp(tmp,"rechercher",true) == 0)
					{
					    new bodyid=-1;
						for(new i=0;i<MAX_DEADBODY; i++)
						{
						    if(body[i][used] == 1 &&PlayerToPoint(2.0,playerid,body[i][pos][0],body[i][pos][1],body[i][pos][2]))
						    	{bodyid=i; break;}
						}
						if(bodyid==-1)
						    {msg_Client(playerid,COLOR_POLICE,"{FF2727}» Admin «{FFABAD} Aucun cadavre à côté de vous."); return 1;}

                        new arme[70];
						if(body[bodyid][description] == 0)
							{arme = "Coup de Poing"; }
						else if(body[bodyid][description]>0 && body[bodyid][description]<48)
							{GetWeaponName(body[bodyid][description],arme,sizeof(arme));}
                        else if(body[bodyid][description]== 48)
                            {arme = "Ecrasé"; }
                        else if(body[bodyid][description]== 50)
                            {arme = "Helikill"; }
                        else if(body[bodyid][description]== 51)
                            {arme = "Explosion"; }
                        else if(body[bodyid][description]== 53)
                            {arme = "Noyé"; }
                        else if(body[bodyid][description]== 54)
                            {arme = "Chute"; }
                        else
                            {arme = "Indeterminable"; }
						format(string,sizeof(string),"==========Cadavre de %s==========",body[bodyid][playerZ]);
						msg_Client(playerid,COLOR_POLICE,string);
						format(string,sizeof(string),"Victime : %s",body[bodyid][playerZ]);
						msg_Client(playerid,COLOR_WHITE,string);
						format(string,sizeof(string),"Suspecté : %s",body[bodyid][killer]);
						msg_Client(playerid,COLOR_WHITE,string);
						format(string,sizeof(string),"Heure produite : %s",body[bodyid][time]);
						msg_Client(playerid,COLOR_WHITE,string);
						format(string,sizeof(string),"Cause : %s",arme);
						msg_Client(playerid,COLOR_WHITE,string);
						return 1;
					}
					else
					{
					    msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /a cadavre <nom>");
				    	msg_Client(playerid, COLOR_POLICE, "{FFFFB2} enlever - rechercher");
						return 1;
					}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
            else if(strcmp(tmp,"carcass",true) == 0 || strcmp(tmp,"carcasse",true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
                    tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_POLICE, "{A98500}» Usage «{FFFFB2} /a carcasse <nom>");
				    	return msg_Client(playerid, COLOR_POLICE, "{FFFFB2} enlever - et");
					}
					if(strcmp(tmp,"enlever",true) == 0)
					{
						var=-1;
						for(new i=0;i<MAX_TRASHCAR; i++)
						{
						    if(trashCar[i][used] == 1 && PlayerToPoint(2.0,playerid,trashCar[i][pos][0],trashCar[i][pos][1],trashCar[i][pos][2]))
						    	{var=i; break;}
						}
						if(var==-1)
						    {return msg_Client(playerid,COLOR_POLICE,"{FF2727}» Admin «{FFABAD} Aucune carcasse à côté de vous."); }

                        trashcar_Remove(var);
                        msg_Client(playerid,COLOR_POLICE,"{FF2727}» Admin «{FFABAD} Vous avez enlevé cette carcasse.");
                        return 1;
					}
					else if(strcmp(tmp,"et",true) == 0)
					{
						for(new i=0;i<MAX_TRASHCAR; i++)
							{trashcar_Remove(i);}

                        msg_Client(playerid,COLOR_POLICE,"{FF2727}» Admin «{FFABAD} Vous avez enlevé toutes les carcasses.");
                        return 1;
					}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "mettrejob", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a mettrejob <id/joueur> <jobid>");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Numero:{FFFFFF} 1. Livreur pizza - 2. Fermier - 3. Mineur - 4. Eboueur");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Numero:{FFFFFF} 5. Ouvrier - 6. Pilote de ligne - 7. Facteur - 8. Pêcheur");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Numero:{FFFFFF} 9. Voiturier - 10. Camionneur - 11. Medecin");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Numero:{FFFFFF} 12. Bagagiste - 13. Chauffeur de Taxi - 14. Bucheron");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
						PlayerInfo[giveplayerid][pJob] = var;
						PlayerInfo[giveplayerid][pJobTime] = 0;
						PlayerInfo[giveplayerid][pJobExp] = 0;
						PlayerInfo[giveplayerid][pJobLvl] = 1;
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à changé le travail de %s en %s.", PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName], GetJobName(var));
						msg_Admin(COLOR_YELLOW,string,1);
                     	format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Votre travail a été changé en %s.", GetJobName(var));
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à changé le travail de %s en %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],GetJobName(var));
						log_Admin(string);
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "ip", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					tmp = strtok(cmdtext,idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a ip <id/joueur>");return 1;}
						
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
	 					format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Joueur: %s IP: %s",PlayerInfo[giveplayerid][pRealName],PlayerInfo[giveplayerid][pIP]);
						msg_Client(playerid,COLOR_WHITE,string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "deban", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >=2)
	    		{
	        		tmp = strtok(cmdtext, idx);
	        		if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a deban <Nom du joueur non connecté>");return 1;}
						
                    if(!MySQLCheckAccount(tmp))
		    			{msg_Client(playerid, COLOR_STATS, "{FF2727}» Admin «{FFABAD} Ce compte n'existe pas."); return 1;}
		    
		            format(sql,sizeof(sql),"UPDATE lvrp_users SET Locked=0, Warnings=0 WHERE Name='%s'",tmp);
					mysql_pquery(MYSQL,sql);
					
					format(sql, sizeof(sql), "SELECT id FROM lvrp_users WHERE Name='%s'",tmp);
				    mysql_query(MYSQL,sql);
				    new count = 0;
				    if(cache_get_row_count(count) && count > 0)
				        {cache_get_value_name_int(0,"id", var);}
					
					format(sql,sizeof(sql),"DELETE FROM lvrp_users_bans WHERE SQLid=%d",var);
					mysql_pquery(MYSQL,sql);
					
					format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} %s(SQLid: %d) a été débanni.",tmp,var);
					msg_Client(playerid,COLOR_WHITE,string);

					format(string, sizeof(string), "%s à de-ban %s.",PlayerInfo[playerid][pRealName], tmp);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "debanip", true) == 0)
			{
				if(PlayerInfo[playerid][pAdmin] >=2)
	    		{
	        		tmp = strtok(cmdtext, idx);
	        		if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a debanip <ip>");return 1;}

                    if(!MySQLCheckIPBanned(tmp))
		    			{msg_Client(playerid, COLOR_STATS, "{FF2727}» Admin «{FFABAD} Cette ip n'est pas bannie."); return 1;}

					format(sql,sizeof(sql),"DELETE FROM lvrp_users_bans WHERE Ip='%s'",tmp);
					mysql_pquery(MYSQL,sql);

					format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Ip: %s a été débanni.",tmp);
					msg_Client(playerid,COLOR_WHITE,string);

					format(string, sizeof(string), "%s a de-ban l'ip %s.",PlayerInfo[playerid][pRealName], tmp);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
   			}
   			else if(strcmp(tmp, "event", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >=3)
	    		{
	    		    tmp = strtok(cmdtext, idx);
     			    if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a event <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FFFFB2} creer - supprimer - lancer - finir");
						return 1;
					}
					if(strcmp(tmp, "creer", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
	     			    if(!strlen(tmp))
						{
							msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a event creer <nom>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2} derby - dm - course");
							return 1;
						}
						if(strcmp(tmp, "derby", true) == 0)
						{
					    }
					}

	    		}
	    		else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
   			else if(strcmp(tmp, "recup", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
     			{
     			    tmp = strtok(cmdtext, idx);
     			    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a recup <id/joueur> <level> <argent>");return 1;}
	     			giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    if(PlayerInfo[giveplayerid][pRecup]==1)
					        {return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce joueur a déjà eu sa récupération de compte.");}
					    tmp = strtok(cmdtext, idx);
					    new lvl = strval(tmp);
					    if(!strlen(tmp) || lvl< 0 || lvl > 10)
					        {msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Level compris entre 1 et 10."); return 1;}
                        tmp = strtok(cmdtext, idx);
					    new cashs = strval(tmp);
					    if(!strlen(tmp) || cashs< 0 || cashs > 50000)
					        {msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Argent compris entre $1 et $50.000."); return 1;}
						PlayerInfo[giveplayerid][pLevel]=lvl;
						SafeGivePlayerMoney(giveplayerid,cashs,"Récuperation de compte");
						format(string,sizeof(string),"{FA00FF}|Récup. de Compte|{FFFFFF} Level {FF0000}%d{FFFFFF} et {FF0000}$%d{FFFFFF}. Faite par {0000FF}%s",lvl,cashs,PlayerInfo[playerid][pRealName]);
						msg_Client(giveplayerid,COLOR_WHITE,string);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Récupération de compte faite à %s. (Lvl %d - $%d)",PlayerInfo[giveplayerid][pRealName],lvl,cashs);
						msg_Client(playerid,COLOR_WHITE,string);
						PlayerInfo[giveplayerid][pRecup]=1;
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
				    {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "divorcer", true) == 0 || strcmp(tmp, "divorce", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
     			{
     			    tmp = strtok(cmdtext, idx);
     			    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a divorcer <id/joueur>");return 1;}
	     			giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    player_Divorce(giveplayerid);
						format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été divorcé(e) par %s.",PlayerInfo[playerid][pRealName]);
						msg_Client(giveplayerid,COLOR_WHITE,string);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez fait divorcer %s",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_WHITE,string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
				    {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "identité", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
     			{
     			    tmp = strtok(cmdtext, idx);
     			    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a identité <id/joueur>");return 1;}
	     			giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    format(string,sizeof(string),"{FFFFFF}» Beta « Carte d'identié donné par %s",PlayerInfo[playerid][pRealName]);
						msg_Client(giveplayerid,COLOR_WHITE,string);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Carte d'identité donné à %s",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_WHITE,string);
					    PlayerInfo[giveplayerid][pIdentie]=1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
				    {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "forceinsc", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
     			{
     			    tmp = strtok(cmdtext, idx);
     			    if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a forceinsc <id/joueur>");return 1;}
	     			giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    format(string,sizeof(string),"{FFFFFF}» Beta « Inscription forcé par %s",PlayerInfo[playerid][pRealName]);
						msg_Client(giveplayerid,COLOR_WHITE,string);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Inscription forcé à %s",PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_WHITE,string);
						inscription_Note[giveplayerid]=0;
					    inscription_QuestionNumber[giveplayerid]=0;
					    inscription_ValidQuestion[giveplayerid]=0;
					    inscription_Question(giveplayerid);
            			inscription_Step[giveplayerid]=1;
            			return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");return 1;}
				}
				else
				    {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "cnnn", true) == 0)
			{
					if (PlayerInfo[playerid][pAdmin] >= 3)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a cnnn <type>");return 1;}
						new txtid = strval(tmp);
						if(txtid == 2)
							{msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Vous ne pouvez pas en choisir 2!");return 1;}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							msg_Client(playerid, COLOR_WHITE, "USAGE: /cnnn <type> [cnnc textformat ~n~=Nouvelleligne ~r~=Rouge ~g~=Verte ~b~=Bleu ~w~=Blanc ~y~=Jaune]");
							msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a cnnn <type>");
							return 1;
						}
						format(string, sizeof(string), "~w~%s",result);
						for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
						{
							if(IsPlayerConnected(i))
								{ConvertirTexte (string);GameTextForPlayer(i, string, 5000, txtid);}
						}
						format(string, sizeof(string), "%s à parlé en CNNN : %s.",PlayerInfo[playerid][pRealName],result);
						log_Admin(string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
   			}
   			else if(strcmp(tmp, "virer", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a virer <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
			    		if (PlayerInfo[giveplayerid][pMember] > 0)
					    {
							format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été viré de votre faction, par l'Admin %s.", PlayerInfo[playerid][pRealName]);
							msg_Client(giveplayerid, COLOR_INFO, string);
							msg_Client(giveplayerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous êtes maintenant civil.");
							format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez virer %s de sa faction",PlayerInfo[giveplayerid][pRealName]);
							msg_Client(playerid,COLOR_WHITE,string);
							PlayerInfo[giveplayerid][pMember] = 0;
							PlayerInfo[giveplayerid][pLeader] = 0;
							PlayerInfo[giveplayerid][pRank] = 0;
							format(string, sizeof(string), "%s à viré %s de sa faction.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
							log_Admin(string);
							return 1;
						}
						else
							{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur ne fait pas parti d'une faction.");return 1;}
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "inviter", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a inviter <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
			        	if(PlayerInfo[giveplayerid][pMember] > 0)
			            	{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur est déjà dans une Faction !");return 1;}
                        new tmpstring[32];
						for(new fac=0;fac<totalFactions; fac++)
						{
						 	if(FactionInfo[fac][fCreate] == 1)
						    {
								format(tmpstring,sizeof(tmpstring),"- %s\n",FactionInfo[fac][fName]);
								strins(string,tmpstring,strlen(string),sizeof(string));
						    }
						}
						new title[64];
						format(string,sizeof(string),"{FFFFFF}- LSPD\n- SFPD\n- LVPD\n- SASD\n- FBI\n- Gouvernement LS\n- Gouvernement SF\n- Gouvernement LV\n- Gouvernement SA\n- San News\n%s",string);
						format(title,sizeof(title),"» Admin « Inviter %s",PlayerInfo[giveplayerid][pRealName]);
						ShowPlayerDialog(playerid,20,DIALOG_STYLE_LIST,title,string,"Valider","Annuler");
			  			SetPVarInt(playerid,"adminMemberPlayer",giveplayerid);
			  			return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "leader", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a leader <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			    	{
        				if(PlayerInfo[giveplayerid][pMember] > 0)
			            	{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur est déjà dans une Faction!");return 1;}
                        new tmpstring[32];
						for(new fac=0;fac<totalFactions; fac++)
						{
						    if(FactionInfo[fac][fCreate] == 1)
						    {
								format(tmpstring,sizeof(tmpstring),"- %s\n",FactionInfo[fac][fName]);
								strins(string,tmpstring,strlen(string),sizeof(string));
						    }
						}
						new title[64];
						format(string,sizeof(string),"{FFFFFF}- LSPD\n- SFPD\n- LVPD\n- SASD\n- FBI\n- Gouvernement LS\n- Gouvernement SF\n- Gouvernement LV\n- Gouvernement SA\n- San News\n%s",string);
						format(title,sizeof(title),"» Admin « Mettre leader %s",PlayerInfo[giveplayerid][pRealName]);
						ShowPlayerDialog(playerid,19,DIALOG_STYLE_LIST,title,string,"Valider","Annuler");
			  			SetPVarInt(playerid,"adminLeaderPlayer",giveplayerid);
			  			return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "rang", true) == 0)
			{
	    		    if (PlayerInfo[playerid][pAdmin] >= 2)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a rang <id/joueur> <rang>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a rang <id/joueur> <rang>");}
						var = strval(tmp);
						if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			   			{
							PlayerInfo[giveplayerid][pRank] = var;
							format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s a changé votre rang de faction, vous etes désormais rang %d!",PlayerInfo[playerid][pRealName], var);
							msg_Client(giveplayerid, COLOR_INFO, string);
							format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le rang de faction de %s à %d!", PlayerInfo[giveplayerid][pRealName], var);
							msg_Client(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s à changé le rang de %s, en %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
							log_Admin(string);
							return 1;
			   			}
			   			else
							{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");}
					}
					else
						{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "vie", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a vie <id/joueur> <vie>");}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
  		 			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			   		{
			   		    if(var < 0)
			   		        {return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Erreur dans le montant.");}
						SafeSetPlayerHealth(giveplayerid, var);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à mis votre vie à %d!",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez mis la vie du joueur %s à %d !", PlayerInfo[giveplayerid][pRealName], var);
						msg_Client(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s a mis la vie de %s à %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
						log_Admin(string);
						return 1;
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "soif", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a soif <id/joueur> <vie>");}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
  		 			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			   		{
						PlayerInfo[giveplayerid][pSoif]=var;
						UpdateStatsTextsPlayers(giveplayerid,2);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à mis votre soif à %d.",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez mis la soif du joueur %s à %d.", PlayerInfo[giveplayerid][pRealName], var);
						msg_Client(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s a mis la vie de %s à %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
						log_Admin(string);
						return 1;
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "faim", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a faim <id/joueur> <vie>");}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
			   		if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			   		{
						PlayerInfo[giveplayerid][pFaim]=var;
						UpdateStatsTextsPlayers(giveplayerid,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à mis votre faim à %d.",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez mis la faim du joueur %s à %d.", PlayerInfo[giveplayerid][pRealName], var);
						msg_Client(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s à mis la vie de %s à %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
						log_Admin(string);
						return 1;
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "armure", true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a armure <id/joueur> <armure>");}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
				 	if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						SafeSetPlayerArmour(giveplayerid, var);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à mis votre armure à %d.",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez mis la armure du joueur %s à %d.", PlayerInfo[giveplayerid][pRealName], var);
						msg_Client(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s à mis l'armure de %s à %d.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName],var);
						log_Admin(string);
						return 1;
					}
					else
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "heure", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] > 2)
			    {
			        tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
						{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a heure <heure>");}

                    var = strval(tmp);
					if(var < 0||var > 23)
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} L'ID de la meteo doit être compris entre 1 et 23!");}

                    SetWorldTime(var);
                    SetPlayerTime(playerid,var,0);
		       		format(string, 256, "{FF2727}» Admin «{FFABAD} %s à mis l'heure du serveur à %d.", PlayerInfo[playerid][pRealName],var);
					msg_Admin(COLOR_YELLOW,string,1);
					format(string, sizeof(string), "%s à mis l'heure du serveur à %d.",PlayerInfo[playerid][pRealName], var);
					log_Admin(string);
					return 1;
			    }
			    else
		            {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
			else if(strcmp(tmp, "meteo", true) == 0)
			{
				if(PlayerInfo[playerid][pAdmin] > 2)
			    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a meteo <numero>");
				    	msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 0-7 (Cieux Bleu) 08 (Orageux) 09 (H. Brumeux) 32 (L. Brumeux) 10 (Ciel Bleu) 11 (Journée Extrèmement Chaude)");
						msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 12-15 (Cieux Brumeux) 16 (Orageux) 17-18 (Journée Extrèmement Chaude) 19 (L. Tempete de Sable)");
						msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 42 (H. Tempete de Sable) 20 (Ciel Noir)");
					    return 1;
					}
					var = strval(tmp);
					if(var < 0||var > 45)
						{return msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} L'ID de la meteo doit être compris entre 1 et 45!");}
					SetWeather(var);
		       		format(string, 256, "{FF2727}» Admin «{FFABAD} %s à mis la météo à %d.", PlayerInfo[playerid][pRealName],var);
					msg_Admin(COLOR_YELLOW,string,1);
					gServerWeather = var;
					format(string, sizeof(string), "%s à mis la météo à %d.",PlayerInfo[playerid][pRealName], var);
					log_Admin(string);
					return 1;
				}
				else
		            {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!"); return 1;}
			}
            else if(strcmp(tmp, "donner", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} argent - materiaux - arme - weed - heroine - cocaine - ecstasy - permis - level - morphine");
						return 1;
					}
					else if(strcmp(tmp, "permis", true) == 0)
					{
			        if(IsPlayerConnected(playerid))
	    			{
	        		if (PlayerInfo[playerid][pAdmin] >= 2)
	        		{
	            		new x_nr[256];
						x_nr = strtok(cmdtext, idx);
						if(!strlen(x_nr))
						{
				    		msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis <nom> <id/joueur>");
				    		msg_Client(playerid, COLOR_WHITE, "{FFFFB2} conduite, voler, navigation, peche, arme, moto, poidlourd, train.");
							return 1;
						}
						if(strcmp(x_nr,"voler",true) == 0)
						{
		            		tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
					    		msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis voler <id/joueur>");
					    		return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
					    		if(giveplayerid != INVALID_PLAYER_ID)
					    		{
				            		format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de vol à %s.",PlayerInfo[giveplayerid][pRealName]);
					        		msg_Client(playerid, COLOR_LIGHTBLUE, string);
					        		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis vol.",PlayerInfo[playerid][pRealName]);
					        		msg_Client(giveplayerid, COLOR_INFO, string);
					        		PlayerInfo[giveplayerid][pFlyLic] = 1;
					        		format(string, sizeof(string), "%s à donner le permis vol à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					        		return 1;
								}
							}
					 	      else
							{
	   				 		msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");
							return 1;
							}
						}
						else if(strcmp(x_nr,"navigation",true) == 0)
						{
   		 					tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
					    		msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis navigation <id/joueur>");
				    			return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
					    		if(giveplayerid != INVALID_PLAYER_ID)
					    		{
				            		format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de navigation à %s.",PlayerInfo[giveplayerid][pRealName]);
					        		msg_Client(playerid, COLOR_LIGHTBLUE, string);
					        		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis navigation.",PlayerInfo[playerid][pRealName]);
					        		msg_Client(giveplayerid, COLOR_INFO, string);
					        		PlayerInfo[giveplayerid][pBoatLic] = 1;
					        		format(string, sizeof(string), "%s à donner le permis de navigation à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					        		return 1;
								}
							}
							else
							{
					    		msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");
					    		return 1;
							}
						}
						else if(strcmp(x_nr,"train",true) == 0)
						{
		            		tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
					    		msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis train <id/joueur>");
					    		return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
					    		if(giveplayerid != INVALID_PLAYER_ID)
					    		{
				            		format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de Train à %s.",PlayerInfo[giveplayerid][pRealName]);
					        		msg_Client(playerid, COLOR_LIGHTBLUE, string);
					        		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis de Train.",PlayerInfo[playerid][pRealName]);
					        		msg_Client(giveplayerid, COLOR_INFO, string);
					        		PlayerInfo[giveplayerid][pTrainLic] = 1;
					        		format(string, sizeof(string), "%s à donner le permis de train à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					        		return 1;
								}
							}
							else
							{
					    		msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas connecté!");
					    		return 1;
							}
						}
						else if(strcmp(x_nr,"conduite",true) == 0)
						{
		            		tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
					    		msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis conduite <id/joueur>");
					    		return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
					    		if(giveplayerid != INVALID_PLAYER_ID)
					    		{
				            		format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de conduire à %s.",PlayerInfo[giveplayerid][pRealName]);
					        		msg_Client(playerid, COLOR_LIGHTBLUE, string);
					        		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis conduire.",PlayerInfo[playerid][pRealName]);
					        		msg_Client(giveplayerid, COLOR_INFO, string);
					        		PlayerInfo[giveplayerid][pCarLic] = 1;
					        		PlayerInfo[giveplayerid][pPointPermis] = 12;
					        		format(string, sizeof(string), "%s à donner le permis de conduire à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					        		return 1;
								}
							}
							else
							{
					    		msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas connecté!");
					    		return 1;
							}
						}
						else if(strcmp(x_nr,"poidlourd",true) == 0)
						{
		            		tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
					    		msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis poidlourd <id/joueur>");
					    		return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
					    		if(giveplayerid != INVALID_PLAYER_ID)
					    		{
				            		format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de Poid Lourd à %s.",PlayerInfo[giveplayerid][pRealName]);
					        		msg_Client(playerid, COLOR_LIGHTBLUE, string);
					        		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis Poid Lourd.",PlayerInfo[playerid][pRealName]);
					        		msg_Client(giveplayerid, COLOR_INFO, string);
					        		PlayerInfo[giveplayerid][pLourdLic] = 1;
					        		format(string, sizeof(string), "%s à donner le permis de poidlourd à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					        		return 1;
								}
							}
							else
							{
							    msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas connecté!");
							    return 1;
							}
						}
						else if(strcmp(x_nr,"moto",true) == 0)
						{
		            		tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
							    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis moto <id/joueur>");
								return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
					 		   if(giveplayerid != INVALID_PLAYER_ID)
							    {
				      		      	format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de moto à %s.",PlayerInfo[giveplayerid][pRealName]);
					  		      	msg_Client(playerid, COLOR_LIGHTBLUE, string);
					   		     	format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis moto.",PlayerInfo[playerid][pRealName]);
					  		      	msg_Client(giveplayerid, COLOR_INFO, string);
					  		      	PlayerInfo[giveplayerid][pMotoLic] = 1;
					  		      	format(string, sizeof(string), "%s à donner le permis moto à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					  		      	return 1;
								}
							}
							else
							{
							    msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas connecté!");
							    return 1;
							}
						}
                		else if(strcmp(x_nr,"peche",true) == 0)
						{
		       		    	tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
							    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis peche <id/joueur>");
							    return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
					   		 	if(giveplayerid != INVALID_PLAYER_ID)
					   			{
				          		  	format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de peche à %s.",PlayerInfo[giveplayerid][pRealName]);
					        		msg_Client(playerid, COLOR_LIGHTBLUE, string);
					        		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis de peche.",PlayerInfo[playerid][pRealName]);
					        		msg_Client(giveplayerid, COLOR_INFO, string);
					        		PlayerInfo[giveplayerid][pFishLic] = 1;
					        		format(string, sizeof(string), "%s à donner le permis de pêche à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					        		return 1;
								}
							}
							else
							{
							    msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas connecté!");
							    return 1;
							}
						}
						else if(strcmp(x_nr,"arme",true) == 0)
						{
		        		    tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
							    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner permis arme <id/joueur>");
							    return 1;
							}
							giveplayerid = ReturnUser(tmp);
							if(IsPlayerConnected(giveplayerid))
							{
							    if(giveplayerid != INVALID_PLAYER_ID)
							    {
				     		     	format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez donné le permis de port d'arme à %s.",PlayerInfo[giveplayerid][pRealName]);
					   			    msg_Client(playerid, COLOR_LIGHTBLUE, string);
					        		format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'admin %s vous à donné le permis de port d'arme.",PlayerInfo[playerid][pRealName]);
					        		msg_Client(giveplayerid, COLOR_INFO, string);
					        		PlayerInfo[giveplayerid][pGunLic] = 1;
					        		format(string, sizeof(string), "%s à donner le permis de port d'arme à %s.",PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
					        		return 1;
								}
							}
							else
							{
					    		msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté!");
					    		return 1;
							}
						}
	        		}
	        		else
	        		{
	            		msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");
	            		return 1;
	        		}
	    			}
					}
					if(strcmp(tmp, "argent", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner argent <id/joueur> <montant>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner argent <id/joueur> <montant>");}
						var = strval(tmp);
						if (PlayerInfo[playerid][pAdmin] >= 3)
						{
						    if(IsPlayerConnected(giveplayerid))
						    {
						        if(giveplayerid != INVALID_PLAYER_ID)
						        {
						            format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné à %s $%d en tant qu'admin.", PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName],var);
									msg_Admin(COLOR_YELLOW,string,1);
									SafeGivePlayerMoney(giveplayerid, var,"Don argent par un admin");
									format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné de l'argent (%d)!",PlayerInfo[playerid][pRealName], var);
									msg_Client(giveplayerid, COLOR_INFO, string);
									format(string, sizeof(string), "%s à donné $%d à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
									return 1;
								}
							}
						}
						else
							{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
					}
					else if(strcmp(tmp, "materiaux", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner materiaux <id/joueur> <montant>");	}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner materiaux <id/joueur> <montant>");}
						var = strval(tmp);
					    inventory_UpdateItem(giveplayerid,1576,var);
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné %d materiaux à %s.", PlayerInfo[playerid][pRealName],var,PlayerInfo[giveplayerid][pRealName]);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné des matériaux (%d)!",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à donné %d matériaux à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else if(strcmp(tmp, "weed", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner weed <id/joueur> <montant>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner weed <id/joueur> <montant>");}
						var = strval(tmp);
				    	inventory_UpdateItem(giveplayerid,1575,var);
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné %d de weed à %s.", PlayerInfo[playerid][pRealName],var,PlayerInfo[giveplayerid][pRealName]);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné de la weed (%d)!",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à donné %d gramme(s) de weed à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else if(strcmp(tmp, "heroine", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner heroine <id/joueur> <montant>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner heroine <id/joueur> <montant>");}
						var = strval(tmp);
				    	inventory_UpdateItem(giveplayerid,1579,var);
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné %d de l'heroine à %s.", PlayerInfo[playerid][pRealName],var,PlayerInfo[giveplayerid][pRealName]);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné de l'heroine (%d)!",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à donné %d gramme(s) d'héroïne à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else if(strcmp(tmp, "cocaine", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner cocaine <id/joueur> <montant>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner cocaine <id/joueur> <montant>");}
						var = strval(tmp);
				    	inventory_UpdateItem(giveplayerid,1578,var);
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné %d de la cocaine à %s.", PlayerInfo[playerid][pRealName],var,PlayerInfo[giveplayerid][pRealName]);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné de la cocaine (%d)!",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à donné %d gramme(s) de cocaïne à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else if(strcmp(tmp, "ecstasy", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner ecstasy <id/joueur> <montant>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner ecstasy <id/joueur> <montant>");}
						var = strval(tmp);
				    	inventory_UpdateItem(giveplayerid,1580,var);
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné %d de l'ecstasy à %s.", PlayerInfo[playerid][pRealName],var,PlayerInfo[giveplayerid][pRealName]);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné de l'ecstasy (%d)!",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à donné %d gramme(s) d'ecstasy à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else if(strcmp(tmp, "morphine", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner morphine <id/joueur> <montant>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner morphine <id/joueur> <montant>");}
						var = strval(tmp);
				    	inventory_UpdateItem(giveplayerid,1950,var);
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné %d de morphine à %s.", PlayerInfo[playerid][pRealName],var,PlayerInfo[giveplayerid][pRealName]);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné de la morphine (%d)!",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à donné %d L de morphine à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else if(strcmp(tmp, "arme", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
	      					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner arme <id/joueur> <idarme> <munition>");
							msg_Client(playerid, COLOR_WHITE, "{FF6347}2(Club) 3(Matraque) 4(Couteau) 5(batte) 6(Pelle) 7(Cane) 8(Katana) 10-13(Dildo) 14(Feurs) 18(Molottovs) 22(Pistol) 23(SPistol)");
							msg_Client(playerid, COLOR_WHITE, "{FF6347}24(Dealge) 25(shotgun) 28(Uzi) 29(MP5) 30(AK47) 31(M4) 32(Tec) 33(Rifle) 34(Sniper) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
							return 1;
						}
						new gun, ammo;
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						gun = strval(tmp);
						if(!strlen(tmp))
						{
						    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner arme <id/joueur> <idarme> <munition>");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2}2(Club) 3(Matraque) 4(Couteau) 5(batte) 6(Pelle) 7(Cane) 8(Katana) 10-13(Dildo) 14(Feurs) 18(Molottovs) 22(Pistol) 23(SPistol)");
							msg_Client(playerid, COLOR_WHITE, "{FFFFB2}24(Dealge) 25(shotgun) 28(Uzi) 29(MP5) 30(AK47) 31(M4) 32(Tec) 33(Rifle) 34(Sniper) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
							return 1;
						}
						tmp = strtok(cmdtext, idx);
						ammo = strval(tmp);
						if(ammo <1||ammo > 2000)
							{msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Vous ne pouvez pas mettre les munition en dessous de 1 et au desus de 2000!"); return 1; }
						if (PlayerInfo[playerid][pAdmin] >= 3)
						{
						    if(IsPlayerConnected(giveplayerid))
						    {
						        if(giveplayerid != INVALID_PLAYER_ID)
						        {
									SafeGivePlayerWeapon(giveplayerid, gun, ammo);
									format(string, 256, "{FF2727}» Admin «{FFABAD} %s a donné à %s un(e) %s (%d balle(s)).", PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName],GetWepName(gun),ammo);
									msg_Admin(COLOR_YELLOW,string,1);
									format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous a donné un(e) %s (%d balle(s)s).",PlayerInfo[playerid][pRealName],GetWepName(gun),ammo);
									msg_Client(giveplayerid, COLOR_INFO, string);
									format(string, sizeof(string), "%s a donné un(e) %d (munition %d) à %s.",PlayerInfo[playerid][pRealName],GetWepName(gun),ammo, PlayerInfo[giveplayerid][pRealName]);
									log_Admin(string);
									return 1;
								}
							}
						}
						else
							{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
					}
					else if(strcmp(tmp, "level", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner level <id/joueur> <montant>");}
						giveplayerid = ReturnUser(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner weed <id/joueur> <montant>");}
						var = strval(tmp);
				    	PlayerInfo[giveplayerid][pLevel] += var;
						format(string, 256, "{FF2727}» Admin «{FFABAD} %s à donné %d niveaux à %s.", PlayerInfo[playerid][pRealName],var,PlayerInfo[giveplayerid][pRealName]);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à donné %d niveaux.",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à donné %d niveaux à %s.",PlayerInfo[playerid][pRealName],var, PlayerInfo[giveplayerid][pRealName]);
						log_Admin(string);
						return 1;
					}
					else
					{
					    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a donner <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} argent - materiaux - arme - weed - heroine - cocaine - extasie - permis - level");
						return 1;
					}
				}
				else
					{return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");}
			}
			else if(strcmp(tmp, "changernom", true) == 0 || strcmp(tmp, "rename", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 2)
		 		{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a changernom <id/joueur> <nouveau Nom (Prenom_Nom)>");return 1;}
					giveplayerid = strval(tmp);
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
						{idx++;}
					new offset = idx;

					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{result[idx - offset] = cmdtext[idx];idx++;}
					result[idx - offset] = EOS;
					if(!strlen(result))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a changernom <id/joueur> <nouveau Nom (Prenom_Nom)>");return 1;}
					if(IsPlayerConnected(giveplayerid))
					{
				        new sqlaccountstatus = MySQLCheckAccount(result);
						if(sqlaccountstatus != 0)
							{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce nom est déjà utilisé.");return 1;}
						//ChangeNameOfPlayer(giveplayerid,result);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s a changé votre nom en %s.", PlayerInfo[playerid][pRealName], result);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s à changé le nom de %s en %s.", PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName], result);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "%s à changé le nom %s en %s.",PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName],result);
						log_Admin(string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "lotto", true) == 0 || strcmp(tmp, "loto", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 3)
			    {
					format(string, sizeof(string), "|lotto| Nous avons commencé l'Élection de la Loterie.");
					msg_OOC(COLOR_BLUE, string);
			        var = random(50);
			        if(var < 47)
						{ var += 3; }
			        lotto(var);
			        format(string, sizeof(string), "%s à lancé un lotto.",PlayerInfo[playerid][pRealName]);
					log_Admin(string);
					return 1;
			    }
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "jackpot", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 3)
			    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a jackpot <montant>");return 1;}
					var = strval(tmp);
					format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s a mis le JackPot du lotto à %d.",PlayerInfo[playerid][pRealName], var);
					msg_Admin(COLOR_LIGHTRED,string, 5);
			        Jackpot = var;
			        format(string, sizeof(string), "%s mis le jackpot du lotto à %d.",PlayerInfo[playerid][pRealName],var);
					log_Admin(string);
			        return 1;
				}
				else
			        {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "desarmer", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a desarmer <id/joueur>");return 1;}
			        giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						SafeResetPlayerWeapons(giveplayerid);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s a désarmé %s (%d).", PlayerInfo[playerid][pRealName], PlayerInfo[giveplayerid][pRealName], giveplayerid);
						msg_Admin(COLOR_LIGHTRED, string, 5);
						msg_Client(giveplayerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez été desarmer par un Admin.");
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "argent", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a argent <id/joueur> <montant>");return 1;}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					var = strval(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						SafeResetPlayerMoney(giveplayerid,var);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} %s à mis l'argent de %s à $%d.", PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName],var);
						msg_Admin(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} L'Admin %s vous à mis votre argent à %d.",PlayerInfo[playerid][pRealName], var);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "%s à mis l'argent de %s à %d.",PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName],var );
						log_Admin(string);
						return 1;
					}
					else
						{msg_Client(playerid, COLOR_GREY, "{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "kickall", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 3)
				{
			        GameTextForAll("~r~Kick ALL",10000,4);
			        SendClientMessageToAll(COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Vous serez tous kické dans 10 secondes.");
			        SetTimer("KickAll",10000,0);
			        printf("%s a mis en place le KickAll.",PlayerInfo[playerid][pRealName]);
			        format(string, sizeof(string), "%s à déclenché le kickall.",PlayerInfo[playerid][pRealName]);
					log_Admin(string);
			        return 1;
			    }
			    else
			    	{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "reboot", true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
					    {ClearChatbox(i,10);}
		            SendClientMessageToAll(COLOR_LIGHTBLUE, "{CF9756}» Info «{FFFFFF} Le redémarrage a commencé...");
					GameModeInitExitFunc();
					format(string, sizeof(string), "%s à reboot le serveur.",PlayerInfo[playerid][pRealName]);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "an", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
						{idx++;}
					new offset = idx;
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{result[idx - offset] = cmdtext[idx];idx++;}
					result[idx - offset] = EOS;
					if(!strlen(result))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a an <texte>");return 1;}
		  			format(string, sizeof(string), "Flash News : %s ", result);
					msg_OOC(0xF635B9F6,string);
					printf("%s", string);
					format(string, sizeof(string), "%s à parlé en FlashNew : %s.",PlayerInfo[playerid][pRealName],result);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utiliser cette commande!");return 1;}
			}
			else if(strcmp(tmp, "musique", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
					{ShowPlayerDialog(playerid, 76, DIALOG_STYLE_LIST, "Systeme de musique","Activer une musique pour vous \nStopper la musique pour vous \nActiver la musique pour tous le monde \nStopper la musique pour tous le monde\nLire une musique Gta (ID)","OK", "Quitter");}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else if(strcmp(tmp, "id", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					for(new id = 0; id<totalBizz; id++)
					{
						if(PlayerToPoint(1.5, playerid,bizz[id][pos][0],bizz[id][pos][1],bizz[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id du biz : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<20; id++)
					{
						if(PlayerToPoint(1.5, playerid,sbizz[id][ubEntrance_x],sbizz[id][ubEntrance_y],sbizz[id][ubEntrance_z]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de l'unique biz : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalHouses; id++)
					{
						if(PlayerToPoint(1.5, playerid,house[id][pos][0],house[id][pos][1],house[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la maison : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalGarages; id++)
					{
						if(PlayerToPoint(1.5, playerid,garage[id][pos][0],garage[id][pos][1],garage[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id du garage : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalATMs; id++)
					{
						if(PlayerToPoint(1.5, playerid,atm[id][pos][0],atm[id][pos][1],atm[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de l'atm : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalTrashCars; id++)
					{
						if(PlayerToPoint(1.5, playerid,trashCar[id][pos][0],trashCar[id][pos][1],trashCar[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la carcass : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalFactions; id++)
					{
						if(PlayerToPoint(1.5, playerid,FactionInfo[id][fEntrance][0],FactionInfo[id][fEntrance][1],FactionInfo[id][fEntrance][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la faction : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalBusStop; id++)
					{
						if(PlayerToPoint(1.5, playerid,stop[id][pos][0],stop[id][pos][1],stop[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de l'arrêt de bus : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalTrash; id++)
					{
						if(PlayerToPoint(1.5, playerid,trash[id][pos][0],trash[id][pos][1],trash[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la grosse poubelle : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalBins; id++)
					{
						if(PlayerToPoint(1.5, playerid,bin[id][pos][0],bin[id][pos][1],bin[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la petite poubelle : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalPhoneCabs; id++)
					{
						if(PlayerToPoint(1.5, playerid,phone[id][pos][0],phone[id][pos][1],phone[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la cabine téléphonique : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalMaps; id++)
					{
						if(PlayerToPoint(1.5, playerid,map[id][pos][0],map[id][pos][1],map[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la carte : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalDistribs; id++)
					{
						if(PlayerToPoint(1.5, playerid,distributor[id][pos][0],distributor[id][pos][1],distributor[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id du distributeur : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalSeeds; id++)
					{
						if(PlayerToPoint(1.5, playerid,seed[id][pos][0],seed[id][pos][1],seed[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id du plant : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalCameras; id++)
					{
						if(PlayerToPoint(1.5, playerid,camera[id][pos][0],camera[id][pos][1],camera[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id du radar : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalInteriors; id++)
					{
						if(PlayerToPoint(1.5, playerid,interiors[id][pos][0],interiors[id][pos][1],interiors[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de l'interieur : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					for(new id = 0; id<totalGates; id++)
					{
						if(PlayerToPoint(1.5, playerid,gate[id][pos][0],gate[id][pos][1],gate[id][pos][2]))
							{format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Id de la porte : %d",id); msg_Client(playerid,COLOR_WHITE,string); break;}
					}
					return 1;
				}
			}
			else if(strcmp(tmp, "supprimer", true) == 0 || strcmp(tmp, "sup", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a sup(primer) <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} voiture(Unscript) - biz - maison - garage - arret - atm - sapin - radar - gps - concession - tag");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} faction - g_poubelle - p_poubelle - cabine - carte - distributeur - panneau - interieur - porte - pub");
						return 1;
					}
					if(strcmp(tmp, "atm", true) == 0)
					{
					    new atmid=-1;
					    for(new i=0; i<totalATMs; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,atm[i][pos][0],atm[i][pos][1],atm[i][pos][2]))
					        	{atmid=i;break;}
					    }
					    if(atmid==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un atm.");}
					    atm[atmid][cash]=0;
					    atm[atmid][pos][0]=0.0000;
					    atm[atmid][pos][1]=0.0000;
					    atm[atmid][pos][2]=0.0000;
					    atm[atmid][pos][3]=0.0000;
					    atm[atmid][used]=0;
						atm_Save(atmid);
      					atm_UpdateInfos(atmid);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} ATM id %d supprimé.",atmid);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "g_poubelle", true) == 0)
					{
					    new poub=-1;
					    for(new i=0; i<totalTrash; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,trash[i][pos][0],trash[i][pos][1],trash[i][pos][2]))
					        	{poub=i;break;}
					    }
					    if(poub==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une grosse poubelle.");}
					    trash[poub][quantity]=0;
					    trash[poub][pos][0]=0.0000;
					    trash[poub][pos][1]=0.0000;
					    trash[poub][pos][2]=0.0000;
					    trash[poub][pos][3]=0.0000;
					    trash[poub][used]=0;
						trash_Save(poub);
						trash_UpdateInfos(poub);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Poubelle id %d supprimée.",poub);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "p_poubelle", true) == 0)
					{
					    new bi=-1;
					    for(new i=0; i<totalBins; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,bin[i][pos][0],bin[i][pos][1],bin[i][pos][2]))
					        	{bi=i;break;}
					    }
					    if(bi==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une petite poubelle.");}
					    bin[bi][pos][0]=0.0000;
					    bin[bi][pos][1]=0.0000;
					    bin[bi][pos][2]=0.0000;
					    bin[bi][pos][3]=0.0000;
					    bin[bi][used]=0;
					    for(new i=0; i<10; i++)
					        {bin[bi][itemM][i]=0; bin[bi][itemQ][i]=0;}
						bin_Save(bi);
						bin_UpdateInfos(bi);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Poubelle id %d supprimée.",bi);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "pub", true) == 0)
					{
					    new add=-1;
					    for(new i=0; i<totalAds; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,ad[i][pos][0],ad[i][pos][1],ad[i][pos][2]))
					        	{add=i;break;}
					    }
					    if(add==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un panneau publicitaire.");}
					    ad[add][pos][0]=0.0000;
					    ad[add][pos][1]=0.0000;
					    ad[add][pos][2]=0.0000;
					    ad[add][pos][3]=0.0000;
					    ad[add][used]=0;
						ad_Save(add);
						ad_Update(add);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Panneau publicitaire id %d supprimé.",add);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "porte", true) == 0)
					{
					    new ga=-1;
					    for(new i=0; i<totalGates; i++)
					    {
					        if(PlayerToPoint(8.0,playerid,gate[i][pos][0],gate[i][pos][1],gate[i][pos][2]))
					        	{ga=i;break;}
					    }
					    if(ga==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une porte.");}
					    gate[ga][used]=false;
					    gate[ga][action]=0;
					    gate[ga][typeZ]=0;
					    gate[ga][model]=980;
					    strmid(gate[ga][description], "None", 0, strlen("None"), 32);
					    for(new i=0; i<12; i++)
					        {gate[ga][pos][i]=0.000000;}
						gate_Save(ga);
						gate_Update(ga);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Porte id %d supprimée.",ga);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "tag", true) == 0)
					{
					    new tagId=-1;
						for(new i=0; i<totalTags; i++)
						{
						    if(PlayerToPoint(2.0,playerid,tag[i][pos][0],tag[i][pos][1],tag[i][pos][2]))
						    	{tagId=i;break;}
						}
						if(tagId==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un tag.");}
						tag_Remove(tagId);
						msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous avez retiré ce tag.");
						return 1;
					}
					else if(strcmp(tmp, "panneau", true) == 0)
					{
					    new signid=-1;
					    for(new i=0; i<totalSigns; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,sign[i][pos][0],sign[i][pos][1],sign[i][pos][2]))
					        	{signid=i;break;}
					    }
					    if(signid==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un panneau.");}
					    sign[signid][model]=0;
					    sign[signid][pos][0]=0.0000;
					    sign[signid][pos][1]=0.0000;
					    sign[signid][pos][2]=0.0000;
					    sign[signid][size]=0;
					    sign[signid][indexNum]=0;
					    sign[signid][bold]=0;
					    sign[signid][alignement]=0;
					    strmid(sign[signid][description], "None", 0, strlen("None"), 128);
					    sign[signid][fontSize]=0;
					    sign[signid][used]=0;
						sign_Save(signid);
						sign_UpdateInfos(signid);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} panneau id %d supprimé.",signid);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "concession", true) == 0)
					{
					    new conId=-1;
					    for(new i=0; i<totalDealerShip; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,dealerShip[i][pos][0],dealerShip[i][pos][1],dealerShip[i][pos][2]))
					        	{conId=i;break;}
					    }
					    if(conId==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une concession.");}
					    dealerShip[conId][used]=0;
					    dealerShip[conId][pos][0]=0.0000;
					    dealerShip[conId][pos][1]=0.0000;
					    dealerShip[conId][pos][2]=0.0000;
					    dealerShip[conId][city]=-1;
					    dealerShip[conId][typeZ]=0;
						dealerShip_Save(conId);
						dealerShip_Update(conId);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} COncession id %d supprimé.",conId);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "maison", true) == 0)
					{
					    new hId=-1;
					    for(new i=0; i<totalHouses; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,house[i][pos][0],house[i][pos][1],house[i][pos][2]))
					        	{hId=i;break;}
					    }
					    if(hId==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une maison.");}
					    house[hId][used]=0;
					    house[hId][pos][0]=0.0000;
					    house[hId][pos][1]=0.0000;
					    house[hId][pos][2]=0.0000;
					    house[hId][pos][3]=0.0000;
					    house[hId][pos][4]=0.0000;
					    house[hId][pos][5]=0.0000;
					    strmid(house[hId][owner], NO_ONE, 0, strlen(NO_ONE), 32);
					    strmid(house[hId][description], "Nothing", 0, strlen("Nothing"), 32);
					    house[hId][price]=0;
					    house[hId][talking]=0;
					    house[hId][insurance]=0;
					    house[hId][rentPrice]=0;
					    house[hId][rentState]=0;
					    house[hId][rentNb]=0;
					    house[hId][rentMax]=0;
					    house[hId][lock]=0;
					    house[hId][interior]=0;
					    house[hId][world]=0;
					    for(new i=0;i<MAX_FURNITURES; i++)
						{
							if(house[hId][hItem][i] != 0)
							{
								house[hId][hItem][i]=0;
								house[hId][fFurSQLid][i]=-1;
								house_UpdateFurnitureInfos(hId,i);
							}
						}
						format(sql, sizeof(sql), "DELETE FROM lvrp_server_houses_furnitures WHERE HouseId=%d",hId);
						mysql_pquery(MYSQL,sql);
						house_Save(hId);
						house_UpdateInfos(hId);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Maison id %d supprimée.",hId);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "cabine", true) == 0)
					{
					    new cab=-1;
					    for(new i=0; i<totalPhoneCabs; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,phone[i][pos][0],phone[i][pos][1],phone[i][pos][2]))
					        	{cab=i;break;}
					    }
					    if(cab==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une cabine téléphonique.");}
					    phone[cab][pos][0]=0.0000;
					    phone[cab][pos][1]=0.0000;
					    phone[cab][pos][2]=0.0000;
					    phone[cab][pos][3]=0.0000;
					    phone[cab][used]=0;
						phonecab_Save(cab);
						phonecab_UpdateInfos(cab);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Cabine téléphonique id %d supprimée.",cab);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "interieur", true) == 0)
					{
					    new intid=-1;
					    for(new i=0; i<totalInteriors; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,interiors[i][pos][0],interiors[i][pos][1],interiors[i][pos][2]))
					        	{intid=i;break;}
					    }
					    if(intid==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une entré d'intérieur.");}
					    interiors[intid][pos][0]=0.0000;
					    interiors[intid][pos][1]=0.0000;
					    interiors[intid][pos][2]=0.0000;
					    interiors[intid][pos][3]=0.0000;
					    interiors[intid][pos][4]=0.0000;
					    interiors[intid][pos][5]=0.0000;
					    interiors[intid][pos][6]=0.0000;
					    interiors[intid][pos][7]=0.0000;
					    interiors[intid][used]=0;
					    interiors[intid][city]=-1;
					    interiors[intid][typeZ]=-1;
					    interiors[intid][interior]=0;
						interior_Save(intid);
						interior_Update(intid);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} interior id %d supprimé.",intid);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "carte", true) == 0)
					{
					    new mapid=-1;
					    for(new i=0; i<totalMaps; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,map[i][pos][0],map[i][pos][1],map[i][pos][2]))
					        	{mapid=i;break;}
					    }
					    if(mapid==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'une carte.");}
					    map[mapid][pos][0]=0.0000;
					    map[mapid][pos][1]=0.0000;
					    map[mapid][pos][2]=0.0000;
					    map[mapid][pos][3]=0.0000;
					    map[mapid][used]=0;
						map_Save(mapid);
						map_UpdateInfos(mapid);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Carte id %d supprimée.",mapid);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "distributeur", true) == 0)
					{
					    new dis=-1;
					    for(new i=0; i<totalDistribs; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,distributor[i][pos][0],distributor[i][pos][1],distributor[i][pos][2]))
					        	{dis=i;break;}
					    }
					    if(dis==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un distributeur.");}
					    distributor[dis][pos][0]=0.0000;
					    distributor[dis][pos][1]=0.0000;
					    distributor[dis][pos][2]=0.0000;
					    distributor[dis][pos][3]=0.0000;
					    distributor[dis][used]=0;
						distrib_Save(dis);
						distrib_UpdateInfos(dis);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Distributeur id %d supprimée.",dis);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "sapin", true) == 0)
					{
					    new sap=-1;
					    for(new i=0; i<totalTree; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,SapinInfo[i][XmasX],SapinInfo[i][XmasY],SapinInfo[i][XmasZ]))
					        	{sap=i;break;}
					    }
					    if(sap==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un sapin.");}
					    SapinInfo[sap][XmasX]=0.0000;
					    SapinInfo[sap][XmasY]=0.0000;
					    SapinInfo[sap][XmasZ]=0.0000;
					    SapinInfo[sap][XmasTreeX]=0;
						tree_Save(sap);
						tree_Update(sap,0,0,0);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Sapin id %d supprimée.",sap);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "radar", true) == 0)
					{
					    new cam=-1;
					    for(new i=0; i<totalCameras; i++)
					    {
					        if(PlayerToPoint(2.0,playerid,camera[i][pos][0],camera[i][pos][1],camera[i][pos][2]))
					        	{cam=i;break;}
					    }
					    if(cam==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un radar.");}
					    camera[cam][pos][0]=0.0000;
					    camera[cam][pos][1]=0.0000;
					    camera[cam][pos][2]=0.0000;
					    camera[cam][pos][3]=0.0000;
					    camera[cam][limit]=0;
					    camera[cam][price]=0;
					    camera[cam][range]=0;
					    camera[cam][used]=0;
						camera_Save(cam);
						camera_UpdateInfos(cam);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Radar id %d supprimée.",cam);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "arret", true) == 0)
					{
					    new arret = -1;
					    for(new i = 0; i<totalBusStop; i++)
					    {
					    	if(PlayerToPoint(2, playerid,stop[i][pos][0],stop[i][pos][1],stop[i][pos][2]))
					    		{arret = i;break;}
					    }
					    if(arret==-1)
					    	{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un arrêt.");}
						stop[arret][used] = 0;
						stop[arret][pos][0] = 0.000000;
						stop[arret][pos][1] = 0.000000;
						stop[arret][pos][2] = 0.000000;
						stop[arret][pos][3] = 0.000000;
						strmid(stop[arret][description], NO_ONE, 0, strlen(NO_ONE), 255);
                        stop_UpdateInfos(arret);
						stop_Save(arret);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Arret id %d supprimé.",arret);
		    			msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "gps", true) == 0)
					{
					    new tmpstring[32];
				        new gpsstring[512];
				        new ifx = 0;
				        for(new nbgps=0;nbgps<totalGPS; nbgps++)
				        {
				            if(gps[nbgps][used] == 1)
				            {
							    format(tmpstring,sizeof(tmpstring),"%s\n",gps[nbgps][description]);
							    strins(gpsstring,tmpstring,strlen(gpsstring),sizeof(gpsstring));
							    gps_Id[playerid][ifx]=nbgps;
							    ifx++;
				            }
				        }
				        if(strlen(tmpstring)==0)
				        	{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Aucune position de GPS a été enregistré.");}
				    	ShowPlayerDialog(playerid,6,DIALOG_STYLE_LIST,"» GPS « Suppréssion",gpsstring,"Supprimer","Annuler");
				    	return 1;
					}
					else if(strcmp(tmp, "garage", true) == 0)
					{
					    new garageid = -1;
					    for(new i = 0; i<totalGarages; i++)
					    {
					    	if(PlayerToPoint(2, playerid,garage[i][pos][0],garage[i][pos][1],garage[i][pos][2]))
					    		{garageid = i;break;}
					    }
					    if(garageid==-1)
					    	{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un garage.");}
                        garage[garageid][owned]=0;
                        garage[garageid][used]=0;
                        garage[garageid][price]=0;
                        garage[garageid][lock]=1;
                        garage[garageid][pos][0]=0.0000;
                        garage[garageid][pos][1]=0.0000;
                        garage[garageid][pos][2]=0.0000;
                        garage[garageid][pos][3]=0.0000;
                        garage[garageid][pos][4]=0.0000;
                        garage[garageid][pos][5]=0.0000;
                        strmid(garage[garageid][owner], NO_ONE, 0, strlen(NO_ONE), 32);
                        garage_Save(garageid);
                        garage_UpdateInfos(garageid);
                        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Garage id %d supprimé.",garageid);
		    			msg_Client(playerid,COLOR_WHITE,string);
                        return 1;
					}
					else if(strcmp(tmp, "biz", true) == 0 || strcmp(tmp, "bizz", true) == 0)
					{
					    new biz = -1;
						for(new ba = 0; ba<totalBizz; ba++)
						{
							if(PlayerToPoint(3, playerid,bizz[ba][pos][0],bizz[ba][pos][1],bizz[ba][pos][2]))
								{biz = ba;break;}
						}
						if(biz==-1)
							{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous n'êtes pas à côté d'un biz.");}
						bizz[biz][owned]=0;
				        strmid(bizz[biz][owner], NO_ONE, 0, strlen(NO_ONE), 32);
				        strmid(bizz[biz][description], NO_ONE, 0, strlen(NO_ONE), 64);
				        bizz[biz][pos][0]=0;
				        bizz[biz][pos][1]=0;
				        bizz[biz][pos][2]=0;
				        bizz[biz][pos][3]=0;
				        bizz[biz][pos][4]=0;
				        bizz[biz][pos][5]=0;
				        bizz[biz][fund]=0;
				        bizz[biz][enterCost]=0;
				        bizz[biz][price]=0;
				        bizz[biz][prodCost]=0;
				        bizz[biz][interior]=0;
				        bizz[biz][typeZ]=0;
				        bizz[biz][products]=0;
				        bizz[biz][prodMax]=0;
				        bizz[biz][world]=0;
				        bizz[biz][variable]=0;
				        bizz[biz][used]=0;
						for(new num=0; num<20;num++)
							{bizz[biz][itemCost][num]=0;}
							
						bizz_Save(biz);
						bizz_UpdateInfos(biz);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Biz N°%d supprimé.",biz);
						msg_Client(playerid,COLOR_WHITE,string);
						return 1;
					}
				}
			}
			else if(strcmp(tmp, "edit", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a edit <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} vehicule - biz - maison - garage - arret - atm - radar - faction - porte - pub");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} p_poubelle - g_poubelle - cabine - carte - sapin - panneau - distributeur");
						return 1;
					}
					if(strcmp(tmp, "voiture", true) == 0 || strcmp(tmp, "car", true) == 0 || strcmp(tmp, "vehicule", true) == 0)
					{
					    if(IsPlayerInAnyVehicle(playerid))
						{
							ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule","Sauvegarder la nouvelle position du véhicule\nChanger les couleurs du véhicule\nChanger le propriétaire du véhicule\nChanger le prix d'achat du véhicule\nChanger la plaque du véhicule \nChanger le model du véhicule \nChanger le statut du véhicule \nSupprimé les tunnings du véhicule\nSupprimé le vehicule\nBridage\nRang - Job Ville","Valider", "Quitter");
							admin_CarDialog[playerid]=0;
							return 1;
						}
						else{ msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Vous devez être dans un véhicule."); }
					}
					else if(strcmp(tmp, "biz", true) == 0 || strcmp(tmp, "bizz", true) == 0)
					{
					    format(string,sizeof(string),"Entrez l'Id du bizz : (0  à %d)",totalBizz);
		    			ShowPlayerDialog(playerid,107,DIALOG_STYLE_INPUT,"» Admin « Id du biz",string,"Valider","Annuler");
	                	return 1;
					}
					else if(strcmp(tmp, "maison", true) == 0 || strcmp(tmp, "house", true) == 0)
					{
					    ShowPlayerDialog(playerid,24,DIALOG_STYLE_INPUT,"» Admin « Editer une maison","Entrez l'id de maison que vous désirez éditer :","Valider","Annuler");
					    player_Dialog[playerid]=0;
	                	return 1;
					}
					else if(strcmp(tmp, "porte", true) == 0 || strcmp(tmp, "gate", true) == 0)
					{
					    ShowPlayerDialog(playerid,51,DIALOG_STYLE_INPUT,"» Admin « Editer une porte","Entrez l'id de la porte que vous désirez éditer :","Valider","Annuler");
					    player_Dialog[playerid]=0;
	                	return 1;
					}
					else if(strcmp(tmp, "atm", true) == 0)
					{
					    ShowPlayerDialog(playerid,5,DIALOG_STYLE_INPUT,"» Atm « Edit","Entrez l'id de l'ATM que vous désirez modifier :","Valider","Annuler");
						atm_DialogEdit[playerid]=0;
					    return 1;
					}
					else if(strcmp(tmp, "g_poubelle", true) == 0)
					{
					    ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit","Entrez l'id de la grosse poubelle que vous désirez modifier :","Valider","Annuler");
						admin_Dialog[playerid]=0; admin_VarType[playerid]=1;
					    return 1;
					}
					else if(strcmp(tmp, "p_poubelle", true) == 0)
					{
					    ShowPlayerDialog(playerid,137,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit","Entrez l'id de la petite poubelle que vous désirez modifier :","Valider","Annuler");
						admin_Dialog[playerid]=0; admin_VarType[playerid]=2;
					    return 1;
					}
					else if(strcmp(tmp, "cabine", true) == 0)
					{
					    ShowPlayerDialog(playerid,12,DIALOG_STYLE_INPUT,"|Cabine| Edit","Entrez l'id de la cabine téléphonique que vous désirez modifier :","Valider","Annuler");
						phonecab_DialogEdit[playerid]=0;
					    return 1;
					}
					else if(strcmp(tmp, "pub", true) == 0)
					{
					    ShowPlayerDialog(playerid,152,DIALOG_STYLE_INPUT,"» Panneau Publicitaire « Edit","Entrez l'id du panneau publicitaire que vous désirez modifier :","Valider","Annuler");
						phonecab_DialogEdit[playerid]=0;
					    return 1;
					}
					else if(strcmp(tmp, "carte", true) == 0)
					{
					    ShowPlayerDialog(playerid,13,DIALOG_STYLE_INPUT,"» Carte « Edit","Entrez l'id de la carte que vous désirez modifier :","Valider","Annuler");
						map_DialogEdit[playerid]=0;
					    return 1;
					}
					else if(strcmp(tmp, "sapin", true) == 0)
					{
					    ShowPlayerDialog(playerid,56,DIALOG_STYLE_INPUT,"|Sapin| Edit","Entrez l'id du sapin que vous désirez modifier :","Valider","Annuler");
						tree_Edit[playerid]=0;
					    return 1;
					}
					else if(strcmp(tmp, "distributeur", true) == 0)
					{
					    ShowPlayerDialog(playerid,15,DIALOG_STYLE_INPUT,"{2B6AFF}» Distributeur «{FFFFFF} Edit","Entrez l'id du distributeur que vous désirez modifier :","Valider","Annuler");
						distrib_DialogEdit[playerid]=0;
					    return 1;
					}
					else if(strcmp(tmp, "arret", true) == 0)
					{
					    ShowPlayerDialog(playerid,118,DIALOG_STYLE_INPUT,"» Admin « Edition d'un arret","Entrez l'id de l'arrêt de bus que vous désirez modifier :","Valider","Annuler");
					    stop_DialogEdit[playerid] = 0;
					    return 1;
					}
					else if(strcmp(tmp, "radar", true) == 0)
					{
					    ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"» Admin « Edition d'un radar","Entrez l'id du radar que vous désirez modifier :","Valider","Annuler");
					    player_Dialog[playerid] = 0; admin_VarType[playerid]=3;
					    return 1;
					}
					else if(strcmp(tmp, "panneau", true) == 0)
					{
					    ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"» Admin « Edition d'un panneau","Entrez l'id du panneau que vous désirez modifier :","Valider","Annuler");
					    sign_DialogEdit[playerid] = 0;
					    return 1;
					}
					else if(strcmp(tmp, "faction", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
						    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a edit faction <facid> <id interieur>");
							msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} 1. Burning Desire House 2. Johnson House 3. The Crack Den 4. Brothel");
							msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} 5. Madd Dogg's Mansion 6. Jizzy's Pleasure Domes 7. 4Dragons Casino  8. Caligulas Casino");

						}
						new fac = strval(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
						    msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a edit faction <facid> <id interieur>");
							msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} 1. Burning Desire House 2. Johnson House 3. The Crack Den 4. Brothel");
							msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} 5. Madd Dogg's Mansion 6. Jizzy's Pleasure Domes 7. 4Dragons Casino  8. Caligulas Casino");

						}
						new num = strval(tmp);
						if(num==1)
						{
						    FactionInfo[fac][fExit][0]=2352.8064;
						    FactionInfo[fac][fExit][1]=-1180.9540;
						    FactionInfo[fac][fExit][2]=1027.9766;
						    FactionInfo[fac][fInt]=5;
						}
						if(num==2)
						{
						    FactionInfo[fac][fExit][0]=2495.9897;
						    FactionInfo[fac][fExit][1]=-1692.0836;
						    FactionInfo[fac][fExit][2]=1014.7422;
						    FactionInfo[fac][fInt]=4;
						}
						if(num==3)
						{
						    FactionInfo[fac][fExit][0]=318.5954;
						    FactionInfo[fac][fExit][1]=1114.4801;
						    FactionInfo[fac][fExit][2]=1083.8828;
						    FactionInfo[fac][fInt]=5;
						}
						if(num==4)
						{
						    FactionInfo[fac][fExit][0]=968.0631;
						    FactionInfo[fac][fExit][1]=-53.2714;
						    FactionInfo[fac][fExit][2]=1001.1246;
						    FactionInfo[fac][fInt]=3;
						}
						if(num==5)
						{
						    FactionInfo[fac][fExit][0]=1260.6483;
						    FactionInfo[fac][fExit][1]=-785.4341;
						    FactionInfo[fac][fExit][2]=1091.9063;
						    FactionInfo[fac][fInt]=5;
						}
						if(num==6)
						{
						    FactionInfo[fac][fExit][0]=-2636.7043;
						    FactionInfo[fac][fExit][1]=1402.4664;
						    FactionInfo[fac][fExit][2]=906.4609;
						    FactionInfo[fac][fInt]=3;
						}
						if(num==7)
						{
						    FactionInfo[fac][fExit][0]=2016.2699;
						    FactionInfo[fac][fExit][1]=1017.7790;
						    FactionInfo[fac][fExit][2]=996.8750;
						    FactionInfo[fac][fInt]=10;
						}
						if(num==8)
						{
						    FactionInfo[fac][fExit][0]=2233.8032;
						    FactionInfo[fac][fExit][1]=1712.2303;
						    FactionInfo[fac][fExit][2]=1011.7632;
						    FactionInfo[fac][fInt]=1;
						}
						faction_Save(fac);
					    //ShowPlayerDialog(playerid,58,DIALOG_STYLE_INPUT,"» Admin « Edition d'une faction","Entrez l'id de la facion que vous désirez modifier :","Valider","Annuler");
					    //faction_DialogGestion[playerid] = 0;
					    return 1;
					}
				}
			}
			else if(strcmp(tmp, "creer", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
			    	tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a creer <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} voiture - biz - maison - garage - arret - atm - sapin - panneau - radar - interieur - porte - pub");
						msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{FFFFB2} gps - faction - g_poubelle - p_poubelle - cabine - carte - distributeur - zone - concession");
						return 1;
					}
					if(strcmp(tmp, "voiture", true) == 0 || strcmp(tmp, "car", true) == 0 || strcmp(tmp, "vehicule", true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a creer voiture <carid> <couleur1> <couleur2> <prix>");}
						new car;
						car = strval(tmp);
						if(car < 400 || car > 611)
							{return msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} L'ID du véhicule doît être comprise entre 400 & 611 !"); }
						if(GetInvalidCreateModel(car))
						    {return msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Ce model est interdit !");}
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a creer voiture <carid> <couleur1> <couleur2> <prix>");}
						new color1;
						color1 = strval(tmp);
						if(color1 < 0 || color1 > 255)
							{return msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD}L'ID de la couleur doit être comprise entre 0 & 255 !");}
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a creer voiture <carid> <couleur1> <couleur2> <prix>");}
						new color2;
						color2 = strval(tmp);
						if(color2 < 0 || color2 > 255)
							{return msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} L'Id de la couleur doit être comprise entre 0 & 255 !");}
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a creer voiture <carid> <couleur1> <couleur2> <prix>");}
						new value;
						value = strval(tmp);
						new Float:X,Float:Y,Float:Z; GetPlayerPos(playerid, X,Y,Z);
						
						format(sql, sizeof(sql), "SELECT * FROM lvrp_server_vehicles");
						mysql_query(MYSQL,sql);
						
						if (totalVehicles>MAX_CAR)
							{return msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500} Maximum de voitures atteint.");}
						
			            new thiscar = CreateVehicle(car,X,Y,Z,1,color1,color2,-1);
			            
			            format(sql, sizeof(sql), "INSERT INTO lvrp_server_vehicles SET Model=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Description='%s', Owned=2, Color1=%d, Color2=%d, Price=%d, License='N/A'", car, X, Y, Z,vehName[car-400], color1, color2, value);
						mysql_query(MYSQL,sql);
			            
			            vehicle[thiscar][SQLID] = cache_insert_id();
			            format(vehicle[thiscar][cLicense], 14 ,"N/A");
				        SetVehicleNumberPlate(thiscar,vehicle[thiscar][cLicense]);
						vehicle[thiscar][cOwned] = 2;
						vehicle[thiscar][used] = 1;
						vehicle[thiscar][cModel] = car;
						vehicle[thiscar][cColorOne] = color1;
						vehicle[thiscar][cColorTwo] = color2;
						vehicle[thiscar][cLocationx] = X;
						vehicle[thiscar][cLocationy] = Y;
						vehicle[thiscar][cLocationz] = Z;
						vehicle[thiscar][cAngle] = 1;
						vehicle[thiscar][cValue] = value;
						vehicle[thiscar][cLock] = 0;
						vehicle[thiscar][paintjob] = -1;
						vehicle[thiscar][tExhausts] = 0;
						vehicle[thiscar][tFrontBumper] = 0;
						vehicle[thiscar][tRearBumper] = 0;
						vehicle[thiscar][tRoof] = 0;
						vehicle[thiscar][tSpoilers] = 0;
						vehicle[thiscar][tSideBumper] = 0;
						vehicle[thiscar][tWheels] = 0;
						vehicle[thiscar][tHydraulics] = 0;
						vehicle[thiscar][tNitro] = 0;
						vehicle[thiscar][tSideBumper2] = 0;
						vehicle[thiscar][cHealth] = 1000;
						vehicle[thiscar][cBrid] = car_GetBridVehicle(thiscar);
						tuning_Load(thiscar);
						PutPlayerInVehicle(playerid,thiscar,0);
						vehicle[thiscar][cType] = CAR_CREATED;
						vehicle[thiscar][cGas] = 100;
						strmid(vehicle[thiscar][cOwner], "Aucun", 0, strlen("Aucun"), 999);
						format(vehicle[thiscar][cDescription], 32, "%s",vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
						format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vehicule: %d a été crée avec sucèss!.", thiscar);
						msg_Client(playerid, COLOR_BLUE, string);
						if(thiscar>totalVehicles)
							{totalVehicles++;}
						vehicle_Save(thiscar,0,0);
						
						format(string, sizeof(string), "%s à créé un véhicule, id: %d.",PlayerInfo[playerid][pRealName],thiscar);
						log_Admin(string);
					    return 1;
					}
					else if(strcmp(tmp, "biz", true) == 0 || strcmp(tmp, "bizz", true) == 0)
					{
					    ShowPlayerDialog(playerid,96,DIALOG_STYLE_MSGBOX,"» Admin « Création d'un bizz","Vous êtes sur le point de creer un bizz, l'entrée du bizz se situra à votre position actuelle.\nVous pourrez toujours le supprimer ou modifier apres (/bizz sup(rimer) - /bizz edit)","Continuer","Annuler");
	                	player_Dialog[playerid] = 0;
	                	return 1;
					}
					else if(strcmp(tmp, "maison", true) == 0 || strcmp(tmp, "house", true) == 0)
					{
					    ShowPlayerDialog(playerid,115,DIALOG_STYLE_MSGBOX,"» Admin « Création d'une maison","Vous êtes sur le point de creer une maison, l'entrée de la maison se situra à votre position actuelle.\nVous pourrez toujours le supprimer ou modifier apres (/maison sup(rimer) - /maison edit)","Continuer","Quitter");
	                	player_Dialog[playerid] = 0;
	                	return 1;
					}
					else if(strcmp(tmp, "garage", true) == 0)
					{
					    ShowPlayerDialog(playerid, 123, DIALOG_STYLE_INPUT, "» Admin « Création d'un garage","Le garage se créera à votre position.\nEntrez le prix du garage :","Valider", "Annuler");
						return 1;
					}
					else if(strcmp(tmp, "arret", true) == 0)
					{
					    ShowPlayerDialog(playerid, 112, DIALOG_STYLE_INPUT, "» Admin « Création d'un arret de bus","Entrez le nom de l'arrêt de bus :","Valider", "Annuler");
					    return 1;
					}
					else if(strcmp(tmp, "concession", true) == 0)
					{
					    ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "» Admin « Création d'une concession","{FFFFFF}- Los Santos\n- San Fierro\n- Las Venturas\n- Fort Carson\n- Bay Side\n- Angel Pine\n- Dillimore\n- Blueberry\n- Montgomery\n- Palomino Creek\n- Las Payasdas\n- Las Barbancas\n- El Quebrados","Valider", "Annuler");
                        player_Dialog[playerid]=0;
						return 1;
					}
					else if(strcmp(tmp, "g_poubelle", true) == 0)
					{
					    ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, "» Admin « Création d'un poubelle","Entrez le nombre d'ordure dans la poubelle : (MAX: 100)","Valider", "Annuler");
					    return 1;
					}
					else if(strcmp(tmp, "atm", true) == 0)
					{
					    ShowPlayerDialog(playerid, 135, DIALOG_STYLE_INPUT, "» Admin « Création d'un ATM","Entrer l'argent dans l'atm que vous allez creer :","Valider", "Annuler");
					    return 1;
					}
					else if(strcmp(tmp, "interieur", true) == 0)
					{
					    new tmpstring[32];
					    for(new i=0;i<MAX_CITY; i++)
					    {
							format(tmpstring,sizeof(tmpstring),"- %s\n",GetCityName(i));
							strins(string,tmpstring,strlen(string),sizeof(string));
					    }
						ShowPlayerDialog(playerid,48,DIALOG_STYLE_LIST,"» Admin « Intérieurs - Ville",string,"Valider","Annuler");
						player_Dialog[playerid]=0;
						return 1;
					}
					else if(strcmp(tmp, "gps", true) == 0)
					{
					    ShowPlayerDialog(playerid, 119, DIALOG_STYLE_LIST, "» Admin « Création d'un point de GPS","{FFFFFF}- Los Santos\n- San Fierro\n- Las Venturas\n- Fort Carson\n- Bay Side\n- Angel Pine\n- Dillimore\n- Blueberry\n- Montgomery\n- Palomino Creek\n- Las Payasdas\n- Las Barbancas\n- El Quebrados","Valider", "Annuler");
                        player_Dialog[playerid]=0;
						return 1;
					}
					else if(strcmp(tmp, "radar", true) == 0)
					{
					    ShowPlayerDialog(playerid, 66, DIALOG_STYLE_INPUT, "» Admin « Création d'un radar","Entrez la limite de vitesse :","Valider", "Annuler");
					    player_Dialog[playerid]=0;
					    return 1;
					}
					else if(strcmp(tmp, "faction", true) == 0)
					{
					    Dialogue_Systeme_Faction[playerid] = 0;
					    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_MSGBOX, "» Admin « Création d'une faction","Vous êtes sur le point de créer une faction, l'entré et le coffre seront à votre position actuelle. \nVous pourrez toujours modifier c'est position apres (/a faction edit).","Continuer", "Annuler");
					    return 1;
					}
					else if(strcmp(tmp, "p_poubelle", true) == 0)
					{
					    new ID=-1;
					    new Float:x,Float:y,Float:z,Float:a;
					    GetPlayerPos(playerid,x,y,z);
					    GetPlayerFacingAngle(playerid,a);
						for(new i=0; i<totalBins;i++)
						{
						    if(bin[i][used] == 0)
						    	{ID=i;break;}
						}

						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_bins");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_BIN)
								{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de petite poubelle atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_bins SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Pos_a=%f",ID+1, x, y, z, a);
							mysql_pquery(MYSQL,sql);
							totalBins++;
						}
						bin[ID][pos][0] = x;
					 	bin[ID][pos][1] = y;
						bin[ID][pos][2] = z;
						bin[ID][pos][3] = a;
						bin[ID][used] = 1;
					    bin_Save(ID);
					    bin_UpdateInfos(ID);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Petite poubelle id %d créée.",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "porte", true) == 0)
					{
					    new ID=-1;
					    new Float:x,Float:y,Float:z,Float:a;
					    GetPlayerPos(playerid,x,y,z);
					    GetPlayerFacingAngle(playerid,a);
						for(new i=0; i<totalGates;i++)
						{
						    if(gate[i][used] == false)
						    	{ID=i;break;}
						}

						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_gates");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_GATE){msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de porte atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_gates SET id=%d, Used=1, Close_x=%f, Close_y=%f, Close_z=%f, Close_rx=%f",ID+1, x, y, z, a);
							mysql_pquery(MYSQL,sql);
							totalGates++;
						}
						gate[ID][pos][0] = x;
					 	gate[ID][pos][1] = y;
						gate[ID][pos][2] = z;
						gate[ID][pos][3] = a;
						gate[ID][used] = true;
						gate[ID][typeZ] = 0;
						gate[ID][action] = 0;
						gate[ID][model] = 980;
						strmid(gate[ID][description], "None", 0, strlen("None"), 32);
					    gate_Save(ID);
					    gate_Update(ID);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Porte id %d créée.",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "panneau", true) == 0)
					{
					    new ID=-1, Float:Pos[4];
					    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]), GetPlayerFacingAngle(playerid, Pos[3]);
			        	new Float:x = Pos[0] + (5.0 * floatsin(-Pos[3], degrees));
			    		new Float:y = Pos[1] + (5.0 * floatcos(-Pos[3], degrees));
			    		for(new i=0; i<totalSigns;i++)
						{
						    if(sign[i][used] == 0)
						    	{ID=i;break;}
						}
						
						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_signs");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_SIGN){msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de panneaux atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_signs SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Rot_z=%f, TextColor=0xFFFF8200, BackColor=0xFF000000",ID+1, x, y, Pos[2]+0.5, Pos[3]-90);
							mysql_pquery(MYSQL,sql);
							totalSigns++;
						}
						sign[ID][pos][0] = x;
						sign[ID][pos][1] = y;
						sign[ID][pos][2] = Pos[2]+0.5;
						sign[ID][pos][3] = 0.0;
						sign[ID][pos][4] = 0.0;
						sign[ID][pos][5] = Pos[3]-90;
						sign[ID][used] = 1;
						sign[ID][model] = 19353;
						strmid(sign[ID][description], "Panneau", 0, 128, 128);
						sign[ID][size] = 50;
						sign[ID][indexNum] = 0;
						sign[ID][bold] = 0;
						sign[ID][alignement] = 1;
						strmid(sign[ID][fontName], "Arial", 0, 128, 128);
						sign[ID][textColor] = 0xFFFF8200;
						sign[ID][backColor] = 0xFF000000;
					    sign_Save(ID);
					    sign_UpdateInfos(ID);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Panneaux id %d créée (/a edit panneau).",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "cabine", true) == 0)
					{
					    new ID=-1;
					    new Float:x,Float:y,Float:z,Float:a;
					    GetPlayerPos(playerid,x,y,z);
					    GetPlayerFacingAngle(playerid,a);
						for(new cab=0; cab<totalPhoneCabs;cab++)
						{
						    if(phone[cab][used] == 0)
						    	{ID=cab;break;}
						}
						
						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_phones");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_PHONECAB){msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de cabines téléphoniques atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_phones SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f",ID+1, x, y, z, a);
							mysql_pquery(MYSQL,sql);
							totalPhoneCabs++;
						}
						phone[ID][pos][0] = x;
					 	phone[ID][pos][1] = y;
						phone[ID][pos][2] = z;
						phone[ID][pos][3] = a;
						phone[ID][used] = 1;
					    phonecab_Save(ID);
					    phonecab_UpdateInfos(ID);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Cabine téléphonique id %d créée.",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "pub", true) == 0)
					{
					    new ID=-1;
					    new Float:x,Float:y,Float:z,Float:a;
					    GetPlayerPos(playerid,x,y,z);
					    GetPlayerFacingAngle(playerid,a);
						for(new i=0; i<totalAds;i++)
						{
						    if(ad[i][used] == 0)
						    	{ID=i;break;}
						}

						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_ads");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_AD){msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de panneaux publicitaire atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_ads SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Rot_x=%f",ID+1, x, y, z, a);
							mysql_pquery(MYSQL,sql);
							totalAds++;
						}
						ad[ID][pos][0] = x;
					 	ad[ID][pos][1] = y;
						ad[ID][pos][2] = z;
						ad[ID][pos][3] = 0.0;
						ad[ID][pos][4] = 0.0;
						ad[ID][pos][5] = a;
						ad[ID][used] = 1;
					    ad_Save(ID);
					    ad_Update(ID);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Panneaux publicitaire id %d créé.",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "carte", true) == 0)
					{
					    new Float:x,Float:y,Float:z,Float:a;
					    GetPlayerPos(playerid,x,y,z);
					    GetPlayerFacingAngle(playerid,a);
					    new ID=-1;
						for(new i=0; i<totalMaps;i++)
						{
						    if(map[i][used] == 0)
						    	{ID=i;break;}
						}
						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_maps");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_MAP){msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de cartes atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_maps SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f",ID+1, x, y, z, a);
							mysql_pquery(MYSQL,sql);
							totalMaps++;
						}
						map[ID][pos][0] = x;
						map[ID][pos][1] = y;
						map[ID][pos][2] = z;
						map[ID][pos][3] = a;
						map[ID][used] = 1;
	     				map_Save(ID);
					    map_UpdateInfos(ID);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Carte id %d créée.",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "distributeur", true) == 0)
					{
					    new ID=-1;
					    new Float:x,Float:y,Float:z,Float:a;
					    GetPlayerPos(playerid,x,y,z);
					    GetPlayerFacingAngle(playerid,a);
						for(new dis=0; dis<totalDistribs;dis++)
						{
						    if(distributor[dis][used] == 0)
						    	{ID=dis;break;}
						}
						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_distribs");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_DISTRIB){msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de distributeurs atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_distribs SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f",ID+1, x, y, z, a);
							mysql_pquery(MYSQL,sql);
							totalDistribs++;
						}
						distributor[ID][pos][0] = x;
						distributor[ID][pos][1] = y;
						distributor[ID][pos][2] = z;
						distributor[ID][pos][3] = a;
						distributor[ID][used] = 1;
					    distrib_Save(ID);
					    distrib_UpdateInfos(ID);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Distributeur id %d créé.",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
					else if(strcmp(tmp, "sapin", true) == 0)
					{
					    new ID=-1;
					    new Float:x,Float:y,Float:z;
					    GetPlayerPos(playerid,x,y,z);
						for(new sap=0; sap<totalTree;sap++)
						{
						    if(SapinInfo[sap][XmasTreeX] == 0)
						    	{ID=sap;break;}
						}
						if(ID==-1)
						{
							format(sql, sizeof(sql), "SELECT * FROM lvrp_server_tree");
							mysql_query(MYSQL,sql);
							cache_get_row_count(ID);
							if(ID+1>MAX_TREE)
								{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de sapin atteint."); return 1;}
							format(sql, sizeof(sql), "INSERT INTO lvrp_server_tree SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f",ID+1, x, y, z);
							mysql_pquery(MYSQL,sql);
							totalTree++;
						}
						SapinInfo[ID][XmasX] = x;
						SapinInfo[ID][XmasY] = y;
					 	SapinInfo[ID][XmasZ] = z;
						SapinInfo[ID][XmasTreeX] = 1;
						SafeSetPlayerPos(playerid, x-2.5, y+2.5, z);
					    tree_Save(ID);
					    tree_Update(ID,x,y,z);
					    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Sapin id %d créé.",ID);
						msg_Client(playerid,COLOR_WHITE,string);
					    return 1;
					}
				}
				return 1;
			}
			else if(strcmp(tmp, "spawn", true) == 0 || strcmp(tmp, "spawns", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
				    new tmpstring[256];
					for(new i=0; i<MAX_CITY; i++)
					{
					    format(tmpstring,sizeof(tmpstring),"- %s\n",GetCityName(i));
					    strins(string,tmpstring,strlen(string),sizeof(string));
					}
					ShowPlayerDialog(playerid,142,DIALOG_STYLE_LIST,"» Admin « Spawns",string,"Valider","Annuler");
					return 1;
				}
				else
				    {msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !"); return 1;}
			}
			else if(strcmp(tmp, "dao", true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					DestroyAllDynamicObjects();
					format(string, sizeof(string), "%s à supprimé tout les objects.",PlayerInfo[playerid][pRealName]);
					log_Admin(string);
					return 1;
				}
				else return msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");
			}
			else if(strcmp(tmp, "gmx", true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					GameModeExit();
					format(string, sizeof(string), "%s à reboot le serveur (gmx).",PlayerInfo[playerid][pRealName]);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else if(strcmp(tmp, "chargerfs", true) == 0)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;
				
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a chargerfs <nom>");return 1;}
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					format(string, sizeof(string), "loadfs %s", result);
					SendRconCommand(string);
					format(string, sizeof(string), "%s à chargé le filterscript : %s.",PlayerInfo[playerid][pRealName],result);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else if(strcmp(tmp, "dechargerfs", true) == 0)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;
				
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a dechargerfs <nom>");return 1;}
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					format(string, sizeof(string), "unloadfs %s", result);
					SendRconCommand(string);
					format(string, sizeof(string), "%s à déchargé le filterscript : %s.",PlayerInfo[playerid][pRealName],result);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else if(strcmp(tmp, "nomserveur", true) == 0)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;
				
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a nomserveur <nom>");return 1;}
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					format(string, sizeof(string), "hostname %s", result);
					SendRconCommand(string);
					format(string, sizeof(string), "%s à changé le nom du serveur en : %s.",PlayerInfo[playerid][pRealName],result);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else if(strcmp(tmp, "nomgm", true) == 0)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;
				
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a nomgm <nom>");return 1;}
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					format(string, sizeof(string), "gamemodetext %s", result);
					SendRconCommand(string);
					format(string, sizeof(string), "%s à changé le nom du mode en : %s.",PlayerInfo[playerid][pRealName],result);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else if(strcmp(tmp, "payday", true) == 0)
			{
			    if (PlayerInfo[playerid][pAdmin] >= 3)
				{
				    for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++){PayDay(i);}
				    format(string, sizeof(string), "» Information « Le payday a été lancé par %s.", PlayerInfo[playerid][pRealName]);
					msg_Client(giveplayerid, COLOR_WHITE, string);
					format(string, sizeof(string), "%s à lancé le payday.",PlayerInfo[playerid][pRealName]);
					log_Admin(string);
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else if(strcmp(tmp, "reload", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 4)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_USAGE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a reload <nom>");
						msg_Client(playerid, COLOR_USAGE, "{FF6347}» Admin «{FFFFB2} biz - maisons - garages - factions - gps - atms - cabines - cartes - sapins - bots - drops");
						msg_Client(playerid, COLOR_USAGE, "{FF6347}» Admin «{FFFFB2} crackhouse - mairie - arrets - uniquebiz - seed - poubelles - distributeurs - panneaux - tags");
						msg_Client(playerid, COLOR_USAGE, "{FF6347}» Admin «{FFFFB2} amendes - spawn - interieurs - zones - concessions - police - radars - meubles - portes - pubs");
						return 1;
					}
					if(strcmp(tmp, "biz", true) == 0 || strcmp(tmp, "bizz", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_bizz","bizz_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Biz{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "bot", true) == 0 || strcmp(tmp, "bots", true) == 0)
					{
					    if(setting[bot]==true)
							{npc_Join();}
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Bots{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "drop", true) == 0 || strcmp(tmp, "drops", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_drops","drop_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Drops{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "tag", true) == 0 || strcmp(tmp, "tags", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_factions_illegals_tags","tag_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Tags{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "pub", true) == 0 || strcmp(tmp, "pubs", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_ads","ad_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Panneaux publicitaires{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "maisons", true) == 0 || strcmp(tmp, "maison", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_houses","house_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Maisons{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "garage", true) == 0 || strcmp(tmp, "garages", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_garages","garage_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Garages{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "faction", true) == 0 || strcmp(tmp, "factions", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_factions_illegals","faction_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Factions{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "gps", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_gps","gps_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload du {00D3D1}GPS{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "mairie", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_factions_governements","governement_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload de la {00D3D1}Mairie{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "arret", true) == 0 || strcmp(tmp, "arrets", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_stop","stop_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Arret de bus{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "uniquebizz", true) == 0 || strcmp(tmp, "uniquebiz", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_uniquebizz","uniquebizz_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Uniques Biz{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "atm", true) == 0 || strcmp(tmp, "atms", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_atms","atm_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}ATMS{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "panneau", true) == 0 || strcmp(tmp, "panneaux", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_signs","sign_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Panneaux{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "seed", true) == 0 || strcmp(tmp, "graine", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_factions_illegals_seeds","seed_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Seeds{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "g_poubelle", true) == 0 || strcmp(tmp, "trash", true) == 0 || strcmp(tmp, "g_poubelles", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_trash","trash_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Grosses Poubelles{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "p_poubelle", true) == 0 || strcmp(tmp, "bin", true) == 0 || strcmp(tmp, "p_poubelles", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_bins","bin_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Petite Poubelles{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "cabines", true) == 0 || strcmp(tmp, "cabine", true) == 0 || strcmp(tmp, "phonecab", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_phones","phonecab_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Cabines Téléphoniques{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "cartes", true) == 0 || strcmp(tmp, "carte", true) == 0 || strcmp(tmp, "map", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_maps","map_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Cartes{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "distributeurs", true) == 0 || strcmp(tmp, "distributeur", true) == 0 || strcmp(tmp, "distrib", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_distribs","distrib_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Distributeurs{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "sapins", true) == 0 || strcmp(tmp, "sapin", true) == 0 || strcmp(tmp, "tree", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_tree","tree_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Sapins{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "amendes", true) == 0 || strcmp(tmp, "amende", true) == 0 || strcmp(tmp, "fine", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_factions_polices_fines","police_FineLoad");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Amendes{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "zone", true) == 0 || strcmp(tmp, "zones", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_zones","zone_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Zone Anti-DM{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "spawn", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_spawn","spawn_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload du {00D3D1}Spawn{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "interieurs", true) == 0 || strcmp(tmp, "interieur", true) == 0 || strcmp(tmp, "interiors", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_interiors","interior_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Interieurs{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "concession", true) == 0 || strcmp(tmp, "concessions", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_dealership","dealerShip_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Concessions{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "police", true) == 0 || strcmp(tmp, "polices", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_factions_polices","police_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Police{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "radar", true) == 0 || strcmp(tmp, "radars", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_camera","camera_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Radars{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "meubles", true) == 0 || strcmp(tmp, "meuble", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_houses_furnitures","house_LoadFurnitures");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Meubles{FFABAD} effectué.");
					    return 1;
					}
					else if(strcmp(tmp, "porte", true) == 0 || strcmp(tmp, "portes", true) == 0)
					{
					    mysql_tquery(MYSQL,"SELECT * FROM lvrp_server_gates","gate_Load");
					    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Reload des {00D3D1}Portes{FFABAD} effectué.");
					    return 1;
					}
				}
			}
			else if(strcmp(tmp, "server", true) == 0)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(PlayerInfo[playerid][pAdmin] >= 4)
					{
					    new Var[512];
					    msg_Client(playerid, COLOR_LIMEGREEN, "|__________________________________________Variables__________________________________________|");
					    format(Var,sizeof(Var),"[Propriétés] Maisons: %d/%d - Bizz: %d/%d - Voitures: %d/%d - Garages: %d/%d - Furnitures: %d/Inf",totalHouses,MAX_HOUSE,totalBizz,MAX_BIZZ,totalVehicles,MAX_CAR,totalGarages,MAX_GARAGE,totalFurnitures);
					    msg_Client(playerid,COLOR_STATS,Var);
					    format(Var,sizeof(Var),"[Divers] Arrets de bus: %d/%d - Factions dyn: %d/%d - GPS: %d/%d - Grosses Poubelles: %d/%d - Concessions: %d/%d - Interieurs : %d/%d",totalBusStop,MAX_BUSSTOP,totalFactions,MAX_FACTION,totalGPS,MAX_GPS,totalTrash,MAX_TRASH,totalDealerShip,MAX_DEALSHIP,totalInteriors,MAX_INTERIOR);
					    msg_Client(playerid,COLOR_STATS,Var);
					    format(Var,sizeof(Var),"[Divers] Drops: %d/%d - ATMs: %d/%d - Cadavres: %d/%d - Radars: %d/%d - Carcasses : %d/%d - ZoneDM: %d/%d - Panneaux publicitaire: %d/%d",totalDrops,MAX_DROPS,totalATMs,MAX_ATM,totalBodies,MAX_DEADBODY,totalCameras,MAX_CAMERA,totalTrashCars,MAX_TRASHCAR,totalZones,MAX_ZONE,totalAds,MAX_AD);
					    msg_Client(playerid,COLOR_STATS,Var);
					    format(Var,sizeof(Var),"[Divers] Cabines: %d/%d - Cartes: %d/%d - Distributeurs : %d/%d - Sapins : %d/%d - Petites Poubelles: %d/%d - Panneaux: %d/%d",totalPhoneCabs,MAX_PHONECAB,totalMaps,MAX_MAP,totalDistribs,MAX_DISTRIB,totalTree,MAX_TREE,totalBins,MAX_BIN,totalSigns,MAX_SIGN);
					    msg_Client(playerid,COLOR_STATS,Var);
					    format(Var,sizeof(Var),"[Factions] Barrages: %d/%d - Herses: %d/%d - Amendes: %d/%d - Tag: %d/%d - Plants de weed: %d/%d",totalBars,MAX_BAR,totalSpikes,MAX_SPIKE,totalFines,MAX_FINE,totalTags,MAX_TAG,totalSeeds,MAX_SEED);
					    msg_Client(playerid,COLOR_STATS,Var);
					    format(Var,sizeof(Var),"[Streamer] Objets: %d/Inf - 3DLabels: %d/Inf - Pickups: %d/Inf - Zones: %d/Inf - Actors: %d/1000",Streamer_CountItems(STREAMER_TYPE_OBJECT,1),Streamer_CountItems(STREAMER_TYPE_3D_TEXT_LABEL,1),Streamer_CountItems(STREAMER_TYPE_PICKUP,1),Streamer_CountItems(STREAMER_TYPE_AREA,1),Streamer_CountItems(STREAMER_TYPE_ACTOR)+1);
						msg_Client(playerid, COLOR_STATS, Var);
					    msg_Client(playerid, COLOR_LIMEGREEN, "|_____________________________________________________________________________________________|");
					    return 1;
					}
					else
						{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			    }
			}
			else if(strcmp(tmp, "server_stats", true) == 0)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(PlayerInfo[playerid][pAdmin] >= 4)
					{
					    new Var[512];
					    msg_Client(playerid, COLOR_LIMEGREEN, "|__________________________________________Variables_Stats__________________________________________|");
					    format(Var,sizeof(Var),"[Général] Joueurs: %d/%d - FlicsService : %d",MAX_PLAYERS_CURRENT,MAX_PLAYERS,Flicservice);
					    msg_Client(playerid,COLOR_STATS,Var);
					}
				}
			}
			else if(strcmp(tmp, "server_timers", true) == 0)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(PlayerInfo[playerid][pAdmin] >= 4)
						{admin_Timer[playerid]=1;}
				}
			}
			else if(strcmp(tmp, "adminlevel", true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a adminlevel <id/joueur> <niveau>");return 1;}
					new level;
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					level = strval(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						PlayerInfo[giveplayerid][pAdmin] = level;
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été mis par %s admin niveau %d. Utilisez /a pour voir vos nouvelles commandes.", PlayerInfo[playerid][pRealName], level);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez mis %s admin level %d.",PlayerInfo[giveplayerid][pRealName],level);
						msg_Client(playerid,COLOR_WHITE,string);
						format(string, sizeof(string), "%s à mis %s, adminlevel %d.",PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName],level);
						log_Admin(string);
						return 1;
					}
					else
					    {msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté."); return 1;}
				}
				else
					{msg_Client(playerid, COLOR_NOACCES, "{FF0069}» Erreur «{FFFFFF} Vous n'êtes pas autorisé à utilisé cette commande !");}
			}
			else
			{
			    if (PlayerInfo[playerid][pAdmin] >= 1)
				{
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a <nom>");
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}1{A98500}:{FFFFB2} duty - gethere - getcar - tp - clear - slap - muteooc - muteic");
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}1{A98500}:{FFFFB2} kick - freeze - defreeze - spec - skin - info - (int)erieur - demute");
	            	msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}1{A98500}:{FFFFB2} jail - dejail - renvoie - avertir - nomoff - monde - reanimer");
				}
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}2{A98500}:{FFFFB2} ban - bantemps - deavertir - jetpack - localiser - cadavre - meteo");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}2{A98500}:{FFFFB2} mettrejob - deban - debanip - carcasse - changernom - desarmer");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}2{A98500}:{FFFFB2} virer - inviter - leader - rang - vie - armure - faim - soif");
				}
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}3{A98500}:{FFFFB2} kickall - reboot - an - musique - cnnn - event - divorce");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}3{A98500}:{FFFFB2} ip - recup - donner - lotto - jackpot - desarmer - argent");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}3{A98500}:{FFFFB2} id - supprimer - creer - spawn - payday - edit");
				}
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}4{A98500}:{FFFFB2} dao - gmx - chargerfs - dechargerfs - nomserveur - nomgm - adminlevel");
					msg_Client(playerid, COLOR_WHITE, "{FF6347}» Admin «{A98500}Admin level {FF0000}4{A98500}:{FFFFB2} server - reload - payday");
				}
				return 1;
			}
		}
		return 1;
	}
//------------------------------[ Job ]-----------------------------------------
	else if(strcmp(cmd, "/job", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] == 0)
	        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de job !");}
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
		{
			msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /job <nom>");
			msg_Client(playerid,COLOR_USAGE,"{FFFFB2} debut - fin - localiser - quitter - vendre (Pizzaman)");
			return 1;
		}
		if(strcmp(tmp,"fin", true) == 0)
		{
		    if(job_Start[playerid]==1)
    			{job_End(playerid); msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez arrêté de travailler.");}
		}
		else if(strcmp(tmp,"vendre", true) == 0)
		{
		    if(PlayerInfo[playerid][pJob] == 1)
		    {
		        tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{return msg_Client(playerid, COLOR_INFO, "{A98500}» Usage «{FFFFB2} /job vendre <id/joueur> <prix>");}
                giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
				{
	   				if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{return msg_Client(playerid, COLOR_INFO, "{A98500}» Usage «{FFFFB2} /job vendre <id/joueur> <prix>");}
						new prices=strval(tmp);
						if(prices < 10 || prices > 200)
							{return msg_Client(playerid, COLOR_JOB, "{78769D}» Job «{FFFFFF} Le prix doit être compris entre $10 et $200.");}
							
                        player_SellOffer[giveplayerid]=playerid;
                        player_SellOther[giveplayerid]=prices;
                        player_SellId[giveplayerid]=2543;
                        format(string,sizeof(string),"{78769D}» Job «{FFFFFF} Vous proposez à %s d'acheter une pizza pour $%d.",PlayerInfo[giveplayerid][pName],prices);
                        msg_Client(playerid,COLOR_JOB,string);
                        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s vous propose une pizza pour $%d. (/accepter pizza)",PlayerInfo[playerid][pName],prices);
                        msg_Client(giveplayerid,COLOR_INFO,string);
                        return 1;
					}
					else
						{msg_Client(playerid, COLOR_JOB, "{78769D}» Job «{FFFFFF} Ce joueur n'est pas près de vous.");}
   				}
   				else
			   		{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
		    }
		}
		else if(strcmp(tmp,"debut", true) == 0)
		{
		    if(job_Start[playerid]!=0)
		        {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous êtes déjà en train de travailler.");}
			if(PlayerInfo[playerid][pJob] == 3) // Mineur
			{
			    if(PlayerInfo[playerid][pJobTime] < JOB_TIME)
			    {
					format(string,sizeof(string),"{78769D}» Job «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",JOB_TIME-PlayerInfo[playerid][pJobTime]);
				    msg_Client(playerid,COLOR_JOB,string);
			    }
			    job_SetSkin(playerid,PlayerInfo[playerid][pJob]);
   				job_CheckPoints[playerid]=random(9);
			    job_Start[playerid]=1; job_TempVar[playerid]=0; job_CarId[playerid]=-1;
			    gPlayerCheckpoint[playerid]=22; job_ObjectN[playerid]=-1;
			    job_ShowTexts(playerid);
			    SetPlayerCheckpoint(playerid,gMinerPoints[job_CheckPoints[playerid]][0], gMinerPoints[job_CheckPoints[playerid]][1], gMinerPoints[job_CheckPoints[playerid]][2], 2.0);
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez au CheckPoint afin de commencer à miner. (Point rouge minimap)");
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Puis suivez les instructions qui seront afficher en haut de l'ecran.");
			}
			else if(PlayerInfo[playerid][pJob] == 9) // Voiturier
			{
			    job_SetSkin(playerid,PlayerInfo[playerid][pJob]);
			    job_Start[playerid]=1; job_TempVar[playerid]=0; job_CarId[playerid]=-1;
			    job_City[playerid] = GetCityPlayer(playerid);
			    job_ShowTexts(playerid);
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez garer les voitures des résidents");
			    SetTimerEx("job_Apply",3000,0,"iii",playerid,9,1);
				if(PlayerInfo[playerid][pJobTime] < JOB_TIME)
			    {
					format(string,sizeof(string),"{78769D}» Job «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",JOB_TIME-PlayerInfo[playerid][pJobTime]);
				    msg_Client(playerid,COLOR_JOB,string);
			    }
			}
			else if(PlayerInfo[playerid][pJob] == 11) // Medecin
			{
			    if(PlayerInfo[playerid][pJobTime] < JOB_TIME)
			    {
					format(string,sizeof(string),"{78769D}» Job «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",JOB_TIME-PlayerInfo[playerid][pJobTime]);
				    msg_Client(playerid,COLOR_JOB,string);
			    }
		 		gServerMedics++;
				job_Start[playerid]=1; job_SetSkin(playerid,PlayerInfo[playerid][pJob]);
				msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous êtes en service médecin. (/medecin)");
				SetPlayerColor(playerid,0xFF828200);
			    for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++) // personnes bléssées
				{
					if(IsPlayerConnected(i) && medic_PlayerNeedMedic[i] == 1)
						{SetPlayerMarkerForPlayer(playerid, i, COLOR_PINK);}
				}
			}
			else
			    {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez être dans un véhicule pour travailler.");}
		}
		else if(strcmp(tmp,"localiser", true) == 0)
		{
		    if(job_Start[playerid]== 1)
		        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible en job service.");}
		    if(PlayerInfo[playerid][pJob] == 1)
		        {SetPlayerCheckpoint(playerid,2117.1238,-1790.6949,13.5547,5.0);}
            else if(PlayerInfo[playerid][pJob] == 2)
		        {SetPlayerCheckpoint(playerid,-382.9725,-1426.1107,26.3180,5.0);}
            else if(PlayerInfo[playerid][pJob] == 3)
		        {SetPlayerCheckpoint(playerid,1615.8364,-1893.7744,13.5482,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 4)
		        {SetPlayerCheckpoint(playerid,2276.7869,-2227.0000,13.5469,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 5)
		        {SetPlayerCheckpoint(playerid,827.3839,856.9607,12.2437,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 6)
		        {SetPlayerCheckpoint(playerid,1969.6827,-2188.5569,13.5469,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 7)
		        {SetPlayerCheckpoint(playerid,1743.8046,-1582.4856,13.5479,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 8)
		        {SetPlayerCheckpoint(playerid,906.1063,-1904.2996,1.1277,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 9)
		        {SetPlayerCheckpoint(playerid,322.1843,-1519.5908,36.0391,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 10)
		        {SetPlayerCheckpoint(playerid,2422.7007,-2075.9539,13.5538,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 11)
		        {SetPlayerCheckpoint(playerid,1181.7336,-1330.5524,13.5849,5.0);}
		    else if(PlayerInfo[playerid][pJob] == 12)
		        {SetPlayerCheckpoint(playerid,783.6038,-1327.6260,13.5469,5.0);}
            else if(PlayerInfo[playerid][pJob] == 17)
		        {SetPlayerCheckpoint(playerid,1008.4938,-1358.3921,13.3909,5.0);}
            else if(PlayerInfo[playerid][pJob] == 19)
		        {SetPlayerCheckpoint(playerid,1516.9620,-1022.1600,23.8301,5.0);}
		}
		else if(strcmp(tmp,"quitter", true) == 0)
		{
		    if(job_Start[playerid]==1)
    			{job_End(playerid);}
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pJobLvl] = 0;
			PlayerInfo[playerid][pJobExp] = 0;
			PlayerInfo[playerid][pJobTime] = 0;
			PlayerInfo[playerid][pJobRemain] = 60;
			msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez quitté votre job.");
		}
		return 1;
	}
	else if(strcmp(cmd, "/taxi", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] != 20)
	        {return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas chauffeur de Taxi.", 5000);}
	    if(PlayerInfo[playerid][pTaxi] != 1)
			{return msg_Box(playerid, "~b~", "Info", "Vous n'avez pas de license de Taxi.", 5000);}
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{return msg_Box(playerid, "~b~", "Info", "Vous devez être au volant d'un véhicule.", 5000);}
        if(!IsACar(idcar))
			{return msg_Box(playerid, "~b~", "Info", "Ce véhicule n'est pas une voiture !", 5000);}
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
		{
			msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /taxi <nom>");
			msg_Client(playerid,COLOR_USAGE,"{A98500}Noms disponibles{FFFFB2}: service - license - (acc)epter");
			return 1;
		}
		if(strcmp(tmp,"service", true) == 0)
		{
		    if(taxi_Duty[playerid] != 0)
		    {
		        Taximans--;
		        taxi_Duty[playerid]=0;
		        msg_Box(playerid, "~b~", "Info", "Vous n'êtes plus en service Taxi.", 5000);
		    }
		    else
		    {
				if(!IsValidDynamicObject(player_TaxiLicense[playerid]))
				    {return msg_Box(playerid, "~b~", "Info", "Vous n'avez pas mis votre license sur le toit.", 5000);}
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp))
				{
					msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /taxi service <prix>");
					return msg_Client(playerid,COLOR_USAGE,"{A98500}Info{FFFFB2}: Prix au kilomètre");
				}
				var = strval(tmp);
				if(var < 1 || var > 100)
				    {return msg_Box(playerid, "~b~", "Info", "Prix entre $1 et $100 au Kilomètre.", 7000);}

				taxi_Duty[playerid] = var;
				Taximans++;
				format(string,sizeof(string),"Vous êtes en service pour %d$/Km.",var);
				msg_Box(playerid, "~b~", "Info", string, 5000);
				format(string, sizeof(string), "[Pub] Le chauffeur de taxi %s est en service [%d$/KM], appeler le 444 pour appeler un taxi.",PlayerInfo[playerid][pName],var);
		   		msg_OOCNews(0xF4FA58AA,string);
	   		}
		}
		else if(strcmp(tmp,"license", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
			{
				msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /taxi license <nom>");
				msg_Client(playerid,COLOR_USAGE,"{A98500}Noms disponibles{FFFFB2}: mettre - enlever");
				return 1;
			}
			if(strcmp(tmp,"mettre", true) == 0)
			{
				if(IsValidDynamicObject(player_TaxiLicense[playerid]))
				    {return msg_Box(playerid, "~b~", "Info", "Vous avez déjà mis votre license !", 5000);}
				    
				ShowPlayerDialog(playerid,154, DIALOG_STYLE_LIST,"» Taxi « License","{FFFFFF}- Noire sur Jaune\n- Blanc sur Noire\n- Noire sur blanc\n- Jaune sur Noire","Valider","Quitter");
			}
			else if(strcmp(tmp,"enlever", true) == 0)
			{
			    if(!IsValidDynamicObject(player_TaxiLicense[playerid]))
			    	{return msg_Box(playerid, "~b~", "Info", "Vous n'avez pas mis votre license sur le toit.", 5000);}

				if(IsValidDynamicObject(player_TaxiLicense[playerid]))
                    {return DestroyDynamicObject(player_TaxiLicense[playerid]);}
				msg_Box(playerid, "~b~", "Info", "Vous avez retiré votre license de Taxi.", 5000);
			}
		}
		else if(strcmp(tmp,"acc", true) == 0 || strcmp(tmp,"accepter", true) == 0)
		{
		    if(taxi_Duty[playerid] != 0 && taxi_PhoneId != -1)
		    {
				new Float:XX, Float:YY, Float:ZZ;
				GetPlayerPos(taxi_PhoneId,XX,YY,ZZ);
				SetPlayerCheckpoint(playerid,XX,YY,ZZ, 2.0);
				msg_Client(taxi_PhoneId,COLOR_YELLOW,"» Taxi «{FFFFFF} Un taxi à accepté votre appel.");
				msg_Box(playerid, "~b~", "Info", "Vous avez accepté l'appel", 5000);
				taxi_PhoneId=-1;
		    }
		    else
				{msg_Box(playerid, "~b~", "Info", "Vous devez être en service ou personne n'a demandé un Taxi !", 5000);}
		}
	    return 1;
	}
	else if(strcmp(cmd, "/mecanicien", true) == 0 || strcmp(cmd, "/mecano", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pJob] != 17)
			{return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas Mécanicien.", 5000);}
		if(!strlen(tmp))
		{
			msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano <nom>");
			msg_Client(playerid,COLOR_USAGE,"{A98500}Rang {FFFFFF}1{FFFFB2}: (rep)arer - (remp)lir - (car)roserie - (pein)ture - rem(orquer)");
			msg_Client(playerid,COLOR_USAGE,"{A98500}Rang {FFFFFF}1{FFFFB2}: (acc)epter - sabot - bar(rage) - brider - debrider - service");
			return 1;
		}
		if(strcmp(tmp,"reparer", true) == 0 || strcmp(tmp,"rep", true) == 0)
		{
		    if(mecano_Duty[playerid] == 0)
				{return msg_Box(playerid, "~b~", "Info", "Vous n'êtes pas en service", 5000);}
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano reparer <id/joueur> <prix>");return 1;}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano reparer <id/joueur> <prix>");return 1;}
			new prices=strval(tmp);
			if(prices < 20 || prices > 1000)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le prix doit être compris entre $20 et $1000."); return 1; }
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
	   			if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(IsPlayerInAnyVehicle(giveplayerid))
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Tu ne peux pas te réparer toi même."); return 1; }
						format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} Vous proposez à %s de réparer son véhicule pour $%d .",PlayerInfo[giveplayerid][pName],prices);
						msg_Client(playerid, COLOR_JOB, string);
						format(string, sizeof(string), "Le mécanicien %s vous propose de réparer votre véhicule pour $%d.",PlayerInfo[playerid][pName],prices);
						ShowPlayerDialog(giveplayerid,127,DIALOG_STYLE_MSGBOX,"|Mécanicen| Réparation",string,"Accepter","Refuser");
						mecano_Offer[giveplayerid] = playerid;
						mecano_Price[giveplayerid] = prices;
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Ce joueur doit être dans un véhicule."); return 1;}
				}
				else
					{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Ce joueur n'est pas près de vous.");}
   			}
   			else
			   	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
		}
		else if(strcmp(tmp,"service",true) == 0)
		{
		    if(mecano_Duty[playerid] == 1)
			{
		        msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes plus en service, vous ne recevrez plus d'appel.");
		        mecano_Duty[playerid] = 0;
		        Mechanics -= 1;
		        SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
		    }
		    else
		    {
		        if(PlayerInfo[playerid][pDutyTime] < DUTY_TIME)
			    {
					format(string,sizeof(string),"{FF8282}» Médecin «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",DUTY_TIME-PlayerInfo[playerid][pJobTime]);
				    msg_Client(playerid,COLOR_JOB,string);
			    }
		        msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous êtes en service, vous recevrez les appels des personnes qui ont besoin de vous.");
		        mecano_Duty[playerid] = 1;
		        job_SetSkin(playerid,17);
		        Mechanics += 1;
   				format(string, sizeof(string), "[Pub] Le mecanicien %s est en service, appeler le 555 pour appeler un mecanicien.", PlayerInfo[playerid][pName]);
	   			msg_OOCNews(0x2993EDAA,string);
		    }
		}
		else if(strcmp(tmp,"brider",true) == 0)
		{
		    if(mecano_Duty[playerid] == 0)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes pas en service!");return 1;}
            tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano brider <id/joueur> <prix>");return 1;}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano brider <id/joueur> <prix>");return 1;}
			new prices=strval(tmp);
			if(prices < 100 || prices > 1000)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le prix doit être compris entre $100 et $1000."); return 1; }
            if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
	   			if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(IsPlayerInAnyVehicle(giveplayerid))
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Tu ne peux pas te brider toi même."); return 1; }
						format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} Vous proposez à %s de brider son véhicule pour $%d .",PlayerInfo[giveplayerid][pName],prices);
						msg_Client(playerid, COLOR_JOB, string);
						format(string, sizeof(string), "Le mécanicien %s vous propose de brider votre véhicule pour $%d.",PlayerInfo[playerid][pName],prices);
						ShowPlayerDialog(giveplayerid,63,DIALOG_STYLE_MSGBOX,"|Mécanicen| Bridage",string,"Accepter","Refuser");
						mecano_Offer[giveplayerid] = playerid;
						mecano_Price[giveplayerid] = prices;
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Ce joueur doit être dans un véhicule."); return 1;}
				}
				else
					{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Ce joueur n'est pas près de vous.");}
   			}
   			else
			   	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
		}
		else if(strcmp(tmp,"debrider",true) == 0)
		{
		    if(mecano_Duty[playerid] == 0)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes pas en service!");return 1;}
            tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano debrider <id/joueur> <prix>");return 1;}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano debrider <id/joueur> <prix>");return 1;}
			new prices=strval(tmp);
			if(prices < 100 || prices > 1000)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le prix doit être compris entre $100 et $1000."); return 1; }
            if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
	   			if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(IsPlayerInAnyVehicle(giveplayerid))
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Tu ne peux pas te débrider toi même."); return 1; }
						format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} Vous proposez à %s de débrider son véhicule pour $%d .",PlayerInfo[giveplayerid][pName],prices);
						msg_Client(playerid, COLOR_JOB, string);
						format(string, sizeof(string), "Le mécanicien %s vous propose de débrider votre véhicule pour $%d.",PlayerInfo[playerid][pName],prices);
						ShowPlayerDialog(giveplayerid,64,DIALOG_STYLE_MSGBOX,"|Mécanicen| Débridage",string,"Accepter","Refuser");
						mecano_Offer[giveplayerid] = playerid;
						mecano_Price[giveplayerid] = prices;
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Ce joueur doit être dans un véhicule."); return 1;}
				}
				else
					{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Ce joueur n'est pas près de vous.");}
   			}
   			else
			   	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
		}
		else if(strcmp(tmp,"sabot",true) == 0)
		{
				    if(mecano_Duty[playerid] == 0)
						{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes pas en service!");return 1;}

					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /mecano sabot <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FFFFB2} mettre - enlever");
						return 1;
	  				}
	  				if(strcmp(tmp,"mettre",true) == 0)
	                {
						new counter = 0;
					    new car;
					    for(new i; i != MAX_VEHICLES; i++)
					    {
					        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
					        if(dist)
					        	{car = i;counter++;}
					    }
					    if(counter == 0)
			  				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Aucun véhicule pret de vous.");return 1;}
			  			else if(counter > 1)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Trop de véhicule prêt de vous.");return 1;}

                        if(IsPlayerInAnyVehicle(playerid))
		      				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous ne pouvez pas mettre de sabot depuis l'interieur.");return 1;}

		      			if(IsAPlane(car) || IsABike(car) || IsABoat(car) || vehicle[car][cType] != CAR_OWN)
						  	{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Il est impossible de mettre un sabot sur ce véhicule.");return 1;}

                        new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
							{idx++;}
						new offset = idx;
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{result[idx - offset] = cmdtext[idx];idx++;}
						result[idx - offset] = EOS;
						if(!strlen(result))
							{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /mecano sabot mettre <raison>");}

						strmid(vehicle[car][sabotDesc],result,0,64,64);
                        vehicle[car][sabot] = true;
		                format(string, sizeof(string), "* %s met un sabot dans les roues du véhicules.", PlayerInfo[playerid][pName]);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						return 1;
					}
					else if(strcmp(tmp,"enlever",true) == 0)
	                {
	                    new counter = 0;
					    new car;
					    for(new i; i != MAX_VEHICLES; i++)
					    {
					        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
					        if(dist)
					        	{car = i;counter++;}
					    }
					    if(counter == 0)
			  				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Aucun véhicule pret de vous.");return 1;}
			  			else if(counter > 1)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Trop de véhicule prêt de vous.");return 1;}

                        if(IsPlayerInAnyVehicle(playerid))
		      				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous ne pouvez pas enlever de sabot depuis l'interieur.");return 1;}

		      			if(IsAPlane(car) || IsABike(car) || IsABoat(car) || vehicle[car][cType] != CAR_OWN)
						  	{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Il est impossible d'enlever un sabot de ce véhicule.");return 1;}

		                vehicle[car][sabot] = false;
		                strmid(vehicle[car][sabotDesc],"Aucun",0,64,64);
		                format(string, sizeof(string), "* %s enleve le sabot des roues du véhicule.", PlayerInfo[playerid][pName]);
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						return 1;
					}
					else
					{
					    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /mecano sabot <nom>");
						msg_Client(playerid, COLOR_WHITE, "{FFFFB2} mettre - enlever");
						return 1;
					}
		}
		else if(strcmp(tmp,"bar",true) == 0 || strcmp(tmp,"barrage",true) == 0)
		{
			if(mecano_Duty[playerid] == 0)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes pas en service!");return 1;}
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /mecano bar(rage) <nom>");
				msg_Client(playerid, COLOR_WHITE, "{FFFFB2} creer - sup(primer) - [enlevertousbar(rage) (etb) <-Rang 6]");
				return 1;
			}
			if(strcmp(tmp,"creer",true) == 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
					{msg_Client(playerid,COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous ne pouvez pas mettre de herse dans un véhicule!");return 1;}
				if(totalBars>=MAX_BAR)
	    			{msg_Client(playerid,COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le nombre Max de barrages a été atteint.");return 1;}
	    		tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /mecano bar(rage) creer <numéro>");
					msg_Client(playerid, COLOR_WHITE, "{A98500}Numéro:{FFFFFF} 1. Petit - 2. Cone - 3. Interdit - 4. Route fermé");
					return 1;
				}
				new num = strval(tmp);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle(playerid,ploca);
				if (num == 1)
				{
					bar_Create(1459,plocx,plocy,plocz-0.5,ploca,PlayerInfo[playerid][pMember]);
					format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			        GameTextForPlayer(playerid,"~w~Barrage ~b~Place !",3000,1);
				}
				else if (num == 2)
				{
					bar_Create(1238,plocx,plocy,plocz-0.7,ploca,PlayerInfo[playerid][pMember]);
					format(string, sizeof(string), "* %s deploie une cone sur la route.", PlayerInfo[playerid][pName]);
			        GameTextForPlayer(playerid,"~w~Cone ~b~Place !",3000,1);
				}
				else if (num == 3)
				{
					bar_Create(3265,plocx,plocy,plocz-0.8,ploca+180,PlayerInfo[playerid][pMember]);
					format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			    	GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
				}
				else if (num == 4)
				{
					bar_Create(3091,plocx,plocy,plocz-0.5,ploca+180,PlayerInfo[playerid][pMember]);
					format(string, sizeof(string), "* %s deploie une barrage sur la route.", PlayerInfo[playerid][pName]);
			        GameTextForPlayer(playerid,"~w~Panneau ~b~Place !",3000,1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				return 1;
			}
			else if(strcmp(tmp,"sup",true) == 0 || strcmp(tmp,"suprimer",true) == 0)
				{bar_Remove(playerid);}
			else if(strcmp(tmp,"etb",true) == 0 || strcmp(tmp,"enlevertousbarrage",true) == 0)
			{
				bar_RemoveAll(playerid);

				format(string, sizeof(string), "Mecano: Tous les barrages routiers de la zone ont été levé sous ordre de %s.", PlayerInfo[playerid][pName]);
				for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
							{msg_Client(i, COLOR_CASIER, string);}
					}
				}
			}
		}
		else if(strcmp(tmp,"remplir", true) == 0 || strcmp(tmp,"remp", true) == 0)
		{
		    if(mecano_Duty[playerid] == 0)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes pas en service!");return 1;}
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano remplir <id/joueur> <prix>");return 1;}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano remplir <id/joueur> <prix>");return 1;}
			new prices=strval(tmp);
			if(prices < 20 || prices > 1000)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le prix doit être compris entre $20 et $1000."); return 1; }
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
	   			if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(IsPlayerInAnyVehicle(giveplayerid))
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Tu ne peux pas remplir ton véhicule toi même."); return 1; }
						format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} Vous proposez à %s de remplir son véhicule pour $%d (20 Litres).",PlayerInfo[giveplayerid][pName],prices);
						msg_Client(playerid, COLOR_JOB, string);
						format(string, sizeof(string), "Le mécanicien %s vous propose de remplir votre véhicule pour $%d. (20 Litres)",PlayerInfo[playerid][pName],prices);
						ShowPlayerDialog(giveplayerid,128,DIALOG_STYLE_MSGBOX,"|Mécanicen| Remplir le véhicule (20 Litres)",string,"Accepter","Refuser");
						mecano_Offer[giveplayerid] = playerid;
						mecano_Price[giveplayerid] = prices;
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Ce joueur doit être dans un véhicule."); return 1;}
				}
				else
					{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Ce joueur n'est pas près de vous.");}
   			}
   			else
			   	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
		}
		else if(strcmp(tmp,"peinture", true) == 0 || strcmp(tmp,"pein", true) == 0)
		{
		    if(mecano_Duty[playerid] == 0)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes pas en service!");return 1;}
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano peinture <id/joueur> <prix> <couleur1> <couleur2>");return 1;}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano peinture <id/joueur> <prix> <couleur1> <couleur2>");return 1;}
			new prices=strval(tmp);
			if(prices < 20 || prices > 1000)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le prix doit être compris entre $20 et $1000."); return 1; }
   			tmp = strtok(cmdtext, idx);
			new color1=strval(tmp);
			if(color1 < 0 || color1 > 255)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} La couleur1 doit être comprise entre 0 et 255."); return 1; }
			tmp = strtok(cmdtext, idx);
			new color2=strval(tmp);
			if(color2 < 0 || color2 > 255)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} La couleur2 doit être comprise entre 0 et 255."); return 1; }
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
	   			if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(IsPlayerInAnyVehicle(giveplayerid))
					{
					    if(giveplayerid == playerid)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Tu ne peux pas te refaire la peinture toi même."); return 1; }
						format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} Vous proposez à %s de changer la couleur son véhicule pour $%d.",PlayerInfo[giveplayerid][pName],prices);
						msg_Client(playerid, COLOR_JOB, string);
						format(string, sizeof(string), "Le mécanicien %s vous propose de changer la couleur de votre véhicule pour $%d.",PlayerInfo[playerid][pName],prices);
						ShowPlayerDialog(giveplayerid,18,DIALOG_STYLE_MSGBOX,"|Mécanicen| Changer les couleurs du véhicule",string,"Accepter","Refuser");
						mecano_Offer[giveplayerid] = playerid;
						mecano_Price[giveplayerid] = prices;
						mecano_Color1[giveplayerid] = color1;
						mecano_Color2[giveplayerid] = color2;
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Ce joueur doit être dans un véhicule."); return 1;}
				}
				else
					{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Ce joueur n'est pas près de vous.");}
   			}
   			else
			   	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
		}
		else if(strcmp(tmp,"carroserie", true) == 0 || strcmp(tmp,"car", true) == 0)
		{
		    if(mecano_Duty[playerid] == 0)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes pas en service!");return 1;}
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano carroserie <id/joueur> <prix>");return 1;}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano carroserie <id/joueur> <prix>");return 1;}
			new prices=strval(tmp);
			if(prices < 20 || prices > 10000)
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le prix doit être compris entre $20 et $10000."); return 1; }
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
	   			if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(IsPlayerInAnyVehicle(giveplayerid))
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Tu ne peux pas te changer la carroserie toi même."); return 1; }
						format(string, sizeof(string), "{78769D}» Mécanicien «{FFFFFF} Vous proposez à %s de réparer sa carroserie de son véhicule pour $%d.",PlayerInfo[giveplayerid][pName],prices);
						msg_Client(playerid, COLOR_JOB, string);
						format(string, sizeof(string), "Le mécanicien %s vous propose de reparer votre carroserie de votre véhicule pour $%d.",PlayerInfo[playerid][pName],prices);
						ShowPlayerDialog(giveplayerid,17,DIALOG_STYLE_MSGBOX,"|Mécanicen| Réparer la carroserie du véhicule",string,"Accepter","Refuser");
						mecano_Offer[giveplayerid] = playerid;
						mecano_Price[giveplayerid] = prices;
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Ce joueur doit être dans un véhicule."); return 1;}
				}
				else
					{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Ce joueur n'est pas près de vous.");}
   			}
   			else
			   	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
		}
		else if(strcmp(tmp,"rem", true) == 0 || strcmp(tmp,"remorquer", true) == 0)
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
			    if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
     	 		{
		     	   	if(GetPlayerState(playerid)==2)
		     	   	{
						new Float:pX,Float:pY,Float:pZ;
						GetPlayerPos(playerid,pX,pY,pZ);
						new Float:veX,Float:veY,Float:veZ;
						new Found=0;
						new vid=0;
						while((vid<MAX_VEHICLES)&&(!Found))
						{
	   	 					vid++;
	   	 					GetVehiclePos(vid,veX,veY,veZ);
	   	 					if ((floatabs(pX-veX)<7.0)&&(floatabs(pY-veY)<7.0)&&(floatabs(pZ-veZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
							{
			   					Found=1;
				   			    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
				           			{DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));}
					        	else
						       		{AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));}
			 				}
			     		}
						if(!Found)
				 			{msg_Client(playerid,0xFFFF00AA,"{78769D}» Mécanicien «{FFFFFF} Pas de voiture pres de vous (Bug syncro? Monter dans le véhicule a remorquer).");}
					}
					else
						{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous devez être le conducteur!");return 1;}
				}
				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 578)
				{
				    if(mecano_CarHaceTC[idcar] == false)
				    {
					    new trashcar=-1;
					    for(new i=0;i <MAX_TRASHCAR; i++)
					    {
					        if(PlayerToPoint(5.0,playerid,trashCar[i][pos][0],trashCar[i][pos][1],trashCar[i][pos][2]))
					            {trashcar=i; break;}
					    }
					    if(trashcar==-1)
					        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Aucune carcass à côté de vous."); return 1;}
					        
						if(IsValidDynamicObject(trashcar_Object[trashcar]))
						    {DestroyDynamicObject(trashcar_Object[trashcar]);}
						if(IsValidDynamic3DTextLabel(trashcar_Label[trashcar]))
	     					{DestroyDynamic3DTextLabel(trashcar_Label[trashcar]);}
					        
                        trashcar_Object[trashcar] = CreateDynamicObject(3594, trashCar[trashcar][pos][0],trashCar[trashcar][pos][1], trashCar[trashcar][pos][2]+5, 0.0,0.0,0.0,-1,-1,-1,STREAM_DISTANCE);
                        AttachDynamicObjectToVehicle(trashcar_Object[trashcar], idcar, -0.044499, -1.554998, 0.226998, 0.000000, 0.000000, 0.000000);
                        mecano_CarHaceTC[idcar]=true; mecano_TCid[idcar]=trashcar;
                        msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous avez remorqué cette carcass. Allez la déposer au dépot avec '/mecano rem'.");
                        SetPlayerCheckpoint(playerid,1618.8650,-1793.9976,13.5027,8.0);
                        return 1;
					}
					else
					{
					    if(PlayerToPoint(8.0,playerid,1618.8650,-1793.9976,13.5027))
					    {
					        if(IsValidDynamicObject(trashcar_Object[mecano_TCid[idcar]]))
					        	{DestroyDynamicObject(trashcar_Object[mecano_TCid[idcar]]);}
					        trashCar[mecano_TCid[idcar]][used]=0;
					        trashCar[mecano_TCid[idcar]][pos][0]=0.0;
				            trashCar[mecano_TCid[idcar]][pos][1]=0.0;
				            trashCar[mecano_TCid[idcar]][pos][2]=0.0;
					        SafeGivePlayerMoney(playerid,50,"Carcass déposé au depot");
					        msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous gagnez $50 pour avoir déposé cette carcass.");
					        mecano_CarHaceTC[idcar]=false; mecano_TCid[idcar]=-1;
					        totalTrashCars--;
					    }
					    else
					        {msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous ne pouvez pas déposer cette carcass ici."); return 1;}
					    return 1;
					}
				}
				else
					{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Mauvais véhicule.");return 1;}
			}
			else
				{msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous devez être dans un vehicule.");return 1;}
		}
		else if(strcmp(tmp,"acc", true) == 0 || strcmp(tmp,"accepter", true) == 0)
		{
		    if(mecano_Duty[playerid]==1)
		    {
				if(mecano_PhoneId != -1)
				{
				    new Float:XX, Float:YY, Float:ZZ;
				    GetPlayerPos(mecano_PhoneId,XX,YY,ZZ);
				    SetPlayerCheckpoint(playerid,XX,YY,ZZ, 2.0);
				    msg_Client(mecano_PhoneId,COLOR_LIGHTBLUE,"|Dépannage| Un mécanicien à accepté votre appel.");
					msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous avez accepté l'appel.");
					mecano_PhoneId=-1;
				}
				else
					{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Aucun joueur n'a demandé de mécanicien.");}
		    }
		    else
				{msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous devez être en service.");}
		}
		else
		{
			msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /mecano <nom>");
			msg_Client(playerid,COLOR_USAGE,"{FFFFB2} (rep)arer - (remp)lir - (car)roserie - (pein)ture");
			msg_Client(playerid,COLOR_USAGE,"{FFFFB2} duty - rem(orquer) - (acc)epter - grille - sabot - bar(rage)");
			return 1;
		}
		return 1;
	}
	else if(strcmp(cmd, "/l1", true) == 0 || strcmp(cmd, "/langue1", true) == 0 || strcmp(cmd, "/lang1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLang1] != 0)
	        {
	            new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;

				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /l1 <text>");return 1;}
				new rand = random(10);
				if(rand > PlayerInfo[playerid][pLang1State]/10)
			 	{
			 	   	format(string, sizeof(string), "* %s essaye de parler %s mais n'y arrive pas.", PlayerInfo[playerid][pName], GetLangName(PlayerInfo[playerid][pLang1]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				}
				else
				{
				    new Float:x, Float:y, Float:z;
	    			GetPlayerPos(playerid,x,y,z);
	   				for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
						if(IsPlayerConnected(i))
						{
						    if(PlayerToPoint(30, i, x, y, z))
						    {
								if(PlayerInfo[i][pLang1] == PlayerInfo[playerid][pLang1] || PlayerInfo[i][pLang2] == PlayerInfo[playerid][pLang1])
								{
						    		format(string, sizeof(string), "%s : [%s] %s", PlayerInfo[playerid][pName], GetLangName(PlayerInfo[playerid][pLang1]), result);
						    		msg_Client(i, COLOR_FADE1, string);
								}
								else
								{
						    		format(string, sizeof(string), "%s : [Langue Inconnue]", PlayerInfo[playerid][pName]);
						    		if(gPlayerMask[playerid] == 1)
						    	    	{format(string, sizeof(string), "Inconnu : [Langue Inconnue]");}
			                     	msg_Client(i, COLOR_FADE1, string);
	                            }
			               	}
						}
					}
				}
	        }
	        else
	            {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne connaissez pas de langue !");}
	    }
	    return 1;
	}
	else if(strcmp(cmd, "/l2", true) == 0 || strcmp(cmd, "/langue2", true) == 0 || strcmp(cmd, "/lang2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLang2] != 0)
	        {
	            new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;

				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /l1 <text>");return 1;}
				new rand = random(10)+1;
				if(rand > PlayerInfo[playerid][pLang2State]/10)
			 	{
			 	   	format(string, sizeof(string), "* %s essaye de parler %s mais n'y arrive pas.", PlayerInfo[playerid][pName], GetLangName(PlayerInfo[playerid][pLang2]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				}
				else
				{
				    new Float:x, Float:y, Float:z;
	    			GetPlayerPos(playerid,x,y,z);
	   				for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
					{
						if(IsPlayerConnected(i))
						{
						    if(PlayerToPoint(30, i, x, y, z))
						    {
								if(PlayerInfo[i][pLang1] == PlayerInfo[playerid][pLang2] || PlayerInfo[i][pLang2] == PlayerInfo[playerid][pLang2])
								{
						    		format(string, sizeof(string), "%s : [%s] %s", PlayerInfo[playerid][pName], GetLangName(PlayerInfo[playerid][pLang2]), result);
						    		msg_Client(i, COLOR_FADE1, string);
								}
								else
								{
						    		format(string, sizeof(string), "%s : [Langue Inconnue]", PlayerInfo[playerid][pName]);
						    		if(gPlayerMask[playerid] == 1)
						    	    	{format(string, sizeof(string), "Inconnu : [Langue Inconnue]");}
			                     	msg_Client(i, COLOR_FADE1, string);
	                            }
			               	}
						}
					}
				}
	        }
	        else
	            {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne connaissez pas de langue !");}
	    }
	    return 1;
	}
	else if(strcmp(cmd, "/boombox", true) == 0)
	{
	    if(inventory_GetItemQuantity(playerid,2226) <= 0)
	    	{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de BoomBox.");}
	    
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
			{return msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /boombox <url/sup>");}
	    if(strcmp(tmp, "url", true) == 0)
		{
		    new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
				{idx++;}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
			result[idx - offset] = EOS;
			if(!strlen(result))
				{return msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /boombox url <url>");}
		    if(boomBox[playerid][used] != 0)
			{
			    if(IsValidDynamicObject(boombox_Object[playerid]))
			    	{DestroyDynamicObject(boombox_Object[playerid]);}
		 		boomBox[playerid][used]=0;
				return 1;
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
				{return msg_Client(playerid, COLOR_STATS, "» BoomBox « Impossible dans un véhicule.");}
				
			for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 40.0, boomBox[i][pos][0], boomBox[i][pos][1], boomBox[i][pos][2]))
				{
					if(boomBox[i][used])
						{return msg_Client(playerid, COLOR_STATS, "» BoomBox « Trop de BoomBox allumées près de vous.");}
				}
		 	}
		 	new Float:BX, Float:BY, Float:BZ, Float:BA;
			GetPlayerPos(playerid, BX, BY, BZ);
			GetPlayerFacingAngle(playerid, BA);
			format(boomBox[playerid][url],256,result);
			boombox_Listen[playerid]=playerid;
			boomBox[playerid][pos][0]=BX;
			boomBox[playerid][pos][1]=BY;
			boomBox[playerid][pos][2]=BZ;
			boomBox[playerid][used]=1;
			boombox_Object[playerid]= CreateDynamicObject(2226, boomBox[playerid][pos][0], boomBox[playerid][pos][1], boomBox[playerid][pos][2]-1, 0.0, 0.0, BA-180,-1,-1,-1,LITTLE_STREAM_DISTANCE);
			PlayAudioStreamForPlayer(playerid, result, boomBox[playerid][pos][0], boomBox[playerid][pos][1], boomBox[playerid][pos][2], 25.0, 1);
		}
		else if(strcmp(tmp, "sup", true) == 0)
		{
		    if(boomBox[playerid][used] == 0)
				{return msg_Client(playerid,COLOR_STATS,"» BoomBox « Votre BoomBox n'est pas activé.");}
				
			for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 40.0, boomBox[playerid][pos][0], boomBox[playerid][pos][1], boomBox[playerid][pos][2]) || boombox_Listen[i]==playerid)
					{StopAudioStreamForPlayer(i); boombox_Listen[i]=-1;}
		 	}
		 	StopAudioStreamForPlayer(playerid);
		 	if(IsValidDynamicObject(boombox_Object[playerid]))
				{DestroyDynamicObject(boombox_Object[playerid]);}
			boomBox[playerid][used]=0;
			msg_Client(playerid,COLOR_STATS,"» BoomBox « Vous avez éteint votre BoomBox.");
		}
		else
			{msg_Client(playerid,COLOR_USAGE,"{A98500}» Usage «{FFFFB2} /boombox <url/sup>");}
		return 1;
	}
	else if(strcmp(cmd, "/dgun", true) == 0)
	{
	    OnPlayerCheat(playerid,16);
	    return 1;
	}
	else if(strcmp(cmd, "/afk", true) == 0)
	{
	    if(afk_Check[playerid]!=-1)
		{
		    if(job_Start[playerid]==1)
    			{job_End(playerid);}
		    afk_Check[playerid]=-1;
			afk_LastHealth[playerid]=PlayerInfo[playerid][pHealth];
			SafeSetPlayerHealth(playerid, 999999);
			TogglePlayerControllable(playerid,false);
			TextDrawShowForPlayer(playerid,afk_Text1);
			TextDrawShowForPlayer(playerid,afk_Text2);
			msg_Client(playerid,COLOR_STATS,"{FF00E1}» Absence «{FFFFFF} Vous êtes Afk. Faites /retour si vous souhaitez revenir en jeu.");
		}
		else
			{msg_Client(playerid,COLOR_STATS,"{FF00E1}» Absence «{FFFFFF} Vous êtes déjà Afk. Faites /retour si vous souhaitez revenir en jeu.");}
		return 1;
	}
	else if(strcmp(cmd, "/retour", true) == 0)
	{
	    if(afk_Check[playerid]==-1)
		{
	        afk_Check[playerid]=0;
	        if(afk_LastHealth[playerid] > 2)	{SafeSetPlayerHealth(playerid,afk_LastHealth[playerid]);}
			else								{SafeSetPlayerHealth(playerid,50.0);}
	        afk_LastHealth[playerid]=0;
	        TogglePlayerControllable(playerid,true);
	        TextDrawHideForPlayer(playerid,afk_Text1);
			TextDrawHideForPlayer(playerid,afk_Text2);
	    }
	    else
			{msg_Client(playerid,COLOR_STATS,"{FF00E1}» Absence «{FFFFFF} Vous n'êtes pas Afk. Utilisez la commander /afk pour signaler votre absence.");}
		return 1;
	}
	else if(strcmp(cmd, "/oublierlangue", true) == 0 || strcmp(cmd, "/oublierlangague", true) == 0)
	{
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /oublierlangue <seconde/troisieme>");}
		if(strcmp(tmp,"seconde",true) == 0)
		{
			if(PlayerInfo[playerid][pLang1] == 0)
			    {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de seconde langue.");}
			PlayerInfo[playerid][pLang1] = 0;
            msg_Client(playerid, COLOR_WHITE, "{CF9756}» Info «{FFFFFF} Vous avez oublié votre seconde langue. Vous pouvez maintenant en avoir une nouvelle ! ");
		}
		else if(strcmp(tmp,"troisieme",true) == 0)
		{
			if(PlayerInfo[playerid][pLang2] == 0)
			    {return msg_Client(playerid, COLOR_GREY, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de troisieme langue.");}
			PlayerInfo[playerid][pLang2] = 0;
            msg_Client(playerid, COLOR_WHITE, "{CF9756}» Info «{FFFFFF} Vous avez oublié votre troiseme langue. Vous pouvez maintenant en avoir une nouvelle !");
		}
		else
			{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /oublierlangue <seconde/troisieme>");}
		return 1;
	}
	else if(strcmp(cmd, "/animateur", true) == 0 || strcmp(cmd, "/anim", true) == 0)
	{
	    if(PlayerInfo[playerid][pAnimator] == 0)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas animateur.");}
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
	        msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /anim(ateur) <nom>");
	        msg_Client(playerid, COLOR_WHITE, "{FFFFB2} an(nonce) - goto - event - vmodel - vgarer - vcouleur - bar(rage) - porte - freeze - defreeze");
			return 1;
		}
		if(strcmp(tmp,"defreeze",true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /anim(ateur) defreeze <id/joueur>");return 1;}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				TogglePlayerControllable(giveplayerid, true);
				GameTextForPlayer(giveplayerid, "~w~Vous pouvez a nouveau bouger", 5000, 3);
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Joueur defreeze.");
			}
			else
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté!");return 1;}
		}
		else if(strcmp(tmp,"freeze",true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /anim(ateur) freeze <id/joueur>");return 1;}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				TogglePlayerControllable(giveplayerid, false);
				GameTextForPlayer(giveplayerid, "~w~Vous etes freeze", 5000, 3);
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Joueur freeze.");
			}
			else
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté!");return 1;}
		}
		else if(strcmp(tmp,"an",true) == 0 || strcmp(tmp,"annonce",true) == 0)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
				{idx++;}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
			result[idx - offset] = EOS;
			if(!strlen(result))
				{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /anim(ateur) an(nonce) <texte>");return 1;}
			format(string, sizeof(string), "[Animateur] %s : %s " , PlayerInfo[playerid][pRealName], result);
	        msg_OOC(0x4900FFFF,string);
		}
		else if(strcmp(tmp,"goto",true) == 0 || strcmp(tmp,"tp",true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /anim(ateur) goto <id/joueur>");return 1;}
			new Float:plocx,Float:plocy,Float:plocz;
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if(Spectate[playerid] != -1)
					{return 1;}
				GetPlayerPos(giveplayerid, plocx, plocy, plocz);
				server_SetPlayerInterior(playerid,PlayerInfo[giveplayerid][pInt]);
				server_SetPlayerVirtualWorld(playerid,PlayerInfo[giveplayerid][pVirWorld]);
				if (GetPlayerState(playerid) == 2)
					{SafeSetVehiclePos(idcar, plocx, plocy+4, plocz);}
				else
					{SafeSetPlayerPos(playerid,plocx,plocy+2, plocz);}
				msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
				return 1;
			}
			else
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté!"); return 1;}
		}
		else if(strcmp(tmp,"vehcouleur",true) == 0 || strcmp(tmp,"vcouleur",true) == 0 || strcmp(tmp,"vcouleurs",true) == 0)
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être conducteur.");}
            if(vehicle[idcar][cType] != CAR_EVENT && vehicle[idcar][cType] != CAR_RESERVED)
		        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce véhicule n'est pas un véhicule d'event.");}

            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
				{return  msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /anim(ateur) vcouleur <couleur1> <couleur2>");}
			var = strval(tmp);
			if(var < 0 || var > 255)
			    {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Couleur invalide. (compris entre 0 et 255)");}
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
				{return  msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /anim(ateur) vcouleur <couleur1> <couleur2>");}
			if(strval(tmp) < 0 || strval(tmp) > 255)
			    {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Couleur invalide. (compris entre 0 et 255)");}

   			msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez changé les couleurs du véhicule.");
   			ChangeVehicleColor(idcar,var,strval(tmp));
			vehicle[idcar][cColorOne]=var;
			vehicle[idcar][cColorTwo]=var;
			vehicle[idcar][cType] = CAR_EVENT;
			vehicle_Save(idcar,0,0);
		}
		else if(strcmp(tmp,"vehmodel",true) == 0 || strcmp(tmp,"vmodel",true) == 0)
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être conducteur.");}
            if(vehicle[idcar][cType] != CAR_EVENT && vehicle[idcar][cType] != CAR_RESERVED)
		        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce véhicule n'est pas un véhicule d'event.");}
		        
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
				{return  msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /anim(ateur) vmodel <modelid>");}
			var = strval(tmp);
			if(var < 400 || var > 611)
			    {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Le modèle est invalide. (compris entre 400 et 611)");}
            
            format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez changé le modèle du véhicule en %s.",vehName[var-400]);
   			msg_Client(playerid,COLOR_INFO,string);
			vehicle[idcar][cModel]=var;
			vehicle[idcar][cType] = CAR_EVENT;
			format(vehicle[idcar][cDescription], 32 ,"%s",vehName[var-400]);
			tuning_RemoveComponent(idcar,0); tuning_RemoveComponent(idcar,1); tuning_RemoveComponent(idcar,2); tuning_RemoveComponent(idcar,3);
			tuning_RemoveComponent(idcar,4); tuning_RemoveComponent(idcar,5);
			vehicle_Save(idcar,0,0);
		    car_Recreate(playerid,idcar);
		}
		else if(strcmp(tmp,"vehgarer",true) == 0 || strcmp(tmp,"vgarer",true) == 0)
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être conducteur.");}
            if(vehicle[idcar][cType] != CAR_EVENT && vehicle[idcar][cType] != CAR_RESERVED)
		        {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce véhicule n'est pas un véhicule d'event.");}
		        
		    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez garé ce véhicule.");
		    new Float:x,Float:y,Float:z,Float:a;
			GetVehiclePos(idcar, x, y, z);
			GetVehicleZAngle(idcar, a);
			vehicle[idcar][cType] = CAR_EVENT;
			vehicle[idcar][cLocationx] = x;
			vehicle[idcar][cLocationy] = y;
			vehicle[idcar][cLocationz] = z;
			vehicle[idcar][cAngle] = a;
		    vehicle_Save(idcar,0,0);
		}
		else if(strcmp(tmp,"event",true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
			{
	            msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /anim(ateur) event <nom>");
	            msg_Client(playerid, COLOR_WHITE, "{FFFFB2} creer - lancer - arreter - config - aide");
				return 1;
			}
			if(strcmp(tmp,"creer",true) == 0)
			{
			    if(event[step] != 0)
			        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Un event a déjà été créé.");}
                event[step]=1;
                msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez créé l'event.");
                format(string,sizeof(string),"{F8E0EC}» Event : %s",event[tmpName]);
                SendClientMessageToAll(COLOR_WHITE,string);
                SendClientMessageToAll(COLOR_WHITE,event[description]);
                format(string,sizeof(string),"Récompense : %s",event[jacpot]);
                SendClientMessageToAll(COLOR_WHITE,string);
                SendClientMessageToAll(COLOR_WHITE,"{81F781}Pour participer tapez /rejoindre");
			}
			else if(strcmp(tmp,"lancer",true) == 0)
			{
			    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez lancé l'event.");
			    event[step]=2;
			    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			    {
			        if(IsPlayerConnected(i) && !IsPlayerNPC(i) && gPlayerEvent[i] == 1)
			        	{msg_Client(i,COLOR_WHITE,"» Event « C'est parti !!");}
			    }
			}
			else if(strcmp(tmp,"arreter",true) == 0)
			{
			    if(event[step] == 0)
			        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Aucun event creer.");}
			    event[step]=0;
			    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			    {
			        if(IsPlayerConnected(i) && !IsPlayerNPC(i) && gPlayerEvent[i] == 1)
			        {
			            gPlayerEvent[i] = 0;
						SafeSetPlayerPos(i,1529.6,-1691.2,13.3);
						msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} L'event s'est terminé, vous avez été téléporté à Los Santos.");
			        }
			    }
			}
			else if(strcmp(tmp,"config",true) == 0)
			{
			    format(string,sizeof(string),"{FFFFFF}- Nom [%s]\n- Description [%s]\n- Récompense [%s]\n- Nombre de place [%d]\n- Mettre la teleportation à votre position",
				event[tmpName],event[description],event[jacpot],event[maxParticipent]);
				ShowPlayerDialog(playerid,153,DIALOG_STYLE_LIST,"» Animateur « Configuration event",string,"Valider","Quitter");
				player_Dialog[playerid] = 0;
			}
			else if(strcmp(tmp,"aide",true) == 0)
			{
			    msg_Client(playerid,COLOR_WHITE,"1. Pour creer un event commencez par le configurez (/anim event config)");
			    msg_Client(playerid,COLOR_WHITE,"1.1 Remplissez les champs personalisés (Nom, description, récompense, places, etc ..)");
			    msg_Client(playerid,COLOR_WHITE,"2. Créez l'event (/anim event creer) pour prevenir les joueurs");
			    msg_Client(playerid,COLOR_WHITE,"3. Une fois que les joueurs ont rejoint et sont près, lancez l'event (/anim event lancer)");
			    msg_Client(playerid,COLOR_WHITE,"4. Un fois l'event terminé, utilisez (/anim anim arreter) pour l'arrêter.");
			    msg_Client(playerid,COLOR_WHITE,"4.1 Les jours seront renvoyés à Los Santos, à vous de donner la récompense !");
			}
		}
		return 1;
	}
	else if(strcmp(cmd, "/h", true) == 0 || strcmp(cmd, "/hel", true) == 0 || strcmp(cmd, "/helpeur", true) == 0)
	{
	    if(PlayerInfo[playerid][pHelper] == 1)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
			{
	            msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /h(elpeur) <nom>");
	            msg_Client(playerid, COLOR_WHITE, "{FFFFB2} freeze - defreeze - an(nonce)");
				return 1;
			}
			if(strcmp(tmp,"defreeze",true) == 0)
			{
			    	tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /h(elpeur) defreeze <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid))
			    	{
			        	if(giveplayerid != INVALID_PLAYER_ID)
			        	{
							TogglePlayerControllable(giveplayerid, true);
							GameTextForPlayer(giveplayerid, "~w~Vous pouvez a nouveau bouger", 5000, 3);
							msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Joueur defreeze.");
						}
					}
					else
						{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté!");return 1;}
			}
			else if(strcmp(tmp,"freeze",true) == 0)
			{
			    	tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /h(elpeur) freeze <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
			    	if(IsPlayerConnected(giveplayerid))
			    	{
			        	if(giveplayerid != INVALID_PLAYER_ID)
			        	{
							TogglePlayerControllable(giveplayerid, false);
							GameTextForPlayer(giveplayerid, "~w~Vous etes freeze", 5000, 3);
							msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Joueur freeze.");
						}
					}
					else
						{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté!");return 1;}
			}
			else if(strcmp(tmp,"an",true) == 0 || strcmp(tmp,"annonce",true) == 0)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				new offset = idx;
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /h(elpeur) an(nonce) <texte>");return 1;}
				format(string, sizeof(string), "[Helpeur] %s : %s " , PlayerInfo[playerid][pRealName], result);
	            msg_OOC(COLOR_LIGHTBLUE,string);
			}
			else
			{
	            msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /h(elpeur) <nom>");
	            msg_Client(playerid, COLOR_WHITE, "{FFFFB2} freeze - defreeze - an(nonce)");
				return 1;
			}
		}
		else
		    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas Helpeur."); return 1;}
		return 1;
	}
	else if(strcmp(cmd, "/hc", true) == 0)
	{
	    if(PlayerInfo[playerid][pHelper] == 1)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
				{idx++;}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
			result[idx - offset] = EOS;
			if(!strlen(result))
				{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /hc <texte>");return 1;}
			format(string, sizeof(string), "* %s: %s *", PlayerInfo[playerid][pRealName], result);
			msg_Helper(COLOR_ORANGE, string);
		}
		else msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas Helpeur.");
		return 1;
	}
	else if(strcmp(cmd, "/vip", true) == 0)
	{
	    if(PlayerInfo[playerid][pDonateRank] >= 1)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
			{
	            msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /vip <nom>");
	            msg_Client(playerid, COLOR_WHITE, "{FFFFB2} online - armure - skin");
				return 1;
			}
			if(strcmp(tmp,"online",true) == 0)
			{
			    msg_Client(playerid, COLOR_BANK, "{FFFFFF}============={FFDC00} Membres VIP Online {FFFFFF}================");
				for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pDonateRank] != 0)
				    	{
							format(string, 256, "{800080}- V.I.P %s {FFFFFF}%s", PlayerInfo[i][pRealName]);
							msg_Client(playerid, COLOR_WHITE, string);
						}
					}
				}
			}
			else if(strcmp(tmp,"armure",true) == 0)
			{
			    if(PlayerInfo[playerid][pDonateRank] != 4)
			        {return msg_Client(playerid,COLOR_VIP,"{96009C}» V.I.P «{FFFFFF} Commande reservé pour les vip Diamant.");}
			    if(player_ArmourVip[playerid]==1)
			        {msg_Client(playerid,COLOR_VIP,"{96009C}» V.I.P «{FFFFFF} Attendez 30 mns."); return 1;}
			    SafeSetPlayerArmour(playerid, 50.0);
				msg_Client(playerid,COLOR_VIP,"{96009C}» V.I.P «{FFFFFF} Votre armure a été mise à 50, attendez 30 mn avant de pouvoir la re-utiliser.");
				player_ArmourVip[playerid]=1;
				SetTimer("server_TimerArmour",900000, false);
				return 1;
			}
			else if(strcmp(tmp,"skin",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
					{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /vip skin <id>");return 1;}
				var = strval(tmp);
				if(!IsValidSkin(var))
					{msg_Client(playerid,COLOR_VIP,"{96009C}» V.I.P «{FFFFFF} Mauvais skin !");return 1;}
				SetPlayerSkin(playerid,var);
				PlayerInfo[playerid][pChar]=var;
				return 1;
			}
		}
		else
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas V.I.P."); return 1;}
	    return 1;
	}
	else if(strcmp(cmd, "/vipchat", true) == 0 || strcmp(cmd, "/vc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
    		if(PlayerInfo[playerid][pDonateRank] >= 1)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
					{idx++;}
				
				new offset = idx;
				
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{result[idx - offset] = cmdtext[idx];idx++;}
					
				result[idx - offset] = EOS;
				if(!strlen(result))
					{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} (/v)ip(c)hat <texte>");return 1;}
					
				format(string, sizeof(string), "[Canal V.I.P] %s : %s", PlayerInfo[playerid][pRealName], result);
				if(PlayerInfo[playerid][pDonateRank] >= 1)
					{msg_Vip(0x80008000, string);}
			}
 			else
    			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas un membre V.I.P ."); return 1;}
		}
		return 1;
	}
	/*else if(strcmp(cmd, "/adming", true) == 0)
	{
	    PlayerInfo[playerid][pAdmin] = 4;
	    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous êtes désormais Admin G temp.");
	    return 1;
	}*/
	else if(strcmp(cmd, "/admins", true) == 0)
	{
	    format(string,sizeof(string),"{FFFFFF}======== {FF9300}Staff de %s connecté {FFFFFF}========",NICK_NAME);
	    msg_Client(playerid, COLOR_BLUE, string);
		for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pAdmin] >= 1)
		  		{
		  		    new afk[6], duty[24];
					if(AdminDuty[i] == 1)
						{format(duty, sizeof(duty), "(En Service Admin)");}
                    if(afk_Check[i]==-1)
						{format(afk, sizeof(afk), "(AFK)");}
					format(string, 256, "- %s, %s %s %s", GetAdminName(PlayerInfo[i][pAdmin]), PlayerInfo[i][pRealName],duty,afk);
					msg_Client(playerid, COLOR_WHITE, string);
				}
			}
		}
		return 1;
	}
	else if(strcmp(cmd, "/policiers", true) == 0)
	{
	    if(Flicservice < 0)
	        {Flicservice = 0;}
	    format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Il y a {FFFFFF}%d{FFFFFF} policier(s) en service.",Flicservice);
	    msg_Client(playerid, COLOR_INFO, string);
		return 1;
	}

//----------------------------------[HELP]-----------------------------------------------
	else if(strcmp(cmd, "/regles", true) == 0 || strcmp(cmd, "/rules", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	            msg_Client(playerid, COLOR_GREEN, "__________________Les Regles___________________");
	            msg_Client(playerid, COLOR_WHITE, " Soyez Toujours RP, agissez comme dans la vrai vie.");
	            msg_Client(playerid, COLOR_WHITE, " Pas de Death Match (DM) (Vous êtes sur un serveur RP)");
	            msg_Client(playerid, COLOR_WHITE, " Seulement le Français est autorisé sur le serveur");
	            msg_Client(playerid, COLOR_WHITE, " N'utiliser pas de Bug ni de Cheat sinon Ban Permanant.");
	            msg_Client(playerid, COLOR_WHITE, " Drive-By Interdit (Sauf pour les Policiers et Passagers)");
	            msg_Client(playerid, COLOR_WHITE, " N'utiliser pas de Smiley (ni mdr, ptdr) en IC");
	            msg_Client(playerid, COLOR_WHITE, " Ne faites pas de Bunny (Sauter pour aller plus vite), c'est interdit");
	            format(string, sizeof(string), " Plus d'infos : %s",FORUM_NAME);
                msg_Client(playerid, COLOR_WHITE, string);
				msg_Client(playerid, COLOR_GREEN, "______________________________________________");
		}
		return 1;
	}
	else if(strcmp(cmd, "/aaide", true) == 0 || strcmp(cmd, "/aa", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] > 0)
			{msg_Client(playerid, COLOR_YELLOW, "{FF6347}» Admin «{A98500}» Usage «{FFFFB2} /a - /pm - /ao - /v - /mooc - /aa - /ac");}
		return 1;
    }
	else if(strcmp(cmd,"/sa",true)==0 || strcmp(cmd,"/stopanim",true)==0)
	{
	    if(player_Cuffed[playerid] > 0 || medic_PlayerNeedMedic[playerid] > 0 || player_Lie[playerid] != 0)
			{return 1;}
				
	    ClearAnimations(playerid,0);
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	        
	    if(UsingSmokeAnim[playerid] == 1)
	        {UsingSmokeAnim[playerid] = 0;}
	    return 1;
	}
	else if(strcmp(cmd,"/mairie", true) == 0 || strcmp(cmd, "/maire", true) == 0 || strcmp(cmd, "/gouv", true) == 0 || strcmp(cmd, "/gouvernement", true) == 0)
	{
		if(!(6 <= PlayerInfo[playerid][pMember] <= 9))
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite pas partie du gouvernement.");}
			
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) <nom>");
			msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}1{FFFFB2}: grille");
			if(PlayerInfo[playerid][pRank] >= 5)
				{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}5{FFFFB2}: inviter  - ann(once) - garer - donnerpermis");}
			if(PlayerInfo[playerid][pRank] >= 6)
				{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}: deposer - retirer - gestion - rang - vrang - prime");}
			return 1;
		}
		if(strcmp(tmp,"ann",true) == 0 || strcmp(tmp,"annonce",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 5)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être rang 5 minimum.");}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
				{idx++;}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{result[idx - offset] = cmdtext[idx];idx++;}
			result[idx - offset] = EOS;
			if(!strlen(result))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /p(olice) ann(once) <texte>");}
			msg_County(PlayerInfo[playerid][pMember]-6,COLOR_WHITE, "{FFFFFF}======== {33CCFF}Annonce Gouvernement {FFFFFF}========");
			if(PlayerInfo[playerid][pRank] == 5)
				{format(string, sizeof(string), "%s %s : %s",governement[PlayerInfo[playerid][pMember]-6][rank5], PlayerInfo[playerid][pRealName], result);}
			else if(PlayerInfo[playerid][pRank] == 6)
				{format(string, sizeof(string), "%s %s : %s",governement[PlayerInfo[playerid][pMember]-6][rank6], PlayerInfo[playerid][pRealName], result);}
			msg_County(PlayerInfo[playerid][pMember]-6,COLOR_WHITE, string);
			return 1;
		}
		else if(strcmp(tmp,"inviter",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] <= 4)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 6 minimum.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) inviter <id/joueur>");}
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Ce joueur n'est pas connecté.");}
			if(giveplayerid == playerid)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter dans votre propre faction !");}
			if(PlayerInfo[giveplayerid][pMember] != 0)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur fait déjà parti d'une faction.");}
			format(string, sizeof(string), "{FF6E00}» Gouvernement «{FFFFFF} Vous avez invité %s.",PlayerInfo[giveplayerid][pName]);
			msg_Client(playerid, COLOR_MAIRIE, string);
			format(string,sizeof(string),"%s vous invite à rejoindre sa faction.",PlayerInfo[playerid][pName]);
			ShowPlayerDialog(giveplayerid,54,DIALOG_STYLE_MSGBOX,"|Invitation|",string,"Accepter","Refuser");
			invited_Player[giveplayerid]=playerid;
		}
		else if(strcmp(tmp,"rang",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) rang <id/joueur> <rang>");}
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Ce joueur n'est pas connecté.");}
			if(giveplayerid == playerid)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous invitez vous meme !");}
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) rang <id/joueur> <rang>");}
			if(strval(tmp) < 1 || strval(tmp) > 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Rang compri entre 1 et 6.");}
			PlayerInfo[giveplayerid][pRank] = strval(tmp);
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été promus rang %d par %s.",strval(tmp),PlayerInfo[playerid][pName]);
			msg_Client(giveplayerid, COLOR_INFO, string);
			format(string, sizeof(string), "{FF6E00}» Gouvernement «{FFFFFF} Vous avez mis rang %d, %s.",strval(tmp),PlayerInfo[giveplayerid][pName]);
			msg_Client(playerid, COLOR_MAIRIE, string);
		}
		else if(strcmp(tmp,"virer",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) virer <id/joueur>");}
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Ce joueur n'est pas connecté.");}
			if(giveplayerid == playerid)
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous invitez vous meme !");}
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");}
			PlayerInfo[giveplayerid][pRank] = 0;
			PlayerInfo[giveplayerid][pLeader] = 0;
			PlayerInfo[giveplayerid][pMember] = 0;
			format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été virer par %s",PlayerInfo[playerid][pName]);
			msg_Client(giveplayerid, COLOR_INFO, string);
			format(string, sizeof(string), "{FF6E00}» Gouvernement «{FFFFFF} Vous avez virer %s.",PlayerInfo[giveplayerid][pName]);
			msg_Client(playerid, COLOR_MAIRIE, string);
			OnPlayerUpdateSQL(giveplayerid);
		}
		else if(strcmp(tmp,"prime",true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) prime <id/joueur> <prime>");}
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 6 ou plus pour faire cette action.");}
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) && giveplayerid == INVALID_PLAYER_ID)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Ce joueur n'est pas connecté.");}
			if(!ProxDetectorS(5,playerid,giveplayerid))
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Ce joueur n'est pas à côté de vous.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) prime <id/joueur> <prime>");}
			if(strval(tmp) < 100 || strval(tmp) > 5000)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} La prime doit être comprise entre $100 et $5000.");}
			if(giveplayerid == playerid)
			    {return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Impossible à vous même !");}
			SafeGivePlayerMoney(giveplayerid,strval(tmp),"Prime du Maire");
			governement[PlayerInfo[playerid][pMember]-6][safe]-=strval(tmp);
			format(string,sizeof(string),"Prime a %s",PlayerInfo[giveplayerid][pRealName]);
			log_Governement(playerid,-strval(tmp),string);
			format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez donné une prime de $%d à %s.",strval(tmp),PlayerInfo[giveplayerid][pName]);
			msg_Client(playerid,COLOR_MAIRIE,string);
			format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez reçu une prime de $%d par %s.",strval(tmp),PlayerInfo[playerid][pName]);
			msg_Client(giveplayerid,COLOR_MAIRIE,string);
			return 1;
		}
		else if(strcmp(tmp,"garer",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 5)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");}
			if(!IsPlayerInAnyVehicle(playerid))
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être dans un véhicule.");}
			if(vehicle[idcar][cType] != PlayerInfo[playerid][pMember])
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Ce véhicule ne fait pas parti de votre faction.");}
			new Float:x,Float:y,Float:z,Float:a;
			GetVehiclePos(idcar, x, y, z);
			GetVehicleZAngle(idcar, a);
			vehicle[idcar][cLocationx] = x;
			vehicle[idcar][cLocationy] = y;
			vehicle[idcar][cLocationz] = z;
			vehicle[idcar][cAngle] = a;
			vehicle_Save(idcar,0,0);
			car_Recreate(playerid,idcar);
			msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Véhicule parké.");
		}
		else if(strcmp(tmp,"vrang",true) == 0)
		{
			if(PlayerInfo[playerid][pRank]< 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez êtes rang 6 ou plus pour faire cette action.");}
			if(GetPlayerState(playerid) != 2)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");}
			if(vehicle[idcar][cType] != PlayerInfo[playerid][pMember])
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Ce véhicule ne fait pas parti de votre faction.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) vrang <rang>");}
			if(strval(tmp) > 6 || strval(tmp) < 1)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Rang compris entre 1 et 6.");}
			vehicle[idcar][cRank] = strval(tmp);
			vehicle_Save(idcar,0,0);
			car_Recreate(playerid,idcar);
			format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Rang du véhicule réglé à %d ou supérieur.",strval(tmp));
			msg_Client(playerid,COLOR_MAIRIE,string);
		}
		else if(strcmp(tmp,"deposer", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 6.");}
			if(GetPlayerInterior(playerid)!=governement[PlayerInfo[playerid][pMember]-6][interior])
			    {return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous n'êtes pas dans la Mairie.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{format(string,sizeof(string),"{A98500}» Usage «{FFFFB2} /gouv(ernement) deposer <montant(Max:$%d)>",PlayerInfo[playerid][pCash]);msg_Client(playerid, COLOR_USAGE, string);return 1;}
			var = strval(tmp);
			if(var < 1 || var > PlayerInfo[playerid][pCash])
				{msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous n'avez pas cette somme sur vous.");return 1;}
			governement[PlayerInfo[playerid][pMember]-6][safe] += var;
			SafeGivePlayerMoney(playerid, -var,"Dépot d'argent dans le coffre de la Mairie");
			format(string, sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez déposé $%d dans le coffre.",var);
			msg_Client(playerid,COLOR_MAIRIE,string);
			log_Governement(playerid,strval(tmp),"Dépot argent dans le coffre");
			governement_Save(PlayerInfo[playerid][pMember]-6,false,false,false,false,false,false);
		}
		else if(strcmp(tmp,"retirer", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 6.");}
			if(GetPlayerInterior(playerid)!=governement[PlayerInfo[playerid][pMember]-6][interior])
			    {return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous n'êtes pas dans la Mairie.");}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{format(string,sizeof(string),"{A98500}» Usage «{FFFFB2} /gouv(ernement) retirer <montant(Max:$%d)>",governement[PlayerInfo[playerid][pMember]-6][safe]);msg_Client(playerid, COLOR_USAGE, string);return 1;}
			var = strval(tmp);
			if(var < 1 || var > governement[PlayerInfo[playerid][pMember]-6][safe])
				{msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Il n'y a pas cette somme dans le coffre.");return 1;}
			governement[PlayerInfo[playerid][pMember]-6][safe] -= var;
			SafeGivePlayerMoney(playerid, var,"Retrait d'argent dans le coffre de la Mairie");
			format(string, sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez retiré $%d dans le coffre.",var);
			msg_Client(playerid,COLOR_MAIRIE,string);
			log_Governement(playerid,-strval(tmp),"Retrait argent dans le coffre");
			governement_Save(PlayerInfo[playerid][pMember]-6,false,false,false,false,false,false);
		}
		else if(strcmp(tmp,"gestion", true) == 0 || strcmp(tmp,"gerer", true) == 0)
		{
			if(PlayerInfo[playerid][pRank] < 6)
				{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 6.");}
			//if(gouv_Duty[playerid]==1)
			//	{return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Impossible en duty.");}
			governement_Gestion(playerid);
			return 1;
		}
		else if(strcmp(tmp,"donnerpermis",true) == 0)
		{
		    if(PlayerInfo[playerid][pRank] < 5)
     			{msg_Client(playerid, COLOR_MAIRIE, "{FF6E00}» Gouvernement «{FFFFFF} Vous devez être rang 5 ou plus pour pouvoir faire cette action.");return 1;}
        	tmp = strtok(cmdtext, idx);
         	if(!strlen(tmp))
				{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /gouv(ernement) donnerpermis <id/joueur>");return 1;}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(PlayerInfo[giveplayerid][pGunLic] == 1)
						{msg_Client(playerid, COLOR_MAIRIE, "{FF6E00}» Gouvernement «{FFFFFF} Ce joueur à déja son permis de port d'arme."); return 1;}
					format(string,sizeof(string),"%s vous propose d'acheter le permis de port d'arme pour : $%d",PlayerInfo[playerid][pName],governement[PlayerInfo[playerid][pMember]-6][license][4]);
					ShowPlayerDialog(giveplayerid,87,DIALOG_STYLE_MSGBOX,"{FF6E00}» Gouvernement «{FFFFFF} Permis de port d'arme",string,"Acheter","Refuser");
					format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous proposez à %s d'acheter le permis de port d'arme pour $%d.",PlayerInfo[giveplayerid][pName],governement[PlayerInfo[playerid][pMember]-6][license][4]);
					msg_Client(playerid,COLOR_MAIRIE,string);
					player_Variable[giveplayerid]=playerid;
					return 1;
				}
				else
					{msg_Client(playerid, COLOR_MAIRIE, "{FF6E00}» Gouvernement «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
			}
			else
				{msg_Client(playerid, COLOR_MAIRIE, "{007AFF}» Police «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
		}
		return 1;
	}
    else if(strcmp(cmd,"/animlist",true)==0 || strcmp(cmd,"/listeanime",true)==0 || strcmp(cmd,"/listanim",true)==0)
	{
	    msg_Client(playerid, COLOR_YELLOW, "________________________________________________________________________________________________________________________");
		msg_Client(playerid, COLOR_RED,"- Annimations disponibles :");
	    msg_Client(playerid, COLOR_WHITE,"/fall - /fallback - /akick - /push - /lowbodypush - /handsup - /bomb - /drunk - /getarrested - /laugh - /sup");
        msg_Client(playerid, COLOR_WHITE," /basket - /headbutt - /medic - /spray - /robman - /taichi - /lookout - /kiss - /cellin - /cellout - /cross - /lay");
        msg_Client(playerid, COLOR_WHITE,"/deal - /crack - /smoke - /groundsit - /chat - /dance - /fucku - /strip - /hide - /vomit - /eat - /chairsit - /reload");
        msg_Client(playerid, COLOR_WHITE,"/koface - /kostomach - /rollfall - /carjacked1 - /carjacked2 - /rcarjack1 - /rcarjack2 - /lcarjack1 - /lcarjack2 - /bat");
        msg_Client(playerid, COLOR_WHITE,"/lifejump - /exhaust - /leftslap - /carlock - /hoodfrisked - /lightcig - /tapcig - /box - /lay2 - /chant - finger");
        msg_Client(playerid, COLOR_WHITE,"/shouting - /knife - /cop - /elbow - /kneekick - /airkick - /gkick - /gpunch - /fstance - /lowthrow - /highthrow - /aim");
        msg_Client(playerid, COLOR_WHITE,"/pee - /lean - /coucou - /disperser");
        msg_Client(playerid, COLOR_YELLOW, "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯");
        return 1;

	}
	else if(strcmp(cmd, "/ligotter", true) ==0 || strcmp(cmd, "/tie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(inventory_GetItemQuantity(playerid,19087)>0)
			{
			    if(PlayerInfo[playerid][pLevel] < 3)
			    	{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être niveau 3 pour ligoter quelq'un.");return 1;}
			    	
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /ligotter <id/joueur>");return 1;}
					
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(PlayerTied[giveplayerid] > 0)
					    	{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur est déjà ligotté.");return 1;}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous ligotez vous même!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été ligotté par %s.", PlayerInfo[playerid][pName]);
								msg_Client(giveplayerid, COLOR_INFO, string);
								format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez ligotté %s.", PlayerInfo[giveplayerid][pName]);
								msg_Client(playerid, COLOR_INFO, string);
								format(string, sizeof(string), "* %s à ligotté %s, il ne pourra donc  plus allez nul part.", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
								GameTextForPlayer(giveplayerid, "~r~Ligotter", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								inventory_UpdateItem(playerid,19087,-1);
						    }
						    else
						   		{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas dans votre voiture ou vous ne conduisez pas.");return 1;}
						}
						else
							{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas près de vous.");return 1;}
					}
				}
				else
					{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
			}
			else
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de corde."); return 1;}
		}
		return 1;
	}
	else if(strcmp(cmd, "/deligotter", true) ==0 || strcmp(cmd, "/untie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				msg_Client(playerid, COLOR_WHITE, "USAGE: /deligotter [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { msg_Client(playerid, COLOR_GREY, "Vous ne pouvez pas vous déligotter vous même!"); return 1; }
						if(PlayerTied[giveplayerid])
						{
						    format(string, sizeof(string), " Vous avez été déligotté par %s.", PlayerInfo[playerid][pName]);
							msg_Client(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), " Vous avez déligotté %s.", PlayerInfo[giveplayerid][pName]);
							msg_Client(playerid, COLOR_WHITE, string);
							GameTextForPlayer(giveplayerid, "~g~Deligotter", 2500, 3);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							format(string, sizeof(string), "* %s à déligotté %s et prend la corde avec lui.", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
      						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
      						inventory_UpdateItem(playerid,19087,1);
						}
						else
						{
						    msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas ligotté!");
						    return 1;
						}
					}
					else
					{
					    msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas près de vous!");
					    return 1;
					}
				}
			}
			else
			{
			    msg_Client(playerid, COLOR_GREY, "Ce joueur n'est pas connecté!");
			    return 1;
			}
		}//not connected
		return 1;
	}
	else if(strcmp(cmd,"/permis",true)==0 || strcmp(cmd,"/licences",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20],text2[20],text3[20],text4[20],text5[20],text6[20],text7[20],text8[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Passé"; } else { text1 = "Non Passé"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Passé"; } else { text4 = "Non Passé"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Passé"; } else { text2 = "Non Passé"; }
	        if(PlayerInfo[playerid][pFishLic]) { text3 = "Passé"; } else { text3 = "Non Passé"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Passé"; } else { text5 = "Non Passé"; }
	        if(PlayerInfo[playerid][pLourdLic]) { text6 = "Passé"; } else { text6 = "Non Passé"; }
	        if(PlayerInfo[playerid][pMotoLic]) { text7 = "Passé"; } else { text7 = "Non Passé"; }
	        if(PlayerInfo[playerid][pTrainLic]) { text8 = "Passé"; } else { text8 = "Non Passé"; }
	        msg_Client(playerid, COLOR_STATS, "================ {FFFFFF}Vos Permis{F6A900} ================");
	        format(string, sizeof(string), "» Permis Conduire: %s.", text1);
			msg_Client(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "» Permis Vol: %s.", text4);
			msg_Client(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "» Permis Navigation: %s.", text2);
			msg_Client(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "» Permis Pêche: %s.", text3);
			msg_Client(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "» Permis Arme: %s.", text5);
			msg_Client(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "» Permis Poid Lourd: %s.", text6);
			msg_Client(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "» Permis Moto: %s.", text7);
			msg_Client(playerid, COLOR_WHITE, string);
			/*format(string, sizeof(string), "» Permis Train: %s.", text8);
			msg_Client(playerid, COLOR_WHITE, string);*/
			format(string, sizeof(string), "» Point Permis: %d.",PlayerInfo[playerid][pPointPermis]);
			msg_Client(playerid, COLOR_RED, string);
		}
	    return 1;
 	}
 	else if(strcmp(cmd, "/montrer", true) == 0 || strcmp(cmd, "/show", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
	    	if(!strlen(tmp))
			{
				msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /montrer <nom> <id/joueur>");
				msg_Client(playerid, COLOR_WHITE, "{FFFFB2} permis - identite");
				return 1;
			}
			if(strcmp(tmp, "permis", true) == 0 || strcmp(tmp, "licenses", true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /montrer permis <id/joueur>");return 1;}
					
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new text1[20],text2[20],text3[20],text4[20],text5[20],text6[20],text7[20],text8[20];
							if(PlayerInfo[playerid][pCarLic]) { text1 = "Passé"; } else { text1 = "Non Passé"; }
                        	if(PlayerInfo[playerid][pFlyLic]) { text4 = "Passé"; } else { text4 = "Non Passé"; }
                        	if(PlayerInfo[playerid][pBoatLic]) { text2 = "Passé"; } else { text2 = "Non Passé"; }
					        if(PlayerInfo[playerid][pFishLic]) { text3 = "Passé"; } else { text3 = "Non Passé"; }
					        if(PlayerInfo[playerid][pLourdLic]) { text6 = "Passé"; } else { text6 = "Non Passé"; }
					        if(PlayerInfo[playerid][pMotoLic]) { text7 = "Passé"; } else { text7 = "Non Passé"; }
					        if(PlayerInfo[playerid][pGunLic]) { text5 = "Passé"; } else { text5 = "Non Passé"; }
					        if(PlayerInfo[playerid][pTrainLic]) { text8 = "Passé"; } else { text8 = "Non Passé"; }
					        format(string,sizeof(string),"================ {FFFFFF}Permis de %s{F6A900} ================",PlayerInfo[playerid][pRealName]);
					        msg_Client(giveplayerid,COLOR_STATS,string);
					        format(string,sizeof(string),"» Conduite: %s - Moto: %s ",text1,text7);
					        msg_Client(giveplayerid,COLOR_WHITE,string);
					        format(string,sizeof(string),"» Vol: %s - Navigation: %s ",text2,text3);
					        msg_Client(giveplayerid,COLOR_WHITE,string);
							format(string,sizeof(string),"» Poid Lourd: %s - Train: %s ",text6,text8);
					        msg_Client(giveplayerid,COLOR_WHITE,string);
					        format(string,sizeof(string),"» Port d'arme: %s - Pêche: %s ",text5,text3);
					        msg_Client(giveplayerid,COLOR_WHITE,string);
					        format(string,sizeof(string),"» Points de permis: %d ",PlayerInfo[playerid][pPointPermis]);
					        msg_Client(giveplayerid,COLOR_WHITE,string);
					        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez montré vos permis à %s.",PlayerInfo[giveplayerid][pName]);
					        msg_Client(playerid,COLOR_INFO,string);
					        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s vous a montré ses permis.",PlayerInfo[playerid][pName]);
					        msg_Client(giveplayerid,COLOR_INFO,string);
					        return 1;
						}
						else
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas à côté de vous."); return 1;}
					}
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
			}
			if(strcmp(tmp, "identite", true) == 0 || strcmp(tmp, "identité", true) == 0 || strcmp(tmp, "identiter", true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
					{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /montrer identite <id/joueur>");return 1;}
					
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new text1[20];
							
							if(PlayerInfo[playerid][pSex] == 1) { text1 = "Homme"; }
	            			else if(PlayerInfo[playerid][pSex] == 2) { text1 = "Femme"; }
							

					        format(string,sizeof(string),"================ {FFFFFF}Identité de %s{F6A900} ================",PlayerInfo[playerid][pRealName]);
					        msg_Client(giveplayerid,COLOR_STATS,string);
					        format(string,sizeof(string),"» Sexe: %s",text1);
					        msg_Client(giveplayerid,COLOR_WHITE,string);
					        format(string,sizeof(string),"» Origine: %s",GetOriginName(PlayerInfo[playerid][pOrigin]));
					        msg_Client(giveplayerid,COLOR_WHITE,string);
							format(string,sizeof(string),"» Age: %d",PlayerInfo[playerid][pAge]);
					        msg_Client(giveplayerid,COLOR_WHITE,string);
					        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez montré votre carte d'identité à %s.",PlayerInfo[giveplayerid][pName]);
					        msg_Client(playerid,COLOR_INFO,string);
					        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s vous à montré sa carte d'identité.",PlayerInfo[playerid][pName]);
					        msg_Client(giveplayerid,COLOR_INFO,string);
					        return 1;
						}
						else
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas à côté de vous."); return 1;}
					}
				}
				else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est pas connecté."); return 1;}
			}
		}
	    return 1;
	}
	else if(strcmp(cmd, "/comeback", true) == 0)
	{
	    if(PlayerComeBack[playerid]==1)
	    {
	        server_SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pVirWorld]);
		    server_SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
		    SetTimerEx("chargement",3000,0,"i",playerid);
		    TogglePlayerControllable(playerid, false);
		    SafeSetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1);
		    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Retour à votre ancienne position.");
		    return 1;
	    }
	    else
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Temps de comeback écoulé."); return 1;}
	}
	else if(strcmp(cmd, "/spawn", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /spawn <nom>");
			msg_Client(playerid, COLOR_WHITE, "{FFFFB2} civil - maison <num> - faction");
			return 1;
		}
		if(strcmp(tmp,"civil",true) == 0 || strcmp(tmp,"civile",true) == 0)
		{
		    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous allez désormais spawn au spawn civil.");
		    PlayerInfo[playerid][pSpawn]=0;
		    return 1;
		}
		else if(strcmp(tmp,"faction",true) == 0 || strcmp(tmp,"factions",true) == 0)
		{
		    if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0)
		    {
			    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous allez désormais spawn au spawn de votre faction.");
			    PlayerInfo[playerid][pSpawn]=1;
			    return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite parti d'aucune faction."); return 1;}
		}
		else if(strcmp(tmp,"maison",true) == 0 || strcmp(tmp,"maisons",true) == 0 || strcmp(tmp,"house",true) == 0)
		{
		    if(PlayerInfo[playerid][pHousekey1]==-1 && PlayerInfo[playerid][pHousekey2]==-1 && PlayerInfo[playerid][pHousekey3]==-1)
		    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de maison");return 1;}
		    	
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
				{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /spawn maison <num>");return 1;}
				
			var = strval(tmp);
			if(var<0||var>3)
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Id compris entre 1 et 3."); return 1;}
			if(var==1)
			{
			    if(PlayerInfo[playerid][pHousekey1]!=-1)
			    {
			        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous allez désormais spawn au spawn de votre maison 1.");
			    	PlayerInfo[playerid][pSpawn]=2;
			    }
			    else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Pas de maison à cette id."); return 1;}
			}
			if(var==2)
			{
			    if(PlayerInfo[playerid][pHousekey2]!=-1)
			    {
			        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous allez désormais spawn au spawn de votre maison 2.");
			    	PlayerInfo[playerid][pSpawn]=3;
			    }
			    else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Pas de maison à cette id."); return 1;}
			}
			if(var==3)
			{
			    if(PlayerInfo[playerid][pHousekey3]!=-1)
			    {
			        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous allez désormais spawn au spawn de votre maison 3.");
			    	PlayerInfo[playerid][pSpawn]=4;
			    }
			    else
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Pas de maison à cette id."); return 1;}
			}
		    return 1;
		}
		else
		{
			msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /spawn <nom>");
			msg_Client(playerid, COLOR_WHITE, "{FFFFB2} civil - maison <id> - faction");
			return 1;
		}
	}
	else if(strcmp(cmd, "/poser", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
		    msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /poser <nom>");
			return msg_Client(playerid, COLOR_WHITE, "{FFFFB2} arme - objet - argent");
		}
		if(strcmp(tmp,"arme",true) == 0)
		{
	    	if(police_Duty[playerid]==1 || gouv_Duty[playerid] == 1)
		    	{return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Impossible de poser vos armes de service.");}
            if(GetPlayerWeapon(playerid) == 0)
				{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez avoir une arme en main.");}

			new wepId = GetPlayerWeapon(playerid);
			new ammo = GetPlayerAmmo(playerid);

			if(drop_Throw(playerid, wepId, ammo, -1))
			{
                RemovePlayerWeapon(playerid, wepId);
				format(string, sizeof(string), "* %s pose une arme à terre.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			return 1;
		}
		else if(strcmp(tmp,"objet",true) == 0 || strcmp(tmp,"object",true) == 0)
		{
			new tmpstring[40], sacstring[512]="{FFFFFF}Objet\t{FFFFFF}Quantité\n";
			for(new i=0; i<gPlayerInventory[playerid]; i++)
			{
				format(tmpstring,sizeof(tmpstring),"%s\t%d\n",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
	            strins(sacstring,tmpstring,strlen(sacstring),sizeof(sacstring));
			}
			ShowPlayerDialog(playerid,136,DIALOG_STYLE_TABLIST_HEADERS, "» Poser « Objet", sacstring, "Valider","Annuler");
			player_SellOther[playerid]=0;
			return 1;
		}
		else if(strcmp(tmp,"argent",true) == 0 || strcmp(tmp,"cash",true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /poser argent <montant>");}
			new montant = strval(tmp);
			if(montant < 0 || montant > PlayerInfo[playerid][pCash])
				{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");}

			if(drop_Throw(playerid, 1212, montant, -1))
			{
				SafeGivePlayerMoney(playerid, -montant,"Jette argent à terre");
				format(string, sizeof(string), "* %s jette de l'argent à terre.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			return 1;
		}
	    return 1;
	}
	else if(strcmp(cmd, "/prendrejob", true) == 0 || strcmp(cmd, "/takejob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pJob] == 0  &&  PlayerInfo[playerid][pMember] >= 200 || PlayerInfo[playerid][pJob] == 0  &&  PlayerInfo[playerid][pMember] == 0)
			{
			    if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1709.1045,-1670.2527,23.7048)) // Fermier
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis de conduire.");
				    SetPlayerCheckpoint(playerid,-381.3588,-1426.1780,25.9125,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1708.9154,-1665.0601,23.7039)) // Balayeur de rues
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis de conduire.");
				    SetPlayerCheckpoint(playerid,1615.8364,-1893.7744,13.5482,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1708.9707,-1659.8292,23.7025)) // Eboueur
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis poid lourd.");
				    SetPlayerCheckpoint(playerid,2274.8787,-2230.4817,13.6062,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1708.8824,-1654.5477,23.7014)) // Ouvrier
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis poid lourd.");
				    SetPlayerCheckpoint(playerid,827.3839,856.9607,12.2437,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1708.9457,-1649.2775,23.6953)) // Pilote de ligne
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis de vol.");
				    SetPlayerCheckpoint(playerid,1969.2666,-2186.0972,13.5469,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1734.8093,-1660.1256,23.7184)) // Facteur
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    SetPlayerCheckpoint(playerid,1743.5208,-1587.6700,13.5523,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1734.5990,-1654.0999,23.7315)) // Pêcheur
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis de navigation");
				    SetPlayerCheckpoint(playerid,896.7977,-1895.2848,1.2672,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1734.6973,-1648.2484,23.7444)) // Transporteur de fonds
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis poid lourd.");
				    SetPlayerCheckpoint(playerid,1515.6515,-1024.7803,23.8186,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1734.5728,-1642.3638,23.7522)) // Livreur marchandises
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis de poid lourd.");
				    SetPlayerCheckpoint(playerid,1792.4077,-2072.6865,13.5772,5.0);
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1709.3733,-1670.1969,27.1953)) // Pilote de train
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis de train.");
				    SetPlayerCheckpoint(playerid,1703.2473,-1944.2960,13.5574,5.0);
				}
              /*else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1709.0306,-1654.6140,27.1953)) // Chauffeur de bus
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis poid lourd.");
				    SetPlayerCheckpoint(playerid,783.6038,-1327.6260,13.5469,5.0);
				}*/
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1709.1731,-1664.9385,27.1953)) // Livreur de Pizza
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    SetPlayerCheckpoint(playerid,2115.6763,-1788.6963,13.5387,5.0);
				}
				/*else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1709.0503,-1659.7117,27.1953)) // Chauffeur de taxi
				{
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Lieu d'embauche affiché sur le GPS.");
				    msg_Client(playerid,COLOR_WHITE,"|A.N.P.E| Ce job nécessite le permis de conduire.");
				    SetPlayerCheckpoint(playerid,772.4321,-1327.3684,13.5469,5.0);
				}*/
		  		else
		  			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes pas près d'une place d'embauche !");}
			}
			else
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez déjà un travail ou vous faite parti d'une faction légale.");}
		}//not connected
	    return 1;
	}
	else if(strcmp(cmd, "/family", true)==0||strcmp(cmd, "/f", true)==0||strcmp(cmd, "/faction", true) == 0)
	{
		if(gPlayerMuteOOC[playerid] > 0)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté.");}
		if(PlayerInfo[playerid][pMember] == 0)
		    {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de faction.");}
        if(PlayerInfo[playerid][pJailed] >= 1)
			{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Impossible de parler en OOC faction en prison.");}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
			{idx++;}
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{result[idx - offset] = cmdtext[idx]; idx++;}
		result[idx - offset] = EOS;
		if(!strlen(result))
			{return msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /f(action) <texte>");}
			
		if(strcmp(result,"off",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] <5)
			    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Rang 5 minimum pour désactiver le canal.");}
            faction_OOC[PlayerInfo[playerid][pMember]]=0;
		    return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez désactivé le canal OOC de votre faction.");
		}
		else if(strcmp(result,"on",true) == 0)
		{
			if(PlayerInfo[playerid][pRank] <5)
			    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Rang 5 minimum pour activer le canal.");}
            faction_OOC[PlayerInfo[playerid][pMember]]=1;
		    return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez activé le canal OOC de votre faction.");
		}
		if(faction_OOC[PlayerInfo[playerid][pMember]]==1)
		{
			format(string, sizeof(string), "* (( %s %s : %s )) *",GetFactionRank(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]), PlayerInfo[playerid][pRealName], result);
            SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			return 1;
        }
        else
            {return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Le canal OOC de votre faction a été désactivé par un haut gradé.");}
	}
	else if(strcmp(cmd, "/casier", true) ==0)
	{
	    new tmpstring[64];
	    format(sql,sizeof(sql),"SELECT * FROM lvrp_users_casiers WHERE SQLid = %d",PlayerInfo[playerid][pSQLID]);
	    mysql_query(MYSQL,sql);
	    strins(string,"{CF9756}[Dernier crime]{FFFFFF}\n- Motif : ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Crime1",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n- Victime : ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Victim",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n- Témoin : ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Witness",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n\n{CF9756}[Autres crimes]{FFFFFF}\n- ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Crime2",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n- ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Crime3",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n- ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Crime4",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n- ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Crime5",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n\n{CF9756}[Autres stats]{FFFFFF}\n- Nombre de fois arrêté : ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Arrested",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    strins(string,"\n- Nombre de crimes : ",strlen(string),sizeof(string));
	    cache_get_value_name(0,"Crimes",tmpstring, 64);
	    strins(string,tmpstring,strlen(string),sizeof(string));
	    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"{FFFFFF}» Casier «",string,"Valider","");
	    return 1;
	}
	else if(strcmp(cmd, "/membres", true) ==0 || strcmp(cmd, "/membre", true) == 0 || strcmp(cmd, "/member", true) == 0 || strcmp(cmd, "/members", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] == 0)
     		{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de faction."); return 1;}
     		
		new tmpTotal,name[32],connected[48];
		format(string,sizeof(string),"{FFFFFF}=========== {F6A900}Membres %s {FFFFFF}===========",GetFactionName(PlayerInfo[playerid][pMember]));
        msg_Client(playerid, COLOR_STATS, string);
        format(sql,sizeof(sql),"SELECT Name,Member,Rank,Connected,LastLog FROM lvrp_users WHERE Member = %d ORDER BY Rank DESC",PlayerInfo[playerid][pMember]);
	    mysql_query(MYSQL,sql);
 		cache_get_row_count(tmpTotal);
 		new tmp2 = 0, tmp3 = 0, rank = 0;
	    for (new i=0; i<tmpTotal; i++)
		{
		    cache_get_value_name(i,"Name",name, 32);
      		cache_get_value_name_int(i, "Connected", tmp3);
      		cache_get_value_name_int(i, "LastLog", tmp2);
      		cache_get_value_name_int(i, "Rank", rank);
			if(tmp3 == 1)	{connected="{00FF00}Connecté{FFFFFF}";}
			else													{connected="{FF0000}Déconnecté{FFFFFF}";}
			cache_get_value_name_int(i, "Member", tmp3);
		    format(string,sizeof(string),"{2EFEC8}[%s]{FFFFFF} %s - %s (Dernière connexion: %s)",
			GetFactionRank(tmp3,rank),name,connected,date(tmp2,1));
			msg_Client(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	else if(strcmp(cmd, "/membresco", true) ==0 || strcmp(cmd, "/membreco", true) == 0 || strcmp(cmd, "/memberco", true) == 0 || strcmp(cmd, "/membersco", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] == 0)
     		{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de faction."); return 1;}

		new dutyStr[32]=" ";
        format(string,sizeof(string),"{FFFFFF}====== {F6A900}Membres %s connectés {FFFFFF}======",GetFactionName(PlayerInfo[playerid][pMember]));
        msg_Client(playerid, COLOR_STATS, string);
		for(new i=0; i<=MAX_PLAYERS_CURRENT+1; i++)
		{
		    if(IsPlayerConnected(i) && !IsPlayerNPC(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
		    {
		        if(police_Duty[i] == 1 || gouv_Duty[i] == 1)
			   		{dutyStr="{00FF00}[En service]{FFFFFF} ";}
		        format(string,sizeof(string),"{2EFEC8}[%s]{FFFFFF} %s (Id: %d) %s%s",GetFactionRank(PlayerInfo[i][pMember],PlayerInfo[i][pRank]),PlayerInfo[i][pRealName],i,dutyStr,playerRoot[i]);
                msg_Client(playerid, COLOR_WHITE, string);
                dutyStr=" ";
			}
		}
		return 1;
	}

	else if(strcmp(cmd, "/abc", true) == 0 || strcmp(cmd, "/san", true) == 0 || strcmp(cmd, "/sannews", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] != 10)
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faite pas parti du San News.");return 1;}
			
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
	        {
	            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san <nom>");
	            msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}1{FFFFB2}: live - finlive - j(ournalist) - gagnant");
	            if(PlayerInfo[playerid][pRank] >= 5)
	            	{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}: inviter - rang");}
                if(PlayerInfo[playerid][pRank] >= 6)
	            	{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}:virer - gestion - vrang - garer");}
	            return 1;
	        }
	        if(strcmp(tmp, "live", true) == 0)
			{
			    if(PlayerInfo[playerid][pRank] >= 3)
			    {
			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /san live <id/joueur>");return 1;}
						
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							if (ProxDetectorS(5.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid)
									{msg_Client(playerid, COLOR_GREY, "{00673A}» San News «{FFFFFF} Vous ne pouvez pas faire de live avec vous même!"); return 1; }
								format(string, sizeof(string), "{00673A}» San News «{FFFFFF} Vous proposez à %s de faire un live.", PlayerInfo[giveplayerid][pName]);
								msg_Client(playerid, COLOR_GREY, string);
								sannews_LiveOffer[giveplayerid] = playerid;
								format(string,sizeof(string),"%s vous propose de faire un live :",PlayerInfo[playerid][pName]);
								ShowPlayerDialog(giveplayerid,116,DIALOG_STYLE_MSGBOX,"|Live| Proposition",string,"Accepter","Refuser");
							}
							else
								{msg_Client(playerid, COLOR_GREY, "{00673A}» San News «{FFFFFF} Ce joueur n'est pas pret de vous.");return 1;}
						}
					}
					else
						{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
			    }
			    else
			    	{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 3 ou plus pour utiliser cette commande.");return 1;}
			    return 1;
	        }
	        else if(strcmp(tmp, "finlive", true) == 0)
			{
			    if(PlayerInfo[playerid][pRank] >= 3 && sannews_TalkingLive[playerid] != -1 && sannews_TalkingLive[sannews_TalkingLive[playerid]] != -1)
			    {
			        msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Live terminé.");
			        msg_Client(sannews_TalkingLive[playerid], COLOR_GREY, "{00673A}» San News «{FFFFFF} Live terminé.");
			        TogglePlayerControllable(playerid, true);
			        TogglePlayerControllable(sannews_TalkingLive[playerid], true);
			        sannews_TalkingLive[sannews_TalkingLive[playerid]] = -1;
			        sannews_TalkingLive[playerid] = -1;
			        return 1;
			    }
			    else
			    	{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 3 ou plus pour utiliser cette commande.");return 1;}
			}
			else if(strcmp(tmp, "j", true) == 0 || strcmp(tmp, "journalist", true) == 0)
			{
			    if(PlayerInfo[playerid][pRank] >= 2)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
						{idx++;}
					
					new offset = idx;
					
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{result[idx - offset] = cmdtext[idx]; idx++;}
						
					result[idx - offset] = EOS;
					if(!strlen(result))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /san j(ournalist) <texte>");return 1;}
					
					format(string, sizeof(string), "[SanNews] Journaliste %s: %s", PlayerInfo[playerid][pRealName], result);
					msg_OOCNews(COLOR_LIGHTBLUE,string);
					return 1;
				}
				else
			    	{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 2 ou plus pour utiliser cette commande.");return 1;}
			}
			else if(strcmp(tmp,"garer",true) == 0)
			{
				if(PlayerInfo[playerid][pRank]<= 4)
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez êtes rang 5 ou plus pour faire cette action.");return 1;}
				if(GetPlayerState(playerid) != 2)
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");return 1;}
				if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
				{
					new Float:x,Float:y,Float:z,Float:a;
					GetVehiclePos(idcar, x, y, z);
					GetVehicleZAngle(idcar, a);
					vehicle[idcar][cLocationx] = x;
					vehicle[idcar][cLocationy] = y;
					vehicle[idcar][cLocationz] = z;
					vehicle[idcar][cAngle] = a;
					vehicle_Save(idcar,0,0);
					car_Recreate(playerid,idcar);
					msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Véhicule de police parké.");
					return 1;
				}
				else
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Ce véhicule ne fait pas parti du San News."); return 1;}
			}
			else if(strcmp(tmp,"vrang",true) == 0)
			{
				if(PlayerInfo[playerid][pRank]< 6)
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez êtes rang 8 ou plus pour faire cette action.");return 1;}
				if(GetPlayerState(playerid) != 2)
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être dans un véhicule ou au volant de ce véhicule");return 1;}
				if(vehicle[idcar][cType] == PlayerInfo[playerid][pMember])
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_WHITE, "{A98500}» Usage «{FFFFB2} /san vrang <rang>");return 1;}
					if(strval(tmp) > 6 || strval(tmp) < 1)
						{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Rang compris entre 1 et 6."); return 1;}
					vehicle[idcar][cRank] = strval(tmp);
					vehicle_Save(idcar,0,0);
					car_Recreate(playerid,idcar);
					format(string,sizeof(string),"{00673A}» San News «{FFFFFF} Rang du véhicule réglé à %d ou supérieur.",strval(tmp));
					msg_Client(playerid,COLOR_GREY,string);
					return 1;
				}
				else
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Ce véhicule ne fait pas parti du San News."); return 1;}
			}
			else if(strcmp(tmp,"inviter",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] >= 5)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san inviter <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous inviter dans votre propre faction !");return 1;}
						if(PlayerInfo[giveplayerid][pMember] != 0)
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur fait déjà parti d'une faction.");return 1;}
						format(string, sizeof(string), "{00673A}» San News «{FFFFFF} Vous avez invité %s.",PlayerInfo[giveplayerid][pName]);
						msg_Client(playerid, COLOR_GREY, string);
						format(string,sizeof(string),"%s vous invite à rejoindre sa faction.",PlayerInfo[playerid][pName]);
						ShowPlayerDialog(giveplayerid,54,DIALOG_STYLE_MSGBOX,"|Invitation|",string,"Accepter","Refuser");
						invited_Player[giveplayerid]=playerid;
						return 1;
					}
					else
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
			}
			else if(strcmp(tmp,"rang",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] >= 5)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san rang <id/joueur> <rang>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous changer votre rang vous meme !");return 1;}
						if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san rang <id/joueur> <rang>");return 1;}
						new rang = strval(tmp);
						if(rang < 1 || rang > 6)
							{msg_Client(playerid,COLOR_POLICE,"{00673A}» San News «{FFFFFF} Rang compri entre 1 et 6."); return 1;}
						PlayerInfo[giveplayerid][pRank] = rang;
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été promus rang %d par %s.",rang,PlayerInfo[playerid][pName]);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous avez mis rang %d, %s.",rang,PlayerInfo[giveplayerid][pName]);
						msg_Client(playerid, COLOR_GREY, string);
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
			}
			else if(strcmp(tmp,"virer",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] >= 5)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san virer <id/joueur>");return 1;}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
						if(giveplayerid == playerid)
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous virer vous meme !");return 1;}
						if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember])
							{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ce joueur n'est fait pas parti de votre faction.");return 1;}
						PlayerInfo[giveplayerid][pRank] = 0;
						PlayerInfo[giveplayerid][pLeader] = 0;
						PlayerInfo[giveplayerid][pMember] = 0;
						format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été virer par %s",PlayerInfo[playerid][pName]);
						msg_Client(giveplayerid, COLOR_INFO, string);
						format(string, sizeof(string), "{00673A}» San News «{FFFFFF} Vous avez virer %s.",PlayerInfo[giveplayerid][pName]);
						msg_Client(playerid, COLOR_GREY, string);
						OnPlayerUpdateSQL(giveplayerid);
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
				}
				else
					{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 5 ou plus pour faire cette action.");return 1;}
			}
			else if(strcmp(tmp,"gestion",true) == 0)
     		{
     		    if(PlayerInfo[playerid][pRank] != 6)
     				{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 6.");return 1;}
     				
   				sannews_Gestion(playerid);
   				return 1;
     		}
     		else if(strcmp(tmp,"gagnant",true) == 0)
     		{
     		    if(PlayerInfo[playerid][pRank] >= 3)
			    {
			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
						{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san gagnant <id/joueur> <argent>");return 1;}
						
                    giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
							{msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san gagnant <id/joueur> <argent>");return 1;}

						if(strval(tmp) > sanNews[abc_Cash] || strval(tmp) < 0)
						    {msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Erreur dans le montant."); return 1;}
						    
						sanNews[abc_Cash]-=strval(tmp);
						SafeGivePlayerMoney(giveplayerid,strval(tmp),"Gagnant San News");
						
						format(string,sizeof(string),"{00673A}» San News «{FFFFFF} Vous avez donné $%d à %s le gagnant.",strval(tmp),PlayerInfo[giveplayerid][pRealName]);
						msg_Client(playerid,COLOR_GREY,string);
						format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez gagné $%d pour être gagnant au San News.",strval(tmp));
						msg_Client(giveplayerid,COLOR_INFO,string);
						return 1;
					}
					else
						{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Ce joueur n'est pas connecté.");return 1;}
			    }
			    else
			    	{msg_Client(playerid,COLOR_GREY,"{00673A}» San News «{FFFFFF} Vous devez être rang 3 ou plus pour utiliser cette commande.");return 1;}
     		}
     		else
     		{
     		    msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /san <nom>");
	            msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}1{FFFFB2}: live - finlive - j(ournalist) - gagnant");
	            if(PlayerInfo[playerid][pRank] >= 5)
	            	{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}: inviter - rang");}
                if(PlayerInfo[playerid][pRank] >= 6)
	            	{msg_Client(playerid, COLOR_USAGE, "{A98500}Rang {FFFFFF}6{FFFFB2}:virer - gestion - vrang - garer");}
	            return 1;
     		}
	    }
	    return 1;
	}
	else if(strcmp(cmd, "/utiliser", true) ==0)
	{
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
	    {
	       	msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /utiliser <nom>");
	        msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} drogue - aliment");
	        return 1;
	    }
	    if(strcmp(tmp,"drogue",true) == 0)
     	{
     	    tmp = strtok(cmdtext, idx);
     	    if(!strlen(tmp))
	        {
	            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /utiliser drogue <nom>");
	            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} weed - heroine(utilisation) - cocaine(utilisation) - ecstasy(utilisation)");
	            return 1;
	        }
	        if(strcmp(tmp,"weed",true) == 0)
	        {
	            tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp))
		        {
		            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /utiliser drogue weed <nom>");
		            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} rouler - utiliser");
		            return 1;
		        }
		        if(strcmp(tmp,"rouler",true) == 0)
	        	{
		            if(inventory_GetItemQuantity(playerid,328) < 2)
				    	{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas assez de feuilles.");}
					if(inventory_GetItemQuantity(playerid,2751) < 1)
				    	{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas assez de tabac.");}
					if(UsingDrugs[playerid] != 0)
					{
				    	format(string, sizeof(string), "* %s tente rouler un joint mais il est trop défoncé.", PlayerInfo[playerid][pName]);
				    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				    	return 1;
					}
					if(inventory_GetItemQuantity(playerid,1575) > 0)
					{
					    inventory_UpdateItem(playerid,1575,-1);
					    inventory_UpdateItem(playerid,328,-2);
					    inventory_UpdateItem(playerid,2751,-1);
					    inventory_UpdateItem(playerid,1485,1);
					    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous vous êtes roulé un joint. (/drogue weed utiliser)");
				    	format(string, sizeof(string), "* %s se roule un joint.", PlayerInfo[playerid][pName]);
				    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				    	return 1;
					}
					else
						{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de weed.");}
				}
				else if(strcmp(tmp,"utiliser",true) == 0)
	        	{
	        	    if(inventory_GetItemQuantity(playerid,1485) > 0)
	        	    {
	        	        if(inventory_GetItemQuantity(playerid,2351) <= 0)
				    		{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de briquet.");}
		        	    if(UsingDrugs[playerid] != 0)
						{
					    	format(string, sizeof(string), "* %s tente d'allumer un joint mais il est trop défoncé.", PlayerInfo[playerid][pName]);
					    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					    	return 1;
						}
		        	    PlayerStoned[playerid] += 3;
			            if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Defoncer", 4000, 1); }

                        inventory_UpdateItem(playerid,1485,-1);
                        inventory_UpdateItem(playerid,2351,-1);
			            UsingDrugsTime[playerid]=20;
						UsingDrugs[playerid] = 1;
					 	SetPlayerWeather(playerid, -68);
						LoopingAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);

					    format(string, sizeof(string), "* %s allume un joint.", PlayerInfo[playerid][pName]);
					    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					    return 1;
				    }
				    else
						{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de joint.");}
	        	}
	        	else
		        {
		            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /utiliser drogue weed <nom>");
		            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} rouler - utiliser");
		            return 1;
		        }
	        }
	        else if(strcmp(tmp,"heroine",true) == 0)
	        {
	            if(UsingDrugs[playerid] != 0)
				{
			    	format(string, sizeof(string), "* %s essaye de se piquer mais rate.", PlayerInfo[playerid][pName]);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			    	return 1;
				}
				if(inventory_GetItemQuantity(playerid,1579) > 0)
				{
				    PlayerStoned[playerid] += 3;
	                if(PlayerStoned[playerid] >= 3)
						{GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Defoncer", 4000, 1); }
				    inventory_UpdateItem(playerid,1579,-1);

				    UsingDrugs[playerid] = 2;
				    UsingDrugsTime[playerid] = 10;
			    	SetPlayerWeather(playerid, -30);

			    	format(string, sizeof(string), "* %s prendre une seringue d'héroïne et se pique.", PlayerInfo[playerid][pName]);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			    	return 1;
				}
				else
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas d'heroine.");}
	        }
	        else if(strcmp(tmp,"cocaine",true) == 0)
	        {
	            if(UsingDrugs[playerid] != 0)
				{
			    	format(string, sizeof(string), "* %s essaye de sniffer mais il est déjà trop peté.", PlayerInfo[playerid][pName]);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			    	return 1;
				}
				if(inventory_GetItemQuantity(playerid,1578) > 0)
				{
				    PlayerStoned[playerid] += 3;
	                if(PlayerStoned[playerid] >= 3)
						{GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Defoncer", 4000, 1); }
				    inventory_UpdateItem(playerid,1578,-1);
				    SetPlayerWeather(playerid, -68);
				    UsingDrugs[playerid] = 3;
				    UsingDrugsTime[playerid] = 30;
			    	SetTimerEx("Animcoke", 100, 0, "i", playerid);

			    	format(string, sizeof(string), "* %s prend un sachet de cocaine, l'ouvre et le snif.", PlayerInfo[playerid][pName]);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			    	return 1;
				}
				else
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de cocaïne.");}
			}
			else if(strcmp(tmp,"ecstasy",true) == 0)
	        {
	            if(UsingDrugs[playerid] != 0)
				{
			    	format(string, sizeof(string), "* %s essaye d'avaler un cachet mais le fait tombé.", PlayerInfo[playerid][pName]);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			    	return 1;
				}
				if(inventory_GetItemQuantity(playerid,1580) > 0)
				{
				    PlayerStoned[playerid] += 3;
	                if(PlayerStoned[playerid] >= 3)
						{GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Defoncer", 4000, 1); }
				    inventory_UpdateItem(playerid,1580,-1);

				    SetPlayerWeather(playerid, -68);
			    	UsingDrugs[playerid] = 4;
			    	UsingDrugsTime[playerid] = 60;
			    	PlayerInfo[playerid][pFaim]-=60;
			    	PlayerInfo[playerid][pSoif]-=60;
			    	UpdateStatsTextsPlayers(playerid,1);
			    	UpdateStatsTextsPlayers(playerid,2);
			    	SetTimerEx("Animcoke", 100, 0, "i", playerid);
			    	format(string, sizeof(string), "* %s prend une pilule d'ecstasy et l'avale.", PlayerInfo[playerid][pName]);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			    	return 1;
				}
				else
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas d'ecstasy.");}
	        }
	        else
	        {
	            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} /utiliser drogue <nom>");
	            msg_Client(playerid, COLOR_USAGE, "{A98500}» Usage «{FFFFB2} weed - heroine(utilisation) - cocaine(utilisation) - ecstasy(utilisation)");
	            return 1;
			}
     	}
     	else if(strcmp(tmp,"aliment",true) == 0)
     	{
			format(string,sizeof(string),"{FFFFFF}Aliment\t{FFFFFF}Quantité\nEau\t%d\nSoda\t%d\nLait\t%d\nJus de fruit\t%d\nBière\t%d\nBurger\t%d\nPizza\t%d\nSandwich\t%d\nChips\t%d\nCéréales\t%d",
			inventory_GetItemQuantity(playerid,1668),inventory_GetItemQuantity(playerid,2601),inventory_GetItemQuantity(playerid,19569),inventory_GetItemQuantity(playerid,19563),inventory_GetItemQuantity(playerid,1486),
			inventory_GetItemQuantity(playerid,19811 ),inventory_GetItemQuantity(playerid,19571),inventory_GetItemQuantity(playerid,2769),inventory_GetItemQuantity(playerid,2663),inventory_GetItemQuantity(playerid,2821));
			ShowPlayerDialog(playerid,147,DIALOG_STYLE_TABLIST_HEADERS,"{969696}» Sac «{FFFFFF} Aliments",string,"Valider","Quitter");
		}
		return 1;
	}
	else
		{msg_Client(playerid, COLOR_SERVER, "{005660}» Serveur «{C8C8C8} Commande inexistante sur ce serveur, faites /aide pour voir la liste des commandes.");}
	return 1;
}

stock ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5,sendToPlayer)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
		{
			if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
			{
			    if(!sendToPlayer && i==playerid)
					{continue;}
				if(radi <= 20 && GetPlayerInterior(playerid) != GetPlayerInterior(i))
					{continue;}
				GetPlayerPos(i, posx, posy, posz);
				tempposx = (oldposx -posx);
				tempposy = (oldposy -posy);
				tempposz = (oldposz -posz);
					
				if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{msg_Client(i, col1, string);}
				else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{msg_Client(i, col2, string);}
				else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{msg_Client(i, col3, string);}
				else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{msg_Client(i, col4, string);}
				else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{msg_Client(i, col5, string);}
			}
		}
	}
	return 1;
}

stock ProxDetectorPoint(Float:radi, Float:x, Float:y, Float:z, string[],col1,col2,col3,col4,col5)
{
		new Float:posx, Float:posy, Float:posz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
		{
			if(IsPlayerConnected(i))
			{
				GetPlayerPos(i, posx, posy, posz);
				tempposx = (x -posx);
				tempposy = (y -posy);
				tempposz = (z -posz);

				if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{msg_Client(i, col1, string);}
				else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{msg_Client(i, col2, string);}
				else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{msg_Client(i, col3, string);}
				else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{msg_Client(i, col4, string);}
				else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{msg_Client(i, col5, string);}
			}
		}
		return 1;
}

stock ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{return 1;}
	}
	return 0;
}

stock ProxDetectorTrashHouse(Float:radi, binid, houseid)
{
    if(trash[binid][used]==1&&house[houseid][used]==1)
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		
		tempposx = (trash[binid][pos][0] -house[houseid][pos][0]);
		tempposy = (trash[binid][pos][1] -house[houseid][pos][1]);
		tempposz = (trash[binid][pos][2] -house[houseid][pos][2]);
		
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{return 1;}
	}
	return 0;
}

stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{return 1;}
	}
	return 0;
}

stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
    new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
	    case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2:
	    {
	        a += 90.0;
	        x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
	    }
	    case 3:
		{
		    a -= 90.0;
      		x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return false;
	}
	return true;
}

stock server_Link(playerid, Float:rangeX, Float:var1_x, Float:var1_y, Float:var1_z, Float:var1_a, var1_int, var1_vw, var1_timer, var1_text[], Float:var2_x, Float:var2_y, Float:var2_z, Float:var2_a, var2_int, var2_vw, var2_timer, var2_text[], back)
{
	if(PlayerToPoint(rangeX, playerid, var1_x, var1_y, var1_z))
	{
		SafeSetPlayerPos(playerid,var2_x, var2_y, var2_z);
		SetPlayerFacingAngle(playerid,var2_a);
		if(var1_int != -1)
			{server_SetPlayerInterior(playerid,var1_int);}
		if(var1_vw != -1)
			{server_SetPlayerVirtualWorld(playerid, var1_vw);}
		GameTextForPlayer(playerid,var1_text,3000,1);
		SetCameraBehindPlayer(playerid);
		if(var1_timer)
		    {TogglePlayerControllable(playerid,false); SetTimerEx("chargement",3000,0,"i",playerid);}
	}
	else if(PlayerToPoint(rangeX, playerid, var2_x, var2_y, var2_z) && GetPlayerVirtualWorld(playerid) == var1_vw && back == 1)
	{
		SafeSetPlayerPos(playerid,var1_x, var1_y, var1_z);
		SetPlayerFacingAngle(playerid,var1_a);
		if(var2_int != -1)
			{server_SetPlayerInterior(playerid,var2_int);}
		if(var2_vw != -1)
			{server_SetPlayerVirtualWorld(playerid, var2_vw);}
		GameTextForPlayer(playerid,var2_text,3000,1);
		SetCameraBehindPlayer(playerid);
		if(var2_timer)
		    {TogglePlayerControllable(playerid,false); SetTimerEx("chargement",3000,0,"i",playerid);}
	}
	return 1;
}

stock CustomPickups(i)
{ 
	if(IsPlayerConnected(i))
	{
		        if (GetPlayerState(i) == 1 && PlayerToPoint(10, i,2144.1199,1617.5258,993.6882))
				{
				    if(bank_Laser==false)
					{
					    bank_Laser=true;
						msg_Radio(1, TEAM_RADIO_COLOR, "* L'Alarme de la Banque s'est déclenchée *");
						msg_Radio(3, TEAM_RADIO_COLOR, "* L'Alarme de la Banque s'est déclenchée *");
						return 1;
					}
				}
		
				if (GetPlayerState(i) == 1 && (PlayerToPoint(0.5, i,-19.2743,1776.5248,1513.6610) || PlayerToPoint(0.5, i,-1611.2024,691.5895,14.4749)))
				{
				    if(PlayerInfo[i][pMember] >= 1 && PlayerInfo[i][pMember] <= 4)
				    	{GameTextForPlayer(i, "~g~Elevateur de la police~n~~w~Tappez ~r~/+1 ~w~Pour aller sur le toit~n~Tappez ~r~/-1 ~w~Pour aller au sous sol", 2000, 3);}
				    else
				    	{GameTextForPlayer(i, "~r~Personnel seulement!", 5000, 3);}
				}
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new string[256],idx,tmp[256];
	
	if(gPlayerMuteIC[playerid] > 0)
		{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous ne pouvez plus parler, vous avez été muté."), 0;}

    if(gPlayerLogged[playerid] == 0)
	    {return 0;}
	    
	if(MariageStep[playerid] == 1)
	{
	    tmp = strtok(text, idx);
	    print("Text 1");
	    if((strcmp("Oui", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("oui")))
		{
		    print("Text 2");
		    MariageStep[playerid]=2;
		    SetPlayerChatBubble(playerid,"Oui !",0xFFFFFFDD,NAME_DISTANCE,5000);
		    format(string, sizeof(string), "%s : Oui !", PlayerInfo[playerid][pName]);
			ProxDetector(20.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
		    if(MariageStep[MariageOffer[playerid]]==2)
		        {mariage_Step(playerid,MariageOffer[playerid],MariageBot[playerid],3);}
		}
		else if((strcmp("Non", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("non")))
		{
		    SetPlayerChatBubble(playerid,"Non !",0xFFFFFFDD,NAME_DISTANCE,5000);
		    format(string, sizeof(string), "%s : Non !", PlayerInfo[playerid][pName]);
			ProxDetector(20.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
			mariage_Step(playerid,MariageOffer[playerid],MariageBot[playerid],0);
		}
		return 0;
	}
	else if(MariageStep[playerid] == 3 || MariageStep[playerid] == 5)
	{
	    tmp = strtok(text, idx);
	    if((strcmp("Oui", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("oui")))
		{
		    SetPlayerChatBubble(playerid,"Oui !",0xFFFFFFDD,NAME_DISTANCE,5000);
		    format(string, sizeof(string), "%s : Oui !", PlayerInfo[playerid][pName]);
			ProxDetector(20.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
			if(MariageStep[playerid]==3)
				{MariageStep[playerid]=4; mariage_Step(playerid,MariageOffer[playerid],MariageBot[playerid],4);}
            if(MariageStep[playerid]==5)
				{MariageStep[playerid]=6; mariage_Step(playerid,MariageOffer[playerid],MariageBot[playerid],5);}
		}
		else if((strcmp("Non", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("non")))
		{
		    SetPlayerChatBubble(playerid,"Non !",0xFFFFFFDD,NAME_DISTANCE,5000);
		    format(string, sizeof(string), "%s : Non !", PlayerInfo[playerid][pName]);
			ProxDetector(20.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
			mariage_Step(playerid,MariageOffer[playerid],MariageBot[playerid],0);
		}
        return 0;
	}
		
	if(sannews_TalkingLive[playerid] != -1)
	{
		if(PlayerInfo[playerid][pMember] == 10)
			{format(string, sizeof(string), "[San News] Journaliste %s: %s", PlayerInfo[playerid][pRealName], text);}
		else
			{format(string, sizeof(string), "[San News] Invité %s: %s", PlayerInfo[playerid][pRealName], text);}
		msg_OOCNews(COLOR_LIGHTBLUE, string);
		log_Chat(string);
		return 0;
	}
	if(Mobile[playerid] != -1)
	{
		format(string,sizeof(string),"%s [Tel]: %s",PlayerInfo[playerid][pName], text);
		msg_Client(Mobile[playerid], COLOR_YELLOW, string);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,true);
		log_Chat(string);
		return 0;
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
		format(string, sizeof(string), "%s %s : %s", prefix[playerid], PlayerInfo[playerid][pName], text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,true);
		log_Chat(string);
		//LoopingAnim(playerid, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,1);
	}
	else
	{
		new carid = GetPlayerVehicleID(playerid);
		if(IsABike(carid) || IsAMoto(carid) || IsAPlane(carid) || IsABoat(carid) || IsATrain(carid) || IsAHelicopter(carid) || IsARemorque(carid))
		{
			format(string, sizeof(string), "¨%s %s : %s",prefix[playerid], PlayerInfo[playerid][pName], text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,true);
		}
		else
		{
			if(vehicle[GetPlayerVehicleID(playerid)][cWindows][GetPlayerVehicleSeat(playerid)] == false)
		 	{
				format(string, sizeof(string), "(Fenêtre Fermée)%s %s : %s",prefix[playerid], PlayerInfo[playerid][pName], text);
				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,true);
			}
			else
			{
				format(string, sizeof(string), "(Fenêtre Ouverte)%s %s : %s",prefix[playerid], PlayerInfo[playerid][pName], text);
	            ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5,true);
			}
		}
		log_Chat(string);
	}
	return 0;
}

public AddsOn()
{
	adds=1;
	return 1;
}

stock ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
			{msg_Client(playerid, COLOR_GREY, " ");}
	}
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    new string[256];
	new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	new carid = GetPlayerVehicleID(playerid);
    if (newkeys & 16 && InShamal[playerid])
	{
        new Float:X, Float:Y, Float:Z, Float:A;
        GetVehiclePos(InShamal[playerid], X, Y, Z);
        GetVehicleZAngle(InShamal[playerid], A);
        X += (5 * floatsin(-floatsub(A, 45.0), degrees)),
        Y += (5 * floatcos(-floatsub(A, 45.0), degrees));
        server_SetPlayerInterior(playerid, 0);
        SafeSetPlayerPos(playerid, X, Y, floatsub(Z, 0.94));
        SetPlayerFacingAngle(playerid, A);
        SetCameraBehindPlayer(playerid);
        InShamal[playerid] = 0;
	}
	if (newkeys & 16 && InAndro[playerid])
	{
        new Float:X, Float:Y, Float:Z, Float:A;
        GetVehiclePos(InAndro[playerid], X, Y, Z);
        GetVehicleZAngle(InAndro[playerid], A);
        X += (5 * floatsin(-floatsub(A, 45.0), degrees)),
        Y += (5 * floatcos(-floatsub(A, 45.0), degrees));
        server_SetPlayerInterior(playerid, 0);
        SafeSetPlayerPos(playerid, X, Y, floatsub(Z, 0.94));
        SetPlayerFacingAngle(playerid, A);
        SetCameraBehindPlayer(playerid);
        InAndro[playerid] = 0;
	}
	if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
	|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
	|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
	&& GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
	}
	/*if ((newkeys & KEY_UP &) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
	}*/
	if(player_InAreaAntiDM[playerid] == 1 && !IsPlayerInAnyVehicle(playerid))
	{
		if(newkeys == KEY_FIRE || newkeys == KEY_FIRE && KEY_HANDBRAKE || newkeys == KEY_HANDBRAKE && KEY_SECONDARY_ATTACK || newkeys == KEY_FIRE)
		{
		    if(player_ActiveDM[playerid] == 1)
				{return 1;}
	        player_ActiveDM[playerid]=1;
	        LoopingAnim(playerid,"PED","handscower",4.0,0,0,0,0,0);
	        SetTimerEx("defreeze",1400,0,"i",playerid);
		}
	}
	if(newkeys & KEY_LOOK_LEFT)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
            if(!IsCarBlinking(carid)) SetCarBlinking(carid, true);
            else DisableCarBlinking(carid);
	    }
	}
	else if(newkeys & KEY_LOOK_RIGHT)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
            if(!IsCarBlinking(carid)) SetCarBlinking(carid, false);
            else DisableCarBlinking(carid);
	    }
	}
	/*else if(newkeys == KEY_DOWN)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && CarActivedCruise[carid] == 1)
			{CarActivedCruise[carid]=0; PlayerCruiseSpeed[playerid] = 0.00;}
	}*/
	else if(newkeys & KEY_ANALOG_LEFT)
	{
	    if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pMember] < 6 && police_Duty[playerid] == 1 && GetPlayerWeapon(playerid) == 25)
	    {
	        if(police_FlashBall[playerid] == false)
	        {
	            police_FlashBall[playerid] = true;
	            msg_Box(playerid, "~b~", "Police", "Vous avez activé le FlashBall.", 5000);
	        }
	        else
	        {
	            police_FlashBall[playerid] = false;
	            msg_Box(playerid, "~b~", "Police", "Vous avez désactivé le FlashBall.", 5000);
			}
	    }
	    /*if(inventory_GetItemQuantity(playerid,18634)>=1)
	    {
	        if(UsePiedBiche[playerid]==0 && !IsPlayerAttachedObjectSlotUsed(playerid,8))
	        {
	            SetPlayerAttachedObject( playerid, 8, 18634, 5, 0.104315, 0.024154, -0.002412, 351.485473, 284.184387, 85.579017, 1.000000, 1.000000, 1.000000 );
	            UsePiedBiche[playerid]=1;
	            msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez sorti votre pied de biche.");
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,8))
			{
			    RemovePlayerAttachedObject(playerid,8);
                UsePiedBiche[playerid]=0;
                msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez rangé votre pied de biche.");
			}
	    }*/
	}
	else if(newkeys == KEY_YES || newkeys & KEY_YES)
	{
	    if(job_Start[playerid] == 1)
		{
		    if(PlayerInfo[playerid][pJob] == 1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		    {
				if(job_ObjectN[playerid] == 0 && (IsPlayerInRangeOfPoint(playerid, 2.0, 2109.1106,-1788.5276,13.5608) || IsPlayerInRangeOfPoint(playerid, 2.0, -1809.9154,941.4058,24.8733) || IsPlayerInRangeOfPoint(playerid, 2.0, 2078.3313,2229.9302,11.0234)))
				{
				    if(job_TempVar[playerid] == 5)
				        {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez déjà 5 pizza dans le coffre de votre scooter.");}
                    job_ObjectN[playerid]=1;
                    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez pris une pizza, mettez là dans le coffre de votre scooter, touche 'Y'.");
				    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
		            if(player_GetSlotObject(playerid) != -1)
                		{job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 1582, 1, -0.002629, 0.600562, -0.046268, 262.555908, 95.853302, 0.000000, 1.000000, 1.000000, 1.000000 );}
				}
				new Float:x, Float:y, Float:z;
				GetVehiclePos(job_CarId[playerid],x,y,z);
				if(IsPlayerInRangeOfPoint(playerid,1.5,x,y,z))
				{
				    if(job_ObjectN[playerid]==1)
				    {
	                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			            job_TempVar[playerid]++;
			            job_ObjectN[playerid]=0;
			            msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez mis cette pizza dans le coffre.");
			            RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
			            job_HoldingObjectSlot[playerid]=-1;
			            if(job_TempVar[playerid]==5)
			                {msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Le coffre est plein, allez livrer ces pizza.");}
					}
					else if(job_ObjectN[playerid]==0)
					{
					    if(job_TempVar[playerid] <= 0)
					        {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Il n'y a plus de pizza dans le coffre !");}
					    job_TempVar[playerid]--;
			            job_ObjectN[playerid]=1;
			            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
	            		if(player_GetSlotObject(playerid) != -1)
                			{job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 1582, 1, -0.002629, 0.600562, -0.046268, 262.555908, 95.853302, 0.000000, 1.000000, 1.000000, 1.000000 );}
                        if(job_TempVar[playerid]==0)
			                {msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Il n'y a plus de pizza dans le coffre, pensez à en reprendre.");}
					}
				}
		    }
		    else if(PlayerInfo[playerid][pJob] == 2)
		    {
		        if(GetVehicleModel(carid) == 478)
		        {
		            new tmpid=-1;
		            for(new i=0; i<5; i++)
		            {
		                if(IsValidDynamicObject(job_Object[playerid][i]) && IsPlayerInRangeOfPoint(playerid,5.0,job_ObjectPos[playerid][i][0],job_ObjectPos[playerid][i][1],job_ObjectPos[playerid][i][2]))
							{tmpid=i; break;}
					}
					if(tmpid == -1)
					    {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Aucune botte de paille à côté de vous.");}
					job_HoldingObjectSlot[playerid] = tmpid;
					AttachDynamicObjectToVehicle(job_Object[playerid][tmpid],carid, -0.099999, -1.500000, 0.700000, 0.000000, 0.000000, 0.000000);
					if(job_City[playerid]==0)
						{SetPlayerCheckpoint(playerid,-376.2926,-1447.8590,25.7266,5.0);}
					else if(job_City[playerid]==7)
					    {SetPlayerCheckpoint(playerid,-53.2267,17.6259,3.1172,5.0);}
					gPlayerCheckpoint[playerid]=21;
		        }
		    }
		    else if(PlayerInfo[playerid][pJob] == 3 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		    {
		        if(job_City[playerid] == 4)
		        {
		            if(!IsPlayerInRangeOfPoint(playerid, 2.0,-1364.0155,2451.7180,89.8348))
		                {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous n'êtes pas au dépot de minerai !");}
		            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		            RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
		            LoopingAnim(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0);
	                job_CheckPoints[playerid]=random(9);
	                SetPlayerCheckpoint(playerid,gMinerPoints[job_CheckPoints[playerid]][0], gMinerPoints[job_CheckPoints[playerid]][1], gMinerPoints[job_CheckPoints[playerid]][2], 2.0);
                    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Minerai déposé, recommencer. (Point Rouge Minimap)");
					job_City[playerid]=0;
					PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
	                job_TempVar[playerid]++;
	                if(job_TempVar[playerid]==3)
			    		{job_TakePay(playerid,PlayerInfo[playerid][pJob]); job_TempVar[playerid]=0;}
		        }
		    }
		    else if(PlayerInfo[playerid][pJob] == 4 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    {
		        if(job_CheckPoints[playerid]==1)
		        {
		            if(IsPlayerInRangeOfPoint(playerid,5.0,trash[job_ObjectN[playerid]][pos][0],trash[job_ObjectN[playerid]][pos][1],trash[job_ObjectN[playerid]][pos][2]))
		            {
			        	TogglePlayerControllable(playerid,false);
			        	AttachDynamicObjectToVehicle(trash_Object[job_ObjectN[playerid]], carid, -0.000000, -4.399998, 0.000000, 0.000000, 0.000000, 180.000000 ); // <pos poubelle 1>
	                    SetTimerEx("job_Apply",1000,0,"iii",playerid,4,1);
	                    job_CheckPoints[playerid]=0;
                    }
				}
			}
			else if(PlayerInfo[playerid][pJob] == 7 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		    {
				if(job_ObjectN[playerid] == 0 && (IsPlayerInRangeOfPoint(playerid, 2.0, 1743.4943,-1587.6168,13.5524) || IsPlayerInRangeOfPoint(playerid, 2.0, -2351.2158,496.2127,30.7586) || IsPlayerInRangeOfPoint(playerid, 2.0, 2267.0444,2291.2073,10.8203)))
				{
				    if(job_TempVar[playerid] == 10)
				        {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez déjà 10 lettres dans le coffre de votre scooter.");}
                    job_ObjectN[playerid]=1;
                    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez pris une lettre, mettez là dans le coffre de votre scooter, touche 'Y'.");
		            if(player_GetSlotObject(playerid) != -1)
                		{job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 2953, 6, 0.071939, 0.041660, -0.046764, 8.187542, 275.437194, 352.954010, 1.000000, 1.000000, 1.000000 );}
				}
				new Float:x, Float:y, Float:z;
				GetVehiclePos(job_CarId[playerid],x,y,z);
				if(IsPlayerInRangeOfPoint(playerid,1.5,x,y,z))
				{
				    if(job_ObjectN[playerid]==1)
				    {
			            job_TempVar[playerid]++;
			            job_ObjectN[playerid]=0;
			            msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez mis cette lettre dans le coffre.");
			            RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
			            job_HoldingObjectSlot[playerid]=-1;
			            if(job_TempVar[playerid]==10)
			                {msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Le coffre est plein, allez poster ces lettres.");}
					}
					else if(job_ObjectN[playerid]==0)
					{
					    if(job_TempVar[playerid] <= 0)
					        {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Il n'y a plus de lettre dans le coffre !");}
					    job_TempVar[playerid]--;
			            job_ObjectN[playerid]=1;
	            		if(player_GetSlotObject(playerid) != -1)
                			{job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 2953, 6, 0.071939, 0.041660, -0.046764, 8.187542, 275.437194, 352.954010, 1.000000, 1.000000, 1.000000 );}
                        if(job_TempVar[playerid]==0)
			                {msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Il n'y a plus de lettre dans le coffre, pensez à en reprendre.");}
					}
				}
		    }
		    else if(PlayerInfo[playerid][pJob] == 8)
		    {
		        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		        {
		            if(job_ObjectN[playerid] == 0)
		            {
		                job_ObjectN[playerid] = 1;
		                msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez descendu le filet.");
		                job_Object[playerid][0] = CreateDynamicObject( 2945,0,0,0,0,0,0,0,0,-1,200.0 ); // <fillet 1>
						AttachDynamicObjectToVehicle(job_Object[playerid][0], GetPlayerVehicleID(playerid), 0.200000, -5.599997, 0.299999, 117.000000, 0.000000, 0.000000 ); // <fillet 1>
						job_Object[playerid][1] = CreateDynamicObject( 2945,0,0,0,0,0,0,0,0,-1,200.0 ); // <filet 2>
						AttachDynamicObjectToVehicle( job_Object[playerid][1], GetPlayerVehicleID(playerid), 0.200000, -8.499996, -0.600000, 90.000000, 0.000000, 0.000000 ); // <filet 2>
						job_Object[playerid][2] = CreateDynamicObject( 2945,0,0,0,0,0,0,0,0,-1,200.0 ); // <filet 3>
						AttachDynamicObjectToVehicle( job_Object[playerid][2], GetPlayerVehicleID(playerid), 0.200000, -11.700008, -0.599999, 91.000000, 0.000000, 0.000000 ); // <filet 3>
		            }
		            else if(job_ObjectN[playerid] == 1)
		            {
		                if(job_TempVar[playerid] <= 4)
		                    {return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez d'abord pêcher avant de remonter le filet.");}
						for(new i=0;i <5; i++)
						{
						    if(IsValidDynamicObject(job_Object[playerid][i]))
								{DestroyDynamicObject(job_Object[playerid][i]);}
						}
                        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez remonter le filet.");
                        job_ObjectN[playerid] = 2;
		            }
		        }
		        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		        {
					if(job_ObjectN[playerid] == 2)
					{
					    new Float:x, Float:y, Float:z;
						GetVehiclePos(job_CarId[playerid],x,y,z);
					    if(IsPlayerInRangeOfPoint(playerid,3.0,x,y,z))
							{return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez être en dehors du bâteau.");}
                        if(player_GetSlotObject(playerid) != -1)
                			{job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 2969, 1, 0.078208, 0.408122, -0.022683, 358.315582, 90.338638, 0.000000, 1.000000, 1.000000, 1.000000 );}
                        job_ObjectN[playerid]=3;
                        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Déposer le poisson au lien indiqué. (Touche 'Y')");
                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
					}
					else if(job_ObjectN[playerid] == 3)
					{
					    if(!IsPlayerInRangeOfPoint(playerid,1.5,-2186.6272,2414.9634,5.1563) && !IsPlayerInRangeOfPoint(playerid,1.5,894.2875,-1911.7617,1.1277))
							{return 1;}
                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                        RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
                        LoopingAnim(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0);
			            job_HoldingObjectSlot[playerid]=-1;
                        job_ObjectN[playerid]=0;
                        job_TempVar[playerid]=0;
                        PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
	                	if(job_TempVar[playerid]==3)
			    			{job_TakePay(playerid,PlayerInfo[playerid][pJob]); job_TempVar[playerid]=0;}
                        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez déposé le poisson, recommencer.");
					}
		        }
		    }
		    else if(PlayerInfo[playerid][pJob] == 5 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		    {
		        new Float:x, Float:y, Float:z;
				GetVehiclePos(job_CarId[playerid],x,y,z);
				if(!IsPlayerInRangeOfPoint(playerid,3.5,x,y,z))
					{return msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez être à côté de votre camion.");}
		        if(job_CheckPoints[playerid] >=0 && job_CheckPoints[playerid] <= 4 && job_ObjectN[playerid] == 1)
		        {
					msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez déposé le materiau.");
					RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
				 	job_ObjectN[playerid]=0;
					SetPlayerCheckpoint(playerid,gWorkerPoints[5+job_CheckPoints[playerid]+1][0],gWorkerPoints[5+job_CheckPoints[playerid]+1][1],gWorkerPoints[5+job_CheckPoints[playerid]+1][2],3.0);
                    switch (job_CheckPoints[playerid])
					{
						case 0:{job_Object[playerid][0] = CreateDynamicObject(914,0,0,0,0,0,0,0,0,-1);AttachDynamicObjectToVehicle(job_Object[playerid][0], job_CarId[playerid], 0.000000, 0.999999, -0.200000, 271.000000, 90.000000, 0.000000 );}
						case 1:{job_Object[playerid][1] = CreateDynamicObject(919,0,0,0,0,0,0,0,0,-1);AttachDynamicObjectToVehicle(job_Object[playerid][1], job_CarId[playerid], 0.000000, -0.700000, 0.200000, 0.000000, 0.000000, 0.000000 );}
						case 2:{job_Object[playerid][2] = CreateDynamicObject(2912,0,0,0,0,0,0,0,0,-1);AttachDynamicObjectToVehicle(job_Object[playerid][2], job_CarId[playerid], 0.000000, -2.200000, -0.200000, 0.000000, 0.000000, 0.000000 );}
						case 3:{job_Object[playerid][3] = CreateDynamicObject(3014,0,0,0,0,0,0,0,0,-1);AttachDynamicObjectToVehicle(job_Object[playerid][3], job_CarId[playerid], 0.000000, -3.499998, 0.000000, 0.000000, 0.000000, 0.000000 );}
						case 4:
						{
						    new rand = random(5);
						    SetPlayerCheckpoint(playerid,gWorkerPoints[rand][0],gWorkerPoints[rand][1],gWorkerPoints[rand][2],3.0);
						    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez déposé le materiau, prenez votre camion et retournez au chantier.");
						    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez installer les materiaux. (Touche 'Y' pour en prendre un)");
							job_Object[playerid][4] = CreateDynamicObject(935,0,0,0,0,0,0,0,0,-1);
							AttachDynamicObjectToVehicle(job_Object[playerid][4], job_CarId[playerid], 0.000000, -4.799997, 0.300000, 0.000000, 0.000000, 0.000000 );
						}
					}
					job_CheckPoints[playerid]++;
				}
				else if(job_CheckPoints[playerid] >=5 && job_ObjectN[playerid] == 0)
		        {
		            if(player_GetSlotObject(playerid) != -1)
		                {job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid);}
					switch(job_CheckPoints[playerid])
					{
					    case 5: {DestroyDynamicObject(job_Object[playerid][0]);SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 914, 1, -0.003553, 0.444999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );}
					    case 6: {DestroyDynamicObject(job_Object[playerid][1]);SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 919, 1, 0.406271, 0.728156, 0.011738, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000 );}
					    case 7: {DestroyDynamicObject(job_Object[playerid][2]);SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 2912, 1, -0.069945, 0.649293, 0.000000, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000 );}
						case 8: {DestroyDynamicObject(job_Object[playerid][3]);SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 3014, 1, 0.089511, 0.629350, 0.071828, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000 );}
						case 9: {DestroyDynamicObject(job_Object[playerid][4]);SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 935, 1, 0.184976, 0.586401, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );}
					}
				    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
				    job_ObjectN[playerid] = 1;
				    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous avez pris ce materiau.");
				}
		    }
		    else if(PlayerInfo[playerid][pJob] == 19 && job_Start[playerid] == 1 && job_TempVar[playerid] == 0)
		    {
		        new atmid=-1;
				for(new i=0; i<totalATMs; i++)
				{
					if(PlayerToPoint(8, playerid,atm[i][pos][0],atm[i][pos][1],atm[i][pos][2]))
						{atmid = i; break;}
				}
				if(atmid == -1)
					{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Aucun ATM à côté de vous."); return 1;}
				if(atm[atmid][cash] >=25000)
    				{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Atm déjà remplie.");return 1;}

				msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} L'atm se remplie...");
				SetTimerEx("job_ResetFreeze",4000,0,"id",playerid,atmid); // 4 secondes
				TogglePlayerControllable(playerid,false);
				job_TempVar[playerid]=1;
		    }
		}
		/*if(job_Start[playerid] == 1 && job_TempVar[playerid]==0)
		{
			if(IsAValetCar(carid))
			{
				new atmid=-1;
				for(new i=0; i<totalATMs; i++)
				{
					if(PlayerToPoint(8, playerid,atm[i][pos][0],atm[i][pos][1],atm[i][pos][2]))
						{atmid = i; break;}
				}
				if(atmid == -1)
					{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Aucun ATM à côté de vous."); return 1;}
				if(atm[atmid][cash] >=25000)
    				{msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Atm déjà remplie.");return 1;}

				msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} L'atm se remplie...");
				SetTimerEx("job_ResetFreeze",4000,0,"id",playerid,atmid); // 4 secondes
				TogglePlayerControllable(playerid,false);
				job_TempVar[playerid]=1;
				return 1;
			}
		}
		if(job_Start[playerid] == 1 && PlayerInfo[playerid][pJob] == 4)
		{
		    if(!IsPlayerInAnyVehicle(playerid))
			{
			    new Float:x,Float:y,Float:z;
			    GetVehiclePos(job_CarId[playerid],x,y,z);
			    if(PlayerToPoint(7.0,playerid,x,y,z))
			    {
				    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
				    RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
					PlayerInfo[playerid][pJobExp]++;job_UpdateTexts(playerid);
					job_CheckPoints[playerid]++;
					trash[job_TempVar[playerid]][quantity]=0;
					trash_UpdateInfos(job_TempVar[playerid]); trash_Save(job_TempVar[playerid]);
					if(job_CheckPoints[playerid]==10)
	                    {job_TakePay(playerid,PlayerInfo[playerid][pJob]);job_CheckPoints[playerid]=0;}
	                job_TempVar[playerid] = random(totalTrash);
					SetPlayerCheckpoint(playerid,trash[job_TempVar[playerid]][pos][0],trash[job_TempVar[playerid]][pos][1],trash[job_TempVar[playerid]][pos][2],3.0);
					msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Poubelle vidée, retourné dans votre camion.");
				}
				return 1;
			}
		}*/
		gate_Check(playerid,3,"None");
		if(police_Duty[playerid] == 1 && (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4))
		{
		    if(player_Backup[playerid] == false)
		    {
			    format(string,sizeof(string), "* %s active sa demande d'assistance.", PlayerInfo[playerid][pName]);
		        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		        format(string, sizeof(string), "[Alerte] %s demande une assistance immédiate !", PlayerInfo[playerid][pName]);
	         	new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid, X, Y, Z);
				player_Backup[playerid] = true;
		        for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
						{SetPlayerMarkerForPlayer(i, playerid, COLOR_BK); msg_Client(i, COLOR_BK, string);}
				}
			}
			else
			{
			    format(string,sizeof(string), "* %s désactive sa demande d'assistance.", PlayerInfo[playerid][pName]);
	            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
             	player_Backup[playerid] = false;
				for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
				{
				    if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
						{SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);}
				}
			}
			return 1;
		}
	}
	else if(newkeys == KEY_SPRINT)
    {
        if(GetPlayerState(playerid) == 1 && job_Start[playerid] == 1)// On foot = A pied
		{
		    if(PlayerInfo[playerid][pJob] == 3 && job_ObjectN[playerid]==0)
		    {
		        job_ObjectN[playerid]=-1;
		        LoopingAnim(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 0, 0);
		        job_City[playerid]++;
		        SetTimerEx("job_Apply",1000,0,"iii",playerid,3,1);
		    }
		}
    }
    else if(newkeys == KEY_JUMP)
    {
        if(GetPlayerState(playerid) == 1 && job_Start[playerid] == 1)// On foot = A pied
		{
		    if(PlayerInfo[playerid][pJob] == 3 && job_ObjectN[playerid]==1)
		    {
		        job_ObjectN[playerid]=-1;
		        LoopingAnim(playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0);
		        job_City[playerid]++;
		        SetTimerEx("job_Apply",1000,0,"iii",playerid,3,1);
		    }
		}
    }
	else if((newkeys & KEY_JUMP) && (newkeys & KEY_SPRINT))
    {
        if(GetPlayerState(playerid) == 1)// On foot = A pied
		{
		    if(GetPlayerWeapon(playerid)==34 || GetPlayerWeapon(playerid)==43)
				{return 1;}
		    if(AdminDuty[playerid]==1)
				{return 1;}
		    if(anticheat_Warn[playerid][3]==1)
				{return 1;}
		    PlayerInfo[playerid][pHealth]-=5.0;
		    SafeSetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
		    LoopingAnim(playerid, "PED", "getup_front",3.0,0,0,0,0,0);
		}
	}
	else if ((newkeys == KEY_NO) || newkeys & KEY_NO)
	{
	    if(GetPlayerState(playerid) == 1 && job_Start[playerid] == 1)// On foot = A pied
		{
		    if(PlayerInfo[playerid][pJob] == 3 && job_ObjectN[playerid]==3)
		    {
		        job_ObjectN[playerid]=-1;
		        LoopingAnim(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 0, 0);
		        job_City[playerid]++;
		        SetTimerEx("job_Apply",1000,0,"iii",playerid,3,1);
		    }
		}
	    if(IsPlayerInAnyVehicle(playerid))
        {
			if(IsPlayerConnected(playerid))
			{
			    if(!IsABike(carid))
			    {
				    if(vehicle[carid][cEngine]==true)
					{
	                	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
							{return 1;}
						if(IsABike(carid))
							{return 1;}
						new engine,lights,alarm,doors,bonnet,boot,objective;
						vehicle[carid][cEngine]=false;
			     		format(string, sizeof(string), "* %s éteint le moteur de son véhicule.", PlayerInfo[playerid][pName]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	    				SetVehicleParamsEx(carid,0,0,alarm,doors,bonnet,boot,objective);
	    				vehicle[carid][cLight] = false;
	    				car_Starting[playerid] = false;
	    				speedometer_Update(playerid,1,0);
	    				return 1;
					}
					else
					    {car_Engine(playerid);}
				}
				else
				{
				    if(PlayerInfo[playerid][pCar][0] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][1] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][2] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][3] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][4] == vehicle[carid][SQLID] || PlayerInfo[playerid][pCar][5] == vehicle[carid][SQLID] || HireCar[playerid] == carid || AdminDuty[playerid]==1 || PlayerInfo[playerid][pMember] == vehicle[carid][cType] && PlayerInfo[playerid][pMember] != 0)
			    	{
			    		    new enginem, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(carid,enginem, lights, alarm, doors, bonnet, boot, objective);
			    		    if(!vehicle[carid][cEngine])
		    				{
		    				    format(string, sizeof(string), "* %s retire l'anti-vol de son vélo.", PlayerInfo[playerid][pName]);
		    				    SetVehicleParamsEx(carid, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
                                vehicle[GetPlayerVehicleID(playerid)][cEngine] = true;
		    				}
		    				else
		    				{
		    				    format(string, sizeof(string), "* %s attache l'anti-vole à son vélo.", PlayerInfo[playerid][pName]);
		    				    SetVehicleParamsEx(carid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
		    				    vehicle[GetPlayerVehicleID(playerid)][cEngine] = false;
							}
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			    	}
			    	else
						{msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas les clefs du cadena.");return 1;}
				}
			}
		}
		else
		    {player_CheckInteraction(playerid);}
	}
    else if ((newkeys == KEY_FIRE) || newkeys & KEY_FIRE)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        {
            if(police_Tazer[playerid] == 1)
			{
				new suspect = GetClosestPlayer(playerid);
				if(IsPlayerConnected(suspect))
				{
					if(AdminDuty[suspect]==1)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Impossible de tazé un Admin en service.");return 1;}
					if(player_Cuffed[suspect] == 10)
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Joueur déjà tazé!");return 1;}
					if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
					{
						if(IsPlayerInAnyVehicle(suspect))
							{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Suspect embarqué !");return 1;}
						new randt = random(4)+1;
						if(randt == 1)
						{
							format(string, sizeof(string), "* %s essaye de tazer %s, mais rate.", PlayerInfo[playerid][pName] ,PlayerInfo[suspect][pName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						}
						else
						{
							format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez été Tazé par un Officier pendant 8 secondes.");
							msg_Client(suspect, COLOR_INFO, string);
							format(string, sizeof(string), "{007AFF}» Police «{FFFFFF} Vous Tazer le suspect pour 8 secondes.");
							msg_Client(playerid, COLOR_POLICE, string);
							format(string, sizeof(string), "* %s vient de tazer %s.", PlayerInfo[playerid][pName] ,PlayerInfo[suspect][pName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							GameTextForPlayer(suspect, "~r~Tazer", 2500, 3);
							TogglePlayerControllable(suspect, 0);
							LoopingAnim(suspect, "CRACK", "SPECIAL_ACTION_CUFFED", 4.0, 1, 0, 0, 0, 0);
							player_Cuffed[suspect] = 10;
							player_CuffedTime[suspect] = 8;
						}
					}
					else
						{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Personne à tazer!");return 1;}
				}
				else
					{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Persone à tazer.");return 1;}
			}
            new Float:x, Float:y, Float:z;
            if(!basket_HavingBall[playerid])
			{
			    new tmpBall=-1;
			    for(new i=0; i<MAX_BALL; i++)
			    {
			        if(basket[i][used] == 0)
			            {continue;}
			        GetDynamicObjectPos(basket[i][object], x, y, z);
			        if(IsPlayerInRangeOfPoint(playerid, 1.5, x, y, z))
			        	{tmpBall=i; break;}
			    }
			    if(tmpBall==-1)
			        {return 1;}
				basket_HavingBall[playerid] = 1;
				ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
				if(basket[tmpBall][owner] != -1)
				{
					basket_HavingBall[basket[tmpBall][owner]] = 0;
					ClearAnimations(basket[tmpBall][owner]);
					ApplyAnimation(basket[tmpBall][owner], "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid,"BSKTBALL","BBALL_walk",4.1,1,1,1,1,1);
				}
				basket[tmpBall][owner] = playerid;
				basket[tmpBall][statut] = 1;
				new Float:x2, Float:y2;
				GetXYInFrontOfPlayer(playerid, x2, y2, 0.8);
				GetPlayerPos(playerid, x, y, z);
				StopDynamicObject(basket[tmpBall][object]);
				MoveDynamicObject(basket[tmpBall][object], x2, y2, z, 2.5);
				basket_Anim[playerid] = 0;
				basket[tmpBall][bounce] = 0;
			}
			else if(basket_HavingBall[playerid] == 1)
			{
			    new tmpBall=-1;
			    for(new i=0; i<MAX_BALL; i++)
			    {
			        if(basket[i][used] == 0)
			            {continue;}
			        if(basket[tmpBall][owner] == playerid)
			        	{tmpBall=i; break;}
			    }
			    if(tmpBall==-1)
			        {return 1;}
			    for(new i=0; i < MAX_PLAYERS_CURRENT+1; i++)
				{
					if(!IsPlayerConnected(i))
						{continue;}
					if(!IsPlayerFacingPlayer(playerid, i, 15))
						{continue;}
					GetPlayerPos(i, x, y, z);
					if(!IsPlayerInRangeOfPoint(playerid, 20.0, x, y, z))
						{continue;}
					basket[tmpBall][owner] = i;
					basket_HavingBall[playerid] = 0;
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
					SetTimerEx("ClearAnim", 700, 0, "d", playerid);
					MoveDynamicObject(basket[tmpBall][object], x, y, z, 13+random(4));
					basket_Anim[i] = 0;
					basket[tmpBall][shooting] = 6;
					ApplyAnimation(i,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
					return 1;
				}
				GetPlayerPos(playerid, x, y, z);
				basket_HavingBall[playerid] = 0;
				new Float:x2, Float:y2;
				GetXYInFrontOfPlayer(playerid, x2, y2, 6.0);
				SetTimerEx("BallDown", 600, 0, "df", playerid, z, tmpBall);
				MoveDynamicObject(basket[tmpBall][object], x2, y2, z+random(8)+3, 10.0+random(4));
				ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
				basket[tmpBall][shooting] = 0;
			}
		}
    }
    else if ((newkeys == KEY_SECONDARY_ATTACK)) // Key 'entrer' ou 'f'
    {
        if(!IsPlayerInAnyVehicle(playerid))
            {player_CheckEnter(playerid);}
            
        if(GetPlayerState(playerid) == 1 && job_Start[playerid] == 1)// On foot = A pied
		{
		    if(PlayerInfo[playerid][pJob] == 3 && job_ObjectN[playerid]==2)
		    {
		        job_ObjectN[playerid]=-1;
		        LoopingAnim(playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0);
		        job_City[playerid]++;
		        SetTimerEx("job_Apply",1000,0,"iii",playerid,3,1);
		    }
		}
        new Float:poss[3];
	    GetPlayerPos(playerid, poss[0], poss[1], poss[2]);
	    if(poss[1] < -1301.4 && poss[1] > -1303.2417 && poss[0] < 1786.2131 && poss[0] > 1784.1555)    // He is using the elevator button
     	{
     	    if(!IsPlayerInAnyVehicle(playerid))
     	    {
		 		ShowElevatorDialog(playerid);
		 	}
		}
		else
		{
		    if(!IsPlayerInAnyVehicle(playerid))
		    {
			    if(poss[1] > -1301.4 && poss[1] < -1299.1447 && poss[0] < 1785.6147 && poss[0] > 1781.9902)
			    {
					new i=20;
					while(poss[2] < GetDoorsZCoordForFloor(i) + 3.5 && i > 0)
					    i --;

					if(i == 0 && poss[2] < GetDoorsZCoordForFloor(0) + 2.0)
					    i = -1;

					if(i <= 19)
					{
						CallElevator(playerid, i + 1);
						GameTextForPlayer(playerid, "~r~Escensseur appele", 3500, 4);
					}
			    }
		    }
		}
	}
    else if(newkeys & KEY_SUBMISSION)// Key 'sous-mission' ou 'é'
    {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
            if(IsPlayerInAnyVehicle(playerid))
	        {
	        	if(IsAPlane(carid))
	            {
	            	if(vehicle[carid][cLight] == false)
	            		{format(string, sizeof(string), "* %s range ses roues.",PlayerInfo[playerid][pName]);vehicle[carid][cLight] = true;}
	            	else
	            		{format(string, sizeof(string), "* %s sort ses roues.",PlayerInfo[playerid][pName]);vehicle[carid][cLight] = false;}
	            	ProxDetector(40.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	            }
	            else if(IsABoat(carid))
					{return 1;}
				else if(pveh == 497)
				{
				    if(vehicle[carid][cLight] == false)
	            	{
	            		new engine,lights,alarm,doors,bonnet,boot,objective;
        				if(carid != INVALID_VEHICLE_ID)
						{
        					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
        					SetVehicleParamsEx(carid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
        					format(string, sizeof(string), "* %s allume le projecteur.",PlayerInfo[playerid][pName]);
         					ProxDetector(40.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	            			vehicle[carid][cLight] = true;
	            		}
	            	}
	            	else
	            	{
						new engine,lights,alarm,doors,bonnet,boot,objective;
        				if(carid != INVALID_VEHICLE_ID)
						{
        					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
        					SetVehicleParamsEx(carid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
        					format(string, sizeof(string), "* %s eteint le projecteur.",PlayerInfo[playerid][pName]);
         					ProxDetector(40.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				    		vehicle[carid][cLight] = false;
				    	}
	            	}
				}
    			else if(pveh == 417 || pveh == 425 || pveh == 447 || pveh == 469 || pveh == 447 || pveh == 487 || pveh == 488 || pveh == 447 || pveh == 563)
					{return 1;}
	            else
	            {
	            	if(vehicle[carid][cLight] == false)
	            	{
	            		new engine,lights,alarm,doors,bonnet,boot,objective;
        				if(carid != INVALID_VEHICLE_ID)
						{
        					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
        					SetVehicleParamsEx(carid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
        					format(string, sizeof(string), "* %s allume ses phares.",PlayerInfo[playerid][pName]);
        					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
	            			vehicle[carid][cLight] = true;
	            			speedometer_Update(playerid,2,0);
	            		}
	            	}
	            	else
	            	{
						new engine,lights,alarm,doors,bonnet,boot,objective;
        				if(carid != INVALID_VEHICLE_ID)
						{
        					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
        					SetVehicleParamsEx(carid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
        					format(string, sizeof(string), "* %s éteint ses phares.",PlayerInfo[playerid][pName]);
         					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
				    		vehicle[carid][cLight] = false;
				    		speedometer_Update(playerid,2,0);
				    	}
	            	}
                	return 1;
				}
	        }
        }
    }
    else if((newkeys & KEY_SECONDARY_ATTACK || newkeys & KEY_CROUCH) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER && gPlayerDriveBy[playerid] == true)
    {
		removeDriveBy(playerid);
    }
    else if((newkeys & KEY_CROUCH))
    {
        if(GetPlayerState(playerid) == 3)
		{
		    if (22 <= GetPlayerWeapon(playerid) <= 38 && gPlayerDriveBy[playerid] == false)
		    	{gPlayerDriveBy[playerid]=true;}
		    	
            if(GetPlayerSkin(playerid) == 285 && police_PlayerIsRoped[playerid] == false)
            {
            	new Float:dynPos[5];
                GetPlayerPos(playerid,dynPos[0],dynPos[1],dynPos[2]);
                //MapAndreas_FindZ_For2DCoord(dynPos[0],dynPos[1],dynPos[3]);
                dynPos[4] = floatsub(dynPos[2],dynPos[3]);
                if(dynPos[4] >= 50)
					{return msg_Client(playerid,COLOR_POLICE, "{007AFF}» Police «{FFFFFF} Vous êtes trop haut pour descendre en rappel.");}
                if(dynPos[4] <= 2)
					{return RemovePlayerFromVehicle(playerid);}
                police_PlayerIsRoped[playerid]=true;
                gPlayerCheckpoint[playerid] = 13;
                SetPlayerCheckpoint(playerid,dynPos[0],dynPos[1],floatsub(dynPos[3],1),7.0);
                SetPlayerPos(playerid,dynPos[0],dynPos[1],floatsub(dynPos[2],2));
                SetPlayerVelocity(playerid,0,0,0);
                ApplyAnimation(playerid,"ped","abseil",4.0,1,1,1,1,0,1);
                for(new i=0;i<dynPos[4];i++)
                	{police_Rope[playerid][i] = CreateDynamicObject(19087,dynPos[0],dynPos[1],floatadd(dynPos[3],i),0,0,0,-1,-1,-1,STREAM_DISTANCE);}
            }
		}
	    if(GetPlayerState(playerid) == 2)
		{
		    gate_Check(playerid,1,"None");
	  		if(pveh == 427 || pveh == 490 || pveh == 528 || pveh == 596 || pveh == 598 || pveh == 597 || pveh == 599 || pveh == 601 || pveh == 433 || pveh == 470 || pveh == 416 || pveh == 407 || pveh == 544)
	  		{
	  		    if(PlayerInfo[playerid][pMember] >= 0 || PlayerInfo[playerid][pMember] <=6 || PlayerInfo[playerid][pLeader] >= 0 || PlayerInfo[playerid][pLeader] <=6)
	  		    {
	  		        if(police_Giro[carid] == 0)
	  		        {
	  		        	police_Giro[carid] = 1;
	  		        	CommencementBlink(playerid);
	  		        	vehicle[carid][cLight] = true;
	  		        }
	  		        else if(police_Giro[carid] == 1)
	  		        {
	  		            police_Giro[carid] = 0;
	  		            ShutOffBlinkingLights(playerid);
	  		            vehicle[carid][cLight] = false;
	  		        }
	  		    }
	  		}
		}
		if(GetPlayerState(playerid)==1)
		{
		    gate_Check(playerid,4,"None");
		    drop_PlayerOnPickup(playerid);
		    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		    {
		        if(PlayerToPoint(1.5, playerid,bag[i][pos][0],bag[i][pos][1],bag[i][pos][2]) && bag[i][statut]==1 && i != playerid)
		        	{bag_ShowDialog(playerid,i);break;}
		    }
		}
		/*if(!(oldkeys & KEY_CROUCH) && !IsPlayerInAnyVehicle(playerid))
        {
            if(basket_HavingBall[playerid])
                {ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,1,1,1,1);}
            else
                {ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);}
            basket_Anim[playerid] = 1;
        }*/
    }
    /*else if (!(newkeys & KEY_CROUCH) && (oldkeys & KEY_CROUCH) && !IsPlayerInAnyVehicle(playerid))
    	{ClearAnimations(playerid);basket_Anim[playerid] = 0;}*/
   	return 1;
}
public CommencementBlink(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
    {
        new enginem, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(GetPlayerVehicleID(playerid), enginem, lights, alarm, doors, bonnet, boot, objective);
        SetVehicleParamsEx(GetPlayerVehicleID(playerid), enginem, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
    	new Panels, Doors1, Lights, Tires;
    	GetVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, Lights, Tires);
    	UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, Encore_Lights(0,0,1,1), Tires);
        TLI = SetTimerEx("TimerBlinkingLights", 100, false, "d", GetPlayerVehicleID(playerid));
    }
}
public ShutOffBlinkingLights(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
	{
	    new enginem, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(GetPlayerVehicleID(playerid), enginem, lights, alarm, doors, bonnet, boot, objective);
        SetVehicleParamsEx(GetPlayerVehicleID(playerid), enginem, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
    	KillTimer(TLI);
    	KillTimer(TLI2);
    	new Panels, Doors1, Lights, Tires;
    	GetVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, Lights, Tires);
   		UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors1, Encore_Lights(0,0,0,0), Tires);
	}
}
public TimerBlinkingLights(carid)
{
	new Panels, Doors1, Lights, Tires;
	GetVehicleDamageStatus(carid, Panels, Doors1, Lights, Tires);
	UpdateVehicleDamageStatus(carid, Panels, Doors1, Encore_Lights(1,1,0,0), Tires);
	TLI2 = SetTimerEx("TimerBlinkingLights2", 100, false, "d", carid);
}
public TimerBlinkingLights2(carid)
{
	new Panels, Doors1, Lights, Tires;
	GetVehicleDamageStatus(carid, Panels, Doors1, Lights, Tires);
	UpdateVehicleDamageStatus(carid, Panels, Doors1, Encore_Lights(0,0,1,1), Tires);
	TLI = SetTimerEx("TimerBlinkingLights", 100, false, "d", carid);
}
public Encore_Lights(light1, light2, light3, light4)
{
        return light1 | (light2 << 1) | (light3 << 2) | (light4 << 3);
}
public uniquebizz_PaySpray(playerid, biz)
{
	new carid = GetPlayerVehicleID(playerid);
	SafeSetVehiclePos(carid,sbizz[biz][ubEntrance_x],sbizz[biz][ubEntrance_y],sbizz[biz][ubEntrance_z]);
	if(vehicle[carid][cType] > 0 && vehicle[carid][cType] < 6)
	    {msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} L'état paye pour vous.");}
	else
		{SafeGivePlayerMoney(playerid, -sbizz[biz][ubEnterPrice],"PayN Spay");}
	sbizz[biz][ubCaisse] += sbizz[biz][ubEnterPrice];
	uniquebizz_Save(biz);
	return 1;
}
public StartingTheVehicle(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
    		new string[256];
            new RandomStart = random(10);
            switch(RandomStart)
            {
                case 0..8,10:
                {
                    car_Starting[playerid] = false;
                    vehicle[GetPlayerVehicleID(playerid)][cEngine] = true;
                    TogglePlayerControllable(playerid, true);
                    format(string, sizeof(string), "* Le véhicule de %s démarre.", PlayerInfo[playerid][pName]);
                    SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
                    msg_Box(playerid, "~g~", "Véhicule", "Le véhicule a démarré.", 5000);
                    new playerveh = GetPlayerVehicleID(playerid);
                    new engine,lights,alarm,doors,bonnet,boot,objective;
         		    GetVehicleParamsEx(playerveh,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(playerveh,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
                    speedometer_Update(playerid,1,0);
                }
                case 9:
                {
                    car_Starting[playerid] = false;
                    vehicle[GetPlayerVehicleID(playerid)][cEngine] = false;
                    format(string, sizeof(string), "* Le véhicule de %s à callé.", PlayerInfo[playerid][pName]);
					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
					msg_Box(playerid, "~g~", "Véhicule", "Le véhicule a callé.", 5000);
		            new playerveh = GetPlayerVehicleID(playerid);
                    new engine,lights,alarm,doors,bonnet,boot,objective;
         		    GetVehicleParamsEx(playerveh,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(playerveh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                }
            }
        }
    }
    return 1;
}
stock gang_TimerVoleCar(playerid)
{
	if(gang_PlayerVoleCar[playerid] == 1)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    gang_PlayerVoleCar[playerid] = 0;
	    msg_Client(playerid, COLOR_INFO,"{006500}» Gang «{FFFFFF} Vous avez mis trop de temps pour apporter le véhicule. Vous avez échoué.");
	    DisablePlayerCheckpoint(playerid);
	    gang_TimerForVoleCar[playerid]=0;
	    new engine,lights,alarm,doors,bonnet,boot,objective;
  		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
        vehicle[vehicleid][cEngine]=false;
	}
	return 1;
}

public StartingTheVehicleVoler(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
    		new string[256];
            new RandomStart = random(7);
            switch(RandomStart)
            {
                case 0,2,3,4,6:
                {
                    car_Starting[playerid] = false;
                    vehicle[GetPlayerVehicleID(playerid)][cEngine] = true;
                    TogglePlayerControllable(playerid, true);
                    format(string, sizeof(string), "* %s a reussi à raccorder les files et le véhicule démarre.", PlayerInfo[playerid][pName]);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
                    new playerveh = GetPlayerVehicleID(playerid);
                    new engine,lights,alarm,doors,bonnet,boot,objective;
         		    GetVehicleParamsEx(playerveh,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(playerveh,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
                }
                case 1,5:
                {
                    car_Starting[playerid] = false;
                    format(string, sizeof(string), "* %s n'a pas réussi à raccorder les files.", PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		            new playerveh = GetPlayerVehicleID(playerid);
                    new engine,lights,alarm,doors,bonnet,boot,objective;
         		    GetVehicleParamsEx(playerveh,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(playerveh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                }
            }
        }
    }
    return 1;
}
stock gym_SetCombatStyle(playerid, combatStyle, definitif)
{
	if(definitif)
		{PlayerInfo[playerid][pCombatStyle] = combatStyle;}
	switch (combatStyle)
	{
	    case 0:
	        {SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);}
		case 1:
		    {SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);}
		case 2:
		    {SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);}
		case 3:
		    {SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);}
		case 4:
		    {SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);}
		case 5:
		    {SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);}
	}
}
stock skill_Set(playerid)
{
    /*SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 200);*/
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, (PlayerInfo[playerid][pSkill][0]+200));
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, (PlayerInfo[playerid][pSkill][1]+999));
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, (PlayerInfo[playerid][pSkill][2]+999));
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, (PlayerInfo[playerid][pSkill][3]));
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, (PlayerInfo[playerid][pSkill][5]+999));
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, (PlayerInfo[playerid][pSkill][6]+999));
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, (PlayerInfo[playerid][pSkill][7]+999));
	return 1;
}
public skill_Trainning(playerid)
{
    if(skill_WeaponTrainning[playerid] == 4)
	{
		SafeGivePlayerMoney(playerid,-45,"Skill arme");
		ClearAnimations(playerid);
	}
    if(skill_WeaponTrainning[playerid] == 1)
	{
	    if(skill_WeaponPhase[playerid] == 1)
	    {
			SafeGivePlayerWeapon(playerid, 22, 1);
			TogglePlayerControllable(playerid,false);
			SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
			SetPlayerFacingAngle(playerid, 93.0408);
			SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
			SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
			ApplyAnimation(playerid,"COLT45","colt45_fire",4.0,1,1,1,1,10000);
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 1/3 Encore 10 secondes.");
			SetTimerEx("skill_Trainning", 10000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 2;
		}
		else if(skill_WeaponPhase[playerid] == 2)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 2/3 Encore 20 secondes.");
			SetTimerEx("skill_Trainning", 20000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 3;
		}
		else if(skill_WeaponPhase[playerid] == 3)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 3/3 Encore 30 secondes.");
			SetTimerEx("skill_Trainning", 30000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 4;
		}
		else if(skill_WeaponPhase[playerid] == 4)
	    {
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			PlayerInfo[playerid][pSkill][0] += 40;
			PlayerInfo[playerid][pWepTrainTime] = 7;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Entrainement terminé.");
			skill_WeaponPhase[playerid] = 0;
			skill_WeaponTrainning[playerid] = 0;
		}
	}
	else if(skill_WeaponTrainning[playerid] == 2)
	{
		if(skill_WeaponPhase[playerid] == 1)
	    {
			SafeGivePlayerWeapon(playerid, 22, 1);
			TogglePlayerControllable(playerid,false);
			SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
			SetPlayerFacingAngle(playerid, 93.0408);
			SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
			SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
			ApplyAnimation(playerid,"SILENCED","Silence_fire",4.0,1,1,1,1,12500);
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 1/3 Encore 10 secondes.");
			SetTimerEx("skill_Trainning", 10000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 2;
		}
		else if(skill_WeaponPhase[playerid] == 2)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 2/3 Encore 20 secondes.");
			SetTimerEx("skill_Trainning", 20000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 3;
		}
		else if(skill_WeaponPhase[playerid] == 3)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 3/3 Encore 30 secondes.");
			SetTimerEx("skill_Trainning", 30000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 4;
		}
		else if(skill_WeaponPhase[playerid] == 4)
	    {
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			PlayerInfo[playerid][pSkill][1] += 40;
			PlayerInfo[playerid][pWepTrainTime] = 7;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Entrainement terminé.");
			skill_WeaponPhase[playerid] = 0;
			skill_WeaponTrainning[playerid] = 0;
		}
	}
	else if(skill_WeaponTrainning[playerid] == 3)
	{
		if(skill_WeaponPhase[playerid] == 1)
	    {
			SafeGivePlayerWeapon(playerid, 22, 1);
			TogglePlayerControllable(playerid,false);
			SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
			SetPlayerFacingAngle(playerid, 93.0408);
			SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
			SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
			ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.0,1,1,1,1,30000);
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 1/3 Encore 10 secondes.");
			SetTimerEx("skill_Trainning", 10000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 2;
		}
		else if(skill_WeaponPhase[playerid] == 2)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 2/3 Encore 20 secondes.");
			SetTimerEx("skill_Trainning", 20000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 3;
		}
		else if(skill_WeaponPhase[playerid] == 3)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 3/3 Encore 30 secondes.");
			SetTimerEx("skill_Trainning", 30000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 4;
		}
		else if(skill_WeaponPhase[playerid] == 4)
	    {
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			PlayerInfo[playerid][pSkill][2] += 40;
			PlayerInfo[playerid][pWepTrainTime] = 7;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Entrainement terminé.");
			skill_WeaponPhase[playerid] = 0;
			skill_WeaponTrainning[playerid] = 0;
		}
	}
	else if(skill_WeaponTrainning[playerid] == 4)
	{
		if(skill_WeaponPhase[playerid] == 1)
	    {
			SafeGivePlayerWeapon(playerid, 22, 1);
			TogglePlayerControllable(playerid,false);
			SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
			SetPlayerFacingAngle(playerid, 93.0408);
			SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
			SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
			ApplyAnimation(playerid,"COLT45","colt45_fire",4.0,1,1,1,1,10000);
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 1/3 Encore 10 secondes.");
			SetTimerEx("skill_Trainning", 10000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 2;
		}
		else if(skill_WeaponPhase[playerid] == 2)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 2/3 Encore 20 secondes.");
			SetTimerEx("skill_Trainning", 20000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 3;
		}
		else if(skill_WeaponPhase[playerid] == 3)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 3/3 Encore 30 secondes.");
			SetTimerEx("skill_Trainning", 30000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 4;
		}
		else if(skill_WeaponPhase[playerid] == 4)
	    {
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			PlayerInfo[playerid][pSkill][3] += 40;
			PlayerInfo[playerid][pWepTrainTime] = 7;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Entrainement terminé.");
			skill_WeaponPhase[playerid] = 0;
			skill_WeaponTrainning[playerid] = 0;
		}
	}
	else if(skill_WeaponTrainning[playerid] == 5)
	{
		if(skill_WeaponPhase[playerid] == 1)
	    {
			SafeGivePlayerWeapon(playerid, 22, 1);
			TogglePlayerControllable(playerid,false);
			SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
			SetPlayerFacingAngle(playerid, 93.0408);
			SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
			SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
			ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.0,1,1,1,1,35000);
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 1/3 Encore 10 secondes.");
			SetTimerEx("skill_Trainning", 10000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 2;
		}
		else if(skill_WeaponPhase[playerid] == 2)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 2/3 Encore 20 secondes.");
			SetTimerEx("skill_Trainning", 20000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 3;
		}
		else if(skill_WeaponPhase[playerid] == 3)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 3/3 Encore 30 secondes.");
			SetTimerEx("skill_Trainning", 30000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 4;
		}
		else if(skill_WeaponPhase[playerid] == 4)
	    {
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			PlayerInfo[playerid][pSkill][5] += 40;
			PlayerInfo[playerid][pWepTrainTime] = 7;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Entrainement terminé.");
			skill_WeaponPhase[playerid] = 0;
			skill_WeaponTrainning[playerid] = 0;
		}
	}
	else if(skill_WeaponTrainning[playerid] == 6)
	{
		if(skill_WeaponPhase[playerid] == 1)
	    {
			SafeGivePlayerWeapon(playerid, 22, 1);
			TogglePlayerControllable(playerid,false);
			SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
			SetPlayerFacingAngle(playerid, 93.0408);
			SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
			SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
			ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.0,1,1,1,1,35000);
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 1/3 Encore 10 secondes.");
			SetTimerEx("skill_Trainning", 10000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 2;
		}
		else if(skill_WeaponPhase[playerid] == 2)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 2/3 Encore 20 secondes.");
			SetTimerEx("skill_Trainning", 20000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 3;
		}
		else if(skill_WeaponPhase[playerid] == 3)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 3/3 Encore 30 secondes.");
			SetTimerEx("skill_Trainning", 30000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 4;
		}
		else if(skill_WeaponPhase[playerid] == 4)
	    {
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			PlayerInfo[playerid][pSkill][6] += 40;
			PlayerInfo[playerid][pWepTrainTime] = 7;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Entrainement terminé.");
			skill_WeaponPhase[playerid] = 0;
			skill_WeaponTrainning[playerid] = 0;
		}
	}
	else if(skill_WeaponTrainning[playerid] == 7)
	{
		if(skill_WeaponPhase[playerid] == 1)
	    {
			SafeGivePlayerWeapon(playerid, 22, 1);
			TogglePlayerControllable(playerid,false);
			SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
			SetPlayerFacingAngle(playerid, 93.0408);
			SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
			SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
			ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.0,1,1,1,1,35000);
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 1/3 Encore 10 secondes.");
			SetTimerEx("skill_Trainning", 10000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 2;
		}
		else if(skill_WeaponPhase[playerid] == 2)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 2/3 Encore 20 secondes.");
			SetTimerEx("skill_Trainning", 20000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 3;
		}
		else if(skill_WeaponPhase[playerid] == 3)
	    {
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Phase de l'entrainement 3/3 Encore 30 secondes.");
			SetTimerEx("skill_Trainning", 30000, false, "i", playerid);
			skill_WeaponPhase[playerid] = 4;
		}
		else if(skill_WeaponPhase[playerid] == 4)
	    {
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			PlayerInfo[playerid][pSkill][7] += 40;
			PlayerInfo[playerid][pWepTrainTime] = 7;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Entrainement terminé.");
			skill_WeaponPhase[playerid] = 0;
			skill_WeaponTrainning[playerid] = 0;
		}
	}
	OnPlayerUpdateSQL(playerid);
	skill_Set(playerid);
	return 1;
}


forward SafeSetPlayerHealth(playerid,Float:amount);
public SafeSetPlayerHealth(playerid,Float:amount)
{
    if(IsPlayerNPC(playerid))
		{return 1;}
		
	PlayerInfo[playerid][pHealth] = amount;
	if(PlayerInfo[playerid][pHealth] > 200.0)
	    {PlayerInfo[playerid][pHealth]=200.0;}
	SetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
	UpdateStatsTextsPlayers(playerid,4);
	return 1;
}

stock SafeGivePlayerHeath(playerid,Float:amount)
{
    if(IsPlayerNPC(playerid))
		{return 1;}

	new Float:Toto = PlayerInfo[playerid][pHealth]+=amount;
	if(Toto > 200.0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 2)
	    	{Toto=200.0;}
	}
	PlayerInfo[playerid][pHealth] = Toto;
	SetPlayerHealth(playerid,Toto);
	UpdateStatsTextsPlayers(playerid,4);
	return 1;
}

stock SafeSetPlayerArmour(playerid,Float:amount)
{
    if(IsPlayerNPC(playerid))
		{return 1;}
	if(amount > 100.0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 2)
	    	{amount=100.0;}
	}
	PlayerInfo[playerid][pArmour] = amount;
	SetPlayerArmour(playerid,amount);
	UpdateStatsTextsPlayers(playerid,4);
	return 1;
}

stock SafeGivePlayerArmour(plyid,Float:amounttogive)
{
    if(IsPlayerNPC(plyid))
		{return 1;}

	new Float:Toto = PlayerInfo[plyid][pArmour]+=amounttogive;
	if(Toto > 100)
	{
	    if(PlayerInfo[plyid][pAdmin] < 2)
	    	{Toto=100;}
	}
	PlayerInfo[plyid][pArmour] = Toto;
	SetPlayerArmour(plyid,Toto);
	UpdateStatsTextsPlayers(plyid,4);
	return 1;
}

stock SafeSetVehicleHealth(carid,Float:amount)
{
 	vehicle[carid][cHealth]=amount;
 	SetVehicleHealth(carid,amount);
}

stock SafeSetPlayerPos(playerid,Float:x,Float:y,Float:z)
{
	SetPlayerPos(playerid,x,y,z);
	PlayerInfo[playerid][pCurrentPos][0]=x;
	PlayerInfo[playerid][pCurrentPos][1]=y;
	PlayerInfo[playerid][pCurrentPos][2]=z;
	PlayerInfo[playerid][pSetPos][0]=x;
	PlayerInfo[playerid][pSetPos][1]=y;
	PlayerInfo[playerid][pSetPos][2]=z;
	Streamer_UpdateEx(playerid, x, y, z, PlayerInfo[playerid][pVirWorld], PlayerInfo[playerid][pInt]);
}

stock SafeSetVehiclePos(carid,Float:x,Float:y,Float:z)
{
	SetVehiclePos(carid,x,y,z);
	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i) && GetPlayerVehicleID(i) == carid)
	    {
	        PlayerInfo[i][pCurrentPos][0]=x;
			PlayerInfo[i][pCurrentPos][1]=y;
			PlayerInfo[i][pCurrentPos][2]=z;
			PlayerInfo[i][pSetPos][0]=x;
			PlayerInfo[i][pSetPos][1]=y;
			PlayerInfo[i][pSetPos][2]=z;
	    }
	}
}

stock SafeGivePlayerMoney(plyid, amounttogive,reason[])
{
    PlayerInfo[plyid][pCash]+=amounttogive;
	GivePlayerMoney(plyid,amounttogive);
	if(IsPlayerConnected(plyid) && gPlayerLogged[plyid]!=0)
	{
	    if(amounttogive == 0)
			{return 1;}
		new string[96];
		if(amounttogive > 0)
			{format(string, sizeof(string), "~g~+$%d", amounttogive);}
		else if(amounttogive < 0)
			{format(string, sizeof(string), "~r~-$%d", -amounttogive);}
			
		GameTextForPlayer(plyid, string, 5000, 1);
	}
	MySQLCheckConnexion();
	format(sql,sizeof(sql),"INSERT INTO lvrp_log_pay (Date,SQLid,Reason,Somme,Ip)  VALUES (UNIX_TIMESTAMP(),'%d','%s','%d','%s')",PlayerInfo[plyid][pSQLID],reason,amounttogive,PlayerInfo[plyid][pIP]);
	mysql_pquery(MYSQL,sql);
	return 1;
}

stock anticheat_AirBreak(playerid)
{
	if(PlayerInfo[playerid][pAdmin] > 0 || inscription_Step[playerid] > 0)
	    {return 1;}
	new surfing = (GetPlayerSurfingVehicleID(playerid) != INVALID_VEHICLE_ID || GetPlayerSurfingObjectID(playerid) != INVALID_OBJECT_ID);
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
    if (!surfing && (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT || (GetPlayerState(playerid) == PLAYER_STATE_DRIVER && anticheat_GetPlayerSpeed(playerid,true) < 30)))
	{
	    new var = floatround (GetPlayerDistanceFromPoint (playerid, PlayerInfo[playerid][pCurrentPos][0], PlayerInfo[playerid][pCurrentPos][1], PlayerInfo[playerid][pCurrentPos][2]));
		if (var >= 150)
		{
			anticheat_Warn[playerid][6]++;
			if (anticheat_Warn[playerid][6] == 1)
			{
				new string[128];
			    format(string,sizeof(string),"{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické, raison : Air-Brake.",PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(0x40FF40FF,string);
				SetTimerEx("TimerKick", 1000, 0, "i", playerid);
			}
		}
		else
			{anticheat_Warn[playerid][6] = 0;}
	}
	PlayerInfo[playerid][pCurrentPos][0] = x;
	PlayerInfo[playerid][pCurrentPos][1] = y;
	PlayerInfo[playerid][pCurrentPos][2] = z;
	/*
	if(PlayerInfo[playerid][pAdmin] > 0)
	    {return 1;}
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
    if ((GetPlayerState(playerid) == PLAYER_STATE_ONFOOT || (GetPlayerState(playerid) == PLAYER_STATE_DRIVER && anticheat_GetPlayerSpeed(playerid,true) < 30)))
	{
		new var = (floatround (floatsqroot (GetSquareDistance (x, y, z, PlayerInfo[playerid][pCurrentPos][0], PlayerInfo[playerid][pCurrentPos][1], PlayerInfo[playerid][pCurrentPos][2])) * 3600) / (GetTickCount () - PlayerInfo[playerid][pLastCheck]));
		if (var >= 300 && var <= 1500)
		{
			anticheat_Warn[playerid][6]++;
			if (anticheat_Warn[playerid][6] == 1)
			{
				new string[128];
			    format(string,sizeof(string),"{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické, raison : Air-Brake.",PlayerInfo[playerid][pRealName]);
				SendClientMessageToAll(0x40FF40FF,string);
				SetTimerEx("TimerKick", 1000, 0, "i", playerid);
			}
		}
		else
			{anticheat_Warn[playerid][6] = 0;}
	}
	*/
	return 1;
}

#if !defined abs
	#define abs(%1) \
		(((%1) < 0) ? (-(%1)) : ((%1)))
#endif

public atm_Repair(id,phase)
{
	if(phase == 1)
	{
	    atm[id][rob]=2;
	    atm_UpdateInfos(id);
	    SetTimerEx("atm_Repair",240*(60000),0,"i",id,2);
    }
    else
    {
        atm[id][rob]=0;
    }
	return 1;
}

stock atm_CheckRob(playerid)
{
	if(PlayerInfo[playerid][pMember] >= 200 && PlayerInfo[playerid][pRank] > 1 && FactionInfo[PlayerInfo[playerid][pMember]-200][fType] == 1)
	{
	    frapATM[playerid]++;
		new string[128];
		if(frapATM[playerid]>=4)
		{
		    frapATM[playerid]=0;
			if(UsePiedBiche[playerid]==1)
			{
		    	for(new i = 0; i < totalATMs; i++)
				{
				    if(PlayerToPoint(1.0, playerid,atm[i][pos][0],atm[i][pos][1],atm[i][pos][2]))
					{
					    if(atm[i][used] == 1 && atm[i][cash]> 100 && atm[i][rob] == 0)
					    {
					        frapATM[playerid]=0;
					        if(PlayerInfo[playerid][pRobTimeATM]> 0)
					            {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà vandalisé un ATM recemment.");}
	                        if(Flicservice < 2)
	    						{msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Il faut 2 policiers en service.");return 1;}
					        atm[i][rob]=1;
					        PlayerInfo[playerid][pRobTimeATM]=7200;
					        if(IsValidDynamicObject(atm_Object[i]))
					        	{DestroyDynamicObject(atm_Object[i]);}
					        atm_Object[i] = CreateDynamicObject(2943,atm[i][pos][0],atm[i][pos][1],atm[i][pos][2],0.0,0.0,atm[i][pos][3],-1,-1,-1,STREAM_DISTANCE);
					        UpdateDynamic3DTextLabelText(atm_Label[i],0x33CCFFEE,"{33CCFF}[ATM - HS]\n{FFFFFF}Cet ATM a été vandalisé");
					        new cashs = random(250)+1;
					        SafeGivePlayerMoney(playerid,cashs,"Vandalisme ATM");
					        SetPlayerCriminal(playerid,-1,-1,"Vandalisme ATM",1);
					        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez gagnez $%d en vendalisant cet ATM.",cashs);
					        msg_Client(playerid,COLOR_INFO,string);
					        SetTimerEx("atm_Repair",300000,0,"i",i,1); // 300
					        format(string, sizeof(string), "* %s frape l'ATM à l'aide de son pied de biche et fait tomber de l'argent.", PlayerInfo[playerid][pName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(playerid,X,Y,Z);
							SendFamilyMessage(1,COLOR_POLICE,"» Alerte « Le système de sécurité d'un ATM c'est déclenché.");
							SendFamilyMessage(3,COLOR_POLICE,"» Alerte « Le système de sécurité d'un ATM c'est déclenché.");
							SendFamilyMessage(4,COLOR_POLICE,"» Alerte « Le système de sécurité d'un ATM c'est déclenché.");
							for(new a=0; a<MAX_PLAYERS_CURRENT+1; a++)
							{
								if(/*PlayerInfo[a][pMember] == GetCountyPos(X,Y)+1*/ PlayerInfo[a][pMember]==1 || PlayerInfo[a][pMember]==3 || PlayerInfo[a][pMember]==4)
								{
									SetPlayerCheckpoint(a,X,Y,Z,5.0);
								}
							}
					        break;
					    }
					    else
					        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cet ATM a été vandalisé récemment ou celui-ci est presque vide."); break;}
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
	for(new i=0;i<totalDrops; i++)
	{
	    if(drop[i][model] == 1650)
	    {
	        if(weaponid < 22 || weaponid > 34)
	        	{return 1;}
			CreateExplosion(drop[i][pos][0],drop[i][pos][1],drop[i][pos][2],0,10);
			CreateExplosion(drop[i][pos][0],drop[i][pos][1],drop[i][pos][2],0,10);
			drop_Remove(i);
	    }
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
    if(gPlayerMask[playerid] != 0)
        {ShowPlayerNameTagForPlayer(forplayerid,playerid,false);}
    return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    //if((22 <= weaponid <= 34) && (++PlayerInfo[playerid][pShots][weaponid-22] > anticheat_Magazines[weaponid-22]))
    //	{OnPlayerCheat(playerid,2);}

    /*if(16 <= weaponid <= 43)
    {
        new s = GetWeaponSlot(weaponid);
        ScriptWeaponsAmmo[playerid][s]--;
    }*/
    
    new tick = GetTickCount();
    if(((((22 <= weaponid <= 27) || (29 <= weaponid <= 31)) && ((tick - PlayerInfo[playerid][pLastShotTick]) < 25)) || \
        (((weaponid == 28 || weaponid == 32)) && ((tick - PlayerInfo[playerid][pLastShotTick]) < 20)) || \
        (((33 <= weaponid <= 34)) && ((tick - PlayerInfo[playerid][pLastShotTick]) < 300))) && (++anticheat_Warn[playerid][3] == 3))
			{OnPlayerCheat(playerid,3); anticheat_Warn[playerid][3]=0;}

    PlayerInfo[playerid][pLastShotTick] = tick;
    
    new surf[2], Float:pkl[2], Float:vectors[6];
    surf[0] = GetPlayerSurfingVehicleID(playerid), surf[1] = GetPlayerSurfingVehicleID(playerid);
    pkl[0] = NetStats_PacketLossPercent(hitid), pkl[1] = NetStats_PacketLossPercent(playerid);
    GetPlayerLastShotVectors(playerid, vectors[0], vectors[1], vectors[2], vectors[3], vectors[4], vectors[5]);

    //if((hittype == BULLET_HIT_TYPE_PLAYER) && (!IsPlayerNPC(hitid)) && ((AC_PlayerInfo[hitid][pLastUpdate] + 1 >= gettime()) && (!AC_PlayerInfo[playerid][pAimCoolDown])) && ((surf[0] == INVALID_VEHICLE_ID) && (surf[1] == INVALID_VEHICLE_ID) && (!IsPlayerInAnyVehicle(hitid))) && ((pkl[0] < 0.8) && (pkl[1] < 0.8)))
    //    CheckForAimbot(playerid, vectors[3], vectors[4], vectors[5], hitid);

    //if((hittype == BULLET_HIT_TYPE_PLAYER) && (!( 0 <= fX <= 20.0 ) || !( 0 <= fY <= 20.0 ) || !( 0 <= fZ <= 20.0 )))
    //    return OnPlayerCheat(playerid,4), 0;

	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	// Change les dégâts des armes
	/* ID	Body Part
	   3	BODY_PART_TORSO
       4	BODY_PART_CHEST
       5	BODY_PART_LEFT_ARM
       6	BODY_PART_RIGHT_ARM
       7	BODY_PART_LEFT_LEG
       8	BODY_PART_RIGHT_LEG
       9	BODY_PART_HEAD*/
	
	new Float:degat;
	switch(bodypart)
	{
	    case 9:
		{
		    switch(weaponid)
		    {
		        case 22,23,25,28,29,32:
		            {degat=20.0;}
                case 30,31:
		            {degat=30.0;}
                case 33,34:
		            {degat=100.0;}
                default:
                    {degat=amount;}
		    }
	    }
	    case 3,5,6,7,8:
		{
		    switch(weaponid)
		    {
		        case 0:
		            {degat=8.0;}
                case 1,2,3,4,5,6,7,8,15:
		            {degat=12.0;}
		        case 22,23:
		            {degat=30.0;}
                case 25,27:
		            {degat=45.0;}
                case 28,32:
		            {degat=12.0;}
                case 29:
		            {degat=18.0;}
                case 30,31:
		            {degat=35.0;}
                case 33,34:
		            {degat=75.0;}
                default:
                    {degat=amount;}
		    }
	    }
	}
	// Drogues
	if(UsingDrugs[playerid]==4)
	    {degat=degat/2;}
	    
	// FlashBall
	if(issuerid != INVALID_PLAYER_ID)
	{
		if(police_FlashBall[issuerid] == true)
		{
		    LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 1, 0);
		    GameTextForPlayer(playerid,"Flash Ball !",5000,4);
		    degat=7.0;
		}
	}
	
	// Pour ne pas que se soit detecté comme cheat
	if(PlayerInfo[playerid][pArmour] > 0 && bodypart == 3) // Gilet par balles = Le torse
	{
	    PlayerInfo[playerid][pArmour]-=degat;
	    if(PlayerInfo[playerid][pArmour]< 0)
			{PlayerInfo[playerid][pArmour]=0;}
	}
	else
	{
	    if(medic_PlayerNeedMedic[playerid] == 1)
	    {
	        if(weaponid >=0 && weaponid <= 15)
	        	{degat=0.0;}
		}
		PlayerInfo[playerid][pHealth]-=degat;
		if(PlayerInfo[playerid][pHealth]< 0)
			{PlayerInfo[playerid][pHealth]=0.0;}
	}
	SafeSetPlayerArmour(playerid,PlayerInfo[playerid][pArmour]);
	SafeSetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
	UpdateStatsTextsPlayers(playerid,4);
    return 1;
}

public timer_Decrement(i)
{
    	new string[256];
		new carid = GetPlayerVehicleID(i);
		
		new tmpZoneName[28];
		GetPlayer2DZone(i, tmpZoneName, 28);
		PlayerTextDrawSetString(i,zoneLocation[i],tmpZoneName);

	    if(permis_WaitTime[i] > 0)
			{permis_WaitTime[i]-=2;}

		if(mafia_ReCreateWeaponTime[i] > 0)
			{mafia_ReCreateWeaponTime[i]-=2;}

		if(PlayerInfo[i][pRobTime] > 0)
			{PlayerInfo[i][pRobTime]-=2;}

        if(PlayerInfo[i][pRobTimeATM] > 0)
			{PlayerInfo[i][pRobTimeATM]-=2;}
			
		if(PlayerInfo[i][pRobTimeCar] > 0)
			{PlayerInfo[i][pRobTimeCar]-=2;}

        if(PlayerInfo[i][pRobTimeTrunk] > 0)
			{PlayerInfo[i][pRobTimeTrunk]-=2;}
			
		if(IsSmoking[i] > 0)
		    {IsSmoking[i]-=2;}

		if(PlayerInfo[i][pRobTimePocket] > 0)
			{PlayerInfo[i][pRobTimePocket]-=2;}

		if(PlayerInfo[i][pRobTimeBizz] > 0)
			{PlayerInfo[i][pRobTimeBizz]-=2;}
			
			
		if(PlayerDrunk[i] > 0)
		{
		    PlayerDrunk[i]-=10; PlayerDrunkTime[i]++;
		    SetPlayerDrunkLevel(i,PlayerDrunk[i]);
		    if(PlayerDrunkTime[i] >= 10 && PlayerDrunk[i] >= 2000 && !IsPlayerInAnyVehicle(i))
		        {ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0); PlayerDrunkTime[i]=0;}
		}
		
		if(GetPlayerAnimationIndex(i) != 1167)
			{afk_time[i]+=2;}
		
		if(player_Lie[i] != 0)
		{
		    if(PlayerInfo[i][pHealth] < 100)
		    	{SafeGivePlayerHeath(i,5.0);}
			else
			{
			    SafeSetPlayerHealth(i,100.0);
			    player_Lie[i]=0;
			    TogglePlayerControllable(i,true);
			    ClearAnimations(i);
			    msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Votre traitement est terminé.");
			}
		}

		if(job_ExitTime[i] > 0 && !IsPlayerInVehicle(i,job_CarId[i]))
		{
		    job_ExitTime[i]-=2;
		    format(string,sizeof(string),"~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~Vous avez ~w~%d ~p~secondes pour remonter",job_ExitTime[i]);
			GameTextForPlayer(i,string,2000,5);
			if(job_ExitTime[i] <= 0)
				{job_End(i);}
		}
		else
		    {job_ExitTime[i]=0;}
		    
        if(gPlayerMuteOOC[i] > 0)
		{
			gPlayerMuteOOC[i]-=2;
			if(gPlayerMuteOOC[i]<=0)
			    {msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez désormais parler dans les canaux OOC."); gPlayerMuteOOC[i]=0;}
		}
		
		if(gPlayerMuteIC[i] > 0)
		{
			gPlayerMuteIC[i]-=2;
			if(gPlayerMuteIC[i]<=0)
			    {msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous pouvez désormais parler dans les canaux IC.");gPlayerMuteIC[i]=0;}
		}
		    
        if(langTime[i] > 0)
		{
			langTime[i]-=2;
			if(langTime[i] <= 0)
			{
				if(langLearn[i]==1)
				    {PlayerInfo[i][pLang1State]+=10;}
                else if(langLearn[i]==2)
				    {PlayerInfo[i][pLang2State]+=10;}
                langTime[i]=0; langLearn[i]=0;
                msg_Client(i,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Voilà, vous en avez assez appris pour le moment.");
			}
		}

		if(gang_TimerForVoleCar[i] > 0)
		{
		    gang_TimerForVoleCar[i]-=2;
		    format(string,sizeof(string),"~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~Il vous reste ~w~%d ~p~secondes",gang_TimerForVoleCar[i]);
			GameTextForPlayer(i,string,2100,5);
		    if(gang_TimerForVoleCar[i]<= 0)
		    	{gang_TimerVoleCar(i);}
		}

	    if(PlayerInfo[i][pJailTime] > 0 && PlayerInfo[i][pJailed] != 0)
		{
		    PlayerInfo[i][pJailTime]-=2;
			format(string, sizeof(string), "~n~~n~~n~~b~ Il vous reste encore ~r~%d ~b~secondes",PlayerInfo[i][pJailTime]);
		    GameTextForPlayer(i, string, 2100, 4);
			if(PlayerInfo[i][pJailTime] <= 0)
			{
				PlayerInfo[i][pJailTime] = 0;
				if(PlayerInfo[i][pJailed] == 1)
				{
					server_SetPlayerInterior(i, 6);
					SafeSetPlayerPos(i,246.8439,70.0776,1003.6406);
					SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000);
					msg_Client(i, COLOR_STATS,"{CF9756}» Prison «{FFFFFF} Vous avez été libéré de Prison. Réfléchissez avant de commettre un autre crime.");
					format(string, sizeof(string), "~g~Vous etes libre~n~~w~Essayer d'etre un meilleur Citoyen.");
					PlayerInfo[i][pJailed] = 0;
					PlayerInfo[i][pWanted]=0;
					SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
				}
				else if(PlayerInfo[i][pJailed] == 2)
				{
		     		server_SetPlayerInterior(i, 0);
					SafeSetPlayerPos(i,1743.1295,-1862.9645,13.5757);
					msg_Client(i, COLOR_STATS,"{CF9756}» Prison «{FFFFFF} Vous avez terminé votre peine de prison.");
			  		msg_Client(i, COLOR_STATS,"{CF9756}» Prison «{FFFFFF} Ne faites plus d'actes NO RP et vous ne serez plus emprisonnés par un Administrateur.");
					format(string, sizeof(string), "{CF9756}» Prison «{FFFFFF} N'oubliez pas d'aller consulter les règles sur : %s", FORUM_NAME);
			        msg_Client(i, COLOR_RED, string);
			        PlayerInfo[i][pJailed] = 0;
				}
				else if(PlayerInfo[i][pJailed] == 3)
				{
				    msg_Client(i, COLOR_STATS,"{CF9756}» Garde à vue «{FFFFFF} Vous avez terminé votre garde à vue, les policiers ont été prévenus.");
				    PlayerInfo[i][pJailed] = 0;
				    format(string,sizeof(string),"{CF9756}» Garde à vue «{FFFFFF} %s a terminé sa garde à vue, et doit être libéré !",PlayerInfo[i][pRealName]);
				    SendFamilyMessage(1,COLOR_WHITE,string);
				}
				SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
				TogglePlayerControllable(i, 1);
				GameTextForPlayer(i, string, 5000, 4);
			}
		}

		if(gang_TimerPlayerVoleBizz[i] > 0 && gang_PlayerIsBrakeBizz[i]==1)
		{
			gang_TimerPlayerVoleBizz[i]-=2;
			format(string,sizeof(string),"~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~Encore ~w~%d ~p~secondes",gang_TimerPlayerVoleBizz[i]);
			GameTextForPlayer(i,string,2100,5);
			
			if(gang_TimerPlayerVoleBizz[i] <= 0)
				{gang_PlayerTimerVoleBizz(i);}
		}

		if(UsingDrugs[i] > 0 && UsingDrugsTime[i] > 0)
		{
		    UsingDrugsTime[i]-=2;
		    
		    if(UsingDrugs[i]==1) // Weed
		    	{SafeGivePlayerHeath(i,4);}
            else if(UsingDrugs[i]==2) // Héroine
		    	{SafeGivePlayerArmour(i,8); SafeGivePlayerHeath(i,4);}
            else if(UsingDrugs[i]==6) // Cocaine
		    	{SafeGivePlayerHeath(i,3);}
		    
		    if(UsingDrugsTime[i] <= 0)
		        {UsingDrugs[i] = 0; UsingDrugsTime[i]=0; SetPlayerWeather(i, gServerWeather); GameTextForPlayer(i, "~w~Effet de la Drogue ~p~Dissipe", 3000, 1);}
		}

		if(mafia_PlayerCreateDrug[i] == 1)
		{
			if(mafia_FreezeCreation[i] > 0)
			{
				mafia_FreezeCreation[i]-=2;
				format(string,sizeof(string),"~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~Encore ~w~%d ~p~secondes",mafia_FreezeCreation[i]);
				GameTextForPlayer(i,string,2100,5);
				LoopingAnim(i,"GANGS","shake_cara",4.0,0,0,0,0,0);
			}
			else if(mafia_FreezeCreation[i] <= 0)
			{
			    if(mafia_PlayerConceptionAmount[0][i] > 0)
				{
					inventory_UpdateItem(i,1579,mafia_PlayerConceptionAmount[0][i]);
					format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Vous avez fabriqué %d mL d'héroïne.",mafia_PlayerConceptionAmount[0][i]);
					msg_Client(i,COLOR_MAFIA,string);
					mafia_PlayerConceptionAmount[0][i] = 0;
					mafia_PlayerCreateDrug[i] = 0;
					TogglePlayerControllable(i, true);
				}
			    else if(mafia_PlayerConceptionAmount[1][i] > 0)
				{
				    inventory_UpdateItem(i,1578,mafia_PlayerConceptionAmount[1][i]);
					format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Vous avez fabriqué %d gramme(s) de cocaïne.",mafia_PlayerConceptionAmount[1][i]);
					msg_Client(i,COLOR_MAFIA,string);
					mafia_PlayerConceptionAmount[1][i] = 0;
					mafia_PlayerCreateDrug[i] = 0;
					TogglePlayerControllable(i, true);
				}
				else if(mafia_PlayerConceptionAmount[2][i] > 0)
				{
					inventory_UpdateItem(i,1580,mafia_PlayerConceptionAmount[2][i]);
					format(string,sizeof(string),"{717171}» Mafia «{FFFFFF} Vous avez fabriqué %d pilule(s) d'ecstasy.",mafia_PlayerConceptionAmount[2][i]);
					msg_Client(i,COLOR_MAFIA,string);
					mafia_PlayerConceptionAmount[2][i] = 0;
					mafia_PlayerCreateDrug[i] = 0;
					TogglePlayerControllable(i, true);
				}
			}
		}
		if(permis_Player[i]>1 && GetVehicleSpeed(carid) > 80)
		{
			permis_SpecSpeed[i]+=1;
			msg_Client(i,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Attention, ne dépassez pas 70Km/h.");
			if(permis_SpecSpeed[i]>=3)
				{permis_End(i,0,"Non respect de la limite de vitesse");}
		}
		if(JoueurPirateBanque[i] == 1)
		{
			if(JoueurPirateBanqueTemps[i] > 0)
			{
				JoueurPirateBanqueTemps[i]-=2;
				if(JoueurPirateBanqueTemps[i] == 82)
					{TextDrawShowForPlayer(i,Bank_TextMsg[1]);}
				if(JoueurPirateBanqueTemps[i] == 64)
					{TextDrawShowForPlayer(i,Bank_TextMsg[2]);}
				if(JoueurPirateBanqueTemps[i] == 48)
				{
					TextDrawShowForPlayer(i,Bank_TextMsg[3]);
					MoveDynamicObject(BankDoors[0],2142.8220214844, 1606.6739501953, 993.89697265625,2.5,0,0,-100);
					MoveDynamicObject(BankDoors[1],2145.7709960938, 1606.6850585938, 993.89697265625,2.5,0,0,-80);
				}
				if(JoueurPirateBanqueTemps[i] == 32)
				{
					TextDrawShowForPlayer(i,Bank_TextMsg[4]);
					bank_Laser=true;
					for(new laser=0; laser<18; laser++)
					{
					    if(IsValidDynamicObject(bank_LaserObject[laser]))
							{DestroyDynamicObject(bank_LaserObject[laser]);}
					}
				}
				if(JoueurPirateBanqueTemps[i] == 16)
					{TextDrawShowForPlayer(i,Bank_TextMsg[5]);}

				PourcentPiratage[i]+=2;
				format(string,sizeof(string),"%d %",PourcentPiratage[i]);
				TextDrawSetString(Bank_TextPourcent,string);

				if(JoueurPirateBanqueTemps[i]<=0)
				{
					msg_Client(i,COLOR_BANK,"{AADD66}» Banque «{FFFFFF} Système de sécurité piraté !");
					TextDrawHideForPlayer(i,Bank_TextMsg[0]);
					TextDrawHideForPlayer(i,Bank_TextMsg[1]);
					TextDrawHideForPlayer(i,Bank_TextMsg[2]);
					TextDrawHideForPlayer(i,Bank_TextMsg[3]);
					TextDrawHideForPlayer(i,Bank_TextMsg[4]);
					TextDrawHideForPlayer(i,Bank_TextMsg[5]);
					TextDrawHideForPlayer(i,Bank_TextPourcent);
					TextDrawHideForPlayer(i,Bank_TextBackGround);
					TogglePlayerControllable(i,true);
					JoueurPirateBanque[i]=0;
					PourcentPiratage[i]=0;
				}
			}
		}
		if(bank_PlayerRob[i]==true)
		{
		    if(bank_RobTime[i] > 0)
		    {
		        bank_RobTime[i]-=2;
		        format(string,sizeof(string),"~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~Encore ~w~%d ~p~secondes",bank_RobTime[i]);
				GameTextForPlayer(i,string,2100,5);

				if(bank_RobTime[i] <= 0)
					{bank_TakeMoney(i); bank_RobTime[i]=0;}
			}
		}
		if(player_Cuffed[i] == 10)
		{
			if(player_CuffedTime[i] <= 0)
			{
				TogglePlayerControllable(i, true);
				player_Cuffed[i] = 0;
				player_CuffedTime[i] = 0;
			}
			else
				{player_CuffedTime[i] -= 2;}
		}
		if(medic_PlayerNeedMedic[i] > 0)
		{
		    medic_PlayerMedicTime[i]-=2;
		    if(medic_PlayerMedicTime[i] <= 0 && medic_PlayerNeedMedic[i]==1) // Blessé
		    	{SafeSetPlayerHealth(i,0); medic_PlayerNeedMedic[i]=2;}
			else if(medic_PlayerMedicTime[i] <= 0 && medic_PlayerNeedMedic[i]==2) // Mort
				{medic_PlayerNeedMedic[i]=3; SetPlayerSpawn(i);}
		}
		if(CellTime[i] == 1)
		{
			if(Mobile[Mobile[i]] == i)
			{
				PlayerInfo[i][pPhoneTime]--;
				phone_Time[i][0]++;
				if(phone_Time[i][0]>=60)
				    {phone_Time[i][1]++; phone_Time[i][0]=0;}
				if(phone_Active[i]==1)
				{
					format(string,sizeof(string),"%d : %d",phone_Time[i][1],phone_Time[i][0]);
					PlayerTextDrawSetString(i,phone_CallTime[i],string);
					PlayerTextDrawSetString(Mobile[i],phone_CallTime[Mobile[i]],string);
				}
			}
			if (Mobile[Mobile[i]] == -1)
			{
			    if(IsPlayerConnected(Mobile[i]))
			    {
			        RingTone[Mobile[i]]++;
			        if(RingTone[Mobile[i]]==15)
					{
						format(string, sizeof(string), "* Le portable de %s sonne.", PlayerInfo[Mobile[i]][pName]);
						RingTone[Mobile[i]] = 0;
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					}
				}
			}
		}
        return 1;
}

stock anticheat_Check(playerid)
{
	if(IsPlayerNPC(playerid) || AdminDuty[playerid] == 1 || gPlayerLoad[playerid] == 0)
	    {return 1;}
	    
    new tmpTime = gettime();
    if(tmpTime == PlayerInfo[playerid][pLastUpdate])
		{return 1;}
		
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    new vehicleid = GetPlayerVehicleID(playerid);

	if(IsABadWeapon(GetPlayerWeapon(playerid)) && PlayerInfo[playerid][pAdmin] == 0 && GetPlayerState(playerid) == 8)
		{OnPlayerCheat(playerid,9,GetPlayerWeapon(playerid),true);}

	// Spec Hack
    /*if (GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][pSpetacte]==0)
	{
	    anticheat_Warn[playerid][8]++;
		if(anticheat_Warn[playerid][8] == 3)
			{OnPlayerCheat(playerid,10);}
	}*/

	// Arme en dessous du lvl 3
	if(GetPlayerWeapon(playerid) > 15 && GetPlayerWeapon(playerid) < 41 && PlayerInfo[playerid][pLevel] < 3 && (police_Duty[playerid] == 0 || gouv_Duty[playerid] == 0))
        {SafeResetPlayerWeapons(playerid); msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Les armes à feux sont interdites en dessous du level 3.");}

	// Munitions
	/*new s = GetWeaponSlot(GetPlayerWeapon(playerid));
	new weapon = GetPlayerWeapon(playerid);
    if((16 <= GetPlayerWeapon(playerid) <= 44) && ((GetPlayerAmmo(playerid) == -1) || (GetPlayerAmmo(playerid) != ScriptWeaponsAmmo[playerid][s])))
		{RemovePlayerWeapon(playerid, GetPlayerWeapon(playerid)); SafeGivePlayerWeapon(playerid,weapon,ScriptWeaponsAmmo[playerid][s]);}*/
		
	// DGUN
	if(GetPlayerWeapon(playerid) > 0 && GetPlayerAmmo(playerid) < 1)
	    {OnPlayerCheat(playerid,16,GetPlayerWeapon(playerid),false);}
		
	// Arme
	if(ScriptWeaponUpdated[playerid] == 0 && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_ENTER_VEHICLE && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_EXIT_VEHICLE)
	{
		new weaponid, ammo;
		for (new c=0; c<13; c++)
		{
		 	GetPlayerWeaponData(playerid, c, weaponid, ammo);
			if (weaponid != 0 && weaponid != 46 && weaponid != 3 && weaponid != 41) // 46 = parachute
			{
				if (ScriptWeapons[playerid][c] != weaponid || ammo > ScriptWeaponsAmmo[playerid][c])
				{
					RemovePlayerWeapon(playerid, weaponid);
					OnPlayerCheat(playerid,9,weaponid,false);
				}
			}
		}
	}
	
	// CarJack
    /*if ((vehicleid != PlayerInfo[playerid][pLastCar]) && (vehicleid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
    {
        new Float:positions[3];
        GetVehiclePos(GetPlayerVehicleID(playerid), positions[0], positions[1], positions[2]);
        new
            Float:dist = VectorSize(positions[0]-PlayerInfo[playerid][pCurrentPos][0], positions[1]-PlayerInfo[playerid][pCurrentPos][1], positions[2]-PlayerInfo[playerid][pCurrentPos][2]),
            Float:radi = 10.0;

        if ((GetVehicleModel(GetPlayerVehicleID(playerid)) == 577) || (GetVehicleModel(GetPlayerVehicleID(playerid)) == 592))
			{radi = 25.0;}

        //if (dist > radi)
            {OnPlayerCheat(playerid,11);}

        GetPlayerPos(playerid, PlayerInfo[playerid][pCurrentPos][0], PlayerInfo[playerid][pCurrentPos][1], PlayerInfo[playerid][pCurrentPos][2]);
        PlayerInfo[playerid][pLastCar] = vehicleid;
    }*/

	// Argent
	if(GetPlayerMoney(playerid) != PlayerInfo[playerid][pCash])
		{SafeResetPlayerMoney(playerid,PlayerInfo[playerid][pCash]);}
		
	// Armure
    new Float:armourZ;
    GetPlayerArmour(playerid, armourZ);
	if(armourZ != PlayerInfo[playerid][pArmour])
		{SafeSetPlayerArmour(playerid,PlayerInfo[playerid][pArmour]);}
		
	// Vie
	new Float:health;
    GetPlayerHealth(playerid, health);
	if(health != PlayerInfo[playerid][pHealth] && AdminDuty[playerid] == 0)
		{SafeSetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);}
		
	// Animation non enregistrée
	new idx = GetPlayerAnimationIndex(playerid);
    if(idx < 0)
		{OnPlayerCheat(playerid,6);}
		
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
		{OnPlayerCheat(playerid,7);}
		
	// Fly Hack
    if(GetPlayerAnimationIndex(playerid))
	{
		new animlib[32], animname[32];
		GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
		if(strcmp(animlib, "SWIM", true) == 0)
		{
			if(z >= 8.45)
			{
				if(!IsPlayerInRangeOfPoint(playerid,37.85,1964.0404,-1199.6774,17.4400) && !IsPlayerInRangeOfPoint(playerid,20.85,1280.0414,-806.0621,86.1230) && !IsPlayerInRangeOfPoint(playerid,20.85,193.6738,-1230.8689,76.5034) && !IsPlayerInRangeOfPoint(playerid,20.85,223.8258,-1187.7253,73.4500) && !IsPlayerInRangeOfPoint(playerid,20.85,1094.9015,-672.4542,111.4500) && !IsPlayerInRangeOfPoint(playerid,38.85,1241.8627,-2385.7241,8.3145) && !IsPlayerInRangeOfPoint(playerid,20,2313.5486,-1420.4506,24.9922))
					{OnPlayerCheat(playerid,12);}
			}
		}
	}
	if(idx >= 958 && idx <= 962)
	{
	    if(GetPlayerWeapon(playerid) != 46)
	    	{OnPlayerCheat(playerid,12);}
	}
	
	new Float:rx, Float:ry, Float:rz;
	if(!IsAPlane(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    GetVehicleRotation (vehicleid, rx, ry, rz);
		if (85.0 < abs (rz) < 105.0)
		{
			GetVehicleVelocity (vehicleid, rx, ry, rz);
			if (floatround (rz * 160.0) < 170 && GetVehicleSpeed(vehicleid) > 8)
			{
				anticheat_Warn[playerid][7]++;
				if (anticheat_Warn[playerid][7] == 3)
					{OnPlayerCheat(playerid,14);}
			}
		}
		else{anticheat_Warn[playerid][7] = 0;}
	}

    PlayerInfo[playerid][pCurrentPos][0] = x;
	PlayerInfo[playerid][pCurrentPos][1] = y;
	PlayerInfo[playerid][pCurrentPos][2] = z;

	//anticheat_TP(i);
	//anticheat_AirBreak(i);
	//anticheat_VehicleHealth(i);
	return 1;
}

stock anticheat_VehicleHealth(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    new carid=GetPlayerVehicleID(playerid);
		new Float:health,doors,panels,lights,tires;
		GetVehicleHealth(carid,health);
		GetVehicleDamageStatus(carid,panels,doors,lights,tires);
		if(vehicle[carid][cHealth] > health)
			{SafeSetVehicleHealth(carid,vehicle[carid][cHealth]);}
		if(panels != vehicle[carid][cPanels] || doors != vehicle[carid][cDoors] || lights != vehicle[carid][cLights] || tires != vehicle[carid][cTires])
		    {UpdateVehicleDamageStatus(carid,vehicle[carid][cPanels],vehicle[carid][cDoors],vehicle[carid][cLights],vehicle[carid][cTires]);}
	}
	return 1;
}

stock anticheat_AFK(i)
{
	if(afk_Check[i] == -1 || AdminDuty[i] || PlayerInfo[i][pJailed]!=0)
		{return 1;}

	if(afk_Check[i]==0)
	{
		GetPlayerPos(i,afk_X[i],afk_Y[i],afk_Z[i]);
		afk_Check[i]=1;
	}
	else if(afk_Check[i]==1)
	{
	    if(PlayerToPoint(0.5,i,afk_X[i],afk_Y[i],afk_Z[i]))
    		{afk_Check[i]=2;}
		else
		    {afk_Check[i]=0;}
	}
	else
	{
	    if(PlayerToPoint(0.5,i,afk_X[i],afk_Y[i],afk_Z[i]))
    	{
			RemovePlayerFromVehicle(i);
			if(job_Start[i]==1)
    			{job_End(i);}
			afk_Check[i]=-1;
			afk_LastHealth[i]=PlayerInfo[i][pHealth];
			SafeSetPlayerHealth(i, 999999);
			TogglePlayerControllable(i,false);
			TextDrawShowForPlayer(i,afk_Text1);
			TextDrawShowForPlayer(i,afk_Text2);
			msg_Client(i,COLOR_STATS,"{FF00E1}» Absence «{FFFFFF} Vous êtes Afk. Faites /retour si vous souhaitez revenir en jeu.");
		}
		else
			{afk_Check[i]=0;}
	}
	return 1;
}

stock SafeResetPlayerMoney(playerid,amount)
{
    if(IsPlayerNPC(playerid))
		{return 1;}
		
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerMoney(playerid);
	    GivePlayerMoney(playerid,amount);
	    PlayerInfo[playerid][pCash]=amount;
	    return 1;
	}
	return 1;
}

stock SafeGivePlayerWeapon(plyid, weaponid, ammo)
{
    ScriptWeaponUpdated[plyid] = 1;
 	new s = GetWeaponSlot(weaponid);
	ScriptWeapons[plyid][s] = weaponid;
	ScriptWeaponsAmmo[plyid][s] += ammo;
	GivePlayerWeapon(plyid, weaponid, ammo);
	SafeSetPlayerAmmo(plyid,s,ScriptWeaponsAmmo[plyid][s]);
	ScriptWeaponUpdated[plyid]=0;
	return 1;
}

stock SafeSetPlayerAmmo(plyid, weaponslot, ammo)
{
    ScriptWeaponUpdated[plyid]=1;
    ScriptWeaponsAmmo[plyid][weaponslot] = ammo;
    SetPlayerAmmo(plyid, weaponslot, ammo);
    ScriptWeaponUpdated[plyid]=0;
    return 1;
}

stock SafeResetPlayerWeapons(plyid)
{
    ScriptWeaponUpdated[plyid] = 1;
    for (new i=0; i<13; i++)
	{
		ScriptWeapons[plyid][i] = 0;
		ScriptWeaponsAmmo[plyid][i] = 0;
	}
	ResetPlayerWeapons(plyid);
	ScriptWeaponUpdated[plyid] = 0;
	return 1;
}

stock RemovePlayerWeapon(playerid, weaponid)
{
    ScriptWeaponUpdated[playerid] = 1;
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
			{GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);}
	}

	SafeResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    	{SafeGivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);}
	}
	ScriptWeaponUpdated[playerid] = 0;
	return 1;
}

stock anticheat_TP(playerid)
{
	if(PlayerInfo[playerid][pAdmin] > 0 || inscription_Step[playerid] > 0)
	    {return 1;}
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	new surfing = (GetPlayerSurfingVehicleID (playerid) != INVALID_VEHICLE_ID || GetPlayerSurfingObjectID (playerid) != INVALID_OBJECT_ID);
    if ((z < 900.0) == (PlayerInfo[playerid][pCurrentPos][2] < 900.0))
	{
		if (GetPlayerState(playerid)!= PLAYER_STATE_PASSENGER && !surfing && !IsPlayerInRangeOfPoint(playerid, 350.0, PlayerInfo[playerid][pCurrentPos][0], PlayerInfo[playerid][pCurrentPos][1], PlayerInfo[playerid][pCurrentPos][2]))
		{
			if (!IsPlayerInRangeOfPoint(playerid, 5.0, PlayerInfo[playerid][pCurrentPos][0], PlayerInfo[playerid][pCurrentPos][1], PlayerInfo[playerid][pCurrentPos][2]))
			{
				anticheat_Warn[playerid][9]++;
				if (IsCheatPosition(playerid))
				{
					new string[128];
				    format(string,sizeof(string),"{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické, raison : TP.",PlayerInfo[playerid][pRealName]);
					SendClientMessageToAll(0x40FF40FF,string);
					SetTimerEx("TimerKick", 1000, 0, "i", playerid);
				}
				else if (anticheat_Warn[playerid][9] >= 1)
				{
				    new string[128];
				    format(string,sizeof(string),"{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické, raison : TP.",PlayerInfo[playerid][pRealName]);
					SendClientMessageToAll(0x40FF40FF,string);
					SetTimerEx("TimerKick", 1000, 0, "i", playerid);
				}
			}
		}
	}
	return 1;
}

public UnsetFirstSpawn(playerid)
{
	gPlayerSpawn[playerid] = 0;
}

public CommeBackOff(playerid)
{
	PlayerComeBack[playerid] = 0;
}


public ClearKnock(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	KnockedDown[playerid] = 0;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:DistanceS = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(DistanceS <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}

public server_AntiHack(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[128];
	    format(string, sizeof(string), "{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické, raison : Temps de Connexion écoulé.",PlayerInfo[playerid][pRealName]);
		SendClientMessageToAll(COLOR_YELLOW, string);
		MySQLKick(playerid,-2,"Temps de connexion écoulé");
	}
	return 1;
}
public bank_TakeMoney(playerid)
{
	if(PlayerToPoint(45, playerid,2144.0420,1638.5311,993.5761))
	{
        new string[128];
        format(string, sizeof(string), "*** A TOUTES LES UNITES : Les braqueurs ont l'argent ! Faites tout pour les arreter ! ***");
		msg_Radio(1, TEAM_RADIO_COLOR, string);
		msg_Radio(3, TEAM_RADIO_COLOR, string);
		msg_Radio(4, TEAM_RADIO_COLOR, string);
		if(PlayerToPoint(30, playerid, 2144.0420,1638.5311,993.5761))
			{bank_RobMoney[playerid] = 40000 + random(30000);}
		else
		{
		    msg_Client(playerid, COLOR_BANK, "{AADD66}» Banque «{FFFFFF} Vous avez quitté la zone, le braquage a échoué.");
		    bank_PlayerRob[playerid] = false;
		    bank_ResetRob(); bank_RobMoney[playerid]=0;
		}
		format(string, sizeof(string), "{AADD66}» Banque «{FFFFFF} Vous avez volé %d$ !!!",bank_RobMoney[playerid]);
		msg_Client(playerid,COLOR_BANK,string);
		gPlayerCheckpoint[playerid] = 3;
		SetPlayerCheckpoint(playerid,1054.8140,2148.3220,10.8203,3);
		msg_Client(playerid,COLOR_BANK,"{AADD66}» Banque «{FFFFFF} Allez vite blanchir l'argent ! (Point Rouge)");
		msg_Client(playerid, COLOR_RED, "{CF9756}» Info «{FFFFFF} Ne vous faites surtout pas attraper par la police !");
		SetPlayerAttachedObject(playerid, 9, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		return 0;
	}
	else
	{
	    bank_PlayerRob[playerid]=false; bank_ResetRob(); bank_RobMoney[playerid]=0;
	    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez quitté la zone, le braquage a échoué.");
	}
	return 1;
}

public bank_ResetRob()
{
    mdpbanque = random(10000);
    bank_Laser=false; bank_Rob=false; bank_Hack=false; bank_Robers=0;
    MoveDynamicObject(bank_Blind,2144.1813964844, 1626.6809082031, 994.26220703125, 4.5000);
    MoveDynamicObject(BankDoors[0],2142.8220214844, 1606.6739501953, 993.89697265625, 2.5, 0, 0, 0);
    MoveDynamicObject(BankDoors[1],2145.7709960938, 1606.6850585938, 993.89697265625, 2.5, 0, 0, 180);
    bank_LaserObject[0] = CreateDynamicObject(19082, 2128.5280761719, 1617.7690429688, 994.44500732422, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[1] = CreateDynamicObject(19082, 2148.5891113281, 1617.7700195313, 994.44500732422, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[2] = CreateDynamicObject(19082, 2127.587890625, 1612.2580566406, 996.47497558594, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[3] = CreateDynamicObject(19082, 2147.5810546875, 1612.2640380859, 996.47497558594, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[4] = CreateDynamicObject(19082, 2129.462890625, 1617.4749755859, 993.13397216797, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[5] = CreateDynamicObject(19082, 2149.5600585938, 1617.4749755859, 993.13397216797, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[6] = CreateDynamicObject(19082, 2129.3879394531, 1612.3649902344, 993.35302734375, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[7] = CreateDynamicObject(19082, 2149.3830566406, 1612.3630371094, 993.35302734375, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[8] = CreateDynamicObject(19082, 2127.99609375, 1617.5610351563, 996.02502441406, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[9] = CreateDynamicObject(19082, 2148.1311035156, 1617.5570068359, 996.02502441406, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[10] = CreateDynamicObject(19082, 2129.376953125, 1622.6440429688, 993.56298828125, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[11] = CreateDynamicObject(19082, 2149.4169921875, 1622.6500244141, 993.56298828125, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[12] = CreateDynamicObject(19082, 2129.1520996094, 1622.7380371094, 995.05200195313, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[13] = CreateDynamicObject(19082, 2149.1909179688, 1622.7359619141, 995.05200195313, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[14] = CreateDynamicObject(19082, 2129.3701171875, 1622.6569824219, 996.60797119141, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[15] = CreateDynamicObject(19082, 2149.4509277344, 1622.6600341797, 996.60797119141, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[16] = CreateDynamicObject(19082, 2128.6999511719, 1612.3470458984, 994.89099121094, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
	bank_LaserObject[17] = CreateDynamicObject(19082, 2148.7849121094, 1612.3449707031, 994.89099121094, 0, 0, 0,-1,-1,-1, STREAM_DISTANCE);
}

stock GetVehicleSpeed(vehicleid)
{
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(vehicleid, X, Y, Z);
    return floatround(floatsqroot(X * X + Y * Y + Z * Z) * 154);
}

stock anticheat_GetPlayerSpeed(playerid, get3d)
{
	new Float: x, Float: y, Float: z;
	if (IsPlayerInAnyVehicle (playerid))
		GetVehicleVelocity (GetPlayerVehicleID (playerid), x, y, z);
	else
		GetPlayerVelocity (playerid, x, y, z);

	return floatround(floatsqroot((get3d)?(x*x+y*y+z*z):(x*x+y*y))*100.0*1.6);
}

stock IsCheatPosition (playerid)
{
	for (new i = 0; i < sizeof (CheatPositions); ++i)
		if (IsPlayerInRangeOfPoint (playerid, 5.0, CheatPositions[i][0], CheatPositions[i][1],CheatPositions [i][2]))
			return true;
	return false;
}

stock GetSquareDistance (Float: x1, Float: y1, Float: z1, Float: x2, Float: y2, Float: z2)
{
	x1 -= x2;
	y1 -= y2;
	z1 -= z2;
	x1 *= x1;
	y1 *= y1;
	z1 *= z1;
	return floatround (x1 + y1 + z1);
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    new sendername[MAX_PLAYER_NAME];
    new giveplayer[MAX_PLAYER_NAME];
    new carid = GetPlayerVehicleID(playerid);
	new string[512];
	if(dialogid == 0)
    {
        if(!response)
            {DisablePlayerCheckpoint(playerid); gPlayerCheckpoint[playerid] = 0; return msg_Client(playerid, COLOR_STATS, "» GPS/Carte «{FFFFFF} Desactivé.");}
		if(player_Dialog[playerid] == 0)
		{
		    new tmpstring[32],ifx = 0;
		    for(new nbgps=0;nbgps<totalGPS; nbgps++)
		    {
		        if(gps[nbgps][used] == 1 && gps[nbgps][city] == listitem)
		        {
				    format(tmpstring,sizeof(tmpstring),"%s\n",gps[nbgps][description]);
				    strins(string,tmpstring,strlen(string),sizeof(string));
				    gps_Id[playerid][ifx]=nbgps;
				    ifx++;
		        }
		    }
		    if(strlen(tmpstring)==0)
		    	{return msg_Client(playerid,COLOR_STATS,"» GPS/Carte «{FFFFFF} Aucune position de GPS/Carte a été enregistré.");}

            ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"» GPS/Carte « Destination",string,"Activer","Eteindre");
            player_Dialog[playerid]=1;
		}
		else if(player_Dialog[playerid] == 1)
		{
		    if(job_Start[playerid]== 1)
		        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible en job service.");}
		    msg_Client(playerid, COLOR_STATS, "» GPS/Carte «{FFFFFF} Destination definie.");
		    SetPlayerCheckpoint(playerid,gps[gps_Id[playerid][listitem]][pos][0],gps[gps_Id[playerid][listitem]][pos][1],gps[gps_Id[playerid][listitem]][pos][2],10.0);
		    gPlayerCheckpoint[playerid] = 1;
		}
		return 1;
   	}
   	if(dialogid == 14)
    {
        if(!response)
            {return 1;}
            
		if(player_Dialog[playerid] == 0)
		{
		    SetPVarInt(playerid,"dealerShip_City",listitem);
		    ShowPlayerDialog(playerid,14,DIALOG_STYLE_LIST,"» Admin « Création d'une concession","- Luxe\n- Normale\n- 4x4\n- Moto\n- Bateau\n- Avion","Valider","Anuler");
		    player_Dialog[playerid]=1;
		}
		else if(player_Dialog[playerid] == 1)
		{
		    new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    	    new ID=-1;
		    for(new con = 0; con < totalDealerShip; con++)
			{
				if(dealerShip[con][used] == 0)
					{ID=con;break;}
			}
			if(ID==-1)
		    {
		        format(sql, sizeof(sql), "SELECT * FROM lvrp_server_dealership");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID+1>MAX_DEALSHIP)
					{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de concession atteint.");}

				format(sql, sizeof(sql), "INSERT INTO lvrp_server_dealership SET id=%d, Used=1, City=%d, Type=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f",ID+1, GetPVarInt(playerid,"dealerShip_City"),listitem+1, x, y, z);
				mysql_pquery(MYSQL,sql);
				totalDealerShip++;
		    }
	    	dealerShip[ID][pos][0] = x;
    	 	dealerShip[ID][pos][1] = y;
	    	dealerShip[ID][pos][2] = z;
	    	dealerShip[ID][used] = 1;
	    	dealerShip[ID][typeZ] = listitem+1;
	    	dealerShip[ID][city] = GetPVarInt(playerid,"dealerShip_City");
	        dealerShip_Save(ID);
	    	dealerShip_Update(ID);
            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Concession id %d créé.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
			DeletePVar(playerid,"dealerShip_City");
		}
        return 1;
   	}
   	if(dialogid == 6)
	{
	    if(!response)
			{return 1;}
	    if(listitem>=0 && listitem<totalGPS)
		{
		    new id = gps_Id[playerid][listitem];
		    gps[id][pos][0]=0.0000;
		    gps[id][pos][1]=0.0000;
		    gps[id][pos][2]=0.0000;
		    strmid(gps[id][description], "Aucun", 0, strlen("Aucun"), 32);
		    gps[id][used]=0;
		    gps_Save(id);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} GPS id %d supprimé.",id);
		    msg_Client(playerid,COLOR_WHITE,string);
		    return 1;
		}
    }
    if(dialogid == 54)
	{
	    if(response)
	    {
			if(PlayerInfo[playerid][pLevel] < 3)
			{
			    msg_Client(invited_Player[playerid],COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible d'inviter un joueur en dessous du level 3.");
			    return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être level 3 minimum pour rejoindre une faction.");
			}
	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s a accepter votre invitation.",PlayerInfo[playerid][pName]);
	        msg_Client(invited_Player[playerid],COLOR_INFO,string);
	        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez accepté l'invitation. (/aide pour voir vos nouvelles commandes)");
	        PlayerInfo[playerid][pMember]=PlayerInfo[invited_Player[playerid]][pMember];
	        PlayerInfo[playerid][pRank]=1;
	        invited_Player[playerid]=-1;
	    }
	    else
	    {
	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s a refusé votre invitation.",PlayerInfo[playerid][pName]);
	        msg_Client(invited_Player[playerid],COLOR_INFO,string);
	        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez refusé l'invitation.");
	        invited_Player[playerid]=-1;
	    }
	    return 1;
	}
    if(dialogid == 53)
	{
	    if(!response)
	        {return SelectTextDraw(playerid,0x0000FFAA);}
		if(!strlen(inputtext))
			{return ShowPlayerDialog(playerid,53,DIALOG_STYLE_INPUT,"{8B8B00}» Tel «{FFFFFF} MP3","{FFFFFF}Entrez un lien stream : (Ex: http://lvrp.fr/music/intro.mp3)","Lire","Annuler");}
			
        PlayAudioStreamForPlayer(playerid, inputtext);
        return 1;
	}
	if(dialogid == 68)
	{
	    if(!response)
	        {return SelectTextDraw(playerid,0x0000FFAA);}
		if(listitem==0)
		{
		    format(sql, sizeof(sql), "SELECT Contact_Num%d FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",phone_ContactChosen[playerid],PlayerInfo[playerid][pSQLID]);
	  		mysql_query(MYSQL,sql);
	  		new num;
	  		new count = 0;
	  		if(cache_get_row_count(count) && count > 0)
				{cache_get_value_index_int(0,0, num);}
			if(num==0)
			    {return SelectTextDraw(playerid,0x0000FFAA);}
            phone_CallTo(playerid,num);
		}
		else if(listitem==1)
		{
		    format(sql, sizeof(sql), "SELECT Contact_Num%d FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",phone_ContactChosen[playerid],PlayerInfo[playerid][pSQLID]);
	  		mysql_query(MYSQL,sql);
	  		new num;
	  		new count = 0;
	  		if(cache_get_row_count(count) && count > 0)
				{cache_get_value_index_int(0,0, num);}
			if(num==0)
			    {return SelectTextDraw(playerid,0x0000FFAA);}
		    format(phone_TempNum[playerid],5,"%d",num);
		
		    if(PlayerInfo[playerid][pNumber] == 0)
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de téléphone.");return 1;}
			if(PlayerInfo[playerid][pOperator] == 0)
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas d'opérateur téléphonique.");return 1;}
	        if(strval(phone_TempNum[playerid]) == 0)
				{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Entrez un numéro valide.");return 1;}

			format(string,sizeof(string),"{FFFFFF}Numéro du correspondant : {0000FF}%s{FFFFFF}\nEntrez votre message :",phone_TempNum[playerid]);
			ShowPlayerDialog(playerid,52,DIALOG_STYLE_INPUT,"{8B8B00}» Tel «{FFFFFF} SMS",string,"Envoyer","Annuler");
		}
		else if(listitem==2)
		{
		    format(sql, sizeof(sql), "UPDATE lvrp_users_phones SET Contact%d='Aucun', Contact_Num%d=0 WHERE SQLid = %d",phone_ContactChosen[playerid],phone_ContactChosen[playerid],PlayerInfo[playerid][pSQLID]);
		  	mysql_pquery(MYSQL,sql);
		  	format(string,sizeof(string),"- Aucun(~r~0~w~)");
			PlayerTextDrawSetString(playerid,phone_Contact[playerid][phone_ContactChosen[playerid]],string);
	  		SelectTextDraw(playerid,0x0000FFAA);
		}
		return 1;
	}
	if(dialogid == 61)
	{
	    if(!response)
	        {return SelectTextDraw(playerid,0x0000FFAA);}
		if(!strlen(inputtext) || strfind(inputtext,"/",true) == -1)
		    {return ShowPlayerDialog(playerid,61,DIALOG_STYLE_INPUT,"|Téléphone| Creer un contact - Nom","{FF0000}Erreur\n{FFFFFF}Entrez le nom suivit du numéro sous la cette forme : {00FF00}nom/num{FFFFFF} :\n (8 carractères max pour le nom.)","Valider","Quitter");}
        new cords[3][16];
		split(inputtext,cords,'/');
		if(strlen(cords[0]) > 8 || !strlen(cords[0]))
		    {return ShowPlayerDialog(playerid,61,DIALOG_STYLE_INPUT,"|Téléphone| Creer un contact - Nom","{FF0000}Erreur dans le nom (8 caractères max)\n{FFFFFF}Entrez le nom suivit du numéro sous la cette forme : {00FF00}nom/num{FFFFFF} :\n (8 carractères max pour le nom.)","Valider","Quitter");}
		if(strlen(cords[1]) > 4 || strlen(cords[1]) < 4 || !strlen(cords[1]))
		    {return ShowPlayerDialog(playerid,61,DIALOG_STYLE_INPUT,"|Téléphone| Creer un contact - Nom","{FF0000}Erreur dans le numéro (4 chiffres)\n{FFFFFF}Entrez le nom suivit du numéro sous la cette forme : {00FF00}nom/num{FFFFFF} :\n (8 carractères max pour le nom.)","Valider","Quitter");}
		new num=strval(cords[1]),name[9],Num[13];
		strmid(name,cords[0],0,9,9);
		format(sql, sizeof(sql), "SELECT * FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
	  	new count = 0;
		if(cache_get_row_count(count) && count > 0)
		{
			cache_get_value_name_int(0,"Contact_Num1", Num[0]);
			cache_get_value_name_int(0,"Contact_Num2", Num[1]);
			cache_get_value_name_int(0,"Contact_Num3", Num[2]);
			cache_get_value_name_int(0,"Contact_Num4", Num[3]);
			cache_get_value_name_int(0,"Contact_Num5", Num[4]);
			cache_get_value_name_int(0,"Contact_Num6", Num[5]);
			cache_get_value_name_int(0,"Contact_Num7", Num[6]);
			cache_get_value_name_int(0,"Contact_Num8", Num[7]);
			cache_get_value_name_int(0,"Contact_Num9", Num[8]);
			cache_get_value_name_int(0,"Contact_Num10", Num[9]);
			cache_get_value_name_int(0,"Contact_Num11", Num[10]);
			cache_get_value_name_int(0,"Contact_Num12", Num[11]);
		}
		for(new i=0; i<12;i++)
		{
		    if(Num[i]==0)
		        {Num[12]=i;break;}
		}
		format(sql, sizeof(sql), "UPDATE lvrp_users_phones SET Contact%d='%s', Contact_Num%d=%d WHERE SQLid = %d",Num[12]+1,name,Num[12]+1,num,PlayerInfo[playerid][pSQLID]);
	  	mysql_pquery(MYSQL,sql);
	  	format(string,sizeof(string),"- %s(~r~%d~w~)",name,num);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][Num[12]+1],string);
	  	SelectTextDraw(playerid,0x0000FFAA);
		return 1;
	}
    if(dialogid == 52)
	{
	    if(!response)
	        {return SelectTextDraw(playerid,0x0000FFAA);}
        if(strval(phone_TempNum[playerid])==123)
		{
			SafeGivePlayerMoney(playerid,-sanNews[abc_SMS],"SMS San News");
			sanNews[abc_Cash]+=sanNews[abc_SMS];
			msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} SMS Envoyé");
			format(string,sizeof(string),"» SMS - SanNews «{FFFFFF} %s(%d) - Num: %d : %s",PlayerInfo[playerid][pRealName],playerid,PlayerInfo[playerid][pNumber],inputtext);
			SendFamilyMessage(10,0x00CDFF48,string);
			sannews_Save();
			return 1;
		}
		/*if(strval(phone_TempNum[playerid])==PlayerInfo[playerid][pNumber])
		    {return msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Impossible à vous même");}*/
		new bool:send=false;
		for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
		{
		    if(IsPlayerConnected(i) && i != INVALID_PLAYER_ID)
			{
			    if(PlayerInfo[i][pNumber] == strval(phone_TempNum[playerid]) && strval(phone_TempNum[playerid]) != 0)
				{
				    format(string, sizeof(string), "* %s envoie un sms.", PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					format(string, sizeof(string), "* Le téléphone de %s vient de biper.", PlayerInfo[i][pName]);
					ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} SMS Envoyé");
					format(string, sizeof(string), "[SMS] %s, Numéro du correspondant: %s (%d)", inputtext,PlayerInfo[playerid][pName],PlayerInfo[playerid][pNumber]);
					msg_Client(i, COLOR_YELLOW, string);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					new prices;
					if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==1){prices=5;}
					else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==2){prices=2;}
					else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==3){prices=1;}
					else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==4){prices=0;}
					if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==1){prices=4;}
					else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==2){prices=3;}
					else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==3){prices=1;}
					else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==4){prices=0;}
					if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==1){prices=3;}
					else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==2){prices=3;}
					else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==3){prices=1;}
					else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==4){prices=0;}
					if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==1){prices=0;}
					else if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==2){prices=0;}
 					SafeGivePlayerMoney(playerid,-prices,"Envoie SMS");
 					send=true;
 					phone_SMS(playerid,i,inputtext);
 					return 1;
				}
			}
		}
		if(send==false)
		    {msg_Client(playerid,COLOR_YELLOW,"{8B8B00}» Tel «{FFFFFF} Echec de l'envoie.");}
	    return 1;
	}
    if(dialogid == 51)
	{
	    if(!response)
		{
			if(player_Dialog[playerid]==0 || player_Dialog[playerid]==1)
				{player_Variable[playerid] = -1; return 1;}
			else
			{
				player_Dialog[playerid]=1;
				gate_Dialog(playerid);
				return 1;
			}
		}
		if(player_Dialog[playerid] == 0)
		{
		    if(!strlen(inputtext) || strval(inputtext)<0 || strval(inputtext)>totalGates)
		    	{return ShowPlayerDialog(playerid,51,DIALOG_STYLE_INPUT,"» Admin « Editer une porte","Erreur dans l'id.\nEntrez l'id de la porte que vous désirez éditer :","Valider","Annuler");}

		    player_Variable[playerid]=strval(inputtext);
            gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 1)
		{
		    if(!response)
				{return 1;}

			if(listitem == 0)
        	{
        	    admin_VarType[playerid]=5;
        		EditDynamicObject(playerid, gate_Object[player_Variable[playerid]]);
			    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition des positions fermées de la porte.");
        	}
        	if(listitem == 1)
        	{
        	    admin_VarType[playerid]=4;
        		EditDynamicObject(playerid, gate_Object[player_Variable[playerid]]);
			    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition des positions ouvertes de la porte.");
        	}
        	if(listitem == 2)
        	{
        	    ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"» Admin « Editer une porte - Model","- Liste de modèles\n- Entrer l'id d'un modèle","Valider","Retour");
        	    player_Dialog[playerid]=2;
        	}
        	if(listitem == 3)
        	{
        	    ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"» Admin « Editer une porte - Propriétaire","- Joueur\n- Faction\n- Job\n- Public","Valider","Retour");
        	    player_Dialog[playerid]=4;
        	}
        	if(listitem == 4)
        	{
        	    ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"» Admin « Editer une porte - Action","- Mot de passe\n- Touche H\n- Touche N\n- Touche Y\n- Touche C","Valider","Retour");
        	    player_Dialog[playerid]=8;
        	}
        	if(listitem == 5)
        	{
        	    ShowPlayerDialog(playerid,51,DIALOG_STYLE_INPUT,"» Admin « Editer une porte - Mot de passe","Entrez le nouveau mot de passe :","Valider","Retour");
        	    player_Dialog[playerid]=9;
        	}
        	if(listitem == 6)
        	{
        	    ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"» Admin « Editer une porte - Timer","- Non\n- Entrer une durée","Valider","Retour");
        	    player_Dialog[playerid]=10;
        	}
        	if(listitem == 7)
        	{
        	    ShowPlayerDialog(playerid,51,DIALOG_STYLE_INPUT,"» Admin « Editer une porte - Distance","Entrez la distance d'action :","Valider","Retour");
        	    player_Dialog[playerid]=12;
        	}
		}
		else if(player_Dialog[playerid] == 2)
		{
		    if(listitem == 0)
		    {
		        new mod[19];
				mod[0] = 980;
				mod[1] = 19303;
				mod[2] = 968;
				mod[3] = 2938;
				mod[4] = 988;
				mod[5] = 968;
				mod[6] = 969;
				mod[7] = 971;
				mod[8] = 975;
				mod[9] = 976;
				mod[10] = 989;
				mod[11] = 3089;
				mod[12] = 3036;
				mod[13] = 2988;
				mod[14] = 1495;
				mod[15] = 1497;
				mod[16] = 1500;
				mod[17] = 1501;
				mod[18] = 2990;
			    ShowModelSelectionMenuEx(playerid, mod, 19, "Choisissez un modele", 4, 10.0, 10.0, 25.0);
		    }
		    else if(listitem == 1)
		    {
		        format(string,sizeof(string),"Entrez l'id du modèle : (Ancien: %d)",gate[player_Variable[playerid]][model]);
		        ShowPlayerDialog(playerid,51,DIALOG_STYLE_INPUT,"» Admin « Editer une porte - Modèle",string,"Valider","Retour");
        	    player_Dialog[playerid]=3;
			}
		}
		else if(player_Dialog[playerid] == 3)
		{
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé l'id du modèle en : %d",strval(inputtext));
			msg_Client(playerid,COLOR_WHITE,string);
		    gate[player_Variable[playerid]][model]=strval(inputtext);
		    gate_Save(player_Variable[playerid]);
		    gate_Update(player_Variable[playerid]);
		    gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 4)
		{
		    if(listitem==0)
		    {
		        ShowPlayerDialog(playerid,51, DIALOG_STYLE_INPUT, "» Admin « Editer une porte - Joueur","{FFFFFF}Entrez l'id du joueur {FF0000}connecté{FFFFFF} à qui appartiendera la porte :","Valider","Retour");
                player_Dialog[playerid]=5;
			}
			if(listitem==1)
		    {
		        new tmpstring[32];
		        format(string,sizeof(string),"- Polices\n- FBI\n- Gouvernements\n- San News\n");
		        for(new fac=0;fac<totalFactions; fac++)
		        {
		            if(FactionInfo[fac][fCreate] == 1)
		            {
					    format(tmpstring,sizeof(tmpstring),"- %s\n",FactionInfo[fac][fName]);
					    strins(string,tmpstring,strlen(string),sizeof(string));
		            }
		        }
		        ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"» Admin « Editer une porte - Propriétaire",string,"Valider","Retour");
		        player_Dialog[playerid]=6;
		    }
		    if(listitem==2)
		    {
		        new tmpstring[40], jobstring[512]="{FFFFFF}";
				for(new i=1; i<=20; i++)
				{
				   	format(tmpstring,sizeof(tmpstring),"- %s\n",GetJobName(i));
			       	strins(jobstring,tmpstring,strlen(jobstring),sizeof(jobstring));
				}
		        ShowPlayerDialog(playerid,51, DIALOG_STYLE_LIST, "» Admin « Editer une porte - Propriétaire",jobstring,"Valider","Retour");
		        player_Dialog[playerid]=7;
		    }
		    if(listitem==3)
		    {
		        gate[player_Variable[playerid]][variable]=0;
			    gate[player_Variable[playerid]][typeZ]=3;
			    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le propriétaire : Public ");
			    msg_Client(playerid,COLOR_WHITE,string);
			    gate_Save(player_Variable[playerid]);
			    gate_Dialog(playerid);
		    }
		}
		else if(player_Dialog[playerid] == 5)
		{
		    if(!IsPlayerConnected(strval(inputtext)) || IsPlayerNPC(strval(inputtext)))
		        {return ShowPlayerDialog(playerid,51, DIALOG_STYLE_INPUT, "» Admin « Editer une porte - Joueur","{FFFFFF}Joueur non connecté !\nEntrez l'id du joueur {FF0000}connecté{FFFFFF} à qui appartiendera la porte :","Valider","Retour");}
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le propriétaire : %s",PlayerInfo[strval(inputtext)][pRealName]);
		    gate[player_Variable[playerid]][typeZ]=0;
		    gate[player_Variable[playerid]][variable]=PlayerInfo[strval(inputtext)][pSQLID];
			msg_Client(playerid,COLOR_WHITE,string);
		    gate_Save(player_Variable[playerid]);
		    gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 6)
		{
		    if(listitem >= 0 && listitem <= 3)
		        {gate[player_Variable[playerid]][variable]=listitem+1;}
			else
			    {gate[player_Variable[playerid]][variable]=(200+listitem-4);}
		    gate[player_Variable[playerid]][typeZ]=1;
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le propriétaire : Faction ");
		    msg_Client(playerid,COLOR_WHITE,string);
		    gate_Save(player_Variable[playerid]);
		    gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 7)
		{
			gate[player_Variable[playerid]][variable]=listitem+1;
		    gate[player_Variable[playerid]][typeZ]=2;
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le propriétaire : job - %s ",GetJobName(listitem+1));
		    msg_Client(playerid,COLOR_WHITE,string);
		    gate_Save(player_Variable[playerid]);
		    gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 8)
		{
		    gate[player_Variable[playerid]][action]=listitem;
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé l'action.");
		    msg_Client(playerid,COLOR_WHITE,string);
		    gate_Save(player_Variable[playerid]);
		    gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 9)
		{
		    if(!strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 32)
		        {return ShowPlayerDialog(playerid,51,DIALOG_STYLE_INPUT,"» Admin « Editer une porte - Mot de passe","De 4 à 32 caractères !\nEntrez le nouveau mot de passe :","Valider","Retour");}

			strmid(gate[player_Variable[playerid]][description],inputtext,0,32,32);
            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le mot de passe : %s.",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    gate_Save(player_Variable[playerid]);
		    gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 10)
		{
		    if(listitem == 0)
		    {
		        gate[player_Variable[playerid]][useTimer]=0;
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le timer : Aucun.");
			    msg_Client(playerid,COLOR_WHITE,string);
			    gate_Save(player_Variable[playerid]);
			    gate_Dialog(playerid);
		    }
		    if(listitem == 1)
		    {
		        ShowPlayerDialog(playerid,51, DIALOG_STYLE_INPUT, "» Admin « Editer une porte - Timer","Entrez le temps de retour de la porte (en seconde) :","Valider","Retour");
		        player_Dialog[playerid]=11;
			}
		}
		else if(player_Dialog[playerid] == 11)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 2 || strval(inputtext) > 20)
		        {return ShowPlayerDialog(playerid,51, DIALOG_STYLE_LIST, "» Admin « Editer une porte - Timer","Temps compris entre 2 et 20 secondes !\nEntrez le temps de retour de la porte (en seconde) :","Valider","Retour");}
            gate[player_Variable[playerid]][useTimer]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le timer : %d secondes.",strval(inputtext));
			msg_Client(playerid,COLOR_WHITE,string);
			gate_Save(player_Variable[playerid]);
			gate_Dialog(playerid);
		}
		else if(player_Dialog[playerid] == 12)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) > 30)
		        {return ShowPlayerDialog(playerid,51,DIALOG_STYLE_INPUT,"» Admin « Editer une porte - Distance","Entrez la distance d'action :","Valider","Retour");}
            gate[player_Variable[playerid]][distanceZ]=floatstr(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la distance : %0.1f.",floatstr(inputtext));
			msg_Client(playerid,COLOR_WHITE,string);
			gate_Save(player_Variable[playerid]);
			gate_Dialog(playerid);
		}
	    return 1;
	}
	if(dialogid == 48)
	{
	    if(!response)
	        {return 1;}
	        
		if(player_Dialog[playerid] == 0)
		{
			SetPVarInt(playerid,"admin_Int",listitem);
			ShowPlayerDialog(playerid,48,DIALOG_STYLE_LIST,"» Admin « Intérieurs - Type","- Auto-Ecole\n- A.N.P.E\n- Hopital\n- La Poste\n- Banque\n- Ecole des Langues\n- Eglise\n- Tribunal","Valider","Annuler");
            player_Dialog[playerid]=1;
		}
		else if(player_Dialog[playerid] == 1)
		{
		    new Float:tmpx, Float:tmpy, Float:tmpz, Float:tmpa, tmpInt;
		    GetInteriorInfo(listitem+1,tmpInt, tmpx, tmpy, tmpz, tmpa);
		    new Float:x,Float:y,Float:z,Float:a;
		    GetPlayerPos(playerid,x,y,z);
		    GetPlayerFacingAngle(playerid,a);
    	    new ID=-1, c = GetPVarInt(playerid,"admin_Int");
		    for(new i = 0; i < totalInteriors; i++)
			{
				if(interiors[i][used] == 0)
					{ID = i; break;}
			}
			if(ID==-1)
			{
				format(sql, sizeof(sql), "SELECT * FROM lvrp_server_interiors");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID>MAX_INTERIOR)
					{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de d'interieur atteint."); return 1;}
				format(sql, sizeof(sql), "INSERT INTO lvrp_server_interiors SET id=%d, Used=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Pos_a=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Exit_a=%f, City=%d, Interior=%d, Type=%d",ID+1, x, y, z, a, tmpx, tmpy, tmpz, tmpa, c, tmpInt, listitem+1);
				mysql_pquery(MYSQL,sql);
				totalInteriors++;
			}
	    	interiors[ID][pos][0] = x;
	    	interiors[ID][pos][1] = y;
	    	interiors[ID][pos][2] = z;
	    	interiors[ID][pos][3] = a;
	    	interiors[ID][pos][4] = tmpx;
	    	interiors[ID][pos][5] = tmpy;
	    	interiors[ID][pos][6] = tmpz;
	    	interiors[ID][pos][7] = tmpa;
	    	interiors[ID][used] = 1;
	    	interiors[ID][city] = c;
	    	interiors[ID][typeZ] = listitem+1;
	    	interiors[ID][interior] = tmpInt;
		    interior_Save(ID);
		    interior_Update(ID);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Interieur %s (id %d) créé dans la ville de %s.",GetInteriorName(listitem+1),ID,GetCityName(c));
			msg_Client(playerid,COLOR_WHITE,string);
			player_Dialog[playerid]=0;
			DeletePVar(playerid,"admin_Int");
		    return 1;
		}
		return 1;
	}
    if(dialogid == 19)
	{
	    if(!response)return 1;
	    if(listitem >= 0)
	    {
	            new playerInv = GetPVarInt(playerid,"adminLeaderPlayer");
	            if(listitem >= 10)
	            {
	                if(FactionInfo[listitem-10][fCreate] == 0)
						{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Cette faction n'est pas déffinie.");}
	                else
	                {
	                    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez mis %s leader de la faction %s.",PlayerInfo[playerInv][pName],FactionInfo[listitem-10][fName]);
	                    msg_Client(playerid,COLOR_WHITE,string);
	                    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été mis leader de la faction %s par %s.",FactionInfo[listitem-10][fName],PlayerInfo[playerid][pName]);
	                    msg_Client(playerInv,COLOR_INFO,string);
				        PlayerInfo[playerInv][pMember] = listitem+190;
				        PlayerInfo[playerInv][pLeader] = listitem+190;
				        PlayerInfo[playerInv][pRank] = 6;
					    OnPlayerUpdateSQL(playerInv);
					    DeletePVar(playerid,"adminLeaderPlayer");
					    return 1;
	                }
	            }
    			format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez mis %s leader de la faction %s.",PlayerInfo[playerInv][pName],GetFactionName(listitem+1));
		        msg_Client(playerid,COLOR_WHITE,string);
		        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été mis leader de la faction %s par %s.",GetFactionName(listitem+1),PlayerInfo[playerid][pName]);
		        msg_Client(playerInv,COLOR_INFO,string);
			    PlayerInfo[playerInv][pLeader] = listitem+1;
			    PlayerInfo[playerInv][pMember] = listitem+1;
			    PlayerInfo[playerInv][pRank] = 6;
			    if(listitem>= 0 && listitem <= 3) // Polices
			        {PlayerInfo[playerInv][pRank] = 8;}
			    OnPlayerUpdateSQL(playerInv);
			    DeletePVar(playerid,"adminLeaderPlayer");
			    return 1;
	   }
    }
    if(dialogid == 20)
	{
	    if(!response)return 1;
	    if(listitem >= 0)
	    {
	            new playerInv = GetPVarInt(playerid,"adminMemberPlayer");
	            if(listitem >= 10)
	            {
	                if(FactionInfo[listitem-10][fCreate] == 0)
						{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Cette faction n'est pas déffinie.");}
	                else
	                {
	                    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez mis %s membre de la faction %s.",PlayerInfo[playerInv][pName],FactionInfo[listitem-10][fName]);
	                    msg_Client(playerid,COLOR_WHITE,string);
	                    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été mis membre de la faction %s par %s.",FactionInfo[listitem-10][fName],sendername);
	                    msg_Client(playerInv,COLOR_INFO,string);
				        PlayerInfo[playerInv][pMember] = listitem+190;
				        PlayerInfo[playerInv][pRank] = 1;
					    OnPlayerUpdateSQL(playerInv);
					    DeletePVar(playerid,"adminMemberPlayer");
					    return 1;
	                }
	            }
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez mis %s membre de la faction %s.",PlayerInfo[playerInv][pName],GetFactionName(listitem+1));
		        msg_Client(playerid,COLOR_WHITE,string);
		        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été mis membre de la faction %s par %s.",GetFactionName(listitem+1),PlayerInfo[playerid][pName]);
		        msg_Client(playerInv,COLOR_INFO,string);
			    PlayerInfo[playerInv][pMember] = listitem+1;
			    PlayerInfo[playerInv][pRank] = 1;
			    OnPlayerUpdateSQL(playerInv);
			    DeletePVar(playerid,"adminMemberPlayer");
			    return 1;
	   }
    }
   	if(dialogid == DIALOG_ID)
    {
        if(!response)
			{return 1;}

        if(FloorRequestedBy[listitem] != INVALID_PLAYER_ID || IsFloorInQueue(listitem))
        	{GameTextForPlayer(playerid, "~r~L'etage est deja appele", 3500, 4);}
		else if(DidPlayerRequestElevator(playerid))
			{GameTextForPlayer(playerid, "~r~Ascensseur deja appele", 3500, 4);}
		
		else
			{CallElevator(playerid, listitem);}
		return 1;
    }
	if(dialogid == 116)
   	{
	    if(response == 1)
		{
		    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez accepté le live.");
		    msg_Client(sannews_LiveOffer[playerid],COLOR_GREY,"{00673A}» San News «{FFFFFF} Live accepté. (Utilisez /san finlive  pour finir).");
			sannews_TalkingLive[playerid] = sannews_LiveOffer[playerid];
			sannews_TalkingLive[sannews_LiveOffer[playerid]] = playerid;
		    sannews_LiveOffer[playerid] = -1;
		    msg_OOCNews(COLOR_LIGHTBLUE, "[San News] Un live a débuté, si vous ne désirez pas écouter le live, tapez /non news .");
		    return 1;
		}
		if(response == 0)
		{
		    msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez refusé le live.");
		    msg_Client(sannews_LiveOffer[playerid],COLOR_GREY,"{00673A}» San News «{FFFFFF} Live refusé.");
		    sannews_LiveOffer[playerid] = -1;
		    return 1;
		}
   	}
   	if(dialogid == 69)
   	{
		if(response && strlen(inputtext) >= 25)
		{
			format(string, sizeof(string), "» Question « %s(id: %d): %s", PlayerInfo[playerid][pRealName], playerid, inputtext);
			msg_Admin(COLOR_ASKQ,string,1);
			for(new i=0;i<MAX_PLAYERS_CURRENT+1;i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pHelper] == 1 && NoRapport[i]==0)
			        {
			            format(string, sizeof(string), "» Question « %s(id: %d): %s", PlayerInfo[playerid][pRealName], playerid, inputtext);
			            msg_Client(i,COLOR_ASKQ,string);
			        }
			    }
			}
			format(string,sizeof(string),"» Question « Votre question a été envoyé aux Staff de %s connectés.",NICK_NAME);
			msg_Client(playerid, COLOR_YELLOW, string);
			TimeRapport[playerid]=1;
			SetTimerEx("player_ResetTimeRapport", 60000,0,"i",playerid);
			return 1;//
		}
		else
		    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} 25 caractères minimum !"); return 1;}
	}
   	if(dialogid == 74)
   	{
		if(response)
		{
		    if(strlen(inputtext) > 1)
		    {
				format(string,sizeof(string),"{FFFFFF}» Sonnette « %s : %s",PlayerInfo[playerid][pName],inputtext);
				msg_Radio(1, COLOR_POLICE, string);
				return 1;
			}
		}
   	}
   	if(dialogid == 47)
   	{
		if(response)
		{
		    if(strlen(inputtext) > 1)
		    {
				format(string,sizeof(string),"{FFFFFF}» Sonnette « %s : %s",PlayerInfo[playerid][pName],inputtext);
				msg_Radio(4, COLOR_MAIRIE, string);
				return 1;
			}
		}
   	}
   	if(dialogid == 42)
   	{
   	    if(!response)
   	    {
   	        if(player_Dialog[playerid] == 0)
   	            {return 1;}
			else
			    {return accessory_ShowDialog(playerid);}
   	    }
   	    if(player_Dialog[playerid] == 0)
   	    {
   	        if(accessory[playerid][model][listitem] == 0)
   	        {
   	            ShowPlayerDialog(playerid,42,DIALOG_STYLE_LIST,"{04B45F}» Accessoire «{FFFFFF} Partie du corps","{FFFFFF}- Colonne vertébrale\n- Tête\n- Bras gauche\n- Bras droit\n- Main gauche\n- Main droite\n- Cuisse gauche\n- Cuisse droite\n- Pied gauche\n- Pied droit\n- Mollet droit\n- Mollet gauche\n- Avant-bras gauche\n- Avant-bras droit\n- Epaule gauche\n- Epaule droite\n- Nuque\n- Machoire","Valider","Retour");
                player_Dialog[playerid]=1;
   	        }
   	        else
   	        {
   	            ShowPlayerDialog(playerid,42,DIALOG_STYLE_LIST,"{04B45F}» Accessoire «{FFFFFF} Edition","{FFFFFF}- Supprimer l'accessoire\n- Editer l'accessoire","Valider","Retour");
   	            player_Dialog[playerid]=3;
   	        }
   			SetPVarInt(playerid,"accessory_Index",listitem);
   	    }
   	    else if(player_Dialog[playerid] == 1)
   	    {
   	        SetPVarInt(playerid,"accessory_Bone",listitem+1);
   	        new tmpString[40];
			for(new i=0; i<gPlayerInventory[playerid]; i++)
			{
				format(tmpString,sizeof(tmpString),"- %s\n",GetItemName(PlayerInfo[playerid][pInvModel][i]));
		        strins(string,tmpString,strlen(string),sizeof(string));
			}
			ShowPlayerDialog(playerid,42,DIALOG_STYLE_LIST,"{04B45F}» Accessoire «{FFFFFF} Objet",string,"Valider","Retour");
            player_Dialog[playerid]=2;
   	    }
   	    else if(player_Dialog[playerid] == 2)
   	    {
   	        if(inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]) <= 0)
   	            {msg_Client(playerid,COLOR_INFO,"{04B45F}» Accessoire «{FFFFFF} Aucune objet à cet emplacement !"); DeletePVar(playerid,"accessory_Index");DeletePVar(playerid,"accessory_Bone"); return 1;}
   	        new tmpIndex = GetPVarInt(playerid,"accessory_Index");
   	        accessory[playerid][bone][tmpIndex] = GetPVarInt(playerid,"accessory_Bone");
   	        accessory[playerid][model][tmpIndex] = PlayerInfo[playerid][pInvModel][listitem];
   	        SetPlayerAttachedObject(playerid, tmpIndex, PlayerInfo[playerid][pInvModel][listitem], accessory[playerid][bone][tmpIndex], 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			EditAttachedObject(playerid,tmpIndex);
			msg_Client(playerid,COLOR_INFO,"{04B45F}» Accessoire «{FFFFFF} Editer l'objet avec les flèches. (La petite disquette sert à sauvegarder les positions)");
            player_Dialog[playerid] = 100;
            accessory_Save(playerid,tmpIndex);
            DeletePVar(playerid,"accessory_Index");
            DeletePVar(playerid,"accessory_Bone");
		}
		else if(player_Dialog[playerid] == 3)
   	    {
   	        new tmpIndex = GetPVarInt(playerid,"accessory_Index");
   	        if(listitem == 0)
   	        {
   	            RemovePlayerAttachedObject(playerid,tmpIndex);
   	            accessory[playerid][bone][tmpIndex] = 0;
   	        	accessory[playerid][model][tmpIndex] = 0;
   	        	accessory[playerid][pos_x][tmpIndex] = 0;
   	        	accessory[playerid][pos_y][tmpIndex] = 0;
   	        	accessory[playerid][pos_z][tmpIndex] = 0;
   	        	accessory[playerid][pos_rx][tmpIndex] = 0;
   	        	accessory[playerid][pos_ry][tmpIndex] = 0;
   	        	accessory[playerid][pos_rz][tmpIndex] = 0;
   	        	accessory[playerid][pos_ox][tmpIndex] = 1;
   	        	accessory[playerid][pos_oy][tmpIndex] = 1;
   	        	accessory[playerid][pos_oz][tmpIndex] = 1;
   	        	accessory_Save(playerid,tmpIndex);
   	        	msg_Client(playerid,COLOR_INFO,"{04B45F}» Accessoire «{FFFFFF} Objet supprimé.");
   	        }
   	        else if(listitem == 1)
   	        {
   	            EditAttachedObject(playerid,tmpIndex);
   	            msg_Client(playerid,COLOR_INFO,"{04B45F}» Accessoire «{FFFFFF} Editer l'objet avec les flèches. (La petite disquette sert à sauvegarder les positions)");
   	            player_Dialog[playerid] = 100;
   	        }
   	        DeletePVar(playerid,"accessory_Index");
   	    }
		return 1;
   	}
   	if(dialogid == 43)
   	{
   	    if(response)
   	    {
   	        new Float:alcohol=PlayerDrunk[playerid]/1000;
   	        format(string, sizeof(string), "* %s souffle dans l'alcootest.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
   	        msg_cFormated(player_SellOffer[playerid],COLOR_POLICE,"{007AFF}» Police «{FFFFFF} %s a soufflé dans l'alcootest, son niveau d'alcoolémie est de %.1f .",PlayerInfo[playerid][pName],alcohol);
            msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez accepté de souffler dans l'alcootest.");
   	    }
   	    else
   	    {
   	        msg_cFormated(player_SellOffer[playerid],COLOR_POLICE,"{007AFF}» Police «{FFFFFF} %s a refusé de souffler dans l'alcootest.",PlayerInfo[playerid][pName]);
   	        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez refusé de souffler dans l'alcootest.");
   	    }
   	    player_SellOffer[playerid]=-1;
   	    return 1;
   	}
   	if(dialogid == 23)
   	{
   	    if(response)
		{
		    if(PlayerInfo[playerid][pLevel] < 2)
		        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être level 2 minimum.");}
		    if(!strlen(inputtext))
				{return ShowPlayerDialog(playerid,23,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Publicité","Ecrivez votre publicté de façon RP :","Valider","Annuler");}
			    
			if ((!adds) && PlayerInfo[playerid][pAdmin] < 1 || (!adds) && PlayerInfo[playerid][pDonateRank] == 0)
			{
				format(string, sizeof(string), "{00673A}» San News «{FFFFFF} Vous devez attendre %d secondes avant de poster une nouvelle publicité.",ADDTIMER/1000);
				return msg_Client(playerid, COLOR_GREY, string);
			}
			
			new payout = strlen(inputtext);
			if(PlayerInfo[playerid][pCash] < payout)
	        {
	            format(string, sizeof(string), "{00673A}» San News «{FFFFFF} Vous avez utilisé %d lettres qui vous coûte $%d. Vous n'avez pas assez d'argent.", strlen(inputtext), payout);
	            return msg_Client(playerid, COLOR_GREY, string);
	        }
	        SafeGivePlayerMoney(playerid, -payout,"Pub SanNews");
	        sanNews[abc_Cash]+=payout;
	        format(string, sizeof(string), "|PUB| %s [Contact: %s Numéro: %d]", inputtext, PlayerInfo[playerid][pRealName], PlayerInfo[playerid][pNumber]);
			msg_OOCNews(0x00F6E0F6,string);
			format(string, sizeof(string), "{00673A}» San News «{FFFFFF} Le message contenait: %d lettres. Vous avez payé %d$.",strlen(inputtext), payout);
			msg_Client(playerid, COLOR_GREY, string);
			sannews_Save();
			
			if (PlayerInfo[playerid][pAdmin] < 1)
				{SetTimer("AddsOn", ADDTIMER, 0);adds = 0;}
			return 1;
		}
   	}
   	if(dialogid == 4)
   	{
		if(!response)
		    {return 1;}
		if(!strlen(inputtext))
		{
		    format(string,sizeof(string),"Entrer un montant.\n\nPrix de la graine : $%d.\nArgent sur vous : $%d\n\nEntrer le nombre de graine que vous désirez acheter :",SEED_PRICE,PlayerInfo[playerid][pCash]);
			ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"{006500}» Achats «{FFFFFF} Graine",string,"Acheter","Annuler");
		    return 1;
		}
		new toto1 = strval(inputtext)*SEED_PRICE;
		if(toto1 > PlayerInfo[playerid][pCash])
		{
		    format(string,sizeof(string),"Entrer un montant.\n\nPrix de la graine : $%d.\nArgent sur vous : $%d\n\nEntrer le nombre de graine que vous désirez acheter :",SEED_PRICE,PlayerInfo[playerid][pCash]);
			ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"{006500}» Achats «{FFFFFF} Graine",string,"Acheter","Annuler");
		    return 1;
		}
		format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez acheté %d graine(s) pour $%d.",strval(inputtext),toto1);
		msg_Client(playerid,COLOR_INFO,string);
		inventory_UpdateItem(playerid,1577,strval(inputtext));
		SafeGivePlayerMoney(playerid,-toto1,"Achat de graine(s)");
		return 1;
   	}
   	if(dialogid == 3)
   	{
   	    if(!response)
			{return 1;}

        new vehicleid = PlayerInfo[playerid][pCar][listitem];
		if(vehicle_GetId(vehicleid) != -1)
			{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Véhicule déjà spawn.");}

        msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Spawn de votre véhicule ...");
		format(sql,sizeof(sql),"SELECT * FROM lvrp_server_vehicles WHERE id=%d",vehicleid);
		mysql_tquery(MYSQL,sql,"vehicle_LoadPlayer","d",playerid);
		return 1;
   	}
   	if(dialogid == 5)
   	{
   	    if(!response)
		{
			if(atm_DialogEdit[playerid]==0 || atm_DialogEdit[playerid]==1) return 1;
			else
			{
				ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,"» Atm « Edit","Changer l'argent\nChanger la position","Valider","Annuler");
				atm_DialogEdit[playerid]=1;
				return 1;
			}
		}
		if(atm_DialogEdit[playerid]==0)
		{
		    new atmid=strval(inputtext);
			if(!strlen(inputtext) || atmid > totalATMs || atmid < 0)
			{
			    ShowPlayerDialog(playerid,5,DIALOG_STYLE_INPUT,"» Atm « Edit","Erreur dans l'ID !\nEntrez l'id de l'ATm que vous désirez modifier :","Valider","Annuler");
				atm_DialogEdit[playerid]=0;
				return 1;
			}
			if(atm[atmid][used] !=1)
			{
			    ShowPlayerDialog(playerid,5,DIALOG_STYLE_INPUT,"» Atm « Edit","Atm non créé !\nEntrez l'id de l'ATm que vous désirez modifier :","Valider","Annuler");
				atm_DialogEdit[playerid]=0;
			    return 1;
			}
            ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,"» Atm « Edit","Changer l'argent\nChanger la position","Valider","Annuler");
			atm_DialogEdit[playerid]=1;
			atm_EditId[playerid]=atmid;
		}
		else if(atm_DialogEdit[playerid]==1)
		{
		    if(listitem==0)
			{
			    ShowPlayerDialog(playerid,5,DIALOG_STYLE_INPUT,"» Atm « Edit - Argent","Entrer l'argent qu'il y aura dans l'atm :","Valider","Retour");
				atm_DialogEdit[playerid]=2;
			}
			if(listitem==1)
			{
				atm_DialogEdit[playerid]=3;
				EditDynamicObject(playerid,atm_Object[atm_EditId[playerid]]);
				msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position de l'ATM.");
				return 1;
			}
		}
		else if(atm_DialogEdit[playerid]==2)
		{
		    if(!strlen(inputtext)|| strval(inputtext) > 30000 || strval(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,5,DIALOG_STYLE_INPUT,"» Atm « Edit - Argent","Erreur dans le montant !\nEntrer l'argent qu'il y aura dans l'atm :","Valider","Retour");}
		    
		    atm[atm_EditId[playerid]][cash]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez réglé l'argent de l'ATM à $%d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    atm_Save(atm_EditId[playerid]);
		    atm_UpdateInfos(atm_EditId[playerid]);
		}
		return 1;
   	}
   	if(dialogid == 137)
   	{
   	    if(!response)
		{
			if(admin_Dialog[playerid]==0)
				{return 1;}
		}
		if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > totalBins)
		    {return ShowPlayerDialog(playerid,137,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit","Erreur dans l'id.\nEntrez l'id de la petite poubelle que vous désirez modifier :","Valider","Annuler");}
        if(bin[strval(inputtext)][used]==0)
		    {return ShowPlayerDialog(playerid,137,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit","Petite poubelle non créée.\nEntrez l'id de la petite poubelle que vous désirez modifier :","Valider","Annuler");}

		admin_EditId[playerid]=strval(inputtext);
        EditDynamicObject(playerid, bin_Object[admin_EditId[playerid]]);
        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position de la poubelle.");
        return 1;
   	}
   	if(dialogid == 138)
   	{
   	    if(!response)
   	    {
   	        if(player_Dialog[playerid] == 0)
   	            {return 1;}
			else
			    {return bin_ShowDialog(playerid,player_Variable[playerid]);}
   	    }
   	    if(player_Dialog[playerid]==0)
		{
		    if(listitem==0)
		    {
		        new maxstring[512];
		        strins(maxstring,"{FFFFFF}Objet\tQuantité\n",strlen(maxstring),sizeof(maxstring));
		        for(new i=0; i<gPlayerInventory[playerid]; i++)
		        {
		            format(string,sizeof(string),"%s\t%d\n",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,138,DIALOG_STYLE_TABLIST_HEADERS, "{00FFA0}» Poubelle «{FFFFFF} Jeter un objet", maxstring, "Valider", "Retour");
                player_Dialog[playerid]=1;
		    }
		    else if(listitem==1)
		    {
		        if(police_Duty[playerid]==1)
			    	{return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Impossible de dposer vos armes de service."),bin_ShowDialog(playerid,player_Variable[playerid]);}
	            if(GetPlayerWeapon(playerid) == 0)
					{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez avoir une arme en main."),bin_ShowDialog(playerid,player_Variable[playerid]);}

				new wepId = GetPlayerWeapon(playerid);
				new ammo = GetPlayerAmmo(playerid);
		        new binSlot=-1;
				for(new i=9; i>=0; i--)
				{
				    if(bin[player_Variable[playerid]][itemM][i] == wepId)
				        {binSlot=i;break;}
					else if(bin[player_Variable[playerid]][itemM][i] <= 0)
					    {binSlot=i;}
				}
				if(binSlot==-1)
				    {return msg_Client(playerid,COLOR_VEHICLE,"{00FFA0}» Poubelle «{FFFFFF} La poubelle est pleine."),bin_ShowDialog(playerid,player_Variable[playerid]);}
                format(string, sizeof(string), "* %s jette quelque chose dans la poubelle.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
				format(string,sizeof(string),"{00FFA0}» Poubelle «{FFFFFF} Vous avez jeté un(e) %s. (%d balle(s))",GetWepName(wepId),ammo);
				msg_Client(playerid,COLOR_VEHICLE,string);
                RemovePlayerWeapon(playerid, wepId);
                bin[player_Variable[playerid]][itemM][binSlot] = wepId;
                bin[player_Variable[playerid]][itemQ][binSlot] += ammo;
                bin_ShowDialog(playerid,player_Variable[playerid]);
                bin_Save(player_Variable[playerid]);
		    }
		    else if(listitem==2)
		    {
		        new maxstring[512];
		        strins(maxstring,"{FFFFFF}Objet\tQuantité\n",strlen(maxstring),sizeof(maxstring));
		        for(new i=0; i<10; i++)
		        {
		            if(bin[player_Variable[playerid]][itemM][i] > 0 && bin[player_Variable[playerid]][itemM][i] < 46)
		            	{format(string,sizeof(string),"%s\t%d\n",GetWepName(bin[player_Variable[playerid]][itemM][i]),bin[player_Variable[playerid]][itemQ][i]);}
		            else
		            	{format(string,sizeof(string),"%s\t%d\n",GetItemName(bin[player_Variable[playerid]][itemM][i]),bin[player_Variable[playerid]][itemQ][i]);}
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,138,DIALOG_STYLE_TABLIST_HEADERS, "{8BE2E2}» Véhicule «{FFFFFF} Fouilez", maxstring, "Valider", "Retour");
                player_Dialog[playerid]=3;
		    }
		}
		else if(player_Dialog[playerid]==1)
		{
		    if(inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]) <= 0)
		    	{return msg_Client(playerid,COLOR_VEHICLE,"{00FFA0}» Poubelle «{FFFFFF} Emplacement vide !"),bin_ShowDialog(playerid,player_Variable[playerid]);}

			SetPVarInt(playerid,"bin_ItemSlot",listitem);
			format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez jeter dans la poubelle (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]));
			ShowPlayerDialog(playerid,138,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Jeter un objet",string,"Jeter","Retour");
            player_Dialog[playerid]=2;
		}
		else if(player_Dialog[playerid]==2)
		{
		    new slot = GetPVarInt(playerid,"bin_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]) || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez jeter dans la poubelle (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]));
				return ShowPlayerDialog(playerid,138,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Jeter un objet",string,"Jeter","Retour");
			}
			new binSlot=-1;
			for(new i=9; i>=0; i--)
			{
			    if(bin[player_Variable[playerid]][itemM][i] == PlayerInfo[playerid][pInvModel][slot])
			        {binSlot=i;break;}
				else if(bin[player_Variable[playerid]][itemM][i] <= 0)
				    {binSlot=i;}
			}
			if(binSlot==-1)
			    {return msg_Client(playerid,COLOR_VEHICLE,"{00FFA0}» Poubelle «{FFFFFF} La poubelle est pleine."),bin_ShowDialog(playerid,player_Variable[playerid]);}
            format(string,sizeof(string),"{00FFA0}» Poubelle «{FFFFFF} Vous avez jeté %d de %s.",strval(inputtext),GetItemName(PlayerInfo[playerid][pInvModel][slot]));
			msg_Client(playerid,COLOR_VEHICLE,string);
			format(string, sizeof(string), "* %s jette quelque chose dans la poubelle.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			bin[player_Variable[playerid]][itemM][binSlot] = PlayerInfo[playerid][pInvModel][slot];
			bin[player_Variable[playerid]][itemQ][binSlot] += strval(inputtext);
			inventory_UpdateItem(playerid,PlayerInfo[playerid][pInvModel][slot],-strval(inputtext));
			bin_ShowDialog(playerid,player_Variable[playerid]);
			bin_Save(player_Variable[playerid]);
		}
		else if(player_Dialog[playerid]==3)
		{
		    if(bin[player_Variable[playerid]][itemM][listitem] > 0 && bin[player_Variable[playerid]][itemM][listitem] < 46)
      		{
      		    SafeGivePlayerWeapon(playerid,bin[player_Variable[playerid]][itemM][listitem],bin[player_Variable[playerid]][itemQ][listitem]);
                format(string,sizeof(string),"{00FFA0}» Poubelle «{FFFFFF} Vous avez pris un(e) %s (%d balle(s)).",GetWepName(bin[player_Variable[playerid]][itemM][listitem]),bin[player_Variable[playerid]][itemQ][listitem]);
			}
      		else
      		{
                inventory_UpdateItem(playerid,bin[player_Variable[playerid]][itemM][listitem],bin[player_Variable[playerid]][itemQ][listitem]);
                format(string,sizeof(string),"{00FFA0}» Poubelle «{FFFFFF} Vous avez pris %d de %s.",bin[player_Variable[playerid]][itemQ][listitem],GetItemName(bin[player_Variable[playerid]][itemM][listitem]));
			}
			bin[player_Variable[playerid]][itemM][listitem] = 0;
			bin[player_Variable[playerid]][itemQ][listitem] = 0;
      		msg_Client(playerid,COLOR_VEHICLE,string);
      		format(string, sizeof(string), "* %s fouille la poubelle.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
      		bin_ShowDialog(playerid,player_Variable[playerid]);
			bin_Save(player_Variable[playerid]);
		}
   	    return 1;
   	}
   	if(dialogid == 140)
   	{
   	    if(!response)
   	    {
		    if(player_Dialog[playerid] == 0)
				{return 1;}
			else
			    {body_ShowDialog(playerid,player_Variable[playerid]);}
	   	}
	   	if(player_Dialog[playerid] == 0)
	   	{
	   	    if(listitem == 0)
	   	    	{body_Carry(playerid,player_Variable[playerid]);}
	   	    else if(listitem == 1)
	   	    {
	   	        if(inventory_GetItemQuantity(playerid,1650) <= 0 && PlayerInfo[playerid][pJerricainFuel] == 0 && inventory_GetItemQuantity(playerid,2351) <= 0)
					{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas les objets nécéssaires (Jerrican plein + briquet).");}

				msg_Client(playerid,COLOR_WHITE,"{CF9756}» Info «{FFFFFF} Vous avez mis le feu au cadavre.");
				LoopingAnim(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
                body_Object[player_Variable[playerid]][5] = CreateDynamicObject(18691, body[player_Variable[playerid]][pos][0],body[player_Variable[playerid]][pos][1],body[player_Variable[playerid]][pos][2]-1.3, 0, 0, 274,-1,-1,-1,200.0);
				PlayerInfo[playerid][pJerricainFuel]=0;
				body[player_Variable[playerid]][fire]=true;
				format(string, sizeof(string), "* %s verse de l'essence sur le cadavre puis l'allume.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				inventory_UpdateItem(playerid,2351,-1);
				SetTimerEx("body_Remove", 60000, 0, "i", player_Variable[playerid]);
	   	    }
	   	    else if(listitem == 2)
	   	    {
	   	        if(GetPlayerWeapon(playerid) != 6)
	   	            {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez besoin d'une pelle.");}
	   	            
                format(string, sizeof(string), "* %s enterre le cadavre à l'aide de sa pelle.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				msg_Client(playerid,COLOR_WHITE,"{CF9756}» Info «{FFFFFF} Vous enterrez le cadavre.");
	   	        TogglePlayerControllable(playerid,false);
	   	        body[player_Variable[playerid]][fire]=true;
	   	        SetTimerEx("body_Remove", 15000, 0, "i", player_Variable[playerid]);
	   	        SetTimerEx("defreeze", 15000, 0, "i", playerid);
	   	    }
	   	    else if(listitem == 3)
	   	    {
	   	        if((PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pMember] > 9) && PlayerInfo[playerid][pAdmin] < 2)
	   	            {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faites pas parti d'une faction légale.");}
                new wep[70];
				if(body[player_Variable[playerid]][description] == 0)
					{wep = "Coup de Poing"; }
				else if(body[player_Variable[playerid]][description]>0 && body[player_Variable[playerid]][description]<48)
					{GetWeaponName(body[player_Variable[playerid]][description],wep,sizeof(wep));}
                else if(body[player_Variable[playerid]][description]== 48)
                    {wep = "Ecrasé"; }
                else if(body[player_Variable[playerid]][description]== 50)
                    {wep = "Helikill"; }
                else if(body[player_Variable[playerid]][description]== 51)
                    {wep = "Explosion"; }
                else if(body[player_Variable[playerid]][description]== 53)
                    {wep = "Noyé"; }
                else if(body[player_Variable[playerid]][description]== 54)
                    {wep = "Chute"; }
                else
                    {wep = "Indeterminable"; }
                format(string, sizeof(string), "* %s recherche des traces sur le cadavre.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				format(string,sizeof(string),"========== Cadavre de %s ==========",body[player_Variable[playerid]][playerZ]);
				msg_Client(playerid,COLOR_POLICE,string);
				format(string,sizeof(string),"Victime : %s",body[player_Variable[playerid]][playerZ]);
				msg_Client(playerid,COLOR_WHITE,string);
				format(string,sizeof(string),"Suspecté : %s",body[player_Variable[playerid]][killer]);
				msg_Client(playerid,COLOR_WHITE,string);
				format(string,sizeof(string),"Heure produite : %s",body[player_Variable[playerid]][time]);
				msg_Client(playerid,COLOR_WHITE,string);
				format(string,sizeof(string),"Cause : %s",wep);
				msg_Client(playerid,COLOR_WHITE,string);
	   	    }
	   	    else if(listitem == 4)
	   	    {
	   	        if((PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pMember] > 9) && PlayerInfo[playerid][pAdmin] < 2)
	   	            {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne faites pas parti d'une faction légale.");}

                msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez enlevé ce cadavre.");
				body_Remove(player_Variable[playerid]);
				format(string, sizeof(string), "* %s enlève le cadavre.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
	   	    }
	   	}
		return 1;
   	}
   	if(dialogid == 11)
   	{
   	    if(!response)
		{
			if(admin_Dialog[playerid]==0 || admin_Dialog[playerid]==1) return 1;
			else
			{
				ShowPlayerDialog(playerid,11,DIALOG_STYLE_LIST,"{00FFA0}» Poubelle «{FFFFFF} Edit","Changer le nombre d'ordures\nChanger la position","Valider","Annuler");
				admin_Dialog[playerid]=1;
				return 1;
			}
		}
		if(admin_Dialog[playerid]==0)
		{
		    new binid=strval(inputtext);
			if(!strlen(inputtext) || binid > totalTrash || binid < 0)
			{
			    ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit","Erreur dans l'ID !\nEntrez l'id de la poubelle que vous désirez modifier :","Valider","Annuler");
				admin_Dialog[playerid]=0;
				return 1;
			}
			if(trash[binid][used] !=1)
			{
			    ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit","poubelle non créée !\nEntrez l'id de la poubelle que vous désirez modifier :","Valider","Annuler");
				admin_Dialog[playerid]=0;
			    return 1;
			}
            ShowPlayerDialog(playerid,11,DIALOG_STYLE_LIST,"{00FFA0}» Poubelle «{FFFFFF} Edit","Changer le nombre d'ordures\nChanger la position","Valider","Annuler");
			admin_Dialog[playerid]=1;
			admin_EditId[playerid]=binid;
		}
		else if(admin_Dialog[playerid]==1)
		{
		    if(listitem==0)
			{
			    ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit - Ordures","Entrer le nombre d'ordures qu'il y aura dans la poubelle :","Valider","Retour");
				admin_Dialog[playerid]=2;
			}
			if(listitem==1)
			{
				admin_Dialog[playerid]=3;
				EditDynamicObject(playerid, trash_Object[admin_EditId[playerid]]);
				msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position de la poubelle.");
				return 1;
			}
		}
		else if(admin_Dialog[playerid]==2)
		{
		    if(!strlen(inputtext)|| strval(inputtext) > 100 || strval(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT,"{00FFA0}» Poubelle «{FFFFFF} Edit - Ordures","Erreur dans le nombre.(MAX: 100)\nEntrer le nombre d'ordures qu'il y aura dans la poubelle :","Valider","Retour");}
		        
		    trash[admin_EditId[playerid]][quantity]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez réglé le nombre d'ordures de la poubelle à %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    trash_Save(admin_EditId[playerid]);
		    trash_UpdateInfos(admin_EditId[playerid]);
		}
		return 1;
   	}
   	if(dialogid == 12)
   	{
   	    if(!response)
		{
			if(phonecab_DialogEdit[playerid]==0) return 1;
		}
		if(phonecab_DialogEdit[playerid]==0)
		{
		    new cabid=strval(inputtext);
			if(!strlen(inputtext) || cabid > totalPhoneCabs || cabid < 0)
			{
			    ShowPlayerDialog(playerid,12,DIALOG_STYLE_INPUT,"|Cabine| Edit","Erreur dans l'id.\nEntrez l'id de la cabine téléphonique que vous désirez modifier :","Valider","Annuler");
				phonecab_DialogEdit[playerid]=0;
				return 1;
			}
			if(phone[cabid][used] !=1)
			{
			    ShowPlayerDialog(playerid,12,DIALOG_STYLE_INPUT,"|Cabine| Edit","Cabine non créée.\nEntrez l'id de la cabine téléphonique que vous désirez modifier :","Valider","Annuler");
				phonecab_DialogEdit[playerid]=0;
			    return 1;
			}
   			phonecab_DialogEdit[playerid]=1;
			phonecab_EditId[playerid]=cabid;
			EditDynamicObject(playerid, phonecab_Object[phonecab_EditId[playerid]]);
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position de la cabine téléphonique.");
		}
		return 1;
   	}
   	if(dialogid == 154)
   	{
   	    if(!response)
   	        {return 1;}
		new taxiSign;
		if(listitem == 0) 		{taxiSign=19308;}
		else if(listitem == 1) 	{taxiSign=19309;}
		else if(listitem == 2) 	{taxiSign=19310;}
		else if(listitem == 3) 	{taxiSign=19311;}
		msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Ajuster le panneau.");
		player_TaxiLicense[playerid] = CreateDynamicObject(taxiSign,0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,STREAM_DISTANCE);
		AttachDynamicObjectToVehicle(player_TaxiLicense[playerid],carid,0.0,0.0,0.9,0.0,0.0,90.0);
		EditDynamicObject(playerid,player_TaxiLicense[playerid]);
   	    return 1;
   	}
   	if(dialogid == 153)
   	{
   	    if(!response)
   	    {
   	        if(player_Dialog[playerid] == 0)
   	            {return 1;}
			else
			{
			    format(string,sizeof(string),"{FFFFFF}- Nom [%s]\n- Description [%s]\n- Récompense [%s]\n- Nombre de place [%d]\n- Mettre la teleportation à votre position",
				event[tmpName],event[description],event[jacpot],event[maxParticipent]);
				ShowPlayerDialog(playerid,153,DIALOG_STYLE_LIST,"» Animateur « Configuration event",string,"Valider","Quitter");
			}
   	    }
   	    if(player_Dialog[playerid] == 0)
   	    {
   	        switch(listitem)
   	        {
				 case 0:
				 {
				    format(string,sizeof(string),"{FFFFFF}Entrez le nom de l'event : (Ancien: %s)",event[tmpName]);
				    ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
				    player_Dialog[playerid]=1;
				 }
				 case 1:
				 {
				    format(string,sizeof(string),"{FFFFFF}Entrez la description de l'event : (Ancien: %s)",event[description]);
				    ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
				    player_Dialog[playerid]=2;
				 }
				 case 2:
				 {
				    format(string,sizeof(string),"{FFFFFF}Entrez la récompense de l'event : (Ancien: %s)",event[jacpot]);
				    ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
				    player_Dialog[playerid]=3;
				 }
				 case 3:
				 {
				    format(string,sizeof(string),"{FFFFFF}Entrez le nombre max de participent de l'event : (Ancien: %d)",event[maxParticipent]);
				    ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
				    player_Dialog[playerid]=4;
				 }
				 case 4:
				 {
				    new Float:x,Float:y,Float:z;
				    GetPlayerPos(playerid,x,y,z);
				    event[teleport][0]=x;
				    event[teleport][1]=y;
				    event[teleport][2]=z;
				    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Position de téléportation sauvegardées.");
				 }
   	        }
   	    }
   	    else if(player_Dialog[playerid] == 1)
   	    {
   	        if(!strlen(inputtext) || strlen(inputtext) > 64 || strlen(inputtext) < 6)
   	        {
   	            format(string,sizeof(string),"{FF0000}Erreur dans le nom, 6 à 64 caractères !\n{FFFFFF}Entrez le nom de l'event : (Ancien: %s)",event[tmpName]);
				return ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
   	        }
   	        strmid(event[tmpName],inputtext,0,64,64);
   	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez changé le nom en : %s",inputtext);
   	        msg_Client(playerid, COLOR_INFO, string);
   	    }
   	    else if(player_Dialog[playerid] == 2)
   	    {
   	        if(!strlen(inputtext) || strlen(inputtext) > 128 || strlen(inputtext) < 12)
   	        {
   	            format(string,sizeof(string),"{FF0000}Erreur dans la description, 12 à 128 caractères !\n{FFFFFF}Entrez la description de l'event : (Ancien: %s)",event[description]);
				return ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
   	        }
   	        strmid(event[description],inputtext,0,128,128);
   	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez changé la description en : %s",inputtext);
   	        msg_Client(playerid, COLOR_INFO, string);
   	    }
   	    else if(player_Dialog[playerid] == 3)
   	    {
   	        if(!strlen(inputtext) || strlen(inputtext) > 64 || strlen(inputtext) < 6)
   	        {
   	            format(string,sizeof(string),"{FF0000}Erreur dans la description, 6 à 64 caractères !\n{FFFFFF}Entrez la récompense de l'event : (Ancien: %s)",event[jacpot]);
				return ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
   	        }
   	        strmid(event[jacpot],inputtext,0,64,64);
   	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez changé la récompense en : %s",inputtext);
   	        msg_Client(playerid, COLOR_INFO, string);
   	    }
   	    else if(player_Dialog[playerid] == 4)
   	    {
   	        if(!strlen(inputtext) || strval(inputtext) > 50 || strlen(inputtext) < 2)
   	        {
   	            format(string,sizeof(string),"{FF0000}Erreur dans le maximum, 2 à 50 participents !\n{FFFFFF}Entrez le nombre max de participent de l'event : (Ancien: %d)",event[maxParticipent]);
				return ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT,"» Animateur « Configuration event",string,"Valider","Retour");
   	        }
   	        event[maxParticipent]=strval(inputtext);
   	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez changé le maximum de participent à %d.",strval(inputtext));
   	        msg_Client(playerid, COLOR_INFO, string);
   	    }
   	    return 1;
   	}
   	if(dialogid == 152)
   	{
   	    if(!response)
		{
			if(player_Dialog[playerid]==0) return 1;
		}
		if(player_Dialog[playerid]==0)
		{
		    new tmpAd=strval(inputtext);
			if(!strlen(inputtext) || tmpAd > totalAds || tmpAd < 0)
			{
			    ShowPlayerDialog(playerid,152,DIALOG_STYLE_INPUT,"» Panneau Publicitaire « Edit","Erreur dans l'id.\nEntrez l'id du panneau publicitaire que vous désirez modifier :","Valider","Annuler");
				player_Dialog[playerid]=0;
				return 1;
			}
			if(ad[tmpAd][used] !=1)
			{
			    ShowPlayerDialog(playerid,152,DIALOG_STYLE_INPUT,"» Panneau Publicitaire « Edit","Panneau non créé.\nEntrez l'id du panneau publicitaire que vous désirez modifier :","Valider","Annuler");
				player_Dialog[playerid]=0;
			    return 1;
			}
   			player_Dialog[playerid]=7;
			player_Variable[playerid]=tmpAd;
			EditDynamicObject(playerid, ad_Object[player_Variable[playerid]][0]);
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position du panneau publicitaire.");
		}
		return 1;
   	}
   	if(dialogid == 13)
   	{
   	    if(!response)
		{
			if(map_DialogEdit[playerid]==0) return 1;
		}
		if(map_DialogEdit[playerid]==0)
		{
		    new mapid=strval(inputtext);
			if(!strlen(inputtext) || mapid > totalMaps || mapid < 0)
			{
			    ShowPlayerDialog(playerid,13,DIALOG_STYLE_INPUT,"» Carte « Edit","Erreur dans l'id.\nEntrez l'id de la carte que vous désirez modifier :","Valider","Annuler");
				map_DialogEdit[playerid]=0;
				return 1;
			}
			if(map[mapid][used] !=1)
			{
			    ShowPlayerDialog(playerid,13,DIALOG_STYLE_INPUT,"» Carte « Edit","Carte non créée.\nEntrez l'id de la carte que vous désirez modifier :","Valider","Annuler");
				map_DialogEdit[playerid]=0;
			    return 1;
			}
   			map_DialogEdit[playerid]=1;
			map_EditId[playerid]=mapid;
			EditDynamicObject(playerid, map_Object[map_EditId[playerid]]);
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position de la carte.");
		}
		return 1;
   	}
   	if(dialogid == 56)
   	{
   	    if(!response)
		{
			if(tree_Edit[playerid]==0) return 1;
		}
		if(tree_Edit[playerid]==0)
		{
		    new treeid=strval(inputtext);
			if(!strlen(inputtext) || treeid > totalTree || treeid < 0)
			{
			    ShowPlayerDialog(playerid,56,DIALOG_STYLE_INPUT,"|Sapin| Edit","Erreur dans l'id.\nEntrez l'id du sapin que vous désirez modifier :","Valider","Annuler");
				tree_Edit[playerid]=0;
				return 1;
			}
			if(SapinInfo[treeid][XmasTreeX] !=1)
			{
			    ShowPlayerDialog(playerid,56,DIALOG_STYLE_INPUT,"|Sapin| Edit","Carte non créée.\nEntrez l'id du sapin que vous désirez modifier :","Valider","Annuler");
				tree_Edit[playerid]=0;
			    return 1;
			}
   			tree_Edit[playerid]=1;
			tree_EditId[playerid]=treeid;
			EditDynamicObject(playerid, SapinInfo[tree_EditId[playerid]][XmasObject][0]);
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position du sapin.");
		}
		return 1;
   	}
   	if(dialogid == 15)
   	{
   	    if(!response)
		{
			if(distrib_DialogEdit[playerid]==0) return 1;
		}
		if(distrib_DialogEdit[playerid]==0)
		{
		    new disid=strval(inputtext);
			if(!strlen(inputtext) || disid > totalDistribs || disid < 0)
			{
			    ShowPlayerDialog(playerid,15,DIALOG_STYLE_INPUT,"{2B6AFF}» Distributeur «{FFFFFF} Edit","Erreur dans l'id.\nEntrez l'id du distributeur que vous désirez modifier :","Valider","Annuler");
				distrib_DialogEdit[playerid]=0;
				return 1;
			}
			if(distributor[disid][used] !=1)
			{
			    ShowPlayerDialog(playerid,15,DIALOG_STYLE_INPUT,"{2B6AFF}» Distributeur «{FFFFFF} Edit","Distributeur non créé.\nEntrez l'id du distributeur que vous désirez modifier :","Valider","Annuler");
				distrib_DialogEdit[playerid]=0;
			    return 1;
			}
   			distrib_DialogEdit[playerid]=1;
			distrib_EditId[playerid]=disid;
			EditDynamicObject(playerid, distrib_Object[distrib_EditId[playerid]]);
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position du distributeur.");
		}
		return 1;
   	}
   	if(dialogid == 58)
    {
        if(!response)
		{
			if(faction_DialogGestion[playerid]==0 || faction_DialogGestion[playerid]==1) return 1;
			else
			{
				ShowPlayerDialog(playerid,58,DIALOG_STYLE_LIST,"|Faction| Edit","Type de faction\nChanger d'interrieur","Valider","Annuler");
				faction_DialogGestion[playerid]=1;
				return 1;
			}
		}
		if(faction_DialogGestion[playerid]==0)
		{
		    new factionid=strval(inputtext);
			if(!strlen(inputtext) || factionid > totalFactions || factionid < 0)
			{
			    ShowPlayerDialog(playerid,58,DIALOG_STYLE_INPUT,"|Faction| Edit","Erreur dans l'ID !\nEntrez l'id de l'arret de bus que vous désirez modifier :","Valider","Annuler");
				faction_DialogGestion[playerid]=0;
				return 1;
			}
			if(FactionInfo[factionid][fCreate] !=1)
			{
			    ShowPlayerDialog(playerid,58,DIALOG_STYLE_INPUT,"|Faction| Edit","Atm non créé !\nEntrez l'id de l'arret de bus que vous désirez modifier :","Valider","Annuler");
				faction_DialogGestion[playerid]=0;
			    return 1;
			}
            ShowPlayerDialog(playerid,58,DIALOG_STYLE_LIST,"|Faction| Edit","Changer le nom\nChanger la position","Valider","Annuler");
			faction_DialogGestion[playerid]=1;
			faction_EditId[playerid]=factionid;
		}
		else if(faction_DialogGestion[playerid]==1)
		{
		    if(listitem==0)
			{
			    ShowPlayerDialog(playerid,118,DIALOG_STYLE_INPUT,"|Arret de bus| Edit - Nom","Entrer le nouveau nom de l'arrêt :","Valider","Retour");
				stop_DialogEdit[playerid]=2;
			}
			if(listitem==1)
			{
				faction_DialogGestion[playerid]=3;
				EditDynamicObject(playerid, stop_Object[stop_EditPlayer[playerid]]);
				msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position de l'arrêt.");
				return 1;
			}
		}
    }
   	if(dialogid == 118)
    {
        if(!response)
		{
			if(stop_DialogEdit[playerid]==0 || stop_DialogEdit[playerid]==1) return 1;
			else
			{
				ShowPlayerDialog(playerid,118,DIALOG_STYLE_LIST,"|Arret de bus| Edit","Changer le nom\nChanger la position","Valider","Annuler");
				stop_DialogEdit[playerid]=1;
				return 1;
			}
		}
		if(stop_DialogEdit[playerid]==0)
		{
		    new arretid=strval(inputtext);
			if(!strlen(inputtext) || arretid > totalBusStop || arretid < 0)
			{
			    ShowPlayerDialog(playerid,118,DIALOG_STYLE_INPUT,"|Arret de bus| Edit","Erreur dans l'ID !\nEntrez l'id de l'arret de bus que vous désirez modifier :","Valider","Annuler");
				atm_DialogEdit[playerid]=0;
				return 1;
			}
			if(stop[arretid][used] !=1)
			{
			    ShowPlayerDialog(playerid,118,DIALOG_STYLE_INPUT,"|Arret de bus| Edit","Atm non créé !\nEntrez l'id de l'arret de bus que vous désirez modifier :","Valider","Annuler");
				atm_DialogEdit[playerid]=0;
			    return 1;
			}
            ShowPlayerDialog(playerid,118,DIALOG_STYLE_LIST,"|Arret de bus| Edit","Changer le nom\nChanger la position","Valider","Annuler");
			stop_DialogEdit[playerid]=1;
			stop_EditPlayer[playerid]=arretid;
		}
		else if(stop_DialogEdit[playerid]==1)
		{
		    if(listitem==0)
			{
			    ShowPlayerDialog(playerid,118,DIALOG_STYLE_INPUT,"|Arret de bus| Edit - Nom","Entrer le nouveau nom de l'arrêt :","Valider","Retour");
				stop_DialogEdit[playerid]=2;
			}
			if(listitem==1)
			{
				stop_DialogEdit[playerid]=3;
				EditDynamicObject(playerid, stop_Object[stop_EditPlayer[playerid]]);
				msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position de l'arrêt.");
				return 1;
			}
		}
		else if(stop_DialogEdit[playerid]==2)
		{
		    if(!strlen(inputtext)|| strlen(inputtext) > 30 || strlen(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,118,DIALOG_STYLE_INPUT,"|Arret de bus| Edit - Nom","Erreur dans le nom !\nEntrer le nouveau nom de l'arrêt :","Valider","Retour");}
		    	
		    strmid(stop[stop_EditPlayer[playerid]][description], inputtext, 0, strlen(inputtext), 30);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le nom de l'arret en : %s.",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    stop_Save(stop_EditPlayer[playerid]);
		    stop_UpdateInfos(stop_EditPlayer[playerid]);
		}
		return 1;
    }
    if(dialogid == 67)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0 || player_Dialog[playerid]==1) return 1;
			else
			{
    			ShowPlayerDialog(playerid,67,DIALOG_STYLE_LIST,"{FFFF00}» Radar «{FFFFE0} Edit","Changer la limite\nChanger la distance\nChanger l'amende\nChanger la position","Valider","Annuler");
				player_Dialog[playerid]=1;
				return 1;
			}
		}
		if(player_Dialog[playerid]==0)
		{
		    new cam=strval(inputtext);
			if(!strlen(inputtext) || cam > totalCameras || cam < 0)
			{
			    ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"» Admin « Edition d'un radar","Erreur dans l'ID !\nEntrez l'id du radar que vous désirez modifier :","Valider","Annuler");
				player_Dialog[playerid]=0;
				return 1;
			}
			if(camera[cam][used] !=1)
			{
			    ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"» Admin « Edition d'un radar","Radar non créé !\nEntrez l'id du radar que vous désirez modifier :","Valider","Annuler");
				player_Dialog[playerid]=0;
			    return 1;
			}
            ShowPlayerDialog(playerid,67,DIALOG_STYLE_LIST,"{FFFF00}» Radar «{FFFFE0} Edit","Changer la limite\nChanger la distance\nChanger l'amende\nChanger la position","Valider","Annuler");
			player_Dialog[playerid]=1;
			player_Variable[playerid]=cam;
		}
		else if(player_Dialog[playerid]==1)
		{
		    if(listitem==0)
			{
			    ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"{FFFF00}» Radar «{FFFFE0} Edit - Limite","Entrer la limitation de vitesse :","Valider","Retour");
				player_Dialog[playerid]=2;
			}
			if(listitem==1)
			{
			    ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"{FFFF00}» Radar «{FFFFE0} Edit - Distance","Entrer la distance de flash :","Valider","Retour");
				player_Dialog[playerid]=3;
			}
			if(listitem==2)
			{
			    ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"{FFFF00}» Radar «{FFFFE0} Edit - Amende","Entrer l'amende :","Valider","Retour");
				player_Dialog[playerid]=4;
			}
			if(listitem==3)
			{
				EditDynamicObject(playerid, camera_Object[player_Variable[playerid]]);
				msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position du radar.");
				return 1;
			}
		}
		else if(player_Dialog[playerid]==2)
		{
		    if(!strlen(inputtext)|| strval(inputtext) > 200 || strval(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"{FFFF00}» Radar «{FFFFE0} Edit - Limite","Erreur dans la limite !\nEntrer la limitation de vitesse :","Valider","Retour");}

		    camera[player_Variable[playerid]][limit]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la limitation de vitesse à %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    camera_Save(player_Variable[playerid]);
		    camera_UpdateInfos(player_Variable[playerid]);
		}
		else if(player_Dialog[playerid]==3)
		{
		    if(!strlen(inputtext)|| strval(inputtext) > 200 || strval(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"{FFFF00}» Radar «{FFFFE0} Edit - Distance","Erreur dans la distance !\nEntrer la distance de flash :","Valider","Retour");}

		    camera[player_Variable[playerid]][range]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la distance à %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    camera_Save(player_Variable[playerid]);
		    camera_UpdateInfos(player_Variable[playerid]);
		}
		else if(player_Dialog[playerid]==4)
		{
		    if(!strlen(inputtext)|| strval(inputtext) > 5000 || strval(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"{FFFF00}» Radar «{FFFFE0} Edit - Amende","Erreur dans l'amende !\nEntrer l'amende :","Valider","Retour");}

		    camera[player_Variable[playerid]][price]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé l'amende à %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    camera_Save(player_Variable[playerid]);
		    camera_UpdateInfos(player_Variable[playerid]);
		}
		return 1;
    }
	if(dialogid == 16)
   	{
   		if(!response)
		   	{return 1;}
		   	
   		if(listitem==0||listitem==8)
   			{return ShowPlayerDialog(playerid,16,DIALOG_STYLE_TABLIST,"{2B6AFF}» Distributeur «{FFFFFF} Achats","{AFAFAF}Boisson\t{AFAFAF}$2\t{AFAFAF}+20 de soif{FFFFFF}\nCoca Cola\nFanta\nOrangina\nOasis\nCafé\nEau\nChocolat Chaud\n{AFAFAF}Gâteau\t{AFAFAF}$2\t+{AFAFAF}20 de faim{FFFFFF}\nKinder\nTwix\nMars\nLion\nChips\nBonBon","Acheter","Annuler");}
   			
   		if(listitem > 0 && listitem < 8) // Boisson
   			{PlayerInfo[playerid][pSoif]+=20; SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);}
   		if(listitem > 8 && listitem < 15) // Gateau
   			{PlayerInfo[playerid][pFaim]+=20; LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);}
   			
   		msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Distributeur «{FFFFFF} Article acheté pour $2.");
   		SafeGivePlayerMoney(playerid,-2,"Achat à un distributeur");
   		UpdateStatsTextsPlayers(playerid,2);
   		UpdateStatsTextsPlayers(playerid,1);
   		return 1;
    }
    if(dialogid == 65)
    {
        if(!response)
		{
			if(sign_DialogEdit[playerid]==0 || sign_DialogEdit[playerid]==1) return 1;
			else
			{
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");
				sign_DialogEdit[playerid]=1;
				return 1;
			}
		}
		if(sign_DialogEdit[playerid]==0)
		{
		    new signid=strval(inputtext);
			if(!strlen(inputtext) || signid > totalSigns || signid < 0)
			{
			    ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Edit","Erreur dans l'ID !\nEntrez l'id du panneau que vous désirez modifier :","Valider","Annuler");
				atm_DialogEdit[playerid]=0;
				return 1;
			}
			if(sign[signid][used] !=1)
			{
			    ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Edit","Panneau non créé !\nEntrez l'id du panneau que vous désirez modifier :","Valider","Annuler");
				atm_DialogEdit[playerid]=0;
			    return 1;
			}
            ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");
			sign_DialogEdit[playerid]=1;
			sign_EditId[playerid]=signid;
		}
		else if(sign_DialogEdit[playerid]==1)
		{
			if(listitem==0)
			{
				sign_DialogEdit[playerid]=20;
				EditDynamicObject(playerid, sign_Object[sign_EditId[playerid]]);
				msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Edition de la position du panneau.");
				return 1;
			}
			if(listitem==1)
			{
			    format(string,sizeof(string),"Entrez le model du panneau : (Ancien : %d)",sign[sign_EditId[playerid]][model]);
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Model",string,"Valider","Retour");
				sign_DialogEdit[playerid]=2;
				return 1;
			}
			if(listitem==2)
			{
			    format(string,sizeof(string),"Entrez le texte du panneau : (Ancien : %s)",sign[sign_EditId[playerid]][description]);
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Texte",string,"Valider","Retour");
				sign_DialogEdit[playerid]=3;
				return 1;
			}
			if(listitem==3)
			{
			    format(string,sizeof(string),"Entrez l'index du panneau : (Ancien : %d)",sign[sign_EditId[playerid]][indexNum]);
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Index",string,"Valider","Retour");
				sign_DialogEdit[playerid]=4;
				return 1;
			}
			if(listitem==4)
			{
			    format(string,sizeof(string),"32x32\n64x32\n64x64\n128x32\n128x64\n128x128\n256x32\n256x64\n256x128\n256x256\n512x32\n512x64\n512x128\n512x256\n512x512");
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Taille",string,"Valider","Retour");
				sign_DialogEdit[playerid]=5;
				return 1;
			}
			if(listitem==5)
			{
			    format(string,sizeof(string),"Entrez la police d'écritue du panneau : (Ancien : %s)",sign[sign_EditId[playerid]][fontName]);
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| police d'écriture",string,"Valider","Retour");
				sign_DialogEdit[playerid]=6;
				return 1;
			}
			if(listitem==6)
			{
			    format(string,sizeof(string),"Entrez la taille du texte du panneau : (Ancien : %d)",sign[sign_EditId[playerid]][fontSize]);
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Taille Text",string,"Valider","Retour");
				sign_DialogEdit[playerid]=7;
				return 1;
			}
			if(listitem==7)
			{
			    format(string,sizeof(string),"Oui\nNon");
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Bold Texte",string,"Valider","Retour");
				sign_DialogEdit[playerid]=8;
				return 1;
			}
			if(listitem==8)
			{
			    format(string,sizeof(string),"Entrez une couleur ARGB : (0x00000000)");
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Couleur texte",string,"Valider","Retour");
				sign_DialogEdit[playerid]=9;
				return 1;
			}
			if(listitem==9)
			{
			    format(string,sizeof(string),"Entrez une couleur ARGB ou '0' pour retirer le fond : (0x00000000)");
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Couleur Fond",string,"Valider","Retour");
				sign_DialogEdit[playerid]=10;
				return 1;
			}
			if(listitem==10)
			{
				ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Alignement","Gauche\nCentré\nDroite","Valider","Retour");
				sign_DialogEdit[playerid]=11;
				return 1;
			}
		}
		else if(sign_DialogEdit[playerid]==2)
		{
		    if(!strlen(inputtext)|| strval(inputtext) < 0)
		    	{format(string,sizeof(string),"Entrez le texte du panneau : (Ancien : %d)",sign[sign_EditId[playerid]][description]);ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Modele",string,"Valider","Retour"); return 1;}

		    sign[sign_EditId[playerid]][model]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le modèle du panneau : %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==3)
		{
		    if(!strlen(inputtext)|| strlen(inputtext) < 0 || strlen(inputtext) > 128)
		    	{format(string,sizeof(string),"Entrez le texte du panneau : (Ancien : %s)",sign[sign_EditId[playerid]][model]);ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Texte",string,"Valider","Retour"); return 1;}

		    strmid(sign[sign_EditId[playerid]][description], inputtext, 0, strlen(inputtext), 128);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le texte du panneau : %s.",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==4)
		{
		    if(!strlen(inputtext)|| strval(inputtext) < 0)
		    	{format(string,sizeof(string),"Entrez l'index du panneau : (Ancien : %d)",sign[sign_EditId[playerid]][indexNum]);ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Index",string,"Valider","Retour"); return 1;}

		    sign[sign_EditId[playerid]][indexNum]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé l'index du panneau : %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==5)
		{
		    if(listitem==0) {sign[sign_EditId[playerid]][size]=10;}
		    if(listitem==1) {sign[sign_EditId[playerid]][size]=20;}
		    if(listitem==2) {sign[sign_EditId[playerid]][size]=30;}
		    if(listitem==3) {sign[sign_EditId[playerid]][size]=40;}
		    if(listitem==4) {sign[sign_EditId[playerid]][size]=50;}
		    if(listitem==5) {sign[sign_EditId[playerid]][size]=60;}
		    if(listitem==6) {sign[sign_EditId[playerid]][size]=70;}
		    if(listitem==7) {sign[sign_EditId[playerid]][size]=80;}
		    if(listitem==8) {sign[sign_EditId[playerid]][size]=90;}
		    if(listitem==9) {sign[sign_EditId[playerid]][size]=100;}
		    if(listitem==10) {sign[sign_EditId[playerid]][size]=110;}
		    if(listitem==11) {sign[sign_EditId[playerid]][size]=120;}
		    if(listitem==12) {sign[sign_EditId[playerid]][size]=130;}
		    if(listitem==13) {sign[sign_EditId[playerid]][size]=140;}

		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la taille du panneau : %d.",sign[sign_EditId[playerid]][size]);
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==6)
		{
		    if(!strlen(inputtext)|| strlen(inputtext) < 0 || strlen(inputtext) > 128)
		    	{format(string,sizeof(string),"Entrez la police d'écriture du panneau : (Ancien : %s)",sign[sign_EditId[playerid]][fontName]);ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Police d'écriture",string,"Valider","Retour"); return 1;}

		    strmid(sign[sign_EditId[playerid]][fontName], inputtext, 0, strlen(inputtext), 128);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la police d'écriture du panneau : %s.",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==7)
		{
		    if(!strlen(inputtext)|| strval(inputtext) < 0)
		    	{format(string,sizeof(string),"Entrez la taille du texte du panneau : (Ancien : %d)",sign[sign_EditId[playerid]][fontSize]);ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Taille Texte",string,"Valider","Retour"); return 1;}

		    sign[sign_EditId[playerid]][fontSize]=strval(inputtext);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la taille du texte du panneau : %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==8)
		{
		    if(listitem==0) {sign[sign_EditId[playerid]][bold]=0;}
		    if(listitem==1) {sign[sign_EditId[playerid]][bold]=1;}

		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la Bold du panneau : %d.",sign[sign_EditId[playerid]][bold]);
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==9)
		{
		    if(!strlen(inputtext)|| strlen(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Couleur texte","Entrez une couleur ARGB : (0x00000000)","Valider","Retour");}

			new red[3],green[3],blue[3],alpha[3];
			format(red, sizeof(red), "%c%c", inputtext[2], inputtext[3]);
	        format(green, sizeof(green), "%c%c", inputtext[4], inputtext[5]);
	        format(blue, sizeof(blue), "%c%c", inputtext[6], inputtext[7]);
	        if(inputtext[8] != '\0')
	            {format(alpha, sizeof(alpha), "%c%c", inputtext[8], inputtext[9]);}
			else
				{alpha = "FF";}
            sign[sign_EditId[playerid]][textColor]=RGB(HexToInt(red), HexToInt(green), HexToInt(blue), HexToInt(alpha));
            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la couleur du texte du panneau : %s.",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==10)
		{
		    if(!strlen(inputtext)|| strlen(inputtext) < 0)
		    	{return ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"|Panneau| Couleur Fond","Entrez une couleur ARGB ou '0' pour retirer le fond : (0x00000000)","Valider","Retour");}

			if(strcmp(inputtext,"0",true) == 0)
			    {sign[sign_EditId[playerid]][backColor]=0;}
			else
			{
				new red[3],green[3],blue[3],alpha[3];
				format(red, sizeof(red), "%c%c", inputtext[2], inputtext[3]);
		        format(green, sizeof(green), "%c%c", inputtext[4], inputtext[5]);
		        format(blue, sizeof(blue), "%c%c", inputtext[6], inputtext[7]);
		        if(inputtext[8] != '\0')
		            {format(alpha, sizeof(alpha), "%c%c", inputtext[8], inputtext[9]);}
				else
					{alpha = "FF";}
				sign[sign_EditId[playerid]][backColor]=RGB(HexToInt(red), HexToInt(green), HexToInt(blue), HexToInt(alpha));
			}
            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé la couleur du texte du panneau : %s.",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		else if(sign_DialogEdit[playerid]==11)
		{
		    if(listitem==0) {sign[sign_EditId[playerid]][alignement]=0;}
		    if(listitem==1) {sign[sign_EditId[playerid]][alignement]=1;}
		    if(listitem==2) {sign[sign_EditId[playerid]][alignement]=2;}

		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé l'alignement du panneau.");
		    msg_Client(playerid,COLOR_WHITE,string);
		    sign_Save(sign_EditId[playerid]);
		    sign_UpdateInfos(sign_EditId[playerid]);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");sign_DialogEdit[playerid]=1;
		}
		return 1;
    }
    if(dialogid == 79)
    {
		if(response)
		{
		    new atmid = -1;
			for(new at = 0; at<totalATMs; at++)
			{
				if(PlayerToPoint(3, playerid,atm[at][pos][0],atm[at][pos][1],atm[at][pos][2]))
					{atmid = at; break;}
			}
			if(atmid==-1)
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas à côté d'un ATM.");return 1;}
				
		    if(!strlen(inputtext) || strval(inputtext) > atm[atmid][cash] || strval(inputtext) > PlayerInfo[playerid][pAccount] || strval(inputtext) < 0)
		    {
		        format(string, sizeof(string), "Erreur dans le montant.\nMax dans l'atm : $%d\nMax sur votre compte : $%d\nEntrer le montant que vous désirez retirer :",atm[atmid][cash], PlayerInfo[playerid][pAccount]);
	 			ShowPlayerDialog(playerid,79,DIALOG_STYLE_INPUT,"» Atm « Retrait",string,"Retirer","Annuler");
		        return 1;
		    }
			LoopingAnim(playerid,"PED","ATM",4.0,0,0,0,0,0);
			SafeGivePlayerMoney(playerid,strval(inputtext),"Retire argent ATM");
			PlayerInfo[playerid][pAccount]-=strval(inputtext);
			atm[atmid][cash]-=strval(inputtext);
		    format(string, sizeof(string), "{CF9756}» Info «{FFFFFF} Vous avez retiré $%d de votre compte. Il vous reste: $%d .", strval(inputtext),PlayerInfo[playerid][pAccount]);
			msg_Client(playerid, COLOR_INFO, string);
			format(string, sizeof(string), "* %s prend sa C.B et retire de l'argent.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			format(string,sizeof(string),"{33CCFF}[ATM]\nArgent :{FFFFFF} $%d\n{FFFFFF}Touche 'N'",atm[atmid][cash]);
			UpdateDynamic3DTextLabelText(atm_Label[atmid],0x33CCFFAA, string);
			atm_Save(atmid);
		}
		return 1;
    }
   	if(dialogid == 2)
	{
		return 1;
	}
    if(dialogid == 123)
    {
        if(!response)
			{return 1;}
        if(response ==1)
    	{
    	    new prix=strval(inputtext);
    	    if(!strlen(inputtext) || prix>20000 || prix<0)
    	    	{return ShowPlayerDialog(playerid, 123, DIALOG_STYLE_INPUT, "» Admin « Création d'un garage","Erreur prix compris entre $1 et $20000.\nEntrez le prix du garage :","Valider", "Annuler");}
    	    	
    	    new Float:x,Float:y,Float:z;
		    GetPlayerPos(playerid,x,y,z);
    	    new ID=-1;
		    for(new nbg = 0; nbg < totalGarages; nbg++)
			{
				if(garage[nbg][used] == 0)
					{ID = nbg; break;}
			}
			if(ID==-1)
			{
				format(sql, sizeof(sql), "SELECT * FROM lvrp_server_garages");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID>MAX_GARAGE)
					{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de garages atteint."); return 1;}
				format(sql, sizeof(sql), "INSERT INTO lvrp_server_garages SET id=%d, Created=1, Owner='%s', Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=1403.5999755859, Exit_y=1, Exit_z=1001.5999755859, Owned=0, Price=%d, Locked=0",ID+1, NO_ONE, x, y, z, prix);
				mysql_pquery(MYSQL,sql);
				totalGarages++;
			}
			strmid(garage[ID][owner], NO_ONE, 0, strlen(NO_ONE), 32);
	    	garage[ID][pos][0] = x;
	    	garage[ID][pos][1] = y;
	    	garage[ID][pos][2] = z;
	    	garage[ID][pos][3] = 1403.5999755859;
	    	garage[ID][pos][4] = 1;
	    	garage[ID][pos][5] = 1001.5999755859;
	    	garage[ID][used] = 1;
	    	garage[ID][lock] = 0;
	    	garage[ID][price] = prix;
	    	garage[ID][owned] = 0;
		    garage_Save(ID);
		    garage_UpdateInfos(ID);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Garage id %d créé.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
		    return 1;
    	}
    	return 1;
    }
    if(dialogid == 119)
    {
        if(!response)
			{return 1;}
		if(player_Dialog[playerid]==0)
		{
		    SetPVarInt(playerid,"gpsCity",listitem);
		    ShowPlayerDialog(playerid, 119, DIALOG_STYLE_INPUT, "» Admin « Création d'un point de GPS","Entrez le nom du point du GPS :","Valider", "Annuler");
            player_Dialog[playerid] = 1;
		}
		else if(player_Dialog[playerid]==1)
		{
    	    if(!strlen(inputtext) || strlen(inputtext)>30 || strlen(inputtext)<0)
    	    	{return ShowPlayerDialog(playerid, 119, DIALOG_STYLE_INPUT, "» Admin « Création d'un arret point de GPS","Erreur, 30 caractères max.\nEntrez le nom du point du GPS :","Valider", "Annuler");}
    	    
    	    new ID=-1;
    	    new Float:x,Float:y,Float:z;
		    GetPlayerPos(playerid,x,y,z);
		    for(new nbgps = 0; nbgps < totalGPS; nbgps++)
			{
				if(gps[nbgps][used] == 0)
					{ID = nbgps;break;}
			}
			if(ID==-1)
			{
				format(sql, sizeof(sql), "SELECT * FROM lvrp_server_gps");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID+1>MAX_GPS)
					{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de GPS atteint."); return 1;}
				format(sql, sizeof(sql), "INSERT INTO lvrp_server_gps SET id=%d, Name='%s', Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, City=%d",ID+1, inputtext, x, y, z, GetPVarInt(playerid,"gpsCity"));
				mysql_pquery(MYSQL,sql);
				totalGPS++;
			}
			strmid(gps[ID][description], inputtext, 0, strlen(inputtext), 32);
	    	gps[ID][pos][0] = x;
	    	gps[ID][pos][1] = y;
	    	gps[ID][pos][2] = z;
	    	gps[ID][used] = 1;
	    	gps[ID][city] = GetPVarInt(playerid,"gpsCity");
		    gps_Save(ID);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} GPS id %d créé.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
			DeletePVar(playerid,"gpsCity");
		    return 1;
		}
		return 1;
    }
    if(dialogid == 10)
    {
        if(!response)
			{return 1;}
        new Float:x,Float:y,Float:z,Float:a;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,a);
        new ID=-1;
		for(new poub=0; poub<totalTrash;poub++)
		{
		    if(trash[poub][used] == 0)
		    	{ID=poub;break;}
		}
		if(ID==-1)
		{
			format(sql, sizeof(sql), "SELECT * FROM lvrp_server_trash");
			mysql_query(MYSQL,sql);
			cache_get_row_count(ID);
			if(ID>MAX_TRASH)
				{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de grosses poubelles atteint."); return 1;}
			format(sql, sizeof(sql), "INSERT INTO lvrp_server_trash SET id=%d, Created=1, Trash=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f",ID+1, strval(inputtext), x, y, z, a);
			mysql_pquery(MYSQL,sql);
			totalTrash++;
		}
		trash[ID][pos][0] = x;
		trash[ID][pos][1] = y;
		trash[ID][pos][2] = z;
		trash[ID][pos][3] = a;
		trash[ID][used] = 1;
		trash[ID][quantity] = strval(inputtext);
	    trash_Save(ID);
	    trash_UpdateInfos(ID);
	    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Grosse poubelle id %d créée.",ID);
		msg_Client(playerid,COLOR_WHITE,string);
	    return 1;
    }
    if(dialogid == 135)
    {
        if(!response)
			{return 1;}
    	if(response ==1)
    	{
    	    if(!strlen(inputtext) || strval(inputtext)>30000 || strval(inputtext)<0)
    	    	{return ShowPlayerDialog(playerid, 135, DIALOG_STYLE_INPUT, "» Admin « Création d'un ATM","$30000 max.\nEntrer l'argent dans l'atm que vous allez creer :","Valider", "Annuler");}
    	    	
    	    new Float:x,Float:y,Float:z,Float:a;
	    	GetPlayerPos(playerid,x,y,z);
	    	GetPlayerFacingAngle(playerid,a);
		    new ID=-1;
		    for(new i=0; i<totalATMs;i++)
		    {
		        if(atm[i][used] == 0)
		        	{ID=i;break;}
		    }
		    if(ID==-1)
		    {
		        format(sql, sizeof(sql), "SELECT * FROM lvrp_server_atms");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID>MAX_ATM)
					{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum d'atms atteint."); return 1;}
				format(sql, sizeof(sql), "INSERT INTO lvrp_server_atms SET id=%d, Created=1, Cash=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f",ID+1, strval(inputtext), x, y, z, a);
				mysql_pquery(MYSQL,sql);
				totalATMs++;
		    }
		    atm[ID][pos][0] = x;
	    	atm[ID][pos][1] = y;
	    	atm[ID][pos][2] = z;
	    	atm[ID][pos][3] = a;
	    	atm[ID][used] = 1;
	    	atm[ID][rob] = 0;
	    	atm[ID][cash] = strval(inputtext);
	        atm_Save(ID);
	    	atm_UpdateInfos(ID);
	    	format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} ATM id %d créé.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
	    	return 1;
    	}
		return 1;
    }
	if(dialogid == 112)
    {
    	if(!response)
			{return 1;}
    	if(response ==1)
    	{
    	    if(!strlen(inputtext) || strlen(inputtext)>30 || strlen(inputtext)<0)
    	    	{return ShowPlayerDialog(playerid, 112, DIALOG_STYLE_INPUT, "» Admin « Création d'un arret de bus","Erreur, 30 caractères max.\nEntrez le nom de l'arrêt de bus :","Valider", "Annuler");}
    	    
   	     	new Float:x,Float:y,Float:z,Float:a;
	    	GetPlayerPos(playerid,x,y,z);
	    	GetPlayerFacingAngle(playerid,a);
    	    new ID=-1;
		    for(new arret = 0; arret < totalBusStop; arret++)
			{
				if(stop[arret][used] == 0)
					{ID=arret;break;}
			}
			if(ID==-1)
		    {
		        format(sql, sizeof(sql), "SELECT * FROM lvrp_server_stop");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID>MAX_BUSSTOP)
					{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum d'arrets de bus atteint.");}
					
				format(sql, sizeof(sql), "INSERT INTO lvrp_server_stop SET id=%d, Created=1, Name='%s', Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f",ID+1, inputtext, x, y, z, a);
				mysql_pquery(MYSQL,sql);
				totalBusStop++;
		    }
			strmid(stop[ID][description], inputtext, 0, strlen(inputtext), 255);
	    	stop[ID][pos][0] = x;
    	 	stop[ID][pos][1] = y;
	    	stop[ID][pos][2] = z;
	    	stop[ID][pos][3] = a;
	    	stop[ID][used] = 1;
	        stop_Save(ID);
	    	stop_UpdateInfos(ID);
            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Arret id %d créé.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
	    	return 1;
    	}
		return 1;
    }
    if(dialogid == 66)
    {
    	if(!response)
			{return 1;}
    	if(player_Dialog[playerid] == 0)
    	{
    	    SetPVarInt(playerid,"radar_Limit",strval(inputtext));
    	    player_Dialog[playerid]=1;
    	    ShowPlayerDialog(playerid, 66, DIALOG_STYLE_INPUT, "» Admin « Création d'un radar","Entrez la distance de flash :","Valider", "Annuler");
    	}
		else if (player_Dialog[playerid] == 1)
		{
		    SetPVarInt(playerid,"radar_Range",strval(inputtext));
    	    player_Dialog[playerid]=2;
    	    ShowPlayerDialog(playerid, 66, DIALOG_STYLE_INPUT, "» Admin « Création d'un radar","Entrez le prix de l'amende :","Valider", "Annuler");
		}
		else if (player_Dialog[playerid] == 2)
		{
		    new lim = GetPVarInt(playerid, "radar_Limit");
		    new ran = GetPVarInt(playerid, "radar_Range");
		    new fi = strval(inputtext);
   	     	new Float:x,Float:y,Float:z,Float:a;
	    	GetPlayerPos(playerid,x,y,z);
	    	GetPlayerFacingAngle(playerid,a);
    	    new ID=-1;
		    for(new i = 0; i < totalCameras; i++)
			{
				if(camera[i][used] == 0)
					{ID=i;break;}
			}
			if(ID==-1)
		    {
		        format(sql, sizeof(sql), "SELECT * FROM lvrp_server_camera");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID>MAX_CAMERA)
					{return msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de radars atteint.");}

				format(sql, sizeof(sql), "INSERT INTO lvrp_server_camera SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f, Limite=%d, Fine=%d, Ranged=%d",ID+1, x, y, z, a, lim, fi, ran);
				mysql_pquery(MYSQL,sql);
				totalCameras++;
		    }
	    	camera[ID][pos][0] = x;
	    	camera[ID][pos][1] = y;
	    	camera[ID][pos][2] = z-1;
	    	camera[ID][pos][3] = a;
	    	camera[ID][limit] = lim;
	    	camera[ID][price] = fi;
	    	camera[ID][range] = ran;
	    	camera[ID][used] = 1;
	        camera_Save(ID);
	    	camera_UpdateInfos(ID);
      		format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Radar id %d créé.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
			DeletePVar(playerid,"radar_Limit");
			DeletePVar(playerid,"radar_Range");
			player_Dialog[playerid]=0;
 	 		return 1;
    	}
		return 1;
    }
	if(dialogid == 9)
    {
        if(!response)
		{
			if(Dialogue_Systeme_Faction[playerid]==0) return 1;
			else
			{
				Dialogue_Systeme_Faction[playerid]=0;
				ShowPlayerDialog(playerid, 9, DIALOG_STYLE_MSGBOX, "» Admin « Création d'une faction","Vous êtes sur le point de créer une faction, l'entré et le coffre seront à votre position actuelle.\nVous pourrez toujours modifier c'est position apres (/a faction edit).","Continuer", "Annuler");
				return 1;
			}
		}
		if(Dialogue_Systeme_Faction[playerid] == 0)
		{
			Dialogue_Systeme_Faction[playerid]=1;
			ShowPlayerDialog(playerid, 9, DIALOG_STYLE_LIST, "» Admin « Type de faction","Gang\nMafia","Continuer", "Retour");
		}
		else if(Dialogue_Systeme_Faction[playerid] == 1)
		{
			if(listitem == 0)
        	{
        	    Dialogue_Systeme_Faction[playerid]=2;
        	    SetPVarInt(playerid,"fType_Faction",1);
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_LIST, "» Admin « Choissiser un interrieur","Int 1(Burning Desire House)\nInt 2(Johnson House)\nInt 3(The Crack Den)\nInt 4(Colonel Fuhrberger's House)\nInt 5 (Ryders house)\nInt 6 (Sweet's house)","Continuer" ,"Retour");
        	}
        	if(listitem == 1)
        	{
        	    Dialogue_Systeme_Faction[playerid]=3;
        	    SetPVarInt(playerid,"fType_Faction",2);
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_LIST, "» Admin « Choissiser un interrieur","Int 1 (Brothel)\nInt 2 (Madd Dogg's Mansion)\nInt 3 (Jizzy's Pleasure Domes)\nInt 4 (4 Dragons Casino)\nInt 5 (Caligulas Casino)","Continuer" ,"Retour");
        	}
		}
		else if(Dialogue_Systeme_Faction[playerid] == 2)
		{
			if(listitem == 0)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",5);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",2352.8064);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",-1180.9540);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1027.9766);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 1)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",3);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",2495.9897);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",-1692.0836);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1014.7422);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 2)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",5);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",318.5954);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",1114.4801);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1083.8828);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 3)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",8);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",2807.6248);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",-1174.7563);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1025.5703);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 4)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",5);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",318.57);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",1115.21);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1083.98);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 5)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",2);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",2454.717041);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",-1700.871582);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1013.515197);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 7)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",1);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",2527.654052);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",-1679.388305);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1015.498596);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
		}
		else if(Dialogue_Systeme_Faction[playerid] == 3)
		{
			if(listitem == 0)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",3);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",968.0631);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",-53.2714);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1001.1246);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 1)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",5);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",1260.6483);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",-785.4341);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1091.9063);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 2)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",3);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",-2636.7043);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",1402.4664);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",906.4609);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 3)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",10);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",2016.2699);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",1017.7790);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",996.8750);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
        	if(listitem == 4)
        	{
        	    SetPVarInt(playerid,"FNO_Int_ID",1);
        	    SetPVarFloat(playerid,"FNO_Entrance_x",2233.8032);
        	    SetPVarFloat(playerid,"FNO_Entrance_y",1712.2303);
        	    SetPVarFloat(playerid,"FNO_Entrance_z",1011.7632);
        	    Dialogue_Systeme_Faction[playerid]=4;
        	    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");
        	}
		}
		else if(Dialogue_Systeme_Faction[playerid] == 4)
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 4)
		   		{return ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, "» Admin « Nom de la faction","Merci de bien vouloir entrer le nom de la faction:","Continuer", "Retour");}
		   		
		    new Float:X,Float:Y,Float:Z;
		    GetPlayerPos(playerid, X, Y, Z);
		    new Faction_Type = GetPVarInt(playerid, "fType_Faction");
		    new Interrieur = GetPVarInt(playerid, "FNO_Int_ID");
		    new Float:Pos_Sortie_X = GetPVarFloat(playerid,"FNO_Entrance_x");
		    new Float:Pos_Sortie_Y = GetPVarFloat(playerid,"FNO_Entrance_y");
		    new Float:Pos_Sortie_Z = GetPVarFloat(playerid,"FNO_Entrance_z");

		    new ID=-1;
		    for(new fac=0;fac<totalFactions;fac++)
		    {
		        if(FactionInfo[fac][fCreate]==0)
		        	{ID=fac;break;}
		    }
		    if(ID==-1)
		    {
		        format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals");
				mysql_query(MYSQL,sql);
			 	cache_get_row_count(ID);
	 			ID++;
				if(ID>MAX_FACTION)
					{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de factions atteint."); return 1;}
					
				format(sql, sizeof(sql), "INSERT INTO lvrp_factions_illegals SET id=%d, Created=1, Owned=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Safe_x=%f, Safe_y=%f, Safe_z=%f, Interior=%d, Name='%s', Type=%d, VW=%d",ID, X, Y, Z, Pos_Sortie_X, Pos_Sortie_Y, Pos_Sortie_Z, X, Y, Z+2, Interrieur, inputtext, Faction_Type, ID-1);
				mysql_pquery(MYSQL,sql);
				FactionInfo[ID-1][fEntrance][0] = X;
			    FactionInfo[ID-1][fEntrance][1] = Y;
			    FactionInfo[ID-1][fEntrance][2] = Z;
			    FactionInfo[ID-1][fExit][0] = Pos_Sortie_X;
			    FactionInfo[ID-1][fExit][1] = Pos_Sortie_Y;
			    FactionInfo[ID-1][fExit][2] = Pos_Sortie_Z;
			    FactionInfo[ID-1][fSafe][0] = X;
			    FactionInfo[ID-1][fSafe][1] = Y;
			    FactionInfo[ID-1][fSafe][2] = Z+2;
			    FactionInfo[ID-1][fCash] = 0;
			    FactionInfo[ID-1][FNO_Mats] = 0;
			    FactionInfo[ID-1][FNO_Hero] = 0;
			    FactionInfo[ID-1][FNO_Coca] = 0;
			    FactionInfo[ID-1][FNO_Exta] = 0;
			    FactionInfo[ID-1][fArmour] = 0.000000;
			    FactionInfo[ID-1][FNO_Arme1] = 0;
			    FactionInfo[ID-1][FNO_Arme2] = 0;
			    FactionInfo[ID-1][FNO_Arme3] = 0;
			    FactionInfo[ID-1][FNO_Arme4] = 0;
			    FactionInfo[ID-1][FNO_Arme5] = 0;
			    FactionInfo[ID-1][FNO_Arme6] = 0;
			    FactionInfo[ID-1][FNO_Arme7] = 0;
			    FactionInfo[ID-1][FNO_Arme8] = 0;
			    FactionInfo[ID-1][FNO_Arme9] = 0;
			    FactionInfo[ID-1][FNO_Arme10] = 0;
			    FactionInfo[ID-1][FNO_Amo1] = 0;
			    FactionInfo[ID-1][FNO_Amo2] = 0;
			    FactionInfo[ID-1][FNO_Amo3] = 0;
			    FactionInfo[ID-1][FNO_Amo4] = 0;
			    FactionInfo[ID-1][FNO_Amo5] = 0;
			    FactionInfo[ID-1][FNO_Amo6] = 0;
			    FactionInfo[ID-1][FNO_Amo7] = 0;
			    FactionInfo[ID-1][FNO_Amo8] = 0;
			    FactionInfo[ID-1][FNO_Amo9] = 0;
			    FactionInfo[ID-1][FNO_Amo10] = 0;
			    FactionInfo[ID-1][fInt] = Interrieur;
			    strmid(FactionInfo[ID-1][fName], inputtext, 0, 32, 32);
			    FactionInfo[ID-1][fLock] = 1;
			    FactionInfo[ID-1][fOwned] = 1;
			    FactionInfo[ID-1][fType] = Faction_Type;
			    FactionInfo[ID-1][fColor] = 0;
			    FactionInfo[ID-1][fChoseColor] = 0;
			    FactionInfo[ID-1][fWV] = ID+200;
			    strmid(FactionInfo[ID-1][fRank1], "Nouveau", 0, strlen("Nouveau"), 32);
				strmid(FactionInfo[ID-1][fRank2], "Membre", 0, strlen("Membre"), 32);
				strmid(FactionInfo[ID-1][fRank3], "Membre", 0, strlen("Membre"), 32);
				strmid(FactionInfo[ID-1][fRank4], "Membre", 0, strlen("Membre"), 32);
				strmid(FactionInfo[ID-1][fRank5], "Sous-Chef", 0, strlen("Sous-Chef"), 32);
				strmid(FactionInfo[ID-1][fRank6], "Chef", 0, strlen("Chef"), 32);
				FactionInfo[ID-1][fCreate]=1;
				totalFactions++;
				faction_UpdateInfos(ID-1);
				format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Faction id %d créée.",ID-1);
				msg_Client(playerid,COLOR_WHITE,string);
		    }
			else
			{
			    FactionInfo[ID][fEntrance][0] = X;
			    FactionInfo[ID][fEntrance][1] = Y;
			    FactionInfo[ID][fEntrance][2] = Z;
			    FactionInfo[ID][fExit][0] = Pos_Sortie_X;
			    FactionInfo[ID][fExit][1] = Pos_Sortie_Y;
			    FactionInfo[ID][fExit][2] = Pos_Sortie_Z;
			    FactionInfo[ID][fSafe][0] = X;
			    FactionInfo[ID][fSafe][1] = Y;
			    FactionInfo[ID][fSafe][2] = Z+2;
			    FactionInfo[ID][fCash] = 0;
			    FactionInfo[ID][FNO_Mats] = 0;
			    FactionInfo[ID][FNO_Hero] = 0;
			    FactionInfo[ID][FNO_Coca] = 0;
			    FactionInfo[ID][FNO_Exta] = 0;
			    FactionInfo[ID][fArmour] = 0.000000;
			    FactionInfo[ID][FNO_Arme1] = 0;
			    FactionInfo[ID][FNO_Arme2] = 0;
			    FactionInfo[ID][FNO_Arme3] = 0;
			    FactionInfo[ID][FNO_Arme4] = 0;
			    FactionInfo[ID][FNO_Arme5] = 0;
			    FactionInfo[ID][FNO_Arme6] = 0;
			    FactionInfo[ID][FNO_Arme7] = 0;
			    FactionInfo[ID][FNO_Arme8] = 0;
			    FactionInfo[ID][FNO_Arme9] = 0;
			    FactionInfo[ID][FNO_Arme10] = 0;
			    FactionInfo[ID][FNO_Amo1] = 0;
			    FactionInfo[ID][FNO_Amo2] = 0;
			    FactionInfo[ID][FNO_Amo3] = 0;
			    FactionInfo[ID][FNO_Amo4] = 0;
			    FactionInfo[ID][FNO_Amo5] = 0;
			    FactionInfo[ID][FNO_Amo6] = 0;
			    FactionInfo[ID][FNO_Amo7] = 0;
			    FactionInfo[ID][FNO_Amo8] = 0;
			    FactionInfo[ID][FNO_Amo9] = 0;
			    FactionInfo[ID][FNO_Amo10] = 0;
			    FactionInfo[ID][fInt] = Interrieur;
			    strmid(FactionInfo[ID][fName], inputtext, 0, 32, 32);
			    FactionInfo[ID][fLock] = 1;
			    FactionInfo[ID][fOwned] = 1;
			    FactionInfo[ID][fType] = Faction_Type;
			    FactionInfo[ID][fColor] = 0;
			    FactionInfo[ID][fChoseColor] = 0;
			    FactionInfo[ID][fWV] = ID+200;
			    strmid(FactionInfo[ID][fRank1], "Nouveau", 0, strlen("Nouveau"), 32);
				strmid(FactionInfo[ID][fRank2], "Membre", 0, strlen("Membre"), 32);
				strmid(FactionInfo[ID][fRank3], "Membre", 0, strlen("Membre"), 32);
				strmid(FactionInfo[ID][fRank4], "Membre", 0, strlen("Membre"), 32);
				strmid(FactionInfo[ID][fRank5], "Sous-Chef", 0, strlen("Sous-Chef"), 32);
				strmid(FactionInfo[ID][fRank6], "Chef", 0, strlen("Chef"), 32);
				FactionInfo[ID][fCreate]=1;
			    faction_Save(ID);
			    faction_UpdateInfos(ID);
			}

		    Dialogue_Systeme_Faction[playerid]=0;
		    DeletePVar(playerid,"fType_Faction");
		    DeletePVar(playerid,"FNO_Int_ID");
		    DeletePVar(playerid,"FNO_Entrance_x");
		    DeletePVar(playerid,"FNO_Entrance_y");
		    DeletePVar(playerid,"FNO_Entrance_z");
		    DeletePVar(playerid,"fName");
		    return 1;
		}
        return 1;
    }
    if(dialogid == 106)
    {
        if(response == 1) // Biz Unique
		{
      		format(string,sizeof(string),"Entrez l'Id du bizz : (0  à %d)",totalBizz);
		    ShowPlayerDialog(playerid,107,DIALOG_STYLE_INPUT,"» Admin « Id du biz",string,"Valider","Annuler");
		}
        return 1;
    }
    if(dialogid == 62)
    {
        if(!response)
            {return 1;}
		if(listitem >= 0 && PlayerInfo[playerid][pAdmin] >= 5 &&  AdminDuty[playerid] == 1)
			{bizz_Set(player_Variable[playerid],listitem+1); player_Variable[playerid]=-1; return 1;}
		else if(listitem>=0 && listitem <= 8 || listitem>=10 && listitem <= 19)
			{bizz_Set(player_Variable[playerid],listitem+1); player_Variable[playerid]=-1; msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre entreprise a été créé."); return 1;}
		else if(listitem==9)
		    {pay_tempPrice[playerid] = 30000;}
        pay_tempType[playerid] = 20;
		pay_tempArticle[playerid] = listitem+1;
		pay_tempProducts[playerid] = player_Variable[playerid]; // Je m'en serre pour l'id du biz ^^
		pay_showDialog(playerid, pay_tempPrice[playerid]);
		player_Variable[playerid]=-1;
        return 1;
    }
    if(dialogid == 41)
    {
        if(!response)
            {return 1;}
            
		if(!strlen(inputtext) || strlen(inputtext) > 30 || strlen(inputtext) < 5 || MySQLCheckChar(inputtext))
			{return ShowPlayerDialog(playerid,41,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Casier Judiciaire","Erreur dans le nom.\nEntrez le nom du joueur que vous voulez voir :","Valider","Annuler");}
			
	    new tmp_sqlid;
	    
	    format(sql, sizeof(sql), "SELECT id FROM lvrp_users WHERE Name='%s'", inputtext);
		mysql_query(MYSQL,sql);
		new count = 0;
		if(cache_get_row_count(count) && count > 0)
			{cache_get_value_name_int(0,"id", tmp_sqlid);}
  		else
  		    {msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce nom n'existe pas !"); return 1;}
	    
	  	format(sql, sizeof(sql), "SELECT * FROM lvrp_users_casiers WHERE SQLid = %d LIMIT 1",tmp_sqlid);
	  	mysql_query(MYSQL,sql);
		if(cache_get_row_count(count) && count > 0)
		{
		    new crime1[64],crime2[64],crime3[64],crime4[64],crime5[64],victim[64],witness[64],nbcrime,nbarrest;
		    cache_get_value_name(0,"Crime1",crime1, 64);
		    cache_get_value_name(0,"Crime2",crime2, 64);
		    cache_get_value_name(0,"Crime3",crime3, 64);
			cache_get_value_name(0,"Crime4",crime4, 64);
		    cache_get_value_name(0,"Crime5",crime5, 64);
		    cache_get_value_name(0,"Witness",witness, 32);
		    cache_get_value_name(0,"Victim",victim, 32);
	     	cache_get_value_name_int(0,"Crimes", nbcrime);
	     	cache_get_value_name_int(0,"Arrested", nbarrest);
		    format(string,sizeof(string),"Nom : %s\nCrime(s) commis : %d\nArrestation(s) : %d\n\nCrime actuel : %s\nVictime : %s\nTémoin : %s\n\nAnciens crimes :\n%s\n%s\n%s\n%s",
			inputtext,nbcrime,nbarrest,crime1,victim,witness,crime2,crime3,crime4,crime5);
		    ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX,"{007AFF}» Police «{FFFFFF} Casier",string,"Valider","");
		}
		else
			{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Ce nom ne figure pas dans la base de données.");}
		return 1;
    }
    if(dialogid == 38)
    {
        if(!response)
			{return 1;}
        if(listitem==0)
   		{
   		    SafeResetPlayerWeapons(playerid);
			SafeGivePlayerWeapon(playerid, 41, 2000);
			SafeGivePlayerWeapon(playerid, 3, 1);
			SafeGivePlayerWeapon(playerid, 23, 200);
            if(PlayerInfo[playerid][pRank] >= 3)
				{SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 29, 250);}
			SafeSetPlayerArmour(playerid, 100);
			SafeSetPlayerHealth(playerid, 100);
			SetPlayerSkin(playerid, police[PlayerInfo[playerid][pMember]-1][skin][PlayerInfo[playerid][pRank]-1]);
			if(PlayerInfo[playerid][pSex] == 2) // Femme ?
				{SetPlayerSkin(playerid, 306);}
			if(PlayerInfo[playerid][pRank] == 1)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank1]);}
            else if(PlayerInfo[playerid][pRank] == 2)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank2]);}
			else if(PlayerInfo[playerid][pRank] == 3)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank3]);}
			else if(PlayerInfo[playerid][pRank] == 4)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank4]);}
			else if(PlayerInfo[playerid][pRank] == 5)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank5]);}
			else if(PlayerInfo[playerid][pRank] == 6)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank6]);}
            else if(PlayerInfo[playerid][pRank] == 7)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank7]);}
            else if(PlayerInfo[playerid][pRank] == 8)
				{format(string, sizeof(string), "* %s à pris son équipement de %s dans le casier.", PlayerInfo[playerid][pName],police[PlayerInfo[playerid][pMember]-1][rank8]);}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
   		}
   		else if(listitem==1)
   		{
   		    if (PlayerInfo[playerid][pRank]< 2)
				{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 2 minimum.");return 1;}
			SafeResetPlayerWeapons(playerid);
			SafeGivePlayerWeapon(playerid, 24, 200);
			SafeGivePlayerWeapon(playerid, 41, 2000);
			SafeSetPlayerArmour(playerid, 100);
			SafeSetPlayerHealth(playerid, 100);
			SetPlayerSkin(playerid, 71);
			format(string, sizeof(string), "* %s à pris son équipement de convoyeur dans le casier.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
   		}
   		else if(listitem==2)
   		{
   		    if (PlayerInfo[playerid][pRank]< 2)
				{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 2 minimum.");return 1;}
			SafeResetPlayerWeapons(playerid);
			SafeGivePlayerWeapon(playerid, 24, 200);
			SafeGivePlayerWeapon(playerid, 41, 500);
			SafeGivePlayerWeapon(playerid, 3, 1);
			SafeSetPlayerArmour(playerid, 100);
			SafeSetPlayerHealth(playerid, 100);
			SetPlayerSkin(playerid, 284);
			format(string, sizeof(string), "* %s à pris son équipement de motar dans le casier.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
   		}
   		else if(listitem==3)
   		{
   		    if(police_Swat[PlayerInfo[playerid][pMember]-1] == 1)
			{
                if (PlayerInfo[playerid][pRank]< 2)
					{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 2 minimum.");return 1;}
				SafeResetPlayerWeapons(playerid);
				SafeGivePlayerWeapon(playerid, 24, 200);
				SafeGivePlayerWeapon(playerid, 17, 10);
				SafeGivePlayerWeapon(playerid, 25, 200);
				SafeSetPlayerArmour(playerid, 100);
				SafeSetPlayerHealth(playerid, 100);
				SetPlayerSkin(playerid, 285);
				format(string, sizeof(string), "* %s à pris son équipement de SWAT shotgun dans le casier.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			else
				{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} L'équipement SWAT n'est pas autorisé.");}
   		}
   		else if(listitem==4)
   		{
            if(police_Swat[PlayerInfo[playerid][pMember]-1] == 1)
			{
				if (PlayerInfo[playerid][pRank]< 2)
					{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 2 minimum.");return 1;}
				SafeResetPlayerWeapons(playerid);
				SafeGivePlayerWeapon(playerid, 24, 200);
				SafeGivePlayerWeapon(playerid, 17, 10);
		 		SafeGivePlayerWeapon(playerid, 31, 300);
				SafeSetPlayerArmour(playerid, 100);
				SafeSetPlayerHealth(playerid, 100);
	        	SetPlayerSkin(playerid, 285);
				format(string, sizeof(string), "* %s à pris son équipement de SWAT M4 dans le casier.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			else
				{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} L'équipement SWAT n'est pas autorisé.");}
   		}
   		else if(listitem==5)
   		{
   		    if(police_Swat[PlayerInfo[playerid][pMember]-1] == 1)
			{
				if (PlayerInfo[playerid][pRank]< 2)
					{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être rang 2 minimum.");return 1;}
				SafeResetPlayerWeapons(playerid);
				SafeGivePlayerWeapon(playerid, 24, 200);
				SafeGivePlayerWeapon(playerid, 34, 100);
				SafeSetPlayerArmour(playerid, 100);
				SafeSetPlayerHealth(playerid, 100);
				SetPlayerSkin(playerid, 285);
				format(string, sizeof(string), "* %s à pris son équipement de SWAT sniper dans le casier.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
			else
				{msg_Client(playerid, COLOR_POLICE, "{007AFF}» Police «{FFFFFF} L'équipement SWAT n'est pas autorisé.");}
   		}
   		else if(listitem==6)
   		{
   		    SafeSetPlayerArmour(playerid, 100);
			SafeSetPlayerHealth(playerid, 100);
			PlayerInfo[playerid][pFaim]+= 100;
			PlayerInfo[playerid][pSoif]+= 100;
			format(string, sizeof(string), "* %s prend son gilet pare-balles, boit une bouteille d'eau et mange un bout de pizza.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
   		}
   		else if(listitem==7)
   		{
   		    SafeGivePlayerWeapon(playerid,43,50);
   		    format(string, sizeof(string), "* %s prend un appareil photo.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
   		}
   		return 1;
    }
    if(dialogid == 39)
    {
        if(!response)
		{
		    if(player_Dialog[playerid]==0)
				{return 1;}
			else
				{fbi_Gestion(playerid);return 1;}
		}
		if(player_Dialog[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 1 : (Ancien: %s)",FBIInfo[rank1]);
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang 1",string,"Valider","Retour");
				player_Dialog[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 2 : (Ancien: %s)",FBIInfo[rank2]);
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang 2",string,"Valider","Retour");
				player_Dialog[playerid]=2;
		    }
		    if(listitem==2)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 3 : (Ancien: %s)",FBIInfo[rank3]);
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang 3",string,"Valider","Retour");
				player_Dialog[playerid]=3;
		    }
		    if(listitem==3)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 4 : (Ancien: %s)",FBIInfo[rank4]);
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang 4",string,"Valider","Retour");
				player_Dialog[playerid]=4;
		    }
		    if(listitem==4)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 5 : (Ancien: %s)",FBIInfo[rank5]);
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang 5",string,"Valider","Retour");
				player_Dialog[playerid]=5;
		    }
		    if(listitem==5)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",FBIInfo[rank6]);
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang 6",string,"Valider","Retour");
				player_Dialog[playerid]=6;
		    }
		    if(listitem==6)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 7 : (Ancien: %s)",FBIInfo[rank7]);
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang 7",string,"Valider","Retour");
				player_Dialog[playerid]=7;
		    }
		    if(listitem>=7 && listitem<=13)
		    {
		        new Skin[2];
			    Skin[0] = 286;
			    Skin[1] = 85;
        	    ShowModelSelectionMenuEx(playerid, Skin, 2, "Choissiez un skin", 3, 0.0, 0.0, -55.0);
        	    player_Dialog[playerid]=listitem+1;
		    }
		    if(listitem==14)
		    {
		        if(GetPlayerInterior(playerid)!=0 && GetPlayerVirtualWorld(playerid)==0)
		        {
			        new Float:x,Float:y,Float:z,Float:a;
			        GetPlayerPos(playerid,x,y,z);
			        GetPlayerFacingAngle(playerid,a);
			        FBIInfo[Spawn][0]=x;
			        FBIInfo[Spawn][1]=y;
			        FBIInfo[Spawn][2]=z;
			        FBIInfo[Spawn][3]=a;
			        FBIInfo[Interior]=GetPlayerInterior(playerid);
			        msg_Client(playerid,COLOR_FBI,"|Fbi| Potitions du Spawn sauvegardées.");
			        fbi_Save();
		        }
		        else
		            {msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être dans le QG de votre faction.");}
		        fbi_Gestion(playerid);
		    	return 1;
		    }
		    if(listitem==15)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=0)
				    {msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être à l'extérieur."); fbi_Gestion(playerid); return 1;}

	     		FBIInfo[Entrance][0]=x;
				FBIInfo[Entrance][1]=y;
				FBIInfo[Entrance][2]=z;
				FBIInfo[Entrance][3]=a;

		        msg_Client(playerid,COLOR_FBI,"|Fbi| Entré sauvegardée.");
		        fbi_Update();
                fbi_Save();
                fbi_Gestion(playerid);
                return 1;
		    }
		    if(listitem==16)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=FBIInfo[Interior])
				    {msg_Client(playerid,COLOR_FBI,"|Fbi| Vous devez être à l'intérieur de votre QG."); fbi_Gestion(playerid); return 1;}

	     		FBIInfo[Exit][0]=x;
				FBIInfo[Exit][1]=y;
				FBIInfo[Exit][2]=z;
				FBIInfo[Exit][3]=a;

		        msg_Client(playerid,COLOR_FBI,"|Fbi| Sortie sauvegardée.");
		        fbi_Update();
                fbi_Save();
                fbi_Gestion(playerid);
                return 1;
		    }
		}
		else if(player_Dialog[playerid]>=1 && player_Dialog[playerid] <= 7) // Nom des rang
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom.\nEntrez le nouveau nom du rang :");
				ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"|FBI| Gestion - Rang",string,"Valider","Retour");
		    }

	     	if(player_Dialog[playerid]==1)
		    	{strmid(FBIInfo[rank1], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==2)
		    	{strmid(FBIInfo[rank2], inputtext, 0, 32, 32);}
       	 	if(player_Dialog[playerid]==3)
		    	{strmid(FBIInfo[rank3], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==4)
		    	{strmid(FBIInfo[rank4], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==5)
		    	{strmid(FBIInfo[rank5], inputtext, 0, 32, 32);}
			if(player_Dialog[playerid]==6)
		    	{strmid(FBIInfo[rank6], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==7)
		    	{strmid(FBIInfo[rank7], inputtext, 0, 32, 32);}

		    format(string,sizeof(string),"|Fbi| Vous avez changé le nom du rang en %s.",inputtext);
		    msg_Client(playerid,COLOR_FBI,string);
		    fbi_Gestion(playerid);
		    fbi_Save();
		}
		return 1;
	}
	if(dialogid == 46)
    {
        if(!response)
		{
		    if(gouv_DialogGestion[playerid]==0)
				{return 1;}
			else
				{governement_Gestion(playerid);return 1;}
		}
		new id = PlayerInfo[playerid][pMember]-6;
		if(gouv_DialogGestion[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 1 : (Ancien: %s)",governement[id][rank1]);
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Rang 1",string,"Valider","Retour");
				gouv_DialogGestion[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 2 : (Ancien: %s)",governement[id][rank2]);
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Rang 2",string,"Valider","Retour");
				gouv_DialogGestion[playerid]=2;
		    }
		    if(listitem==2)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 3 : (Ancien: %s)",governement[id][rank3]);
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Rang 3",string,"Valider","Retour");
				gouv_DialogGestion[playerid]=3;
		    }
		    if(listitem==3)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 4 : (Ancien: %s)",governement[id][rank4]);
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Rang 4",string,"Valider","Retour");
				gouv_DialogGestion[playerid]=4;
		    }
		    if(listitem==4)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 5 : (Ancien: %s)",governement[id][rank5]);
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Rang 5",string,"Valider","Retour");
				gouv_DialogGestion[playerid]=5;
		    }
		    if(listitem==5)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",governement[id][rank6]);
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Rang 6",string,"Valider","Retour");
				gouv_DialogGestion[playerid]=6;
		    }
		    if(listitem>=6 && listitem<=11)
		    {
		        new Skin[9];
			    Skin[0] = 147;
			    Skin[1] = 148;
			    Skin[2] = 150;
			    Skin[3] = 164;
    			Skin[4] = 165;
	   		    Skin[5] = 166;
			    Skin[6] = 187;
			    Skin[7] = 227;
			    Skin[8] = 228;
        	    ShowModelSelectionMenuEx(playerid, Skin, 9, "Choissiez un skin", 5, 0.0, 0.0, -55.0);
        	    gouv_DialogGestion[playerid]=listitem+1;
		    }
		    if(listitem==12)
		    {
		        if(5 < id+6 < 9)
		        {
			        format(string,sizeof(string),"{FFFFFF}- Permis Conduire ($%d)\n- Permis Moto ($%d)\n- Permis Voler ($%d)\n- Permis Poid Lourd ($%d)\n- Permis Port d'Arme ($%d)\n- Permis de Pêche ($%d)\n- Permis Navigation ($%d)",
					governement[id][license][0],governement[id][license][1],governement[id][license][2],governement[id][license][3],governement[id][license][4],governement[id][license][5],governement[id][license][6]);
					ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Permis",string,"Valider","Retour");
					gouv_DialogGestion[playerid]=12;
				}
				else
				{
				    format(string,sizeof(string),"{FFFFFF}Entrez le nouveau prix d'un ticket de péage : (Ancien : $%d)",governement[id][ticket]);
                    ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Ticket",string,"Valider","Retour");
					gouv_DialogGestion[playerid]=7;
				}
		    }
		    if(listitem==13)
		    {
		        if(5 < id+6 < 9)
		        {
		            format(string,sizeof(string),"{FFFFFF}- Police ..\n- Gouvernement..\n- Chômage [$%d]",governement[id][unemployment]);
		            ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaires",string,"Valider","Retour");
                    gouv_DialogGestion[playerid]=8;
		        }
		        else
				{
				    ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaires","{FFFFFF}- SASD ..\n- Gouvernement ..\n- FBI ..\n- San News ..\n- Job ..","Valider","Retour");
                    gouv_DialogGestion[playerid]=8;
				}
		    }
		    if(listitem==14)
		    {
		        if(5 < id+6 < 9)
		        {
		            format(string,sizeof(string),"{FFFFFF}- Impot [$%d]\n- Taxe d'habitation [$%d]\n- Taxe d'eau [$%d]\n- Taxe d'électricité [$%d]\n- Taxe d'entreprise [$%d]\n- Taxe de garage [$%d]",
					governement[id][tax][0],governement[id][tax][1],governement[id][tax][2],governement[id][tax][3],governement[id][tax][4],governement[id][tax][5]);
		            ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Taxes",string,"Valider","Retour");
                    gouv_DialogGestion[playerid]=21;
		        }
		        else
		            {governement_Gestion(playerid);}
		    }
		    if(listitem==15)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=0)
				    {msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être à l'extérieur."); governement_Gestion(playerid); return 1;}

	     		governement[id][pos][0]=x;
				governement[id][pos][1]=y;
				governement[id][pos][2]=z;
				governement[id][pos][3]=a;

		        msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Entré sauvegardée.");
		        governement_Update(id);
                governement_Save(id,false,false,false,true,false,false);
                governement_Gestion(playerid);
                return 1;
		    }
		    if(listitem==16)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=governement[id][interior])
				    {msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être à l'intérieur de votre QG."); governement_Gestion(playerid); return 1;}

	     		governement[id][pos][4]=x;
				governement[id][pos][5]=y;
				governement[id][pos][6]=z;
				governement[id][pos][7]=a;

		        msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Sortie sauvegardée.");
		        governement_Update(id);
                governement_Save(id,false,false,false,true,false,false);
                governement_Gestion(playerid);
                return 1;
		    }
			if(listitem==17)
			{
				new Float:x,Float:y,Float:z,Float:a;
				GetPlayerPos(playerid,x,y,z);
				GetPlayerFacingAngle(playerid,a);
				governement[id][pos][8]=x;
				governement[id][pos][9]=y;
				governement[id][pos][10]=z;
				governement[id][pos][11]=a;
				governement[id][interior]=GetPlayerInterior(playerid);
				msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Potitions du Spawn sauvegardées.");
				governement_Save(id,false,false,false,true,false,false);
				governement_Gestion(playerid);
				return 1;
			}
		    if(listitem>=18 && listitem<=21)
		    {
		        new Float:x,Float:y,Float:z;
	     		GetPlayerPos(playerid,x,y,z);
				if(GetPlayerInterior(playerid)!=governement[id][interior])
				    {msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être dans le QG de votre faction."); governement_Gestion(playerid); return 1;}

                if(listitem==18)
				    {governement[id][cmds][6]=x; governement[id][cmds][7]=y; governement[id][cmds][8]=z;}
                if(listitem==19)
				    {governement[id][cmds][9]=x; governement[id][cmds][10]=y; governement[id][cmds][11]=z;}
                if(listitem==20)
				    {governement[id][cmds][0]=x; governement[id][cmds][1]=y; governement[id][cmds][2]=z;}
                if(listitem==21)
				    {governement[id][cmds][3]=x; governement[id][cmds][4]=y; governement[id][cmds][5]=z;}

                msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Potitions de la commande sauvegardées.");
		        governement_Update(id);
                governement_Save(id,false,false,false,false,true,false);
                governement_Gestion(playerid);
                return 1;
		    }
		}
		else if(gouv_DialogGestion[playerid]>=1 && gouv_DialogGestion[playerid] <= 6) // Nom des rang
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom.\nEntrez le nouveau nom du rang :");
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Rang",string,"Valider","Retour");
				return 1;
		    }

			switch(gouv_DialogGestion[playerid])
			{
			    case 1: strmid(governement[id][rank1], inputtext, 0, 32, 32);
			    case 2: strmid(governement[id][rank2], inputtext, 0, 32, 32);
			    case 3: strmid(governement[id][rank3], inputtext, 0, 32, 32);
			    case 4: strmid(governement[id][rank4], inputtext, 0, 32, 32);
			    case 5: strmid(governement[id][rank5], inputtext, 0, 32, 32);
			    case 6: strmid(governement[id][rank6], inputtext, 0, 32, 32);
			}

		    format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez changé le nom du rang en %s.",inputtext);
		    msg_Client(playerid,COLOR_MAIRIE,string);
		    governement_Gestion(playerid);
		    governement_Save(id,false,false,false,false,false,false);
		}
		else if(gouv_DialogGestion[playerid]==7)
		{
            if(!strlen(inputtext) || strval(inputtext) > 500 || strval(inputtext) < 10)
		    {
		        format(string,sizeof(string),"{FF0000}Prix compris entre $10 et $500 !\n{FFFFFF}Entrez le nouveau prix d'un ticket de péage : (Ancien : $%d)",governement[id][ticket]);
                return ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Ticket",string,"Valider","Retour");
		    }
		    governement[id][ticket]=strval(inputtext);
		    format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez changé le prix du ticket à $%d.",strval(inputtext));
		    msg_Client(playerid,COLOR_MAIRIE,string);
			governement_Gestion(playerid);
		    governement_Save(id,false,false,false,false,false,false);
		}
		else if(gouv_DialogGestion[playerid]==8)
		{
			switch(listitem)
			{
				case 0:
				{
				    format(string,sizeof(string),"{FFFFFF}- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]",
					police[id][rank1],governement[id][salaryPolice][0],police[id][rank2],governement[id][salaryPolice][1],police[id][rank3],governement[id][salaryPolice][2],
					police[id][rank3],governement[id][salaryPolice][3],police[id][rank4],governement[id][salaryPolice][4],police[id][rank6],governement[id][salaryPolice][5],police[id][rank7],governement[id][salaryPolice][6],police[id][rank8],governement[id][salaryPolice][7]);
					ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaires",string,"Valider","Retour");
					SetPVarInt(playerid,"salaryType",1);
				}
				case 1:
				{
                    format(string,sizeof(string),"{FFFFFF}- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]",
					governement[id][rank1],governement[id][salaryGovernement][0],governement[id][rank2],governement[id][salaryGovernement][1],governement[id][rank3],governement[id][salaryGovernement][2],
					governement[id][rank3],governement[id][salaryGovernement][3],governement[id][rank4],governement[id][salaryGovernement][4],governement[id][rank6],governement[id][salaryGovernement][5]);
					ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaires",string,"Valider","Retour");
					SetPVarInt(playerid,"salaryType",2);
				}
				case 2:
				{
				    if(5 < id+6 < 9)
		        	{
		        	    format(string,sizeof(string),"{FFFFFF}Entrez le nouveau montant du chômage : (Ancien: $%d)",governement[id][unemployment]);
		        	    ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Chômage",string,"Valider","Retour");
		        	    gouv_DialogGestion[playerid]=9;
		        	    return 1;
		        	}
		        	else
		        	{
		        	    format(string,sizeof(string),"{FFFFFF}- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]\n- %s [$%d]",
						FBIInfo[rank1],governement[id][salaryFbi][0],FBIInfo[rank2],governement[id][salaryFbi][1],FBIInfo[rank3],governement[id][salaryFbi][2],
						FBIInfo[rank3],governement[id][salaryFbi][3],FBIInfo[rank4],governement[id][salaryFbi][4],FBIInfo[rank6],governement[id][salaryFbi][5]);
						ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaires",string,"Valider","Retour");
						SetPVarInt(playerid,"salaryType",3);
		        	}
				}
				case 3:
				{
				    format(string,sizeof(string),"{FFFFFF}- 1 [$%d]\n- 2 [$%d]\n- 3 [$%d]\n- 4 [$%d]\n- 5 [$%d]\n- 6 [$%d]",
					governement[id][salaryCia][0],governement[id][salaryCia][1],governement[id][salaryCia][2],
					governement[id][salaryCia][3],governement[id][salaryCia][4],governement[id][salaryCia][5]);
					ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaires",string,"Valider","Retour");
					SetPVarInt(playerid,"salaryType",4);
				}
				case 4:
				{
				    new tmpstring[40], jobstring[512]="{FFFFFF}";
					for(new i=1; i<=20; i++)
					{
					    format(tmpstring,sizeof(tmpstring),"- %s : [$%d]\n",GetJobName(i),governement[id][salaryJob][i-1]);
			            strins(jobstring,tmpstring,strlen(jobstring),sizeof(jobstring));
					}
					ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaires",jobstring,"Valider","Retour");
					SetPVarInt(playerid,"salaryType",5);
				}
			}
			gouv_DialogGestion[playerid]=10;
		}
		else if(gouv_DialogGestion[playerid]==9)
		{
            if(!strlen(inputtext) || strval(inputtext) > 1000 || strval(inputtext) < 100)
		    {
		        format(string,sizeof(string),"{FF0000}Prix compris entre $100 et $1000 !\n{FFFFFF}Entrez le nouveau montant du chômage : (Ancien: $%d)",governement[id][unemployment]);
                return ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Chômage",string,"Valider","Retour");
		    }
		    governement[id][unemployment]=strval(inputtext);
		    format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez changé le prix du chômage à $%d.",strval(inputtext));
		    msg_Client(playerid,COLOR_MAIRIE,string);
			governement_Gestion(playerid);
		    governement_Save(id,false,false,false,false,false,false);
		}
		else if(gouv_DialogGestion[playerid]==10)
		{
		    ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaire","{FFFFFF}Entrez le nouveau montant salaire : ","Valider","Retour");
      		gouv_DialogGestion[playerid]=11;
      		SetPVarInt(playerid,"salaryRow",listitem);
		    return 1;
		}
		else if(gouv_DialogGestion[playerid]==11)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 10000 || strval(inputtext) < 100)
		    	{return ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Salaire","{FF0000}Salaire compris entre $100 et $10000 !\n{FFFFFF}Entrez le nouveau montant salaire :","Valider","Retour");}
		    new salaryType = GetPVarInt(playerid,"salaryType"),
		        salaryRow = GetPVarInt(playerid,"salaryRow");

			switch(salaryType)
			{
			    case 1: governement[id][salaryPolice][salaryRow]=strval(inputtext);
			    case 2: governement[id][salaryGovernement][salaryRow]=strval(inputtext);
			    case 3: governement[id][salaryFbi][salaryRow]=strval(inputtext);
				case 4: governement[id][salaryCia][salaryRow]=strval(inputtext);
				case 5: governement[id][salaryJob][salaryRow]=strval(inputtext);
			}
			format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez changé le prix du salaire à $%d.",strval(inputtext));
		    msg_Client(playerid,COLOR_MAIRIE,string);
			governement_Gestion(playerid);
		    governement_Save(id,false,true,false,false,false,true);
		}
		else if(gouv_DialogGestion[playerid]==12)
		{
			ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Permis","{FFFFFF}Entrez le nouveau prix du permis :","Valider","Retour");
			gouv_DialogGestion[playerid]=13+listitem;
		}
		else if(gouv_DialogGestion[playerid]>=13 && gouv_DialogGestion[playerid]<=20)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 40000 || strval(inputtext) < 100)
		    	{return ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Permis","{FF0000}Erreur dans le prix.\n{FFFFFF}Entrez le nouveau prix du permis :","Valider","Retour");}

			switch (gouv_DialogGestion[playerid])
			{
			    case 13: governement[id][license][0]=strval(inputtext);
			    case 14: governement[id][license][1]=strval(inputtext);
			    case 15: governement[id][license][2]=strval(inputtext);
			    case 16: governement[id][license][3]=strval(inputtext);
			    case 17: governement[id][license][4]=strval(inputtext);
			    case 18: governement[id][license][5]=strval(inputtext);
			    case 19: governement[id][license][6]=strval(inputtext);
			}
            format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez changé le prix du permis à %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_MAIRIE,string);

			governement_Gestion(playerid);
		    governement_Save(id,false,false,true,false,false,false);
		}
		else if(gouv_DialogGestion[playerid]==21)
		{
		    ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Taxe","{FFFFFF}Entrez le nouveau prix de la taxe :","Valider","Retour");
			gouv_DialogGestion[playerid]=22+listitem;
		}
		else if(gouv_DialogGestion[playerid]>=22 && gouv_DialogGestion[playerid]<=27)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 40000 || strval(inputtext) < 20)
		    	{return ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"{FF6E00}» Gouvernement «{FFFFFF} Gestion - Taxe","{FF0000}Erreur dans le prix.\n{FFFFFF}Entrez le nouveau prix de la taxe :","Valider","Retour");}

            switch (gouv_DialogGestion[playerid])
			{
			    case 22: governement[id][tax][0]=strval(inputtext);
			    case 23: governement[id][tax][1]=strval(inputtext);
			    case 24: governement[id][tax][2]=strval(inputtext);
			    case 25: governement[id][tax][3]=strval(inputtext);
			    case 26: governement[id][tax][4]=strval(inputtext);
			    case 27: governement[id][tax][5]=strval(inputtext);
			}
            format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez changé le prix de la taxe à %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_MAIRIE,string);

			governement_Gestion(playerid);
		    governement_Save(id,true,false,false,false,false,false);
		}
		return 1;
	}
	if(dialogid == 57)
    {
        if(!response)
		{
		    if(mecano_DialogGestion[playerid]==0)
				{return 1;}
			else
				{mecano_Gestion(playerid);return 1;}
		}
		if(mecano_DialogGestion[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 1 : (Ancien: %s)",MecanoInfo[rank1]);
				ShowPlayerDialog(playerid,57,DIALOG_STYLE_INPUT,"{78769D}» Mécanicien «{FFFFFF} Gestion - Rang 1",string,"Valider","Retour");
				mecano_DialogGestion[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 2 : (Ancien: %s)",MecanoInfo[rank2]);
				ShowPlayerDialog(playerid,57,DIALOG_STYLE_INPUT,"{78769D}» Mécanicien «{FFFFFF} Gestion - Rang 2",string,"Valider","Retour");
				mecano_DialogGestion[playerid]=2;
		    }
		    if(listitem==2)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 3 : (Ancien: %s)",MecanoInfo[rank3]);
				ShowPlayerDialog(playerid,57,DIALOG_STYLE_INPUT,"{78769D}» Mécanicien «{FFFFFF} Gestion - Rang 3",string,"Valider","Retour");
				mecano_DialogGestion[playerid]=3;
		    }
		    if(listitem==3)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 4 : (Ancien: %s)",MecanoInfo[rank4]);
				ShowPlayerDialog(playerid,57,DIALOG_STYLE_INPUT,"{78769D}» Mécanicien «{FFFFFF} Gestion - Rang 4",string,"Valider","Retour");
				mecano_DialogGestion[playerid]=4;
		    }
		    if(listitem==4)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 5 : (Ancien: %s)",MecanoInfo[rank5]);
				ShowPlayerDialog(playerid,57,DIALOG_STYLE_INPUT,"{78769D}» Mécanicien «{FFFFFF} Gestion - Rang 5",string,"Valider","Retour");
				mecano_DialogGestion[playerid]=5;
		    }
		    if(listitem==5)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",MecanoInfo[rank6]);
				ShowPlayerDialog(playerid,57,DIALOG_STYLE_INPUT,"{78769D}» Mécanicien «{FFFFFF} Gestion - Rang 6",string,"Valider","Retour");
				mecano_DialogGestion[playerid]=6;
		    }
		    if(listitem>=6 && listitem<=11)
		    {
		        new Skin[14];
			    Skin[0] = 277;
			    Skin[1] = 278;
			    Skin[2] = 279;
			    Skin[3] = 255;
			    Skin[4] = 276;
			    Skin[5] = 96;
			    Skin[6] = 277;
			    Skin[7] = 287;
			    Skin[8] = 253;
			    Skin[9] = 275;
			    Skin[10] = 70;
			    Skin[11] = 119;
			    Skin[12] = 274;
			    Skin[13] = 61;
        	    ShowModelSelectionMenuEx(playerid, Skin, 14, "Choissiez un skin", 7, 0.0, 0.0, -55.0);
        	    mecano_DialogGestion[playerid]=listitem+1;
		    }
		    if(listitem==12)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=0)
				    {msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous devez être à l'extérieur."); mecano_Gestion(playerid); return 1;}

	     		MecanoInfo[Entrance][0]=x;
				MecanoInfo[Entrance][1]=y;
				MecanoInfo[Entrance][2]=z;
				MecanoInfo[Entrance][3]=a;

		        msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Entré sauvegardée.");
		        mecano_Update();
                mecano_Save();
                mecano_Gestion(playerid);
                return 1;
		    }
		    if(listitem==13)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=MecanoInfo[Interior])
				    {msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous devez être à l'intérieur de votre QG."); mecano_Gestion(playerid); return 1;}

	     		MecanoInfo[Exit][0]=x;
				MecanoInfo[Exit][1]=y;
				MecanoInfo[Exit][2]=z;
				MecanoInfo[Exit][3]=a;

		        msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Sortie sauvegardée.");
		        mecano_Update();
                mecano_Save();
                mecano_Gestion(playerid);
                return 1;
		    }
			if(listitem==14)
		    {
			        new Float:x,Float:y,Float:z,Float:a;
			        GetPlayerPos(playerid,x,y,z);
			        GetPlayerFacingAngle(playerid,a);
			        MecanoInfo[Spawn][0]=x;
			        MecanoInfo[Spawn][1]=y;
			        MecanoInfo[Spawn][2]=z;
			        MecanoInfo[Spawn][3]=a;
			        MecanoInfo[Interior]=GetPlayerInterior(playerid);
			        msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Potitions du Spawn sauvegardées.");
			        mecano_Save();
		        	mecano_Gestion(playerid);
		    		return 1;
		    }
		    if(listitem>=15 && listitem<=17)
		    {
		        new Float:x,Float:y,Float:z;
	     		GetPlayerPos(playerid,x,y,z);
				if(GetPlayerInterior(playerid)!=MecanoInfo[Interior])
				    {msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Vous devez être dans le QG de votre faction."); mecano_Gestion(playerid); return 1;}

                if(listitem==15)
				    {MecanoInfo[Duty][0]=x; MecanoInfo[Duty][1]=y; MecanoInfo[Duty][2]=z;}
                if(listitem==16)
				    {MecanoInfo[Bell][0]=x; MecanoInfo[Bell][1]=y; MecanoInfo[Bell][2]=z;}


                msg_Client(playerid,COLOR_JOB,"{78769D}» Mécanicien «{FFFFFF} Potitions de la commande sauvegardées.");
		        mecano_Update();
                mecano_Save();
                mecano_Gestion(playerid);
                return 1;
		    }
		}
		else if(mecano_DialogGestion[playerid]>=1 && mecano_DialogGestion[playerid] <= 6) // Nom des rang
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom.\nEntrez le nouveau nom du rang :");
				ShowPlayerDialog(playerid,57,DIALOG_STYLE_INPUT,"{78769D}» Mécanicien «{FFFFFF} Gestion - Rang",string,"Valider","Retour");
				return 1;
		    }

	     	if(mecano_DialogGestion[playerid]==1)
		    	{strmid(MecanoInfo[rank1], inputtext, 0, 32, 32);}
            if(mecano_DialogGestion[playerid]==2)
		    	{strmid(MecanoInfo[rank2], inputtext, 0, 32, 32);}
       	 	if(mecano_DialogGestion[playerid]==3)
		    	{strmid(MecanoInfo[rank3], inputtext, 0, 32, 32);}
            if(mecano_DialogGestion[playerid]==4)
		    	{strmid(MecanoInfo[rank4], inputtext, 0, 32, 32);}
            if(mecano_DialogGestion[playerid]==5)
		    	{strmid(MecanoInfo[rank5], inputtext, 0, 32, 32);}
			if(mecano_DialogGestion[playerid]==6)
		    	{strmid(MecanoInfo[rank6], inputtext, 0, 32, 32);}

		    format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez changé le nom du rang en %s.",inputtext);
		    msg_Client(playerid,COLOR_JOB,string);
		    mecano_Gestion(playerid);
		    mecano_Save();
		}
        return 1;
    }
	if(dialogid == 50)
    {
        if(!response)
		{
		    if(fire_DialogGestion[playerid]==0)
				{return 1;}
			else
				{fire_Gestion(playerid);return 1;}
		}
		if(fire_DialogGestion[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 1 : (Ancien: %s)",FireInfo[rank1]);
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_INPUT,"{C7006C}» Pompier «{FFFFFF} Gestion - Rang 1",string,"Valider","Retour");
				fire_DialogGestion[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 2 : (Ancien: %s)",FireInfo[rank2]);
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_INPUT,"{C7006C}» Pompier «{FFFFFF} Gestion - Rang 2",string,"Valider","Retour");
				fire_DialogGestion[playerid]=2;
		    }
		    if(listitem==2)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 3 : (Ancien: %s)",FireInfo[rank3]);
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_INPUT,"{C7006C}» Pompier «{FFFFFF} Gestion - Rang 3",string,"Valider","Retour");
				fire_DialogGestion[playerid]=3;
		    }
		    if(listitem==3)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 4 : (Ancien: %s)",FireInfo[rank4]);
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_INPUT,"{C7006C}» Pompier «{FFFFFF} Gestion - Rang 4",string,"Valider","Retour");
				fire_DialogGestion[playerid]=4;
		    }
		    if(listitem==4)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 5 : (Ancien: %s)",FireInfo[rank5]);
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_INPUT,"{C7006C}» Pompier «{FFFFFF} Gestion - Rang 5",string,"Valider","Retour");
				fire_DialogGestion[playerid]=5;
		    }
		    if(listitem==5)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",FireInfo[rank6]);
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_INPUT,"{C7006C}» Pompier «{FFFFFF} Gestion - Rang 6",string,"Valider","Retour");
				fire_DialogGestion[playerid]=6;
		    }
		    if(listitem>=6 && listitem<=11)
		    {
		        new Skin[14];
			    Skin[0] = 277;
			    Skin[1] = 278;
			    Skin[2] = 279;
			    Skin[3] = 255;
			    Skin[4] = 276;
			    Skin[5] = 96;
			    Skin[6] = 277;
			    Skin[7] = 287;
			    Skin[8] = 253;
			    Skin[9] = 275;
			    Skin[10] = 70;
			    Skin[11] = 119;
			    Skin[12] = 274;
			    Skin[13] = 61;
        	    ShowModelSelectionMenuEx(playerid, Skin, 14, "Choissiez un skin", 6, 0.0, 0.0, -55.0);
        	    fire_DialogGestion[playerid]=listitem+1;
		    }
		    if(listitem==12)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=0)
				    {msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être à l'extérieur."); fire_Gestion(playerid); return 1;}

	     		FireInfo[Entrance][0]=x;
				FireInfo[Entrance][1]=y;
				FireInfo[Entrance][2]=z;
				FireInfo[Entrance][3]=a;

		        msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Entré sauvegardée.");
		        fire_Update();
                fire_Save();
                fire_Gestion(playerid);
                return 1;
		    }
		    if(listitem==13)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=FireInfo[Interior])
				    {msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être à l'intérieur de votre QG."); fire_Gestion(playerid); return 1;}

	     		FireInfo[Exit][0]=x;
				FireInfo[Exit][1]=y;
				FireInfo[Exit][2]=z;
				FireInfo[Exit][3]=a;

		        msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Sortie sauvegardée.");
		        fire_Update();
                fire_Save();
                fire_Gestion(playerid);
                return 1;
		    }
			if(listitem==14)
		    {
			        new Float:x,Float:y,Float:z,Float:a;
			        GetPlayerPos(playerid,x,y,z);
			        GetPlayerFacingAngle(playerid,a);
			        FireInfo[Spawn][0]=x;
			        FireInfo[Spawn][1]=y;
			        FireInfo[Spawn][2]=z;
			        FireInfo[Spawn][3]=a;
			        FireInfo[Interior]=GetPlayerInterior(playerid);
			        msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Potitions du Spawn sauvegardées.");
			        fire_Save();
		        	fire_Gestion(playerid);
		    		return 1;
		    }
		    if(listitem>=15 && listitem<=17)
		    {
		        new Float:x,Float:y,Float:z;
	     		GetPlayerPos(playerid,x,y,z);
				if(GetPlayerInterior(playerid)!=FireInfo[Interior])
				    {msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être dans le QG de votre faction."); fire_Gestion(playerid); return 1;}

                if(listitem==15)
				    {FireInfo[Duty][0]=x; FireInfo[Duty][1]=y; FireInfo[Duty][2]=z;}
                if(listitem==16)
				    {FireInfo[Equip][0]=x; FireInfo[Equip][1]=y; FireInfo[Equip][2]=z;}
                if(listitem==17)
				    {FireInfo[Bell][0]=x; FireInfo[Bell][1]=y; FireInfo[Bell][2]=z;}


                msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Potitions de la commande sauvegardées.");
		        fire_Update();
                fire_Save();
                fire_Gestion(playerid);
                return 1;
		    }
		}
		else if(fire_DialogGestion[playerid]>=1 && fire_DialogGestion[playerid] <= 6) // Nom des rang
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom.\nEntrez le nouveau nom du rang :");
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_INPUT,"{C7006C}» Pompier «{FFFFFF} Gestion - Rang",string,"Valider","Retour");
				return 1;
		    }

	     	if(fire_DialogGestion[playerid]==1)
		    	{strmid(FireInfo[rank1], inputtext, 0, 32, 32);}
            if(fire_DialogGestion[playerid]==2)
		    	{strmid(FireInfo[rank2], inputtext, 0, 32, 32);}
       	 	if(fire_DialogGestion[playerid]==3)
		    	{strmid(FireInfo[rank3], inputtext, 0, 32, 32);}
            if(fire_DialogGestion[playerid]==4)
		    	{strmid(FireInfo[rank4], inputtext, 0, 32, 32);}
            if(fire_DialogGestion[playerid]==5)
		    	{strmid(FireInfo[rank5], inputtext, 0, 32, 32);}
			if(fire_DialogGestion[playerid]==6)
		    	{strmid(FireInfo[rank6], inputtext, 0, 32, 32);}

		    format(string,sizeof(string),"{C7006C}» Pompier «{FFFFFF} Vous avez changé le nom du rang en %s.",inputtext);
		    msg_Client(playerid,COLOR_POMPIER,string);
		    fire_Gestion(playerid);
		    fire_Save();
		}
        return 1;
    }
    if(dialogid == 142)
    {
        if(!response)
            {return 1;}
            
        new Float:x,Float:y,Float:z,Float:a;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,a);
		spawn[listitem][pos][0]=x;
		spawn[listitem][pos][1]=y;
      	spawn[listitem][pos][2]=z;
		spawn[listitem][pos][3]=a;
		msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Spawn changé.");
		spawn_Update(listitem);
		spawn_Save(listitem);
		return 1;
    }
    if(dialogid == 143)
    {
        if(!response)
            {return 1;}

		if (GetPlayerState(playerid) == 2)
			{SafeSetVehiclePos(GetPlayerVehicleID(playerid), spawn[listitem][pos][0],spawn[listitem][pos][1],spawn[listitem][pos][2]);}
	 	else
			{SafeSetPlayerPos(playerid, spawn[listitem][pos][0],spawn[listitem][pos][1],spawn[listitem][pos][2]);}
		msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
		server_SetPlayerInterior(playerid,0);
		server_SetPlayerVirtualWorld(playerid,0);
		return 1;
    }
    if(dialogid == 144)
    {
        if(response)
        {
            new tmpId=player_IsAtNpcPoint(playerid,2,1.5);
            SetPlayerChatBubble(tmpId,"Merci de votre visite, bon voyage.",0xFFFFFFDD,NAME_DISTANCE,5000);
            LoopingAnim(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0); LoopingAnim(tmpId,"DEALER","shop_pay",4.1,0,0,0,0,0);
            trainTicket[playerid]=true;
            msg_Client(playerid,COLOR_WHITE,"{CF9756}» Info «{FFFFFF} Vous avez acheté un ticket de train pour $50.");
            SafeGivePlayerMoney(playerid,-50,"Achat Ticket Train");
        }
        return 1;
    }
    if(dialogid == 151)
    {
        if(!response)
        	{player_Variable[playerid] = -1; return 1;}
        	
        if(!strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 128)
            {return ShowPlayerDialog(playerid, 151, DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Retaguer","{FF0000}Erreur dans le texte (4 à 128 caractères)\n{FFFFFF}Entrez votre tag (Texte) :","Valider","Quitter");}
		format(string,sizeof(string),"{006500}» Gang «{FFFFFF} Vous avez retagué par dessus ce tag : %s",inputtext);
		msg_Client(playerid,COLOR_WHITE,string);
		strmid(tag[player_Variable[playerid]][description],inputtext,0,128,128);
        tag_Update(player_Variable[playerid]);
		tag_Save(player_Variable[playerid]);
        return 1;
    }
    if(dialogid == 150)
    {
        if(!response)
        {
            if(player_Dialog[playerid] == 0)
                {return 1;}
			else
				{return DeletePVar(playerid,"tagText");}
        }
        if(player_Dialog[playerid] == 0)
        {
            if(!strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 128)
                {return ShowPlayerDialog(playerid, 150, DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Tag","{FF0000}Erreur dans le texte (4 à 128 caractères)\n{FFFFFF}Entrez votre tag (Texte) :","Valider","Quitter");}
            SetPVarString(playerid,"tagText",inputtext);
            ShowPlayerDialog(playerid, 150, DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Tag","{FFFFFF}Taille de la police de caractère : (Taille 12 conseillée) :","Valider","Quitter");
            player_Dialog[playerid]=1;
        }
        else if(player_Dialog[playerid] == 1)
        {
            if(!strlen(inputtext) || strval(inputtext) < 5 || strval(inputtext) > 30)
                {return ShowPlayerDialog(playerid, 150, DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Tag","{FF0000}Erreur dans la taille (Entre 5 et 30)\n{FFFFFF}Taille de la police de caractère : (Taille 12 conseillée) :","Valider","Quitter");}

            new ID=-1, Float:Pos[4];
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]), GetPlayerFacingAngle(playerid, Pos[3]);
			new Float:x = Pos[0] + (5.0 * floatsin(-Pos[3], degrees));
			new Float:y = Pos[1] + (5.0 * floatcos(-Pos[3], degrees));
			for(new i=0; i<totalTags;i++)
			{
			    if(tag[i][used] == 0)
			    	{ID=i;break;}
			}

			if(ID==-1)
			{
				format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_illegals_tags");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID+1>MAX_TAG)
					{msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Maximum de tag atteint."); return 1;}
				format(sql, sizeof(sql), "INSERT INTO lvrp_factions_illegals_tags SET id=%d, Used=1",ID+1);
				mysql_pquery(MYSQL,sql);
				totalTags++;
			}
			tag[ID][pos][0] = x;
			tag[ID][pos][1] = y;
			tag[ID][pos][2] = Pos[2]+0.5;
			tag[ID][pos][3] = 0.0;
			tag[ID][pos][4] = 0.0;
			tag[ID][pos][5] = Pos[3]-90;
			tag[ID][used] = 1;
			tag[ID][faction] = PlayerInfo[playerid][pMember]-200;
			GetPVarString(playerid,"tagText",tag[ID][description],128);
			tag[ID][fontSize] = strval(inputtext);
			tag_Save(ID);
			tag_Update(ID);
			msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Déplacer votre tag à l'aide des flèches.");
			EditDynamicObject(playerid,tag_Object[ID]);
			player_Variable[playerid]=ID;
			DeletePVar(playerid,"tagText");
			player_Dialog[playerid]=6;
		}
        return 1;
    }
    if(dialogid == 149)
    {
        if(!response)
            {return 1;}
        new tmpId=player_IsAtActorPoint(playerid,4,3.5);
        if(!strlen(inputtext) || strlen(inputtext) < 20)
            {return ShowPlayerDialog(playerid,149,DIALOG_STYLE_INPUT,"{FFFFFF}» Accueil «","{FF0000}Erreur, 20 carractères minimum !\n{FFFFFF} Que désirez-vous ? (Entrez une raison IC)","Valider","Annuler");}

		format(string,sizeof(string),"{04B45F}[Accueil]{FFFFFF} %s : %s",PlayerInfo[playerid][pName],inputtext);
		SendFamilyMessage(actor[tmpId][variable],COLOR_WHITE,string);
		msg_Box(playerid, "~b~", "Info", "Votre message a été envoyé.", 5000);
		return 1;
    }
    if(dialogid == 148)
    {
        if(!response)
            {return 1;}
            
		new bool:isok=false;
		if(listitem == 0 && inventory_GetItemQuantity(playerid,18643) > 0)
		    {laser_Colour[playerid]=18643; isok=true;}
        else if(listitem == 1 && inventory_GetItemQuantity(playerid,19080) > 0)
		    {laser_Colour[playerid]=19080; isok=true;}
        else if(listitem == 1 && inventory_GetItemQuantity(playerid,19081) > 0)
		    {laser_Colour[playerid]=19081; isok=true;}
        else if(listitem == 1 && inventory_GetItemQuantity(playerid,19082) > 0)
		    {laser_Colour[playerid]=19082; isok=true;}
        else if(listitem == 1 && inventory_GetItemQuantity(playerid,19083) > 0)
		    {laser_Colour[playerid]=19083; isok=true;}
        else if(listitem == 1 && inventory_GetItemQuantity(playerid,19084) > 0)
		    {laser_Colour[playerid]=19084; isok=true;}
		
		if(isok == true)
		{
		    if(player_GetSlotObject(playerid) != -1)
	   	    	{laser_Object[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject(playerid, laser_Object[playerid], laser_Colour[playerid], 6, 0.00, 0.00, 0.00, 0, 0, 0, 0, 0 ,0);}
			else
				{return msg_Box(playerid, "~b~", "Info", "Aucun slot libre.", 5000);}
			laser_Statue[playerid]=1;
		}
		else
			{msg_Box(playerid, "~b~", "Info", "Vous n'avez pas cette couleur de laser.", 5000);}
        return 1;
    }
    if(dialogid == 147)
    {
        if(!response)
            {return 1;}
            
		new bool:isok=false;
		if(listitem==0)
  		{
  		    if(inventory_GetItemQuantity(playerid,1668) > 0)
		  		{inventory_UpdateItem(playerid,1668,-1); isok=true;}
  		}
        if(listitem==1)
    	{
    	    if(inventory_GetItemQuantity(playerid,2601) > 0)
				{inventory_UpdateItem(playerid,2601,-1); isok=true;}
		}
        if(listitem==2)
  		{
  		    if(inventory_GetItemQuantity(playerid,19569) > 0)
				{inventory_UpdateItem(playerid,19569,-1); isok=true;}
		}
        if(listitem==3)
  		{
  		    if(inventory_GetItemQuantity(playerid,19563) > 0)
		  		{inventory_UpdateItem(playerid,19563,-1); isok=true;}
  		}
        if(listitem==4)
    	{
    	    if(inventory_GetItemQuantity(playerid,1486) > 0)
			 	{inventory_UpdateItem(playerid,1486,-1); isok=true;}
		}
		if(listitem==5)
    	{
    	    if(inventory_GetItemQuantity(playerid,19811 ) > 0)
			 	{inventory_UpdateItem(playerid,19811 ,-1); isok=true;}
		}
		if(listitem==6)
    	{
    	    if(inventory_GetItemQuantity(playerid,19571) > 0)
			 	{inventory_UpdateItem(playerid,19571,-1); isok=true;}
		}
		if(listitem==7)
    	{
    	    if(inventory_GetItemQuantity(playerid,2769) > 0)
			 	{inventory_UpdateItem(playerid,2769,-1); isok=true;}
		}
		if(listitem==8)
    	{
    	    if(inventory_GetItemQuantity(playerid,2663) > 0)
			 	{inventory_UpdateItem(playerid,2663,-1); isok=true;}
		}
		if(listitem==9)
    	{
    	    if(inventory_GetItemQuantity(playerid,2821) > 0)
			 	{inventory_UpdateItem(playerid,2821,-1); isok=true;}
		}
		
		if(isok == true)
		{
		    if(listitem < 5)
		        {PlayerInfo[playerid][pSoif]+=50; msg_Box(playerid, "~b~", "Info", "Vous avez bu cette boisson.", 5000);}
			else
			    {PlayerInfo[playerid][pFaim]+=50; msg_Box(playerid, "~b~", "Info", "Vous avez mangé cet aliment.", 5000);}
			UpdateStatsTextsPlayers(playerid,1);
			UpdateStatsTextsPlayers(playerid,2);
		}
		else
		    {msg_Box(playerid, "~b~", "Info", "Vous n'avez pas cet aliment !", 5000);}
        return 1;
    }
    if(dialogid == 146)
    {
        if(response)
        {
            if(!strlen(inputtext) || strval(inputtext) > inventory_GetItemQuantity(playerid,1575) || strval(inputtext) < 0)
                {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Erreur dans le montant !");}
            new tmpId=player_IsAtNpcPoint(playerid,5,1.5);
            new tmpPrice=strval(inputtext)*DEALER_PRICE;
            inventory_UpdateItem(playerid,1575,-strval(inputtext));
            SetPlayerChatBubble(tmpId,"Wouah ! Nickel mec, tiens prends ça.",0xFFFFFFDD,NAME_DISTANCE,5000);
            LoopingAnim(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0); LoopingAnim(tmpId,"DEALER","shop_pay",4.1,0,0,0,0,0);
            format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez vendu %d gramme(s) pour $%d.",strval(inputtext),tmpPrice);
            msg_Client(playerid,COLOR_WHITE,string);
            SafeGivePlayerMoney(playerid,tmpPrice,"Vente dealer");
        }
        return 1;
    }
    if(dialogid == 145)
    {
        if(!response)
            {return 1;}
            
        new tmpId=player_IsAtNpcPoint(playerid,4,3.5);
		if(player_Dialog[playerid] == 0)
		{
		    if(listitem == 0)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Livreur de Pizza\n- Fermier\n- Eboueur\n- Pilote de Ligne\n- Facteur\n- Pêcheur\n- Voiturier\n- Camionneur\n- Medecin\n- Mécanicien\n- Convoyeur de fond","Valider","Annuler");
                player_Dialog[playerid]=1;
			}
		    if(listitem == 1)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Livreur de Pizza\n- Eboueur\n- Pilote de Ligne\n- Facteur\n- Voiturier\n- Camionneur\n- Medecin","Valider","Annuler");
                player_Dialog[playerid]=2;
			}
		    if(listitem == 2)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Livreur de Pizza\n- Eboueur\n- Ouvrier\n- Pilote de Ligne\n- Facteur\n- Camionneur\n- Medecin","Valider","Annuler");
                player_Dialog[playerid]=3;
			}
		    if(listitem == 3)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Medecin","Valider","Annuler");
                player_Dialog[playerid]=4;
			}
		    if(listitem == 4)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Pêcheur","Valider","Annuler");
                player_Dialog[playerid]=5;
			}
		    if(listitem == 5)
		    {
		        SetActorChatBubble(tmpId,"Il n'y a actuellement pas de job dans cette ville.",0xFFFFFFDD,NAME_DISTANCE,5000);
		    }
		    if(listitem == 6)
		    {
		        SetActorChatBubble(tmpId,"Il n'y a actuellement pas de job dans cette ville.",0xFFFFFFDD,NAME_DISTANCE,5000);
		    }
		    if(listitem == 7)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Fermier","Valider","Annuler");
		        player_Dialog[playerid]=8;
		    }
		    if(listitem == 8)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Médecin","Valider","Annuler");
		        player_Dialog[playerid]=9;
		    }
		    if(listitem == 9)
		    {
		        SetActorChatBubble(tmpId,"Il n'y a actuellement pas de job dans cette ville.",0xFFFFFFDD,NAME_DISTANCE,5000);
		    }
		    if(listitem == 10)
		    {
		        SetActorChatBubble(tmpId,"Il n'y a actuellement pas de job dans cette ville.",0xFFFFFFDD,NAME_DISTANCE,5000);
		    }
		    if(listitem == 11)
		    {
		        SetActorChatBubble(tmpId,"Il n'y a actuellement pas de job dans cette ville.",0xFFFFFFDD,NAME_DISTANCE,5000);
		    }
		    if(listitem == 12)
		    {
		        ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» ANPE «","- Mineur","Valider","Annuler");
		        player_Dialog[playerid]=13;
		    }
		    LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
		    return 1;
		}
		else if(player_Dialog[playerid] == 1)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,2117.1238,-1790.6949,13.5547,5.0);}
            if(listitem==1)
		        {SetPlayerCheckpoint(playerid,-382.9725,-1426.1107,26.3180,5.0);}
            if(listitem==2)
		        {SetPlayerCheckpoint(playerid,2276.7869,-2227.0000,13.5469,5.0);}
            if(listitem==3)
		        {SetPlayerCheckpoint(playerid,1969.6827,-2188.5569,13.5469,5.0);}
            if(listitem==4)
		        {SetPlayerCheckpoint(playerid,1743.8046,-1582.4856,13.5479,5.0);}
            if(listitem==5)
		        {SetPlayerCheckpoint(playerid,906.1063,-1904.2996,1.1277,5.0);}
            if(listitem==6)
		        {SetPlayerCheckpoint(playerid,322.1843,-1519.5908,36.0391,5.0);}
            if(listitem==7)
		        {SetPlayerCheckpoint(playerid,2422.7007,-2075.9539,13.5538,5.0);}
            if(listitem==8)
		        {SetPlayerCheckpoint(playerid,1181.7336,-1330.5524,13.5849,5.0);}
            if(listitem==9)
		        {SetPlayerCheckpoint(playerid,1008.4938,-1358.3921,13.3909,5.0);}
            if(listitem==10)
		        {SetPlayerCheckpoint(playerid,1516.9620,-1022.1600,23.8301,5.0);}
		}
		else if(player_Dialog[playerid] == 2)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,-1815.3105,943.3864,24.8759,5.0);}
            if(listitem==1)
		        {SetPlayerCheckpoint(playerid,-1750.2870,152.5881,3.5496,5.0);}
            if(listitem==2)
		        {SetPlayerCheckpoint(playerid,-1548.1471,-445.8002,6.0888,5.0);}
            if(listitem==3)
		        {SetPlayerCheckpoint(playerid,-2352.7651,487.6528,30.9557,5.0);}
            if(listitem==4)
		        {SetPlayerCheckpoint(playerid,-1748.5485,962.6849,24.8828,5.0);}
            if(listitem==5)
		        {SetPlayerCheckpoint(playerid,-1829.5662,109.6234,15.1172,5.0);}
            if(listitem==6)
		        {SetPlayerCheckpoint(playerid,-2675.3901,633.9665,14.4531,5.0);}
		}
		else if(player_Dialog[playerid] == 3)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,2079.7412,2224.2998,11.0300,5.0);}
            if(listitem==1)
		        {SetPlayerCheckpoint(playerid,997.7477,2121.3801,10.8203,5.0);}
            if(listitem==2)
		        {SetPlayerCheckpoint(playerid,2481.3635,1957.6112,10.6090,5.0);}
            if(listitem==3)
		        {SetPlayerCheckpoint(playerid,1719.4365,1615.0367,10.0818,5.0);}
            if(listitem==4)
		        {SetPlayerCheckpoint(playerid,2275.0439,2292.1929,10.8203,5.0);}
            if(listitem==5)
		        {SetPlayerCheckpoint(playerid,2778.1799,901.4272,10.8984,5.0);}
            if(listitem==6)
		        {SetPlayerCheckpoint(playerid,1595.1428,1820.1161,10.8203,5.0);}
		}
		else if(player_Dialog[playerid] == 4)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,-314.7763,1050.0546,20.3403,5.0);}
		}
		else if(player_Dialog[playerid] == 5)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,-2185.7153,2416.5520,5.1825,5.0);}
		}
		else if(player_Dialog[playerid] == 8)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,-58.2886,86.8920,3.1172,5.0);}
		}
		else if(player_Dialog[playerid] == 9)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,1249.3186,326.0113,19.7578,5.0);}
		}
		else if(player_Dialog[playerid] == 13)
		{
		    if(listitem==0)
		        {SetPlayerCheckpoint(playerid,-1357.0615,2451.1348,88.8201,5.0);}
		}
		SetActorChatBubble(tmpId,"Lieu d'embauche indiqué.",0xFFFFFFDD,NAME_DISTANCE,5000);
		return 1;
	}
    if(dialogid == 141)
    {
        if(!response)
		{
		    if(biker_DialogGestion[playerid]==0)
				{return 1;}
			else
				{biker_Gestion(playerid);return 1;}
		}
		if(biker_DialogGestion[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 1 : (Ancien: %s)",BikerInfo[rank1]);
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_INPUT,"{140073}» Biker'z «{FFFFFF} Gestion - Rang 1",string,"Valider","Retour");
				biker_DialogGestion[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 2 : (Ancien: %s)",BikerInfo[rank2]);
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_INPUT,"{140073}» Biker'z «{FFFFFF} Gestion - Rang 2",string,"Valider","Retour");
				biker_DialogGestion[playerid]=2;
		    }
		    if(listitem==2)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 3 : (Ancien: %s)",BikerInfo[rank3]);
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_INPUT,"{140073}» Biker'z «{FFFFFF} Gestion - Rang 3",string,"Valider","Retour");
				biker_DialogGestion[playerid]=3;
		    }
		    if(listitem==3)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 4 : (Ancien: %s)",BikerInfo[rank4]);
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_INPUT,"{140073}» Biker'z «{FFFFFF} Gestion - Rang 4",string,"Valider","Retour");
				biker_DialogGestion[playerid]=4;
		    }
		    if(listitem==4)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 5 : (Ancien: %s)",BikerInfo[rank5]);
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_INPUT,"{140073}» Biker'z «{FFFFFF} Gestion - Rang 5",string,"Valider","Retour");
				biker_DialogGestion[playerid]=5;
		    }
		    if(listitem==5)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",BikerInfo[rank6]);
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_INPUT,"{140073}» Biker'z «{FFFFFF} Gestion - Rang 6",string,"Valider","Retour");
				biker_DialogGestion[playerid]=6;
		    }
		    if(listitem>=6 && listitem<=11)
		    {
		        new Skin[8];
			    Skin[0] = 100;
			    Skin[1] = 254;
			    Skin[2] = 247;
			    Skin[3] = 248;
			    Skin[4] = 250;
			    Skin[5] = 249;
			    Skin[6] = 242;
			    Skin[7] = 241;
        	    ShowModelSelectionMenuEx(playerid, Skin, 8, "Choissiez un skin", 8, 0.0, 0.0, -55.0);
        	    biker_DialogGestion[playerid]=listitem+1;
		    }
		    if(listitem==12)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=0)
				    {msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Vous devez être à l'extérieur."); biker_Gestion(playerid); return 1;}

	     		BikerInfo[Entrance][0]=x;
				BikerInfo[Entrance][1]=y;
				BikerInfo[Entrance][2]=z;
				BikerInfo[Entrance][3]=a;

		        msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Entré sauvegardée.");
		        biker_Update();
                biker_Save();
                biker_Gestion(playerid);
                return 1;
		    }
		    if(listitem==13)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=BikerInfo[Interior])
				    {msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Vous devez être à l'intérieur de votre QG."); biker_Gestion(playerid); return 1;}

	     		BikerInfo[Exit][0]=x;
				BikerInfo[Exit][1]=y;
				BikerInfo[Exit][2]=z;
				BikerInfo[Exit][3]=a;

		        msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Sortie sauvegardée.");
		        biker_Update();
                biker_Save();
                biker_Gestion(playerid);
                return 1;
		    }
			if(listitem==14)
		    {
			        new Float:x,Float:y,Float:z,Float:a;
			        GetPlayerPos(playerid,x,y,z);
			        GetPlayerFacingAngle(playerid,a);
			        BikerInfo[Spawn][0]=x;
			        BikerInfo[Spawn][1]=y;
			        BikerInfo[Spawn][2]=z;
			        BikerInfo[Spawn][3]=a;
			        BikerInfo[Interior]=GetPlayerInterior(playerid);
			        msg_Client(playerid,COLOR_WHITE,"{140073}» Biker'z «{FFFFFF} Potitions du Spawn sauvegardées.");
			        biker_Save();
		        	biker_Gestion(playerid);
		    		return 1;
		    }
		}
		else if(biker_DialogGestion[playerid]>=1 && biker_DialogGestion[playerid] <= 6) // Nom des rang
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom.\nEntrez le nouveau nom du rang :");
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_INPUT,"{140073}» Biker'z «{FFFFFF} Gestion - Rang",string,"Valider","Retour");
				return 1;
		    }

	     	if(biker_DialogGestion[playerid]==1)
		    	{strmid(BikerInfo[rank1], inputtext, 0, 32, 32);}
            if(biker_DialogGestion[playerid]==2)
		    	{strmid(BikerInfo[rank2], inputtext, 0, 32, 32);}
       	 	if(biker_DialogGestion[playerid]==3)
		    	{strmid(BikerInfo[rank3], inputtext, 0, 32, 32);}
            if(biker_DialogGestion[playerid]==4)
		    	{strmid(BikerInfo[rank4], inputtext, 0, 32, 32);}
            if(biker_DialogGestion[playerid]==5)
		    	{strmid(BikerInfo[rank5], inputtext, 0, 32, 32);}
			if(biker_DialogGestion[playerid]==6)
		    	{strmid(BikerInfo[rank6], inputtext, 0, 32, 32);}

		    format(string,sizeof(string),"{140073}» Biker'z «{FFFFFF} Vous avez changé le nom du rang en %s.",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    biker_Gestion(playerid);
		    biker_Save();
		}
        return 1;
    }
	if(dialogid == 44)
    {
		return 1;
    }
    if(dialogid == 36)
    {
        if(!response)
		{
		    if(player_Dialog[playerid]==0)
				{return 1;}
			else if(player_Dialog[playerid]>=51)
			    {police_FineGestion(playerid); return 1;}
			else
				{police_Gestion(playerid);return 1;}
		}
		new id = PlayerInfo[playerid][pMember]-1;
		if(player_Dialog[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 1 : (Ancien: %s)",police[id][rank1]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 1",string,"Valider","Retour");
				player_Dialog[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 2 : (Ancien: %s)",police[id][rank2]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 2",string,"Valider","Retour");
				player_Dialog[playerid]=2;
		    }
		    if(listitem==2)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 3 : (Ancien: %s)",police[id][rank3]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 3",string,"Valider","Retour");
				player_Dialog[playerid]=3;
		    }
		    if(listitem==3)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 4 : (Ancien: %s)",police[id][rank4]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 4",string,"Valider","Retour");
				player_Dialog[playerid]=4;
		    }
		    if(listitem==4)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 5 : (Ancien: %s)",police[id][rank5]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 5",string,"Valider","Retour");
				player_Dialog[playerid]=5;
		    }
		    if(listitem==5)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",police[id][rank6]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 6",string,"Valider","Retour");
				player_Dialog[playerid]=6;
		    }
		    if(listitem==6)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",police[id][rank7]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 7",string,"Valider","Retour");
				player_Dialog[playerid]=7;
		    }
		    if(listitem==7)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",police[id][rank8]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang 8",string,"Valider","Retour");
				player_Dialog[playerid]=8;
		    }
		    if(listitem>=8 && listitem<=15)
		    {
		        new Skin[21];
			    Skin[0] = 280; Skin[1] = 281; Skin[2] = 282; Skin[3] = 283; Skin[4] = 284;
			    Skin[5] = 288; Skin[6] = 265; Skin[7] = 266; Skin[8] = 267; Skin[9] = 71;
			    Skin[10] = 300; Skin[11] = 301; Skin[12] = 302; Skin[13] = 303; Skin[14] = 304;
			    Skin[15] = 305; Skin[16] = 306; Skin[17] = 307; Skin[18] = 309; Skin[19] = 310; Skin[20] = 311;
        	    ShowModelSelectionMenuEx(playerid, Skin, 21, "Choissiez un skin", 1, 0.0, 0.0, -55.0);
        	    player_Dialog[playerid]=listitem+1;
		    }
		    if(listitem==16)
		    {
		       police_FineGestion(playerid);
		       return 1;
		    }
		    if(listitem==17)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=0)
				    {msg_Box(playerid, "~b~", "Police", "Vous devez être à l'extérieur.", 5000); police_Gestion(playerid); return 1;}

	     		police[id][pos][0]=x;
				police[id][pos][1]=y;
				police[id][pos][2]=z;
				police[id][pos][3]=a;

		        msg_Box(playerid, "~b~", "Police", "Entré sauvegardée.", 5000);
		        police_Update(id);
                police_Save(id);
                police_Gestion(playerid);
                return 1;
		    }
		    if(listitem==18)
		    {
		        new Float:x,Float:y,Float:z,Float:a;
	     		GetPlayerPos(playerid,x,y,z);
	     		GetPlayerFacingAngle(playerid,a);
				if(GetPlayerInterior(playerid)!=police[id][interior])
				    {msg_Box(playerid, "~b~", "Police", "Vous devez être à l'intérieur de votre QG.", 5000); police_Gestion(playerid); return 1;}

	     		police[id][pos][4]=x;
				police[id][pos][5]=y;
				police[id][pos][6]=z;
				police[id][pos][7]=a;

		        msg_Box(playerid, "~b~", "Police", "Sortie sauvegardée.", 5000);
		        police_Update(id);
                police_Save(id);
                police_Gestion(playerid);
                return 1;
		    }
			if(listitem==19)
		    {
			        new Float:x,Float:y,Float:z,Float:a;
			        GetPlayerPos(playerid,x,y,z);
			        GetPlayerFacingAngle(playerid,a);
			        police[id][pos][8]=x;
			        police[id][pos][9]=y;
			        police[id][pos][10]=z;
			        police[id][pos][11]=a;
			        police[id][interior]=GetPlayerInterior(playerid);
			        msg_Box(playerid, "~b~", "Police", "Potitions du Spawn sauvegardées.", 5000);
			        police_Save(id);
		        	police_Gestion(playerid);
		    		return 1;
		    }
		    if(listitem>=20 && listitem<=21)
		    {
		        new Float:x,Float:y,Float:z;
	     		GetPlayerPos(playerid,x,y,z);
				if(GetPlayerInterior(playerid)!=police[id][interior])
				    {msg_Box(playerid, "~b~", "Police", "Vous n'êtes pas dans le poste.", 5000); police_Gestion(playerid); return 1;}

                if(listitem==20)
				    {police[id][cmds][0]=x; police[id][cmds][1]=y; police[id][cmds][2]=z;}
                if(listitem==21)
				    {police[id][cmds][3]=x; police[id][cmds][4]=y; police[id][cmds][5]=z;}
				    
				msg_Box(playerid, "~b~", "Police", "Potitions de la commande sauvegardées.", 5000);
		        police_Update(id);
                police_Save(id);
                police_Gestion(playerid);
                return 1;
		    }
		}
		else if(player_Dialog[playerid]>=1 && player_Dialog[playerid] <= 8) // Nom des rang
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom.\nEntrez le nouveau nom du rang :");
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Rang",string,"Valider","Retour");
				return 1;
		    }

	     	if(player_Dialog[playerid]==1)
		    	{strmid(police[id][rank1], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==2)
		    	{strmid(police[id][rank2], inputtext, 0, 32, 32);}
       	 	if(player_Dialog[playerid]==3)
		    	{strmid(police[id][rank3], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==4)
		    	{strmid(police[id][rank4], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==5)
		    	{strmid(police[id][rank5], inputtext, 0, 32, 32);}
			if(player_Dialog[playerid]==6)
		    	{strmid(police[id][rank6], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==7)
		    	{strmid(police[id][rank7], inputtext, 0, 32, 32);}
            if(player_Dialog[playerid]==8)
		    	{strmid(police[id][rank8], inputtext, 0, 32, 32);}

		    format(string,sizeof(string),"Vous avez changé le nom du rang en %s.",inputtext);
		    msg_Box(playerid, "~b~", "Police", string, 5000);
		    police_Gestion(playerid);
		    police_Save(id);
		}
		else if(player_Dialog[playerid]==50) // Amendes
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nom de l'amende :");
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				player_Dialog[playerid]=51;
		    }
		    if(listitem>0)
		    {
		        police_GestionFineId[playerid]=police_GestionCheckFineId[playerid][listitem];
		        format(string,sizeof(string),"[+] Editer le nom (%s)\n[+] Editer le prix ($%d)\n[-] Supprimer l'amende",fine[police_GestionFineId[playerid]][tmpName],fine[police_GestionFineId[playerid]][price]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_LIST,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				player_Dialog[playerid]=53;
		    }
		}
		else if(player_Dialog[playerid]==51) // Amendes
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 64 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom\nEntrez le nom de l'amende :");
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				return 1;
		    }
		    SetPVarString(playerid, "finName", inputtext);
		    format(string,sizeof(string),"Entrez le prix de l'amende :");
			ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
			player_Dialog[playerid]=52;
		}
		else if(player_Dialog[playerid]==52) // Amendes
		{
		    if(!strlen(inputtext) || strval(inputtext) > 20000 || strval(inputtext) < 100)
		    {
		        format(string,sizeof(string),"Le prix doit être compris entre $100 et $20000.\nEntrez le prix de l'amende :");
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				return 1;
		    }
		    new finName[64];
		    GetPVarString(playerid, "finName", finName, 64);
		    new ID=-1;
		    for(new i = 0; i < totalFines; i++)
			{
				if(fine[i][used] == false)
					{ID = i;break;}
			}
			if(ID==-1)
			{
				format(sql, sizeof(sql), "SELECT * FROM lvrp_factions_polices_fines");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID+1>MAX_FINE)
					{return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Maximum d'amendes atteint, contactez un admin.");}
				format(sql, sizeof(sql), "INSERT INTO lvrp_factions_polices_fines SET id=%d, Name='%s', Created=1, Price=%d, City=%d",ID+1, finName, strval(inputtext), PlayerInfo[playerid][pMember]);
				mysql_pquery(MYSQL,sql);
				totalFines++;
			}
			strmid(fine[ID][tmpName], finName, 0, strlen(finName), 64);
	    	fine[ID][price] = strval(inputtext);
	    	fine[ID][used] = true;
	    	fine[ID][city] = PlayerInfo[playerid][pMember];
			format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Amende id %d créée.",ID);
			msg_Client(playerid,COLOR_POLICE,string);
			police_FineSave(ID);
			police_FineGestion(playerid);
		}
		else if(player_Dialog[playerid]==53) // Amendes
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom de l'amende : (Ancien: %s)",fine[police_GestionFineId[playerid]][tmpName]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				player_Dialog[playerid]=54;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le nouveau prix de l'amende : (Ancien: $%d)",fine[police_GestionFineId[playerid]][price]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				player_Dialog[playerid]=55;
		    }
		    if(listitem==2)
		    {
		        new tmpFine = police_GestionFineId[playerid];
			    fine[tmpFine][price]=0;
			    strmid(fine[tmpFine][tmpName], "Aucun", 0, strlen("Aucun"), 64);
			    fine[tmpFine][used]=false;
			    fine[tmpFine][city]=-1;
			    police_FineSave(tmpFine);
			    format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Amende id %d supprimée.",tmpFine);
			    msg_Client(playerid,COLOR_POLICE,string);
			    police_FineGestion(playerid);
		    }
		}
		else if(player_Dialog[playerid]==54) // Amendes
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 64 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom\nEntrez le nouveau nom de l'amende : (Ancien: %s)",fine[police_GestionFineId[playerid]][tmpName]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				return 1;
		    }
		    strmid(fine[police_GestionFineId[playerid]][tmpName], inputtext, 0, strlen(inputtext), 64);
		    format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Le nouveau nom de l'amende est : %s.",inputtext);
			msg_Client(playerid,COLOR_POLICE,string);
			police_FineGestion(playerid);
			police_FineSave(police_GestionFineId[playerid]);
		}
		else if(player_Dialog[playerid]==55) // Amendes
		{
		    if(!strlen(inputtext) || strval(inputtext) > 20000 || strval(inputtext) < 100)
		    {
		        format(string,sizeof(string),"Le prix doit être compris entre $100 et $20000.\nEntrez le nouveau prix de l'amende : (Ancien: $%d)",fine[police_GestionFineId[playerid]][price]);
				ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"{007AFF}» Police «{FFFFFF} Gestion - Amendes",string,"Valider","Retour");
				return 1;
		    }
		    fine[police_GestionFineId[playerid]][price]=strval(inputtext);
		    format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Le nouveau prix de l'amende est : $%d.",strval(inputtext));
			msg_Client(playerid,COLOR_POLICE,string);
			police_FineGestion(playerid);
			police_FineSave(police_GestionFineId[playerid]);
		}
		return 1;
    }
    if(dialogid == 29)
    {
        if(!response)
		{
		    if(sannews_DialogGestion[playerid]==0)
				{return 1;}
			else
				{sannews_Gestion(playerid);return 1;}
		}
		if(sannews_DialogGestion[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"Entrez le montant que vous désirez déposer : (Max: $%d)",PlayerInfo[playerid][pCash]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Déposer de l'argent",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        format(string,sizeof(string),"Entrez le montant que vous désirez retirer : (Max: $%d)",sanNews[abc_Cash]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Retirer de l'argent",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=2;
		    }
		    if(listitem==2)
		    {
		        format(string,sizeof(string),"Entrez le nouveau prix du SMS : (Ancien: $%d)",sanNews[abc_SMS]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Prix SMS",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=3;
		    }
		    if(listitem==3)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 1 : (Ancien: %s)",sanNews[rank1]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Rang 1",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=4;
		    }
		    if(listitem==4)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 2 : (Ancien: %s)",sanNews[rank2]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Rang 2",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=5;
		    }
		    if(listitem==5)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 3 : (Ancien: %s)",sanNews[rank3]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Rang 3",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=6;
		    }
		    if(listitem==6)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 4 : (Ancien: %s)",sanNews[rank4]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Rang 4",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=7;
		    }
		    if(listitem==7)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 5 : (Ancien: %s)",sanNews[rank5]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Rang 5",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=8;
		    }
		    if(listitem==8)
		    {
		        format(string,sizeof(string),"Entrez le nouveau nom du rang 6 : (Ancien: %s)",sanNews[rank6]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Rang 6",string,"Valider","Retour");
				sannews_DialogGestion[playerid]=9;
		    }
		}
		else if(sannews_DialogGestion[playerid]==1)
		{
		    if(!strlen(inputtext) || strval(inputtext) > PlayerInfo[playerid][pCash] || strval(inputtext) < 0)
		    {
		        format(string,sizeof(string),"Erreur dans le montant\nEntrez le montant que vous désirez déposer : (Max: $%d)",PlayerInfo[playerid][pCash]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Déposer de l'argent",string,"Valider","Retour");
		    }
		    SafeGivePlayerMoney(playerid,-strval(inputtext),"San News Deposer coffre");
		    sanNews[abc_Cash]+=strval(inputtext);
		    format(string,sizeof(string),"{00673A}» San News «{FFFFFF} Vous avez déposé $%d dans le coffre.",strval(inputtext));
		    msg_Client(playerid,COLOR_GREY,string);
		    sannews_Gestion(playerid);
		    sannews_Save();
		    return 1;
		}
		else if(sannews_DialogGestion[playerid]==2)
		{
		    if(!strlen(inputtext) || strval(inputtext) > sanNews[abc_Cash] || strval(inputtext) < 0)
		    {
          		format(string,sizeof(string),"Erreur dans le montant\nEntrez le montant que vous désirez retirer : (Max: $%d)",sanNews[abc_Cash]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Retirer de l'argent",string,"Valider","Retour");
		    }
		    SafeGivePlayerMoney(playerid,strval(inputtext),"San News Retirer coffre");
		    sanNews[abc_Cash]-=strval(inputtext);
		    format(string,sizeof(string),"{00673A}» San News «{FFFFFF} Vous avez retiré $%d du coffre.",strval(inputtext));
		    msg_Client(playerid,COLOR_GREY,string);
		    sannews_Gestion(playerid);
		    sannews_Save();
		    return 1;
		}
		else if(sannews_DialogGestion[playerid]==3)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 1000 || strval(inputtext) < 0)
		    {
		        format(string,sizeof(string),"Erreur dans le montant, $1000 MAX.\nEntrez le nouveau prix du SMS : (Ancien: $%d)",sanNews[abc_SMS]);
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Prix SMS",string,"Valider","Retour");
		    }
		    sanNews[abc_SMS]=strval(inputtext);
		    format(string,sizeof(string),"{00673A}» San News «{FFFFFF} Vous avez reglé le prix du SMS à $%d.",strval(inputtext));
		    msg_Client(playerid,COLOR_GREY,string);
		    sannews_Gestion(playerid);
		    sannews_Save();
		    return 1;
		}
		else if(sannews_DialogGestion[playerid]>=4)
		{
		    if(!strlen(inputtext) || strlen(inputtext) > 32 || strlen(inputtext) < 0 || MySQLCheckChar(inputtext))
		    {
		        format(string,sizeof(string),"Erreur dans le nom\nEntrez le nouveau nom du rang :");
				ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Gestion - Rang",string,"Valider","Retour");
		    }
		    
	     	if(sannews_DialogGestion[playerid]==4)
		    	{strmid(sanNews[rank1], inputtext, 0, 32, 32);}
            if(sannews_DialogGestion[playerid]==5)
		    	{strmid(sanNews[rank2], inputtext, 0, 32, 32);}
       	 	if(sannews_DialogGestion[playerid]==6)
		    	{strmid(sanNews[rank3], inputtext, 0, 32, 32);}
            if(sannews_DialogGestion[playerid]==7)
		    	{strmid(sanNews[rank4], inputtext, 0, 32, 32);}
            if(sannews_DialogGestion[playerid]==8)
		    	{strmid(sanNews[rank5], inputtext, 0, 32, 32);}
			if(sannews_DialogGestion[playerid]==9)
		    	{strmid(sanNews[rank6], inputtext, 0, 32, 32);}
		    		
		    format(string,sizeof(string),"{00673A}» San News «{FFFFFF} Vous avez changé le nom du rang en %s.",inputtext);
		    msg_Client(playerid,COLOR_GREY,string);
		    sannews_Gestion(playerid);
		    sannews_Save();
		    return 1;
		}
        return 1;
    }
    if(dialogid == 24)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0 || player_Dialog[playerid]==1)
				{player_Variable[playerid] = -1; return 1;}
			else
			{
				player_Dialog[playerid]=1;
				house_AdminEdit(playerid);
				return 1;
			}
		}
		if(player_Dialog[playerid] == 0)
		{
		    if(!strlen(inputtext) || strval(inputtext)<0 || strval(inputtext)>totalHouses)
		    	{return ShowPlayerDialog(playerid,24,DIALOG_STYLE_INPUT,"» Admin « Editer une maison","Erreur dans l'id.\nEntrez l'id de maison que vous désirez éditer :","Valider","Annuler");}
		    
		    player_Variable[playerid]=strval(inputtext);
            house_AdminEdit(playerid);
		}
		else if(player_Dialog[playerid] == 1)
		{
		    if(!response)
				{return 1;}
				
			if(listitem == 0)
        	{
        	    new houseid = player_Variable[playerid];
        	    new Float:x,Float:y,Float:z;
			    GetPlayerPos(playerid,x,y,z);
			    house[houseid][pos][0]=x;
			    house[houseid][pos][1]=y;
			    house[houseid][pos][2]=z;
			    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Nouvelles positions de la maison sauvegardées.");
			    house_AdminEdit(playerid);
			    house_UpdateInfos(houseid);
			    house_Save(houseid);
        	}
        	if(listitem == 1)
        	{
        		format(string,sizeof(string),"Apparte 1 (2 pièces)\nApparte 2 (2 pièces)\nApparte 3 (2 pièces)\nApparte 4 (3 pièces)\nApparte 5 (4 pièces)\nMaison 1 (3 pièces)\nMaison 2 (4 pièces)\nMaison 3 (4 pièces)\nMaison 4 (4 pièces)\nMaison 5 (5 pièces)\nMaison 6 (5 pièces)\nMaison 7 (5 pièces)\nMaison 8 (6 pièces)\nMaison 9 (6 pièces)(A Mappé)\nMaison de luxe 1 (5 pièces)\nMaison de luxe 2 (7 pièces)\nMaison de luxe 3 (8 pièces)\nMaison de luxe 4 (9 pièces)");
        	    ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"» Admin « Editer une maison - Interieur",string,"Valider","Retour");
        	    player_Dialog[playerid]=2;
        	}
        	if(listitem == 2)
        	{
        	    ShowPlayerDialog(playerid,24,DIALOG_STYLE_INPUT,"» Admin « Editer une maison - Prix","Entrez le nouveau prix de la maison :","Valider","Retour");
        	    player_Dialog[playerid]=3;
        	}
        	if(listitem == 3)
        	{
        	    ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"» Admin « Editer une maison - Proprio","A vendre\nJoueur\n[Owned 0] Vendre\n[Owned 1] Acheté","Valider","Retour");
        	    player_Dialog[playerid]=4;
        	}
		}
		else if(player_Dialog[playerid] == 2)
		{
		    if(listitem == 0)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=446.3247;
			    house[houseid][pos][4]=509.9662;
			    house[houseid][pos][5]=1001.4195;
			    house[houseid][interior]=12;
			    strmid(house[houseid][description], "Appartement, 2 pièces", 0, 36, 36);
        	}
        	if(listitem == 1)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=2333.11;
			    house[houseid][pos][4]=-1077.1;
			    house[houseid][pos][5]=1049.04;
			    house[houseid][interior]=6;
			    strmid(house[houseid][description], "Appartement, 2 pièces", 0, 36, 36);
        	}
        	if(listitem == 2)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=-42.58;
			    house[houseid][pos][4]=1405.61;
			    house[houseid][pos][5]=1084.45;
			    house[houseid][interior]=8;
			    strmid(house[houseid][description], "Appartement, 2 pièces", 0, 36, 36);
        	}
        	if(listitem == 3)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=-68.5145;
			    house[houseid][pos][4]=1353.8485;
			    house[houseid][pos][5]=1080.2109;
			    house[houseid][interior]=6;
			    strmid(house[houseid][description], "Appartement, 3 pièces", 0, 36, 36);
        	}
        	if(listitem == 4)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=224.288;
			    house[houseid][pos][4]=1289.1907;
			    house[houseid][pos][5]=1082.1406;
			    house[houseid][interior]=1;
			    strmid(house[houseid][description], "Maison, 3 pièces", 0, 36, 36);
        	}
        	if(listitem == 5)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=260.98;
			    house[houseid][pos][4]=1284.55;
			    house[houseid][pos][5]=1080.3;
			    house[houseid][interior]=4;
			    strmid(house[houseid][description], "Maison, 4 pièces", 0, 36, 36);
        	}
        	if(listitem == 6)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=2365.3;
			    house[houseid][pos][4]=-1134.92;
			    house[houseid][pos][5]=1050.91;
			    house[houseid][interior]=8;
			    strmid(house[houseid][description], "Maison, 4 pièces", 0, 36, 36);
        	}
        	if(listitem == 7)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=261.1165;
			    house[houseid][pos][4]=1287.2197;
			    house[houseid][pos][5]=1080.2578;
			    house[houseid][interior]=4;
			    strmid(house[houseid][description], "Maison, 4 pièces", 0, 36, 36);
        	}
        	if(listitem == 8)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=-260.6;
			    house[houseid][pos][4]=1456.62;
			    house[houseid][pos][5]=1084.45;
			    house[houseid][interior]=4;
			    strmid(house[houseid][description], "Maison, 4 pièces", 0, 36, 36);
        	}
        	if(listitem == 9)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=24.3769;
			    house[houseid][pos][4]=1341.1829;
			    house[houseid][pos][5]=1084.375;
			    house[houseid][interior]=10;
			    strmid(house[houseid][description], "Maison, 5 pièces", 0, 36, 36);
        	}
        	if(listitem == 10)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=2196.79;
			    house[houseid][pos][4]=-1204.35;
			    house[houseid][pos][5]=1049.05;
			    house[houseid][interior]=6;
			    strmid(house[houseid][description], "Maison, 5 pièces", 0, 36, 36);
        	}
        	if(listitem == 11)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=295.1391;
			    house[houseid][pos][4]=1473.3719;
			    house[houseid][pos][5]=1080.2578;
			    house[houseid][interior]=15;
			    strmid(house[houseid][description], "Maison, 5 pièces", 0, 36, 36);
        	}
        	if(listitem == 12)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=2319.1272;
			    house[houseid][pos][4]=-1023.9562;
			    house[houseid][pos][5]=1050.2109;
			    house[houseid][interior]=9;
			    strmid(house[houseid][description], "Maison, 6 pièces", 0, 36, 36);
        	}
        	if(listitem == 13)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=446.626;
			    house[houseid][pos][4]=1397.738;
			    house[houseid][pos][5]=1084.3047;
			    house[houseid][interior]=2;
			    strmid(house[houseid][description], "Maison, 6 pièces", 0, 36, 36);
        	}
        	if(listitem == 14)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=82.95;
			    house[houseid][pos][4]=1322.44;
			    house[houseid][pos][5]=1083.89;
			    house[houseid][interior]=9;
			    strmid(house[houseid][description], "Maison, 7 pièces", 0, 36, 36);
        	}
        	if(listitem == 15)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=2323.7063;
			    house[houseid][pos][4]=-1147.6509;
			    house[houseid][pos][5]=1050.7101;
			    house[houseid][interior]=12;
			    strmid(house[houseid][description], "Maison de luxe, 5 pièces", 0, 36, 36);
        	}
        	if(listitem == 16)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=234.045990;
			    house[houseid][pos][4]=1064.879883;
			    house[houseid][pos][5]=1084.309937;
			    house[houseid][interior]=6;
			    strmid(house[houseid][description], "Maison de luxe, 8 pièces", 0, 36, 36);
        	}
        	if(listitem == 17)
        	{
        	    new houseid = player_Variable[playerid];
        	    house[houseid][pos][3]=140.18;
			    house[houseid][pos][4]=1366.58;
			    house[houseid][pos][5]=1083.97;
			    house[houseid][interior]=5;
			    strmid(house[houseid][description], "Maison de luxe, 9 pièces", 0, 36, 36);
        	}
        	msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Intérieur de la maison changé.");
			house_AdminEdit(playerid);
			house_Save(player_Variable[playerid]);
		}
		else if(player_Dialog[playerid] == 3)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 400000)
		    	{return ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"» Admin « Editer une maison - Prix","Erreur dans le prix.\nEntrez le nouveau prix de la maison :","Valider","Retour");}
		    
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le prix de la maison à $%d",strval(inputtext));
		    msg_Client(playerid,COLOR_WHITE,string);
		    house[player_Variable[playerid]][price]=strval(inputtext);
		    house_AdminEdit(playerid);
		    house_UpdateInfos(player_Variable[playerid]);
			house_Save(player_Variable[playerid]);
		}
		else if(player_Dialog[playerid] == 4)
		{
		    new houseid = player_Variable[playerid];
		    if(listitem==0)
		    {
		        strmid(house[houseid][owner], NO_ONE, 0, 36, 36);
		        house[houseid][owned]=0;
		        house[houseid][talking]=0;
		        house[houseid][insurance]=0;
		        house[houseid][rentPrice]=0;
		        house[houseid][rentState]=0;
		        house[houseid][rentNb]=0;
		        house[houseid][rentMax]=0;
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} La maison est maintenant à vendre.");
		    }
		    if(listitem==1)
		    {
		    }
		    if(listitem==2)
		    {
		        strmid(house[houseid][owner], NO_ONE, 0, 36, 36);
		        house[houseid][owned]=0;
		    }
		    if(listitem==3)
		    	{house[houseid][owned]=1;}
		    	
		    house_AdminEdit(playerid);
		    house_UpdateInfos(houseid);
			house_Save(player_Variable[playerid]);
		}
        return 1;
    }
    if(dialogid == 107)
    {
        if(!response) return 1;
        player_Variable[playerid] = strval(inputtext);
        player_Dialog[playerid] = 0;
        ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
        return 1;
	}
	if(dialogid == 108)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0) {player_Variable[playerid] = -1; return 1;}
			else
			{
				player_Dialog[playerid]=0;
				ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
				return 1;
			}
		}
		if(player_Dialog[playerid] == 0)
		{
		    if(!response)
				{return 1;}
				
		    if(listitem == 0)
        	{
        	    new bizid = player_Variable[playerid];
			    new typeowned[64],porte[16],Date[32];
			    
			    if(bizz[bizid][owned] == 0)
					{format(typeowned,sizeof(typeowned),"A vendre");}
			    else if(bizz[bizid][owned] == 1)
				{
					format(sql, sizeof(sql), "SELECT * FROM lvrp_users WHERE Name = '%s' LIMIT 1",bizz[bizid][owner]);
		  			mysql_query(MYSQL,sql);
		  			new count = 0;
     				if(cache_get_row_count(count) && count > 0)
						{cache_get_value_name(0,"LastLog",Field, 32); format(Date,sizeof(Date),"%s",date(strval(Field),1));}
					format(typeowned,sizeof(typeowned),"Acheter - Dernière connexion : %s",Date);
				}
					
			    if(bizz[bizid][lock] == 0)
					{format(porte,sizeof(porte),"Ouvertes");}
			    else if(bizz[bizid][lock] == 1)
					{format(porte,sizeof(porte),"Fermées");}
					
			    format(string,sizeof(string),"%s\n\n[Propriétaire] Proprio : %s  -  Owned : %s\n\n[Général] Portes : %s  -  Prix d'entré : $%d\n\n[Produits] %d/%d \n\n[Argent] En caisse : $%d",bizz[bizid][description],bizz[bizid][owner],typeowned,porte,bizz[bizid][enterCost],bizz[bizid][products],bizz[bizid][prodMax],bizz[bizid][fund]);
			    ShowPlayerDialog(playerid,108,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Biz «{FFFFFF} Edit - Infos",string,"Valider","Quitter");
			    player_Variable[playerid] = -1;
        	}
        	if(listitem == 1)
        	{
        	    new bizid = player_Variable[playerid];
			    new Float:x,Float:y,Float:z;
			    GetPlayerPos(playerid,x,y,z);
			    bizz[bizid][pos][0] = x;
			    bizz[bizid][pos][1] = y;
			    bizz[bizid][pos][2] = z;
			    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Nouvelles positions du biz sauvegardées.");
			    bizz_Save(bizid);
			    bizz_UpdateInfos(bizid);
			    player_Dialog[playerid]=0;
				ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
			}
			if(listitem == 2)
        	{
        	    player_Dialog[playerid] = 1;
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Nom","Entrez le nouveau nom du biz :","Valider","Retour");
        	}
        	if(listitem == 3)
        	{
        	    player_Dialog[playerid] = 2;
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Prix d'entrée","Entrez le nouveau prix d'entrée du biz :","Valider","Retour");
        	}
        	if(listitem == 4)
        	{
        	    player_Dialog[playerid] = 3;
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Propriétaire","[Owned 0] A vendre\n[Owned 1] Joueur\nA l'état","Valider","Retour");
        	}
        	if(listitem == 5)
        	{
        	    new bizid = player_Variable[playerid];
        	    if(bizz[bizid][typeZ] == 1) // 24/7
        	    {
        	        format(string, sizeof(string), "1. Téléphone ($%d)\n2. Malette ($%d)\n3. Annuaire($%d)\n4. Dé ($%d)\n5. Préservatif ($%d)\n6. Cagoule (lvl 5 min) ($%d)\n7. Corde ($%d)\n8. Bombe Lacrimo ($%d)\n9. Briquet ($%d)\n10. BoomBox ($%d)\n11. Talkie Walkie ($%d)\n12. Bouquet de Fleurs ($%d)\n13. Batte ($%d)\n14. Pied de biche ($%d)\n15. Appareil Photo ($%d)\n16. Ballon de basket ($%d)\n17. Pelle ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],
					bizz[bizid][itemCost][9],bizz[bizid][itemCost][10],bizz[bizid][itemCost][11],bizz[bizid][itemCost][12],bizz[bizid][itemCost][13],bizz[bizid][itemCost][14],bizz[bizid][itemCost][15],bizz[bizid][itemCost][16],bizz[bizid][itemCost][17]);
					ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Retour");
        	    }
        	    else if(bizz[bizid][typeZ] == 2) // Binco
        	    {
        	        format(string, sizeof(string), "Vétement ($%d)\nPaire de lunette ($%d)\nBandana ($%d)\nCasque de moto ($%d)\nCasquette ($%d)\nChâpeau ($%d)\nBerêt ($%d)\nCasque Stereo ($%d)\nMontre (%d)\nSac Coyote ($%d) [2 Armes - 35 Emp.]\nSac Alice Pack ($%d) [4 Armes - 45 Emp.]\nSac Czech Backpack (Vip Diamant) ($%d) [6 Armes - 55 Emp.]",
        	        bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9],bizz[bizid][itemCost][10],bizz[bizid][itemCost][11]);
        	        ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Retour");
        	    }
        	    else if(bizz[bizid][typeZ] == 3) // Tabac
        	    {
        	        format(string, sizeof(string), "Tabac ($%d)\nFeuilles ($%d)\nCigarettes ($%d)\nBriquet ($%d)\nTicket de lotto ($%d)",
        	        bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4]);
        	        ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Retour");
				}
				else if(bizz[bizid][typeZ] == 4) // Epicerie
        	    {
        	        format(string, sizeof(string), "1. Eau (x6) ($%d)\n2. Soda (x6) ($%d)\n3. Jus de fuit (x3) ($%d)\n4. Bière (x6) ($%d)\n5. Lait (x6) ($%d)\n6. Burger (x2) ($%d)\n7. Pizza (x3) ($%d)\n8. Sandwich (x2) ($%d)\n9. Chips (x1) ($%d)\n10. Céréales (x1) ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9]);
					ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Retour");
        	    }
        	    else if(bizz[bizid][typeZ] == 5) // Donuts
        	    {
        	        format(string, sizeof(string), "Donut ($%d)\nCreame glacé ($%d)\nViennoiserie ($%d)\nSoda ($%d)\nCocktail ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
        	    }
        	    else if(bizz[bizid][typeZ] == 6) // Pizza Stack
        	    {
        	        format(string, sizeof(string), "Mini pizza ($%d)\nPizza ($%d)\nPizza 4 fromages ($%d)\nPizza 4 saisons ($%d)\nPizza nature ($%d)\nPizza du jour ($%d)\nSoda ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
				}
				else if(bizz[bizid][typeZ] == 7) // Burger Shot
        	    {
        	        format(string, sizeof(string), "Hamburger ($%d)\nDouble hamburger ($%d)\nCheeseBurger ($%d)\nPetite frites ($%d)\nMoyen frites ($%d)\nGrande frites ($%d)\nSoda (%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
        	    }
        	    else if(bizz[bizid][typeZ] == 8) // Clukin'bell
        	    {
        	        format(string, sizeof(string), "Petite portion nuggets ($%d)\nMoyen portion de nuggets ($%d)\nGrande portion de nuggets ($%d)\nPetite frites ($%d)\nMoyen frites ($%d)\nGrande frites ($%d)\nSoda ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
        	    }
        	    else if(bizz[bizid][typeZ] == 9) // Disquaire
        	    {
        	        format(string, sizeof(string), "MP3 ($%d)\nAlbum 1 David Guetta ($%d)\nAlbum 2 Sexion d'assault ($%d)\nBoomBox ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
				}
				else if(bizz[bizid][typeZ] == 10) // Ammunation
        	    {
        	        format(string, sizeof(string), "1. Colt 45 ($%d)\n2. Silencieux ($%d)\n3. Rifle ($%d)\n4. Poing américain ($%d)\n5. Gilet par balles ($%d)\n6. Laser rouge ($%d)\n7. Laser bleu ($%d)\n8. Laser rose ($%d)\n9. Laser orange ($%d)\n10. Laser vert ($%d)\n11. Laser jaune ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9],bizz[bizid][itemCost][10]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
				}
				else if(bizz[bizid][typeZ] == 11) // Sexe Shop
        	    {
                    format(string, sizeof(string), "God Mauve ($%d)\nGod Blanc ($%d)\nLong God Blanc ($%d)\nGod Blanc #2 ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3]);
			   	 	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
				}
				else if(bizz[bizid][typeZ] == 12 || bizz[bizid][typeZ] == 13) // Bar
        	    {
        	        format(string, sizeof(string), "Eau ($%d)\nCafé ($%d)\nDiabolo ($%d)\nBiere ($%d)\nChampagne ($%d)\nWisky ($%d)\nVodka ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
        	    }
				else if(bizz[bizid][typeZ] == 14) // Gym
        	    {
        	        format(string, sizeof(string), "Elbow ($%d)\nBoxing ($%d)\nGrabkick ($%d)\nKneehead ($%d)\nKungfu ($%d)\nNormal (Gratuit)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5]);
			    	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
				}
				else if(bizz[bizid][typeZ] == 20) // Restaut
        	    {
        	        format(string, sizeof(string), "1. Assiette de pâtes ($%d)\n2. Steck Frites ($%d)\n3. Poulet Frites ($%d)\n4. Poisson riz ($%d)\n5. Vin ($%d)\n6. Soda ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5]);
					ShowPlayerDialog(playerid, 108, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix des articles",string,"Selectionner","Annuler");
				}
				player_Dialog[playerid] = 5;
        	}
        	if(listitem == 6)
        	{
        	    new bizid = player_Variable[playerid];
        	    if(bizz[bizid][lock] == 0)
        	    {
        	        bizz[bizid][lock] = 1;
        	        bizz_Save(bizid);
        	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous avez fermé les portes.");
        	        player_Dialog[playerid]=0;
					ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
        	    }
        	    else if(bizz[bizid][lock] == 1)
        	    {
        	        bizz[bizid][lock] = 0;
        	        bizz_Save(bizid);
        	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous avez ouvert les portes.");
        	        player_Dialog[playerid]=0;
					ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
        	    }
        	}
        	if(listitem == 7)
        	{
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Regler l'argent de la caisse","Deffinissez le montant dans la caisse du biz :","Valider","Retour");
        	    player_Dialog[playerid] = 6;
        	}
            if(listitem == 8)
        	{
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Regler le nombre de produits","Deffinissez le montant de produits dans le biz :","Valider","Retour");
        	    player_Dialog[playerid] = 22;
        	}
		}
		else if(player_Dialog[playerid] == 1)
		{
            if(!strlen(inputtext) || strlen(inputtext)>32 || strlen(inputtext)<0)
		    	{return ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Nom","Entrez le nouveau nom du biz :","Valider","Retour");}
		    	
		    new bizid = player_Variable[playerid];
		    strmid(bizz[bizid][description], inputtext, 0, strlen(inputtext), 255);
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le nom du biz en : %s",inputtext);
		    msg_Client(playerid,COLOR_WHITE,string);
		    bizz_Save(bizid);
		    bizz_UpdateInfos(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 2)
		{
		    new prix = strval(inputtext);
		    if(!strlen(inputtext) || prix < 0 || prix > 1000)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Le prix d'entée est comprit en $0 et $1000.");
		        ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Prix d'entrée","Entrez le nouveau prix d'entrée du biz :","Valider","Retour");
		        return 1;
		    }
		    new bizid = player_Variable[playerid];
		    bizz[bizid][enterCost] = prix;
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez changé le prix d'entrée du biz à : $%d",prix);
		    msg_Client(playerid,COLOR_WHITE,string);
		    bizz_Save(bizid);
		    bizz_UpdateInfos(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 3)
		{
		    if(!response)
				{return 1;}
				
		    if(listitem == 0)
        	{
        	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Le biz est maintenant à vendre.");
                new bizid = player_Variable[playerid];
        	    bizz_Reset(bizid);
        	    player_Dialog[playerid]=0;
				ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
        	}
        	if(listitem == 1)
        	{
        	    player_Dialog[playerid] = 4;
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Propriétaire","Entrez l'Id du joueur CONNECTER à qui appartiendra le biz :","Valider","Retour");
        	}
        	if(listitem == 2)
        	{
        	    new bizid = player_Variable[playerid];
        	    if(bizz[bizid][owned]==1)
			    {
	     			for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
		        	{
	           			if(PlayerInfo[i][pBizkey1] == bizid) { PlayerInfo[i][pBizkey1] = -1;}
						else if(PlayerInfo[i][pBizkey2] == bizid) { PlayerInfo[i][pBizkey2] = -1; }
						else if(PlayerInfo[i][pBizkey3] == bizid) { PlayerInfo[i][pBizkey3] = -1;}
	           		}
	    		}
        	    format(bizz[bizid][owner], 32 ,"L'état");
        	    format(string, sizeof(string),"{FF2727}» Admin «{FFABAD} Le biz appartient maintenant à l'état.");
				msg_Client(playerid,COLOR_WHITE,string);
				bizz[bizid][owned]=1;
				bizz[bizid][lock]=0;
				bizz[bizid][products]=4000;
				bizz_Save(bizid);
				bizz_UpdateInfos(bizid);
				player_Dialog[playerid]=0;
				ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
        	}
		}
		else if(player_Dialog[playerid] == 4)
		{
		    new pl = ReturnUser(inputtext);
		    new bizid = player_Variable[playerid];
            GetPlayerName(pl, sendername, sizeof(sendername));
            if(!IsPlayerConnected(pl)){msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté."); return 1;}
            if(PlayerInfo[pl][pBizkey1] == -1) { PlayerInfo[pl][pBizkey1] = bizid; }
			else if(PlayerInfo[pl][pBizkey2] == -1) { PlayerInfo[pl][pBizkey2] = bizid; }
			else if(PlayerInfo[pl][pBizkey3] == -1) { PlayerInfo[pl][pBizkey3] = bizid; }
			else { msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce joueur à déjà 3 biz."); return 1; }
            if(bizz[bizid][owned]==1)
		    {
     			for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	        	{
           			if(PlayerInfo[i][pBizkey1] == bizid) { PlayerInfo[i][pBizkey1] = -1;}
					else if(PlayerInfo[i][pBizkey2] == bizid) { PlayerInfo[i][pBizkey2] = -1; }
					else if(PlayerInfo[i][pBizkey3] == bizid) { PlayerInfo[i][pBizkey3] = -1;}
           		}
    		}
			format(bizz[bizid][owner], 32 ,"%s",sendername);
			bizz[bizid][owned] = 1;
			bizz_Save(bizid);
			bizz_UpdateInfos(bizid);
			format(string, sizeof(string),"{FF2727}» Admin «{FFABAD} Le biz appartient maintenant à %s", sendername);
			msg_Client(playerid,COLOR_WHITE,string);
			player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
			OnPlayerUpdateSQL(playerid);
		}
		else if(player_Dialog[playerid] == 5)
		{
		    if(!response)
		    	{return 1;}
		    
		    if(listitem >= 0)
		    {
		        new bizid = player_Variable[playerid];
		        format(string, sizeof(string), "Merci de bien vouloir entrer le prix de l'article (Ancien prix : $%d) :", bizz[bizid][itemCost][listitem]);
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix de l'article",string,"Valider","Retour");
        	    player_Dialog[playerid] = 7;
        	    bizz_GestionArticle[playerid]=listitem;
        	    return 1;
		    }
		}
		else if(player_Dialog[playerid] == 6)
		{
		    if(!strlen(inputtext))
		    {
		        ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Regler l'argent de la caisse","Deffinissez le montant dans la caisse du biz :","Valider","Retour");
				return 1;
		    }
		    new bizid = player_Variable[playerid];
		    bizz[bizid][fund] = strval(inputtext);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Le regler l'argent de la caisse à $%d.", strval(inputtext));
            msg_Client(playerid, COLOR_BIZ, string);
		    bizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 7)
		{
		    new bizid = player_Variable[playerid];
		    if(!strlen(inputtext) || strlen(inputtext) > 5000 || strlen(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Le prix doit être compris entre $1 et $5000\nMerci de bien vouloir entrer le prix de l'article (Ancien prix : $%d) :", bizz[bizid][itemCost][bizz_GestionArticle[playerid]]);
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix de l'article",string,"Valider","Retour");
				return 1;
		    }
		    new prix = strval(inputtext);
		    bizz[bizid][itemCost][bizz_GestionArticle[playerid]] = prix;
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Le prix de l'article est désormais $%d.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    bizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 22)
		{
		    new bizid = player_Variable[playerid];
		    if(!strlen(inputtext))
		    {
		        ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Regler le nombre de produits","Deffinissez le montant de produits dans le biz :","Valider","Retour");
				return 1;
		    }
		    new prix = strval(inputtext);
		    bizz[bizid][products] = prix;
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez régler les produirs à %d", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    bizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 21)
		{
		    new bizid = player_Variable[playerid];
		    if(!strlen(inputtext) || strlen(inputtext) > 5000 || strlen(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Le prix doit être compris entre $1 et $5000\nMerci de bien vouloir entrer le prix de l'article (Ancien prix : $%d) :", bizz[bizid][itemCost][14]);
        	    ShowPlayerDialog(playerid,108,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Edit - Changer le prix de l'article",string,"Valider","Retour");
				return 1;
		    }
		    new prix = strval(inputtext);
		    bizz[bizid][itemCost][14] = prix;
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Le prix de l'article est désormais $%d.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    bizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,108,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Edit","Infos sur le biz\nSauvegarder le nouvelle position\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le propriétaire\nChanger le prix des articles\nOuvrir - Fermer la porte\nRegler l'argent de la caisse\nRegler le nombre de produits","Valider","Quitter");
		}
        return 1;
	}
    if(dialogid == 96)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0) {return 1;}
			else
			{
				player_Dialog[playerid]=0;
				ShowPlayerDialog(playerid,96,DIALOG_STYLE_MSGBOX,"» Admin « Création d'un bizz","Vous êtes sur le point de creer un bizz, l'entrée du bizz se situra à votre position actuelle.\nVous pourrez toujours le supprimer ou modifier apres (/bizz sup(rimer) - /bizz edit)","Continuer","Annuler");
				return 1;
			}
		}
		if(player_Dialog[playerid] == 0)
		{
        	player_Dialog[playerid] = 2;
        	ShowPlayerDialog(playerid,96,DIALOG_STYLE_INPUT,"» Admin « Prix d'achat du bizz","Entrez le prix d'achat du bizz :","Continuer","Retour");
		}
		else if(player_Dialog[playerid] == 2)
		{
		    if(!strlen(inputtext) || strval(inputtext)>10000000 || strval(inputtext)<1)
		    {
		        msg_Client(playerid, COLOR_WHITE, "» Admin « Le prix doit être entre 1 et 10000000.");
				return ShowPlayerDialog(playerid,96,DIALOG_STYLE_INPUT,"» Admin « Prix d'achat du bizz","Entrez le prix d'achat du bizz, svp :","Continuer","Retour");
		    }
		    new ID=-1,Float:X,Float:Y,Float:Z;
		    GetPlayerPos(playerid, X, Y, Z);
		    for(new bi = 0; bi < totalBizz; bi++)
			{
				if(bizz[bi][used] == 0)
					{ID = bi;break;}
			}
			if(ID==-1)
			{
			    format(sql, sizeof(sql), "SELECT * FROM lvrp_server_bizz");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID>MAX_BIZZ)
					{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de bizz atteint."); return 1;}
                format(sql, sizeof(sql), "INSERT INTO lvrp_server_bizz SET id=%d, Created=1, Varia=0, Pos_x=%f, Pos_y=%f, Pos_z=%f, Message='A Vendre', Price=%d, Type=0, Interior=0, WV=%d",ID+1, X, Y, Z, strval(inputtext), ID-1);
				mysql_pquery(MYSQL,sql);
                totalBizz++;
				bizz_UpdateInfos(ID);
			}
			bizz[ID][owned] = 0;
			bizz[ID][pos][0] = X;
			bizz[ID][pos][1] = Y;
			bizz[ID][pos][2] = Z;
			bizz[ID][pos][3] = 0;
			bizz[ID][pos][4] = 0;
			bizz[ID][pos][5] = 0;
			strmid(bizz[ID][owner], NO_ONE, 0, strlen(NO_ONE), 32);
			strmid(bizz[ID][description], "A Vendre", 0, strlen("A Vendre"), 64);
			bizz[ID][fund] = 0;
			bizz[ID][enterCost] = 0;
			bizz[ID][price] = strval(inputtext);
			bizz[ID][prodCost] = 2;
			bizz[ID][lock] = 1;
			bizz[ID][variable] = 0;
			bizz[ID][typeZ] = 0;
			bizz[ID][interior] = 0;
			bizz[ID][products] = 0;
			bizz[ID][prodMax] = 2000;
			bizz[ID][world] = ID;
			bizz[ID][used] = 1;
			bizz_Save(ID);
			bizz_UpdateInfos(ID);
			player_Dialog[playerid] = 0;
			format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Bizz id %d créé.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
			return 1;
		}
    }
    if(dialogid == 115)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0) return 1;
			else
			{
				player_Dialog[playerid]=0;
				ShowPlayerDialog(playerid,115,DIALOG_STYLE_MSGBOX,"» Admin « Création d'une maison","Vous êtes sur le point de creer une maison, l'entrée de la maison se situra à votre position actuelle.\nVous pourrez toujours le supprimer ou modifier apres (/maison sup(rimer) - /maison edit)","Continuer","Quitter");
				return 1;
			}
		}
		if(player_Dialog[playerid] == 0)
		{
		    new bigString[2048];
		    new inte,Float:x1,Float:y1,Float:z1,Float:a1;
		    for(new i=1; i<=29; i++)
		    {
		        new tmpDescr[64],tmpString[64];
		        house_GetCreateInfos(i, inte, x1, y1, z1, a1, tmpDescr);
				format(tmpString,sizeof(tmpString),"%s\n",tmpDescr);
				strins(bigString,tmpString,strlen(bigString),sizeof(bigString));
		    }
	    	ShowPlayerDialog(playerid,115,DIALOG_STYLE_LIST,"» Admin « Type de maison",bigString,"Valider","Retour");
			player_Dialog[playerid]=1;
		}
		else if(player_Dialog[playerid] == 1)
		{
		    if(!response)
				{return 1;}
        	SetPVarInt(playerid,"House_type",listitem+1);
        	ShowPlayerDialog(playerid,115,DIALOG_STYLE_INPUT,"» Admin « Prix d'achat de la maison","Entrez le prix d'achat de la maison, svp :","Continuer","Retour");
        	player_Dialog[playerid]=2;
		}
		else if(player_Dialog[playerid] == 2)
		{
		    if(!strlen(inputtext) || strval(inputtext)>10000000 || strval(inputtext)<1)
		    {
		        msg_Client(playerid, COLOR_WHITE, "» Admin « Le prix doit être entre 1 et 10000000.");
				return ShowPlayerDialog(playerid,115,DIALOG_STYLE_INPUT,"» Admin « Prix d'achat de la maison","Entrez le prix d'achat de la maison, svp :","Continuer","Retour");
		    }
		    new ID=-1;
		    new type = GetPVarInt(playerid, "House_type");
		    new desc[64],inte,Float:x1,Float:y1,Float:z1,Float:a1;
	        house_GetCreateInfos(type, inte, x1, y1, z1, a1, desc);
		    new Float:X,Float:Y,Float:Z;
		    GetPlayerPos(playerid, X, Y, Z);
		    for(new ma = 0; ma < totalHouses; ma++)
			{
				if(house[ma][used] == 0)
					{ID = ma;break;}
			}
			if(ID==-1)
			{
			    format(sql, sizeof(sql), "SELECT * FROM lvrp_server_houses");
				mysql_query(MYSQL,sql);
				cache_get_row_count(ID);
				if(ID>MAX_HOUSE)
					{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Maximum de maisons atteint."); return 1;}

				format(sql, sizeof(sql), "INSERT INTO lvrp_server_houses SET id=%d, Created=1, Pos_x=%f, Pos_y=%f, Pos_z=%f, Exit_x=%f, Exit_y=%f, Exit_z=%f, Message='%s', Price=%d, Interior=%d, WV=%d",ID+1, X, Y, Z, x1, y1, z1, desc, strval(inputtext), inte, ID-1);
				mysql_pquery(MYSQL,sql);
                totalHouses++;
			}
			house[ID][pos][0] = X;
			house[ID][pos][1] = Y;
			house[ID][pos][2] = Z;
			house[ID][pos][3] = x1;
			house[ID][pos][4] = y1;
			house[ID][pos][5] = z1;
			strmid(house[ID][owner], "Personne", 0, strlen("Personne"), 32);
			house[ID][owned] = 0;
			strmid(house[ID][description], desc, 0, strlen(desc), 64);
			house[ID][price] = strval(inputtext);
			house[ID][rentPrice] = 0;
			house[ID][rentState] = 0;
			house[ID][rentNb] = 0;
			house[ID][rentMax] = 0;
			house[ID][lock] = 0;
			house[ID][interior] = inte;
			house[ID][world] = ID;
			house[ID][used] = 1;
			house_UpdateInfos(ID);
			house_Save(ID);
		    player_Dialog[playerid] = 0;
		    format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Maison id %d créée.",ID);
			msg_Client(playerid,COLOR_WHITE,string);
		    return 1;
		}
		return 1;
    }
    if(dialogid == 122)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0) return 1;
			else
			{
				player_Dialog[playerid]=0;
				ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
				return 1;
			}
		}
		if(player_Dialog[playerid] == 0)
		{
		    if(listitem == 0)
        	{
        	    new porte[32];
        	    new bizid = gPlayerInSBizz[playerid]-1000;
        	    if(sbizz[bizid][ubLock] == 0) {format(porte,sizeof porte,"Ouvertes");}
        	    else if(sbizz[bizid][ubLock] == 1) {format(porte,sizeof porte,"Fermées");}
        	    else{ format(porte,sizeof porte,"Indefini");}

        	    format(string,sizeof string,"[Statut] Porte : %s\n[Prix] Prix du biz : $%d  -  Prix d'entrée : $%d\n[Produit] Max de produits : %d  -  Produits restant : %d  -  Recapitulatif : %d/%d",porte,sbizz[bizid][ubPrix],sbizz[bizid][ubEnterPrice],sbizz[bizid][ubMaxProduits],sbizz[bizid][ubProduits],sbizz[bizid][ubProduits],sbizz[bizid][ubMaxProduits]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Biz «{FFFFFF} Infos",string,"Valider","");
        	    player_Dialog[playerid]=1;
        	}
		    if(listitem == 1)
        	{
        	    player_Dialog[playerid]=2;
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le nom","Merci de bien vouloir entrer le nouveau nom de votre biz :","Valider","Retour");
			}
			if(listitem == 2)
        	{
        		player_Dialog[playerid]=3;
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix d'entrée","Merci de bien vouloir entrer le nouveau prix d'entrée de votre biz :","Valider","Retour");
			}
			if(listitem == 3)
        	{
        	    new bizid = gPlayerInSBizz[playerid]-1000;
        	    if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING) // orange
        	    {
	        	    new BizString[512];
	        	    format(BizString, sizeof(BizString), "1. Forfait: sms $5 + appel 15mn ($%d)\n2. Forfait: sms $2 + appel 20mn ($%d)\n3. Forfait sms $1 + appel 30mn ($%d)\n4. Forfait: sms illimité + appel 1h ($%d)",
					sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
				    ShowPlayerDialog(playerid, 122, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Changer le prix des forfaits",BizString,"Selectionner","Annuler");
				    player_Dialog[playerid]=4;
			    }
			    if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+1) // Bouygue
        	    {
	        	    new BizString[512];
	        	    format(BizString, sizeof(BizString), "1. Forfait: sms $4 + appel 10mn ($%d)\n2. Forfait: sms $3 + appel 25mn ($%d)\n3. Forfait sms $1 + 25mn ($%d)\n4. Forfait: sms illimité + appel 1h30mn ($%d)",
					sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
				    ShowPlayerDialog(playerid, 122, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Changer le prix des forfaits",BizString,"Selectionner","Annuler");
				    player_Dialog[playerid]=4;
			    }
			    if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+2) // SFR
        	    {
	        	    new BizString[512];
	        	    format(BizString, sizeof(BizString), "1. Forfait: sms $3 + 7mn ($%d)\n2. Forfait: sms $3 + appel 22mn ($%d)\n3. Forfait 52 $1 + appel 28mn ($%d)\n4. Forfait: sms illimité + appel 2h30mn ($%d)",
					sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
				    ShowPlayerDialog(playerid, 122, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Changer le prix des forfaits",BizString,"Selectionner","Annuler");
				    player_Dialog[playerid]=4;
			    }
			    if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+3) // Free
        	    {
	        	    new BizString[512];
	        	    format(BizString, sizeof(BizString), "1. Forfait: sms illimité + 20mn ($%d)\n2. Forfait: sms illimité + appel illimité ($%d)",
					sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1]);
				    ShowPlayerDialog(playerid, 122, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Changer le prix des forfaits",BizString,"Selectionner","Annuler");
				    player_Dialog[playerid]=4;
			    }
        	}
        	if(listitem == 4)
        	{
        	    new bizid = gPlayerInSBizz[playerid]-1000;
			    if(sbizz[bizid][ubLock] == 1)
				{
					msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous avez ouvert la porte de votre biz.");
				    sbizz[bizid][ubLock] = 0;
			    }
			    else if(sbizz[bizid][ubLock] == 0)
				{
					msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous avez fermé la porte de votre biz.");
				    sbizz[bizid][ubLock] = 1;
			    }
			    uniquebizz_Save(bizid);
        	}
        	if(listitem == 5)
        	{
        	    player_Dialog[playerid]=5;
        	    format(string, sizeof(string), "Entrez le montant que vous désirez déposer dans la caisse (Max:$%d) :", PlayerInfo[playerid][pCash]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Déposer de l'argent",string,"Valider","Retour");
			}
			if(listitem == 6)
        	{
        	    new bizid = gPlayerInSBizz[playerid]-1000;
        	    player_Dialog[playerid]=6;
        	    format(string, sizeof(string), "Entrez le montant que vous désirez retirer dans la caisse (Max:$%d) :", sbizz[bizid][ubCaisse]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Retirer de l'argent",string,"Valider","Retour");
			}
			if(listitem == 7)
        	{
        	    new bizid = gPlayerInSBizz[playerid]-1000;
        	    player_Dialog[playerid]=7;
        	    new totoprods = sbizz[bizid][ubMaxProduits]-sbizz[bizid][ubProduits];
        	    format(string, sizeof(string), "Entrez le nombre de produits que vous souhaitez acheter (Max:%d)\nPrix d'un produits :$%d :", totoprods,sbizz[bizid][ubPrix_Prod]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Acheter des produits",string,"Valider","Retour");
        	}
		}
		else if(player_Dialog[playerid] == 2)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>64)
		    {
		        ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le nom","Le nom que tu as entré est trop long!\nMerci de bien vouloir entrer le nouveau nom de votre biz :","Valider","Retour");
				return 1;
		    }
		    new bizid = gPlayerInSBizz[playerid]-1000;
		    strmid(sbizz[bizid][ubMessage], inputtext, 0, strlen(inputtext), 255);
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez changé le nom de votre biz en : %s.", inputtext);
            msg_Client(playerid, COLOR_BIZ, string);
            uniquebizz_UpdateInfos(bizid);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 3)
		{
		    if(!strlen(inputtext) || strval(inputtext)>1000 || strval(inputtext)<1)
		    {
		        msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Biz «{FFFFFF} Le prix doit être entre $1 et $1000.");
				return ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix d'entrée","Merci de bien vouloir entrer le nouveau prix d'entrée de votre biz :","Valider","Retour");
		    }
		    new bizid = gPlayerInSBizz[playerid]-1000;
		    new prix = strval(inputtext);
		    sbizz[bizid][ubEnterPrice] = prix;
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez changé le prix d'entrée de votre à $%d.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
            uniquebizz_UpdateInfos(bizid);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 4)
		{
		    if(!response)
		    	{return 1;}
		    	
		    if(listitem == 0)
		    {
		        new bizid = gPlayerInSBizz[playerid]-1000;
		        format(string, sizeof(string), "Merci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][0]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
        	    player_Dialog[playerid] = 8;
		    }
		    if(listitem == 1)
		    {
		        new bizid = gPlayerInSBizz[playerid]-1000;
		        format(string, sizeof(string), "Merci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][1]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
        	    player_Dialog[playerid] = 9;
		    }
		    if(listitem == 2)
		    {
		        new bizid = gPlayerInSBizz[playerid]-1000;
		        format(string, sizeof(string), "Merci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][2]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
        	    player_Dialog[playerid] = 10;
		    }
		    if(listitem == 3)
		    {
		        new bizid = gPlayerInSBizz[playerid]-1000;
		        format(string, sizeof(string), "Merci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][3]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
        	    player_Dialog[playerid] = 11;
		    }
		}
		else if(player_Dialog[playerid] == 5)
		{
		    if(!strlen(inputtext))
		    {
		        format(string, sizeof(string), "Erreur dans le montant\nEntrez le montant que vous désirez déposer dans la caisse (Max:$%d) :", PlayerInfo[playerid][pCash]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Déposer de l'argent",string,"Valider","Retour");
				return 1;
		    }
		    if(strval(inputtext) > PlayerInfo[playerid][pCash])
		    {
		        format(string, sizeof(string), "Erreur dans le montant\nEntrez le montant que vous désirez déposer dans la caisse (Max:$%d) :", PlayerInfo[playerid][pCash]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Déposer de l'argent",string,"Valider","Retour");
				return 1;
		    }
		    new bizid = gPlayerInSBizz[playerid]-1000;
		    new prix = strval(inputtext);
		    sbizz[bizid][ubCaisse] = sbizz[bizid][ubCaisse]+prix;
		    SafeGivePlayerMoney(playerid, -prix, "Dépot argent dans la caisse du biz");
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez déposé $%d dans la caisse de votre biz.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 6)
		{
		    new bizid = gPlayerInSBizz[playerid]-1000;
		    if(!strlen(inputtext))
		    {
		        format(string, sizeof(string), "Erreur dans le montant\nEntrez le montant que vous désirez retirer dans la caisse (Max:$%d) :", sbizz[bizid][ubCaisse]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Retirer de l'argent",string,"Valider","Retour");
				return 1;
		    }
		    if(strval(inputtext) > sbizz[bizid][ubCaisse])
		    {
          		format(string, sizeof(string), "Erreur dans le montant\nEntrez le montant que vous désirez retirer dans la caisse (Max:$%d) :", sbizz[bizid][ubCaisse]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Retirer de l'argent",string,"Valider","Retour");
				return 1;
		    }
		    new prix = strval(inputtext);
		    sbizz[bizid][ubCaisse] = sbizz[bizid][ubCaisse]-prix;
		    SafeGivePlayerMoney(playerid, prix,"Retire argent de la caisse de son biz");
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez retiré $%d dans la caisse de votre biz.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 7)
		{
		    new bizid = gPlayerInSBizz[playerid]-1000;
		    new totoprods = sbizz[bizid][ubMaxProduits]-sbizz[bizid][ubProduits];
		    if(!strlen(inputtext) || strval(inputtext) > totoprods || strval(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Erreur dans le montant.\nEntrez le nombre de produits que vous souhaitez acheter (Max:%d)\nPrix d'un produits :$%d :", totoprods,sbizz[bizid][ubPrix_Prod]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Acheter des produits",string,"Valider","Retour");
				return 1;
		    }
		    new prix_article = strval(inputtext)*sbizz[bizid][ubPrix_Prod];
		    if(sbizz[bizid][ubCaisse] < prix_article)
		    {
		        format(string, sizeof(string), "Vous n'avez pas assez d'argent dans votre caisse.\nEntrez le nombre de produits que vous souhaitez acheter (Max:%d)\nPrix d'un produits :$%d :", totoprods,sbizz[bizid][ubPrix_Prod]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Acheter des produits",string,"Valider","Retour");
		        return 1;
		    }
		    sbizz[bizid][ubCaisse] = sbizz[bizid][ubCaisse]-prix_article;
		    sbizz[bizid][ubProduits] = sbizz[bizid][ubProduits]+strval(inputtext);
		    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez acheté %d produits pour $%d.",strval(inputtext),prix_article);
		    msg_Client(playerid,COLOR_BIZ,string);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 8)
		{
		    new bizid = gPlayerInSBizz[playerid]-1000;
		    if(!strlen(inputtext) || strval(inputtext) > 5000 || strval(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Le prix doit être compris entre $1 et $5000\nMerci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][0]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
				return 1;
		    }
      		new prix = strval(inputtext);
		    sbizz[bizid][ubPriceArticle][0] = prix;
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Le prix du forfait est désormais $%d.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 9)
		{
		    new bizid = gPlayerInSBizz[playerid]-1000;
      		if(!strlen(inputtext) || strval(inputtext) > 5000 || strval(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Le prix doit être compris entre $1 et $5000\nMerci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][1]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
				return 1;
		    }
		    new prix = strval(inputtext);
		    sbizz[bizid][ubPriceArticle][1] = prix;
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Le prix du forfait est désormais $%d.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 10)
		{
		    new bizid = gPlayerInSBizz[playerid]-1000;
      		if(!strlen(inputtext) || strval(inputtext) > 5000 || strval(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Le prix doit être compris entre $1 et $5000\nMerci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][2]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
				return 1;
		    }
		    new prix = strval(inputtext);
		    sbizz[bizid][ubPriceArticle][2] = prix;
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Le prix du forfait  est désormais $%d.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		else if(player_Dialog[playerid] == 11)
		{
		    new bizid = gPlayerInSBizz[playerid]-1000;
      		if(!strlen(inputtext) || strval(inputtext) > 5000 || strval(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Le prix doit être compris entre $1 et $5000\nMerci de bien vouloir entrer le prix du forfait (Ancien prix : $%d) :", sbizz[bizid][ubPriceArticle][3]);
        	    ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Changer le prix du forfait",string,"Valider","Retour");
				return 1;
		    }
		    new prix = strval(inputtext);
		    sbizz[bizid][ubPriceArticle][3] = prix;
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Le prix du forfait est désormais $%d.", prix);
            msg_Client(playerid, COLOR_BIZ, string);
		    uniquebizz_Save(bizid);
		    player_Dialog[playerid]=0;
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestions","Infos sur le biz\nChanger le nom du biz\nChanger le prix d'entrée\nChanger le prix des forfaits\nOuvrir/Fermer la porte\nDéposer de l'argent dans la caisse\nRetirer de l'argent dans la caisse\nAcheter des produits","Valider","Quitter");
		}
		return 1;
	}
    if(dialogid == 103)
    {
        new bizid = player_Variable[playerid];
        if(!response)
		{
			if(player_Dialog[playerid]==0)
				{player_Variable[playerid]=-1; return 1;}
			else
				{uniquebizz_ShowDialogGestion(playerid,bizid);}
		}
		if(player_Dialog[playerid] == 0)
		{
			if(listitem==0)
			{
			    ShowPlayerDialog(playerid,103,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Biz «{FFFFFF} Gestion - Infos","Cette partie est en maintenance, allez au menu d'accueil de votre biz pour voir vos infos.","Retour","");
			    player_Dialog[playerid]=1;
			}
			if(listitem==1)
			{
			    format(string,sizeof(string),"Entrez le nouveau nom de votre biz : (Ancien: %s)",sbizz[bizid][ubMessage]);
			    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Nom",string,"Valider","Retour");
                player_Dialog[playerid]=2;
			}
			if(listitem==2)
			{
			    format(string,sizeof(string),"Entrez l'argent que vous désirez déposer en caisse : (Max: $%d)",PlayerInfo[playerid][pCash]);
			    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Déposer de l'argent",string,"Valider","Retour");
                player_Dialog[playerid]=3;
			}
			if(listitem==3)
			{
			    format(string,sizeof(string),"Entrez l'argent que vous désirez retirer en caisse : (Max: $%d)",sbizz[bizid][ubCaisse]);
			    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Retirer de l'argent",string,"Valider","Retour");
                player_Dialog[playerid]=4;
			}
			if(listitem==4)
			{
			    new totoprods = sbizz[bizid][ubMaxProduits]-sbizz[bizid][ubProduits];
    			new prixprods = totoprods*sbizz[bizid][ubPrix_Prod];
			    format(string,sizeof(string),"[Info]\nPrix du produit : $%d\nMax de produit à acheter : %d\n\n[Aide]\n%d produits pour $%d.\n\nEntrez le nombre de produits que vous désirez acheter :",sbizz[bizid][ubPrix_Prod],totoprods,prixprods);
			    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Achats de produits",string,"Valider","Retour");
                player_Dialog[playerid]=5;
			}
			if(listitem==5)
			{
			    if(sbizz[bizid][ubHasInt]==1)
			    {
			        if(bizid>=0 && bizid<MAX_STATION)
			        {
			            format(string,sizeof(string),"GPS ($%d)\nJerrican ($%d)\nRadio Fm ($%d)",sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
			            ShowPlayerDialog(playerid,103,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Articles",string,"Valider","Retour");
			            player_Dialog[playerid]=6;
			        }
			    }
			    else
				{
					uniquebizz_ShowDialogGestion(playerid,bizid);
					msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Ce biz ne dispose pas de cette fonction.");
				}
			}
			if(listitem==6)
			{
			    if(sbizz[bizid][ubHasInt]==1)
			    {
			        if(sbizz[bizid][ubLock]==0)
			        {
			            sbizz[bizid][ubLock]=1;
			            msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous avez ouvert la porte.");
			        }
			        else
			        {
			            msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous avez fermé la porte.");
			            sbizz[bizid][ubLock]=0;
			        }
			        uniquebizz_ShowDialogGestion(playerid,bizid);
			        uniquebizz_Save(bizid);
			    }
			    else
				{
					uniquebizz_ShowDialogGestion(playerid,bizid);
					msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Ce biz ne dispose pas de cette fonction.");
				}
			}
			if(listitem==7)
			{
			    if(sbizz[bizid][ubHasInt]==1)
			    {
			        format(string,sizeof(string),"Entrez le prix d'entrée du biz : (Ancien: $%d)",sbizz[bizid][ubEnterPrice]);
				    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix Entrée",string,"Valider","Retour");
	                player_Dialog[playerid]=7;
			    }
			    else
				{
					uniquebizz_ShowDialogGestion(playerid,bizid);
					msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Ce biz ne dispose pas de cette fonction.");
				}
			}
			if(listitem==8)
			{
			    if(bizid>=0 && bizid<MAX_STATION  || bizid >= MAX_STATION && bizid <MAX_STATION+MAX_SPRAY || bizid >= MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR)
			    {
			        format(string,sizeof(string),"Entrez le prix spécial du biz :");
				    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Spécial",string,"Valider","Retour");
	                player_Dialog[playerid]=8;
			    }
			    else
				{
					uniquebizz_ShowDialogGestion(playerid,bizid);
					msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Ce biz ne dispose pas de cette fonction.");
				}
			}
		}
		else if(player_Dialog[playerid] == 1)
			{uniquebizz_ShowDialogGestion(playerid,bizid);}
		else if(player_Dialog[playerid] == 2)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>64)
		    {
		        format(string,sizeof(string),"Erreur dans le nom. (Max 64 carractères)\nEntrer le nouveau nom de votre biz : (Ancien: %s)",sbizz[bizid][ubMessage]);
		        ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Nom",string,"Valider","Retour");
				return 1;
		    }
		    strmid(sbizz[bizid][ubMessage], inputtext, 0, 64, 64);
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez changé le nom de votre biz en : %s.", inputtext);
            msg_Client(playerid, COLOR_BIZ, string);
			uniquebizz_Save(bizid);
			uniquebizz_UpdateInfos(bizid);
			uniquebizz_ShowDialogGestion(playerid,bizid);
		}
		else if(player_Dialog[playerid] == 3)
		{
		    if(!strlen(inputtext) || strval(inputtext)>PlayerInfo[playerid][pCash] || strval(inputtext) < 0)
		    {
		        format(string,sizeof(string),"Erreur dans le montant !\nEntrez l'argent que vous désirez déposer en caisse : (Max: $%d)",PlayerInfo[playerid][pCash]);
			    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Déposer de l'argent",string,"Valider","Retour");
               	return 1;
		    }
		    sbizz[bizid][ubCaisse]+=strval(inputtext);
			SafeGivePlayerMoney(playerid, -strval(inputtext),"Dépot argent dans la caisse du biz");
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez ajouté $%d dans votre caisse. (Total: $%d)", strval(inputtext),sbizz[bizid][ubCaisse]);
            msg_Client(playerid, COLOR_BIZ, string);
			uniquebizz_Save(bizid);
			uniquebizz_ShowDialogGestion(playerid,bizid);
		}
		else if(player_Dialog[playerid] == 4)
		{
		    if(!strlen(inputtext) || strval(inputtext)>sbizz[bizid][ubCaisse] || strval(inputtext) < 0)
		    {
		        format(string,sizeof(string),"Erreur dans le montant !\nEntrez l'argent que vous désirez retirer en caisse : (Max: $%d)",sbizz[bizid][ubCaisse]);
			    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Retirer de l'argent",string,"Valider","Retour");
               	return 1;
		    }
		    sbizz[bizid][ubCaisse]-=strval(inputtext);
		    SafeGivePlayerMoney(playerid, strval(inputtext),"Retire argent de caisse de son biz");
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez retiré $%d dans votre caisse. (Total: $%d)", strval(inputtext),sbizz[bizid][ubCaisse]);
            msg_Client(playerid, COLOR_BIZ, string);
			uniquebizz_Save(bizid);
			uniquebizz_ShowDialogGestion(playerid,bizid);
		}
		else if(player_Dialog[playerid] == 5)
		{
				new totoprods = sbizz[bizid][ubMaxProduits]-sbizz[bizid][ubProduits];
    			new prixprods = totoprods*sbizz[bizid][ubPrix_Prod];
			    new totoprods2 = sbizz[bizid][ubMaxProduits]-sbizz[bizid][ubProduits];
			    if(!strlen(inputtext) || strval(inputtext) > totoprods2 || strval(inputtext) < 1)
			    {
			        format(string,sizeof(string),"Erreur dans le montant\n[Info]\nPrix du produit : $%d\nMax de produit à acheter : %d\n\n[Aide]\n%d produits pour $%d.\n\nEntrez le nombre de produits que vous désirez acheter :",sbizz[bizid][ubPrix_Prod],totoprods,prixprods);
			    	ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Achats de produits",string,"Valider","Retour");
					return 1;
			    }
			    new prix_article = strval(inputtext)*sbizz[bizid][ubPrix_Prod];
			    if(sbizz[bizid][ubCaisse] < prix_article)
			    {
			        format(string,sizeof(string),"Erreur, pas assez d'argent dans la caisse.\n[Info]\nPrix du produit : $%d\nMax de produit à acheter : %d\n\n[Aide]\n%d produits pour $%d.\n\nEntrez le nombre de produits que vous désirez acheter :",sbizz[bizid][ubPrix_Prod],totoprods,prixprods);
			    	ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Achats de produits",string,"Valider","Retour");
			        return 1;
			    }
			    sbizz[bizid][ubCaisse]-=prix_article;
			    sbizz[bizid][ubProduits]+=strval(inputtext);
			    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez acheté %d produits pour $%d.",strval(inputtext),prix_article);
			    msg_Client(playerid,COLOR_BIZ,string);
			    uniquebizz_Save(bizid);
				uniquebizz_ShowDialogGestion(playerid,bizid);
		}
		else if(player_Dialog[playerid] == 6)
		{
		    ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Articles","Entrez le nouveau prix de l'article :","Valider","Retour");
		    player_Dialog[playerid]=9+listitem;
		}
		else if(player_Dialog[playerid] == 7)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 1000 || strval(inputtext)< 1)
		    {
		        format(string,sizeof(string),"Erreur dans le prix.\nEntrez le prix d'entrée du biz : (Ancien: $%d)",sbizz[bizid][ubEnterPrice]);
				ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix Entrée",string,"Valider","Retour");
	 			return 1;
		    }
		    sbizz[bizid][ubEnterPrice]=strval(inputtext);
		    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez réglé le prix d'entré à $%d",strval(inputtext));
		    msg_Client(playerid,COLOR_BIZ,string);
		    uniquebizz_Save(bizid);
		    uniquebizz_UpdateInfos(bizid);
		    uniquebizz_ShowDialogGestion(playerid,bizid);
		}
		else if(player_Dialog[playerid] == 8)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 10000 || strval(inputtext)< 1)
		    {
		        format(string,sizeof(string),"Erreur dans le prix.\nEntrez le prix spécial du biz :");
	 			ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Spécial",string,"Valider","Retour");
	 			return 1;
		    }
		    if(bizid >= 0 && bizid < MAX_STATION)
		    {
		        sbizz[bizid][ubPriceArticle][0]=strval(inputtext);
		        format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez réglé le prix de l'essence à $%d/L",strval(inputtext));
		    }
		    if(bizid >= MAX_STATION && bizid < MAX_STATION+MAX_SPRAY)
		    {
		        sbizz[bizid][ubEnterPrice]=strval(inputtext);
		        format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez réglé le prix du Spray à $%d",strval(inputtext));
		    }
		    if(bizid >= MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR)
		    {
		        sbizz[bizid][ubEnterPrice]=strval(inputtext);
		        format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez réglé le prix de la location à $%d",strval(inputtext));
		    }
		    msg_Client(playerid,COLOR_BIZ,string);
		    uniquebizz_Save(bizid);
		    uniquebizz_UpdateInfos(bizid);
		    uniquebizz_ShowDialogGestion(playerid,bizid);
		}
		else if(player_Dialog[playerid] >= 9)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 2000 || strval(inputtext)< 1)
		    	{ShowPlayerDialog(playerid,103,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Articles","Erreur dans le prix.\nEntrez le nouveau prix de l'article :","Valider","Retour");return 1;}
		    	
		    sbizz[bizid][ubPriceArticle][player_Dialog[playerid]-8]=strval(inputtext);
		    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Prix de l'article changé à $%d.",strval(inputtext));
		    msg_Client(playerid,COLOR_BIZ,string);
		    uniquebizz_Save(bizid);
		    uniquebizz_ShowDialogGestion(playerid,bizid);
		}
		return 1;
	}
	if(dialogid == 98)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0)
				{return 1;}
			else
				{bizz_ShowDialogGestion(playerid);return 1;}
		}
		if(player_Dialog[playerid] == 0)
		{
		    new bizid = gPlayerInBizz[playerid];
		    if(listitem == 0)
        	{
        	    new porte[32];
        	    if(bizz[bizid][lock] == 0) {format(porte,sizeof porte,"Ouvertes");}
        	    else if(bizz[bizid][lock] == 1) {format(porte,sizeof porte,"Fermées");}
        	    else{ format(porte,sizeof porte,"Indefini");}

        	    format(string,sizeof string,"[Statut] Portes : %s\n[Prix] Prix du biz : $%d  -  Prix d'entrée : $%d\n[Produit] Max de produits : %d  -  Produits restant : %d  -  Recapitulatif : %d/%d",porte,bizz[bizid][price],bizz[bizid][enterCost],bizz[bizid][prodMax],bizz[bizid][products],bizz[bizid][products],bizz[bizid][prodMax]);
        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_MSGBOX,"{2B6AFF}» Biz «{FFFFFF} Infos",string,"Valider","");
        	}
        	if(listitem == 1)
        	{
        	    player_Dialog[playerid]=2;
        	    format(string,sizeof(string),"Entrer le nouveau nom du biz : (Ancien nom : %s)",bizz[bizid][description]);
        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Nom",string,"Valider","Retour");			}
			if(listitem == 2)
        	{
        		player_Dialog[playerid]=3;
        		format(string,sizeof(string),"Entrer le nouveau prix d'entré du biz : (Ancien prix : $%d)",bizz[bizid][enterCost]);
        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix d'entrée",string,"Valider","Retour");
			}
			if(listitem == 3)
        	{
        	    new BizString[512];
        	    if(bizz[bizid][typeZ] == 1) // 24/7
        	    {
        	        format(BizString, sizeof(BizString), "1. Téléphone ($%d)\n2. Malette ($%d)\n3. Annuaire($%d)\n4. Dé ($%d)\n5. Préservatif ($%d)\n6. Cagoule (lvl 5 min) ($%d)\n7. Corde ($%d)\n8. Bombe Lacrimo ($%d)\n9. Briquet ($%d)\n10. BoomBox ($%d)\n11. Talkie Walkie ($%d)\n12. Bouquet de Fleures ($%d)\n13. Batte ($%d)\n14. Pied de biche ($%d)\n15. Appareil Photo ($%d)\n16. Ballon de basket ($%d)\n17. Pelle ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],
					bizz[bizid][itemCost][9],bizz[bizid][itemCost][10],bizz[bizid][itemCost][11],bizz[bizid][itemCost][12],bizz[bizid][itemCost][13],bizz[bizid][itemCost][14],bizz[bizid][itemCost][15],bizz[bizid][itemCost][16],bizz[bizid][itemCost][17]);
					ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Retour");
        	    }
        	    else if(bizz[bizid][typeZ] == 2 || bizz[bizid][typeZ] == 15 || bizz[bizid][typeZ] == 16 || bizz[bizid][typeZ] == 17 || bizz[bizid][typeZ] == 18 || bizz[bizid][typeZ] == 19) // Binco
        	    {
        	        format(BizString, sizeof(BizString), "Vétement ($%d)\nPaire de lunette ($%d)\nBandana ($%d)\nCasque de moto ($%d)\nCasquette ($%d)\nChâpeau ($%d)\nBerêt ($%d)\nCasque Stereo ($%d)\nMontre (%d)\nSac Coyote ($%d) [2 Armes - 35 Emp.]\nSac Alice Pack ($%d) [4 Armes - 45 Emp.]\nSac Czech Backpack (Vip Diamant) ($%d) [6 Armes - 55 Emp.]",
        	        bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9],bizz[bizid][itemCost][10],bizz[bizid][itemCost][11]);
        	        ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Retour");
        	    }
        	    else if(bizz[bizid][typeZ] == 3) // Tabac
        	    {
        	        format(BizString, sizeof(BizString), "1. Tabac ($%d)\n2. Feuilles ($%d)\n3. Cigarettes ($%d)\n4. Briquet ($%d)\n5. Ticket de lotto ($%d)",
        	        bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4]);
        	        ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Retour");
				}
				else if(bizz[bizid][typeZ] == 4) // Epicerie
        	    {
        	        format(BizString, sizeof(BizString), "1. Eau (x6) ($%d)\n2. Soda (x6) ($%d)\n3. Jus de fuit (x3) ($%d)\n4. Bière (x6) ($%d)\n5. Lait (x6) ($%d)\n6. Burger (x2) ($%d)\n7. Pizza (x3) ($%d)\n8. Sandwich (x2) ($%d)\n9. Chips (x1) ($%d)\n10. Céréales (x1) ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9]);
					ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Retour");
        	    }
        	    else if(bizz[bizid][typeZ] == 5) // Donuts
        	    {
        	        format(BizString, sizeof(BizString), "1. Donut ($%d)\n2. Creame glacé ($%d)\n3. Viennoiserie ($%d)\n4. Soda ($%d)\n5. Cocktail ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
        	    }
        	    else if(bizz[bizid][typeZ] == 6) // Pizza Stack
        	    {
        	        format(BizString, sizeof(BizString), "1. Mini pizza ($%d)\n2. Pizza ($%d)\n3. Pizza 4 fromages ($%d)\n4. Pizza 4 saisons ($%d)\n5. Pizza nature ($%d)\n6. Pizza du jour ($%d)\n7. Soda ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
				}
				else if(bizz[bizid][typeZ] == 7) // Burger Shot
        	    {
        	        format(BizString, sizeof(BizString), "1. Hamburger ($%d)\n2. Double hamburger ($%d)\n3. CheeseBurger ($%d)\n4. Petite frites ($%d)\n5. Moyen frites ($%d)\n6. Grande frites ($%d)\n7. Soda (%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
        	    }
        	    else if(bizz[bizid][typeZ] == 8) // Clukin'bell
        	    {
        	        format(BizString, sizeof(BizString), "1. Petite portion nuggets ($%d)\n2. Moyen portion de nuggets ($%d)\n3. Grande portion de nuggets ($%d)\n4. Petite frites ($%d)\n5. Moyen frites ($%d)\n6. Grande frites ($%d)\n7. Soda ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
        	    }
        	    else if(bizz[bizid][typeZ] == 9) // Disquaire
        	    {
        	        format(BizString, sizeof(BizString), "1. MP3 ($%d)\nAlbum 1 David Guetta ($%d)\nAlbum 2 Sexion d'assault ($%d)\nBoomBox ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][2]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
				}
				else if(bizz[bizid][typeZ] == 10) // Ammunation
        	    {
        	        format(BizString, sizeof(BizString), "1. Colt 45 ($%d)\n2. Silencieux ($%d)\n3. Rifle ($%d)\n4. Poing américain ($%d)\n5. Gilet par balles ($%d)\n6. Laser rouge ($%d)\n7. Laser bleu ($%d)\n8. Laser rose ($%d)\n9. Laser orange ($%d)\n10. Laser vert ($%d)\n11. Laser jaune ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9],bizz[bizid][itemCost][10]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
				}
				else if(bizz[bizid][typeZ] == 11) // Sexe Shop
        	    {
                    format(BizString, sizeof(BizString), "1. God Mauve ($%d)\n2. God Blanc ($%d)\n3. Long God Blanc ($%d)\n4. God Blanc #2 ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3]);
			   	 	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
				}
				else if(bizz[bizid][typeZ] == 12 || bizz[bizid][typeZ] == 13) // Bar & Discotheque
        	    {
        	        format(BizString, sizeof(BizString), "1. Eau ($%d)\n2. Café ($%d)\n3. Diabolo ($%d)\n4. Biere ($%d)\n5. Champagne ($%d)\n6. Wisky ($%d)\n7. Vodka ($%d)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
        	    }
				else if(bizz[bizid][typeZ] == 14) // gym
        	    {
        	        format(BizString, sizeof(BizString), "1. Elbow ($%d)\n2. Boxing ($%d)\n3. Grabkick ($%d)\n4. Kneehead ($%d)\n5. Kungfu ($%d)\n6. Normal (Gratuit)",
			    	bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5]);
			    	ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
				}
				else if(bizz[bizid][typeZ] == 20) // restaut
        	    {
 			    	format(BizString, sizeof(BizString), "1. Assiette de pâtes ($%d)\n2. Steck Frites ($%d)\n3. Poulet Frites ($%d)\n4. Poisson riz ($%d)\n5. Vin ($%d)\n6. Soda ($%d)",
					bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5]);
					ShowPlayerDialog(playerid, 98, DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix des articles",BizString,"Valider","Annuler");
				}
        	    player_Dialog[playerid]=4;
        	}
        	if(listitem == 4)
        	{
        	    if(bizz[bizid][lock]==0)
        	    {
        	        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous avez fermé la porte du biz.");
        	        bizz[bizid][lock]=1;
        	        bizz_Save(bizid);
        	        bizz_ShowDialogGestion(playerid);
				}
				else if(bizz[bizid][lock]==1)
        	    {
        	        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous avez ouvert la porte du biz.");
        	        bizz[bizid][lock]=0;
        	        bizz_Save(bizid);
        	        bizz_ShowDialogGestion(playerid);
				}
        	}
        	if(listitem == 5)
        	{
	        	player_Dialog[playerid]=5;
	        	format(string, sizeof(string), "Entrer le montant que vous désirez déposer dans la caisse : (Max : $%d) :", PlayerInfo[playerid][pCash]);
	        	ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Déposer de l'argent",string,"Valider","Retour");
			}
			if(listitem == 6)
        	{
        	    player_Dialog[playerid]=6;
        	    format(string, sizeof(string), "Entrez le montant que vous désirez retirer dans la caisse : (Max : $%d) :", bizz[bizid][fund]);
        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Retirer de l'argent",string,"Valider","Retour");
			}
			if(listitem == 7)
        	{
       	 		player_Dialog[playerid]=8;
	        	new totoprods = bizz[bizid][prodMax]-bizz[bizid][products];
	        	format(string, sizeof(string), "Entrer le nombre de produits que vous souhaitez acheter (Max :%d)\nPrix d'un produits : $%d :", totoprods,bizz[bizid][prodCost]);
	        	ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Acheter des produits",string,"Valider","Retour");
        	}
		}
		else if(player_Dialog[playerid] == 2)
		{
		    new bizid = gPlayerInBizz[playerid];
		    if(!strlen(inputtext) || strlen(inputtext)>64)
		    {
		        format(string,sizeof(string),"Erreur dans le nom. (Max 64 carractères)\nEntrer le nouveau nom du biz : (Ancien nom : %s)",bizz[bizid][description]);
		        ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Nom",string,"Valider","Retour");
				return 1;
		    }
		    strmid(bizz[bizid][description], inputtext, 0, 64, 64);
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez changé le nom de votre biz en : %s.", inputtext);
            msg_Client(playerid, COLOR_BIZ, string);
            bizz_UpdateInfos(bizid);
		    bizz_Save(bizid);
		    bizz_ShowDialogGestion(playerid);
		}
		else if(player_Dialog[playerid] == 3)
		{
		    new bizid = gPlayerInBizz[playerid];
		    if(!strlen(inputtext) || strval(inputtext)>1000 || strval(inputtext)<1)
		    {
		        format(string,sizeof(string),"Erreur dans le prix. (Max : $1000)\nEntrer le nouveau prix du biz : (Ancien prix : $%d)",bizz[bizid][enterCost]);
				ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix d'entrée",string,"Valider","Retour");
				return 1;
		    }
		    bizz[bizid][enterCost] = strval(inputtext);
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez changé le prix d'entrée de votre biz à $%d.", strval(inputtext));
            msg_Client(playerid, COLOR_BIZ, string);
            bizz_UpdateInfos(bizid);
		    bizz_Save(bizid);
		    bizz_ShowDialogGestion(playerid);
		}
		else if(player_Dialog[playerid] == 4) // Gestion des articles
		{
		    if(!response)
		    	{return 1;}
		    	
		    new bizid = gPlayerInBizz[playerid];
		    if(listitem >= 0)
		    {
		        format(string, sizeof(string), "Entrer le nouveau prix de l'article : (Ancien prix : $%d) :", bizz[bizid][itemCost][listitem]);
        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix de l'article",string,"Valider","Retour");
        	    player_Dialog[playerid] = 7;
        	    bizz_GestionArticle[playerid]=listitem;
        	    return 1;
		    }
		}
		else if(player_Dialog[playerid] == 5)
		{
		    new bizid = gPlayerInBizz[playerid];
			if(!strlen(inputtext) || strval(inputtext) > PlayerInfo[playerid][pCash])
			{
			    format(string, sizeof(string), "Erreur dans le montant.\nEntrer le montant que vous désirez déposer dans la caisse : (Max : $%d)", PlayerInfo[playerid][pCash]);
	            ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Déposer de l'argent",string,"Valider","Retour");
				return 1;
			}
			bizz[bizid][fund] += strval(inputtext);
			SafeGivePlayerMoney(playerid, -strval(inputtext),"Dépot argent dans la caisse du biz");
			format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez déposé $%d dans la caisse de votre biz.", strval(inputtext));
	        msg_Client(playerid, COLOR_BIZ, string);
			bizz_Save(bizid);
			bizz_ShowDialogGestion(playerid);
		}
		else if(player_Dialog[playerid] == 6)
		{
		    new bizid = gPlayerInBizz[playerid];
		    if(!strlen(inputtext) || strval(inputtext) > bizz[bizid][fund])
		    {
		        format(string, sizeof(string), "Erreur dans le montant.\nEntrer le montant que vous désirez retirer de la caisse : (Max : $%d)", bizz[bizid][fund]);
        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Retirer de l'argent",string,"Valider","Retour");
				return 1;
		    }
		    bizz[bizid][fund] -= strval(inputtext);
		    SafeGivePlayerMoney(playerid, strval(inputtext),"Retire argent de la caisse de son biz");
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Vous avez retiré $%d dans la caisse de votre biz.", strval(inputtext));
            msg_Client(playerid, COLOR_BIZ, string);
		    bizz_Save(bizid);
		    bizz_ShowDialogGestion(playerid);
		}
		else if(player_Dialog[playerid] == 7)
		{
		    new bizid = gPlayerInBizz[playerid];
		    if(!strlen(inputtext) || strval(inputtext) > 5000 || strval(inputtext) < 1)
		    {
		        format(string, sizeof(string), "Erreur, le prix doit être compris entre $1 et $5000.\nEntrer le nouveau prix de l'article : (Ancien prix : $%d) :", bizz[bizid][itemCost][bizz_GestionArticle[playerid]]);
        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Gestion - Prix de l'article",string,"Valider","Retour");
				return 1;
		    }
		    bizz[bizid][itemCost][bizz_GestionArticle[playerid]] = strval(inputtext);
		    format(string, sizeof(string), "{2B6AFF}» Biz «{FFFFFF} Le prix de l'article est désormais $%d.", strval(inputtext));
            msg_Client(playerid, COLOR_BIZ, string);
            bizz_GestionArticle[playerid]=-1;
		    bizz_Save(bizid);
		    bizz_ShowDialogGestion(playerid);
		}
		else if(player_Dialog[playerid] == 8)
		{
			    new bizid = gPlayerInBizz[playerid];
			    new totoprods = bizz[bizid][prodMax]-bizz[bizid][products];
			    if(!strlen(inputtext) || strval(inputtext) > totoprods || strval(inputtext) < 1)
			    {
			        format(string, sizeof(string), "Erreur dans le montant.\nEntrez le nombre de produits que vous souhaitez acheter (Max:%d)\nPrix d'un produits :$%d :", totoprods,bizz[bizid][prodCost]);
	        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Acheter des produits",string,"Valider","Retour");
					return 1;
			    }
			    new prix_article = strval(inputtext)*bizz[bizid][prodCost];
			    if(bizz[bizid][fund] < prix_article)
			    {
			        format(string, sizeof(string), "Vous n'avez pas assez d'argent dans votre caisse.\nEntrez le nombre de produits que vous souhaitez acheter (Max:%d)\nPrix d'un produits :$%d :", totoprods,bizz[bizid][prodCost]);
	        	    ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"{2B6AFF}» Biz «{FFFFFF} Acheter des produits",string,"Valider","Retour");
			        return 1;
			    }
			    bizz[bizid][fund] = bizz[bizid][fund]-prix_article;
			    bizz[bizid][products] = bizz[bizid][products]+strval(inputtext);
			    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez acheté %d produits pour $%d.",strval(inputtext),prix_article);
			    msg_Client(playerid,COLOR_BIZ,string);
			    bizz_Save(bizid);
			    bizz_ShowDialogGestion(playerid);
		}
        return 1;
    }
    if(dialogid == 99)
    {
        if(!response)
		{
			if(Dialogue_Admin_Edit_Gang[playerid]==0) {IdFactionEdit[playerid] = -1; return 1;} // Evite un bug
			else if(Dialogue_Admin_Edit_Gang[playerid]==9) {} // Evite un bug
			else
			{
			    new fac = IdFactionEdit[playerid];
			    new MsgName[64];
		 		format(MsgName, sizeof(MsgName), "» Admin « Edit - %s",FactionInfo[fac][fName]);
		 		format(string, sizeof(string), "Changer le nom (%s)\nQG position\nCoffre position\nCouleur du gang\nNom du rang 1 (%s)\nNom du rang 2 (%s)\nNom du rang 3 (%s)\nNom du rang 4 (%s)\nNom du rang 5 (%s)\nNom du rang 6 (%s)\nGestion du coffre",
				FactionInfo[fac][fName],FactionInfo[fac][fRank1],FactionInfo[fac][fRank2],FactionInfo[fac][fRank3],FactionInfo[fac][fRank4],FactionInfo[fac][fRank5],FactionInfo[fac][fRank6]);

		 		ShowPlayerDialog(playerid, 99, DIALOG_STYLE_LIST, MsgName,string,"Valider", "Annuler");
		 		Dialogue_Admin_Edit_Gang[playerid] = 0;
		 		return 1;
			}
		}
		if(Dialogue_Admin_Edit_Gang[playerid] == 0)
		{
		    if(listitem == 0)
        	{
        	    Dialogue_Admin_Edit_Gang[playerid] = 1;
        		ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Changer le nom du gang","Merci de bien vouloir entrer le nouveau nom du gang :","Valider","Retour");
        	}
        	if(listitem == 1)
        	{
        	    new facID = IdFactionEdit[playerid];
        	    msg_Client(playerid,COLOR_GANG,"{FF2727}» Admin «{FFABAD} La position du QG a été changé.");
        	    new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid,x,y,z);
				FactionInfo[facID][fEntrance][0] = x;
				FactionInfo[facID][fEntrance][1] = y;
				FactionInfo[facID][fEntrance][2] = z;
				faction_Save(facID);
				faction_UpdateInfos(facID);
				return 1;
        	}
        	if(listitem == 2)
        	{
        	    new facID = IdFactionEdit[playerid];
        	    msg_Client(playerid,COLOR_GANG,"{FF2727}» Admin «{FFABAD} La position du coffre a été changé.");
        	    new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid,x,y,z);
				FactionInfo[facID][fSafe][0] = x;
				FactionInfo[facID][fSafe][1] = y;
				FactionInfo[facID][fSafe][2] = z;
				faction_Save(facID);
				faction_UpdateInfos(facID);
				return 1;
        	}
        	if(listitem == 3)
        	{
        	    Dialogue_Admin_Edit_Gang[playerid] = 2;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_LIST,"» Admin « Changer la couleur du gang","Orange\nJaune\nRouge\nMarron\nViolet\nGris\nRose\nBleu Clair\nBleu Foncé\nVert Clair\nVert Foncé\n","Valider","Retour");
        	}
        	if(listitem == 4)
        	{
			    Dialogue_Admin_Edit_Gang[playerid]=3;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
        	}
        	if(listitem == 5)
        	{
			    Dialogue_Admin_Edit_Gang[playerid]=4;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
        	}
        	if(listitem == 6)
        	{
			    Dialogue_Admin_Edit_Gang[playerid]=5;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
        	}
        	if(listitem == 7)
        	{
			    Dialogue_Admin_Edit_Gang[playerid]=6;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
        	}
        	if(listitem == 8)
        	{
			    Dialogue_Admin_Edit_Gang[playerid]=7;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
        	}
        	if(listitem == 9)
        	{
			    Dialogue_Admin_Edit_Gang[playerid]=8;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
        	}
        	if(listitem == 10)
        	{
        	    Dialogue_Admin_Edit_Gang[playerid]=9;
        	    ShowPlayerDialog(playerid,99,DIALOG_STYLE_MSGBOX,"» Admin « Type de faction","Choissisez le nouveau type de faction.","Gang","Mafia");
			}
		}
		if(Dialogue_Admin_Edit_Gang[playerid] == 1)
		{
		    new facID = IdFactionEdit[playerid];
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} La lougeur du nom de faction est trop long.");
				return ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Changer le nom du gang","Merci de bien vouloir entrer le nouveau nom du gang :","Valider","Retour");
		    }
		    strmid(FactionInfo[facID][fName], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le nom du gang en : %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            Dialogue_Gestion_Faction_Gang[playerid] = 0;
            faction_UpdateInfos(facID);
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 2)
		{
		    new Dark;
            for(new id = 0; id < 20; id++)
			{
				if(listitem+1 == FactionInfo[id][fColor])
				{
				    Dark = 1;
				    break;
				}
			}
			if(Dark == 1)
			{
			    msg_Client(playerid, COLOR_WHITE, "{FF2727}» Admin «{FFABAD} Cette couleur est déjà utiliser par un autre gang.");
				return 1;
			}
			else
			{
			    new facID = IdFactionEdit[playerid];
			    FactionInfo[facID][fColor] = listitem+1;
			    FactionInfo[facID][fChoseColor] = 1;
			    faction_Save(facID);
			    msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} Le gang a changé de couleur.");
			    Dialogue_Admin_Edit_Gang[playerid] = 0;
			}
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 3)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} La longueur du nom du rang 1 est trop longue.");
				return ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
		    }
		    new facID = IdFactionEdit[playerid];
		    strmid(FactionInfo[facID][fRank1], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le nom du rang 1 du gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            Dialogue_Admin_Edit_Gang[playerid] = 0;
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 4)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} La longueur du nom du rang 2 est trop longue.");
				return ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
		    }
		    new facID = IdFactionEdit[playerid];
		    strmid(FactionInfo[facID][fRank2], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le nom du rang 2 du gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            Dialogue_Admin_Edit_Gang[playerid] = 0;
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 5)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} La longueur du nom du rang 3 est trop longue.");
				return ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
		    }
		    new facID = IdFactionEdit[playerid];
		    strmid(FactionInfo[facID][fRank3], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le nom du rang 3 du gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            Dialogue_Admin_Edit_Gang[playerid] = 0;
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 6)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} La longueur du nom du rang 4 est trop longue.");
				return ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
		    }
		    new facID = IdFactionEdit[playerid];
		    strmid(FactionInfo[facID][fRank4], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le nom du rang 4 du gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            Dialogue_Admin_Edit_Gang[playerid] = 0;
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 7)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} La longueur du nom du rang 5 est trop longue.");
				return ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
		    }
		    new facID = IdFactionEdit[playerid];
		    strmid(FactionInfo[facID][fRank5], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le nom du rang 5 du gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            Dialogue_Admin_Edit_Gang[playerid] = 0;
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 8)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{FF2727}» Admin «{FFABAD} La longueur du nom du rang 6 est trop longue.");
				return ShowPlayerDialog(playerid,99,DIALOG_STYLE_INPUT,"» Admin « Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
		    }
		    new facID = IdFactionEdit[playerid];
		    strmid(FactionInfo[facID][fRank6], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{FF2727}» Admin «{FFABAD} Vous avez changé le nom du rang 6 du gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            Dialogue_Admin_Edit_Gang[playerid] = 0;
		}
		else if(Dialogue_Admin_Edit_Gang[playerid] == 9)
		{
		    if(!response)
		    	{return 1;}
		    	
		    if(response == 1)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Cette faction est maintenant un gang.");
		        new facID = IdFactionEdit[playerid];
		        FactionInfo[facID][fType] = 1;
		        faction_Save(facID);
		    }
		    if(response == 0)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Cette faction est maintenant une mafia.");
		        new facID = IdFactionEdit[playerid];
		        FactionInfo[facID][fType] = 2;
		        faction_Save(facID);
		    }
		}
		return 1;
    }
    if(dialogid == 27)
    {
        if(!response)
			{return 1;}
			
		if(listitem>=0)
		{
		    new ma = gPlayerInHouse[playerid];
		    if(house[ma][hItem][listitem] == 0)
		    	{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Pas de mobilier à cette emplacement.");return 1;}
		    	
		    msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Edition du mobilier en cours.");
		    player_Variable[playerid]=listitem;
		    EditDynamicObject(playerid, house[ma][hObject][listitem]);
		    return 1;
		}
    }
    if(dialogid == 28)
    {
        if(!response)
			{return 1;}

		if(listitem>=0)
		{
		    new ma = gPlayerInHouse[playerid];
		    if(house[ma][hItem][listitem] == 0)
		    	{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Pas de mobilier à cette emplacement.");return 1;}

            msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Mobilier supprimé.");
            house[ma][hItem][listitem] = 0;
			
			if(IsValidDynamicObject(house[ma][hObject][listitem]))
				{DestroyDynamicObject(house[ma][hObject][listitem]);}
			house_Save(ma);
		    return 1;
		}
    }
    if(dialogid == 26)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0)
				{return 1;}
			ShowPlayerDialog(playerid,26,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Mobilier","- Acheter un mobilier\n- Editer un mobilier (Liste)\n- Editer un mobilier (Clique)\n- Vendre un mobilier (Liste)\n- Vendre un mobilier (Clique)\n- Vendre tout le mobilier","Valider","Annuler");
            player_Dialog[playerid]=0;
            return 1;
		}
		if(player_Dialog[playerid]==0)
		{
		    if(listitem==0)
		    {
			    ShowPlayerDialog(playerid,26,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Acheter un mobilier","- Salle de bain\n- Lits\n- Chaises\n- Divers\n- Tapis\n- Meubles de cuisine\n- Lampes\n- Tableaux\n- Plantes\n- Armoires\n- Stereo\n- Tables\n- Tables & chaises\n- Télés\n- Gym\n- Murs\n- Portes","Valider","Retour");
				player_Dialog[playerid]=1;
			}
			else if(listitem==1)
		    {
	    		new tmpstring[32],string2[1024];
		    	for(new i=0;i<MAX_FURNITURES; i++)
				{
				    format(tmpstring,sizeof(tmpstring),"- Slot %d\n",i+1);
				    strins(string2,tmpstring,strlen(string2),sizeof(string2));
				}
				ShowPlayerDialog(playerid,26,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Editer un mobilier",string2,"Valider","Retour");
				player_Dialog[playerid]=2;
		    }
		    else if(listitem==2)
		    {
		         SelectObject(playerid);
	        	 player_Dialog[playerid]=5;
	        	 msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Cliquez à l'aide du curseur sur un objet de votre maison à éditer. (Touche espace pour bouger autour)");
		    }
		    else if(listitem==3)
		    {
		        new tmpstring[32],string2[1024];
		    	for(new i=0;i<MAX_FURNITURES; i++)
				{
				    format(tmpstring,sizeof(tmpstring),"- Slot %d\n",i+1);
				    strins(string2,tmpstring,strlen(string2),sizeof(string2));
				}
				ShowPlayerDialog(playerid,26,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Vendre un mobilier",string2,"Valider","Retour");
				player_Dialog[playerid]=3;
		    }
		    else if(listitem==4)
		    {
		        SelectObject(playerid);
	        	player_Dialog[playerid]=6;
        	 	msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Cliquez à l'aide du curseur sur un objet de votre maison à supprimer. (Touche espace pour bouger autour)");
		    }
		    else if(listitem==5)
		    {
		        for(new i=0;i<MAX_FURNITURES; i++)
				{
					if(house[gPlayerInHouse[playerid]][hItem][i] != 0)
					{
						house[gPlayerInHouse[playerid]][hItem][i]=0;
						house[gPlayerInHouse[playerid]][fFurSQLid][i]=-1;
						house_UpdateFurnitureInfos(gPlayerInHouse[playerid],i);
					}
				}
				format(sql, sizeof(sql), "DELETE FROM lvrp_server_houses_furnitures WHERE HouseId=%d",gPlayerInHouse[playerid]);
				mysql_pquery(MYSQL,sql);
				msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Tous vos objets ont été vendu.");
		    }
		    return 1;
		}
		else if(player_Dialog[playerid]==1)
		{
			if(listitem>=0)
			{
	            ShowModelSelectionMenu(playerid, house_FurnituresList[listitem], "Choisissez un meuble");
				player_Dialog[playerid]=7;
			}
		}
		else if(player_Dialog[playerid]==2)
		{
		    if(listitem>=0)
			{
			    if(house[gPlayerInHouse[playerid]][hItem][listitem]==0)
			        {return msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Emplacement vide !");}
                EditDynamicObject(playerid,house[gPlayerInHouse[playerid]][hObject][listitem]);
				player_Variable[playerid]=listitem;
				player_Dialog[playerid]=5;
			}
		}
		else if(player_Dialog[playerid]==3)
		{
		    if(listitem>=0)
			{
			    if(house[gPlayerInHouse[playerid]][hItem][listitem]==0)
			        {return msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Emplacement vide !");}
				format(sql, sizeof(sql), "DELETE FROM lvrp_server_houses_furnitures WHERE id=%d LIMIT 1",house[gPlayerInHouse[playerid]][fFurSQLid][listitem]);
				mysql_pquery(MYSQL,sql);
				house[gPlayerInHouse[playerid]][hItem][listitem]=0;
				house[gPlayerInHouse[playerid]][fFurSQLid][listitem]=-1;
				house_UpdateFurnitureInfos(gPlayerInHouse[playerid],listitem);
				msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Objet vendu.");
			}
		}
		return 1;
    }
    if(dialogid == 60)
    {
        new ma = gPlayerInHouse[playerid];
        if(!response)
		{
		    if(house_UseItem[playerid] == 0)
				{return 1;}
			else
			{
			    format(string,sizeof(string),"{FFFFFF}- Déposer de l'argent ({00FF00}$%d{FFFFFF})\n- Retirer de l'argent ({00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash],house[ma][cash]);
	            ShowPlayerDialog(playerid,60,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Coffre fort",string,"Valider","Quitter");
	            house_UseItem[playerid]=0;
	            return 1;
			}
		}
		if(house_UseItem[playerid]==0)
		{
		    if(listitem==0)
		    {
		        format(string,sizeof(string),"{FFFFFF}Entrez l'argent que vous désirez déposer : (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
		        ShowPlayerDialog(playerid,60,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Coffre fort - Déposer Argent",string,"Valider","Retour");
		        house_UseItem[playerid]=1;
			}
			if(listitem==1)
		    {
		        format(string,sizeof(string),"{FFFFFF}Entrez l'argent que vous désirez retirer : (Max: {00FF00}$%d{FFFFFF})",house[ma][cash]);
		        ShowPlayerDialog(playerid,60,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Coffre fort - Retirer Argent",string,"Valider","Retour");
		        house_UseItem[playerid]=2;
			}
		}
		else if(house_UseItem[playerid]==1)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pCash])
		    {
		        format(string,sizeof(string),"{FF0000}Erreur dans le montant.\n{FFFFFF}Entrez l'argent que vous désirez déposer : (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
		        ShowPlayerDialog(playerid,60,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Coffre fort - Déposer Argent",string,"Valider","Retour");
				return  1;
		    }
		    house[ma][cash]+=strval(inputtext);
		    SafeGivePlayerMoney(playerid,-strval(inputtext),"Deposition maison");
			format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez déposé $%d.",strval(inputtext));
			msg_Client(playerid,COLOR_HOUSE,string);
			house_Save(ma);
		}
		else if(house_UseItem[playerid]==2)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > house[ma][cash])
		    {
		        format(string,sizeof(string),"{FF0000}Erreur dans le montant.\n{FFFFFF}Entrez l'argent que vous désirez retirer : (Max: {00FF00}$%d{FFFFFF})",house[ma][cash]);
		        ShowPlayerDialog(playerid,60,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Coffre fort - Retirer Argent",string,"Valider","Retour");
				return  1;
		    }
		    house[ma][cash]-=strval(inputtext);
		    SafeGivePlayerMoney(playerid,strval(inputtext),"Retirer maison");
			format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez retiré $%d.",strval(inputtext));
			msg_Client(playerid,COLOR_HOUSE,string);
			house_Save(ma);
		}
		return 1;
    }
    /*if(dialogid == 31)
    {
        if(!response)
			{return 1;}
		if(house_UseItem[playerid]==0)
		{
		    if(listitem==0)
		    {
		        ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Chaîne Hifi","Entrez un lien stream :","Valider","Retour");
		        house_UseItem[playerid]=1;
		        return 1;
		    }
		    if(listitem==1)
		    {
			    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			    {
			        if(IsPlayerConnected(i) && gPlayerInHouse[i] == gPlayerInHouse[playerid])
			        	{StopAudioStreamForPlayer(i);}
			    }
			    return 1;
		    }
		}
		if(house_UseItem[playerid]==1)
		{
		    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		    {
		        if(IsPlayerConnected(i) && gPlayerInHouse[i] == gPlayerInHouse[playerid])
		        	{PlayAudioStreamForPlayer(i,inputtext,house[gPlayerInHouse[playerid]][hPosItem_x][0],house[gPlayerInHouse[playerid]][hPosItem_x][1],house[gPlayerInHouse[playerid]][hPosItem_x][2], 20); }
		    }
		}
    }*/
    if(dialogid == 30)
    {
        new houseId = gPlayerInHouse[playerid];
        if(!response)
        {
            if(player_Dialog[playerid] == 0)
                {return 1;}
			else
			    {return house_ShowDialogSafe(playerid,gPlayerInHouse[playerid]);}
        }
        if(player_Dialog[playerid] == 0)
        {
			switch(listitem)
			{
			    case 0:
			    {
			        new maxstring[512];
			        for(new i=0; i<gPlayerInventory[playerid]; i++)
			        {
			            format(string,sizeof(string),"- %s : [%d]\n",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
		                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
			        }
			        ShowPlayerDialog(playerid,30,DIALOG_STYLE_LIST, "{00C600}» Maison «{FFFFFF} Déposer un objet", maxstring, "Valider", "Retour");
	                player_Dialog[playerid]=1;
			    }
			    case 1:
			    {
				        if(police_Duty[playerid]==1)
					    	{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Impossible de déposer vos armes de service."); house_ShowDialogSafe(playerid,houseId); return 1;}
			            if(GetPlayerWeapon(playerid) == 0 || GetPlayerAmmo(playerid) == 0)
							{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez avoir une arme en main."),house_ShowDialogSafe(playerid,houseId);}

						new wepId = GetPlayerWeapon(playerid);
						new ammo = GetPlayerAmmo(playerid);
				        new slot=-1,wepname[32];
				        for(new i=0; i<15; i++)
				        {
				            if(house[houseId][hItemM][i] == 0)
				                {slot=i;break;}
				        }
						if(slot==-1)
						    {return msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Plus de place dans le coffre."),house_ShowDialogSafe(playerid,houseId);}
						format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez déposé un(e) %s. (%d balle(s))",wepname,ammo);
						msg_Client(playerid,COLOR_HOUSE,string);
		                RemovePlayerWeapon(playerid, wepId);
		                house[houseId][hItemM][slot] = wepId;
		                house[houseId][hItemQ][slot] = ammo;
		                house_ShowDialogSafe(playerid,houseId);
		                house_Save(houseId,true);
			    }
			    case 2:
			    {
			        new maxstring[256];
			        for(new i=0; i<15; i++)
			        {
			            new name[32];
			            if(0 < house[houseId][hItemM][i] < 45) // Arme
			            	{GetWeaponName(house[houseId][hItemM][i],name,sizeof(name));}
						else
						    {strmid(name,GetItemName(house[houseId][hItemM][i]),0,32,32);}
			            format(string,sizeof(string),"[Slot %d] %s (%d)\n",i+1,name,house[houseId][hItemQ][i]);
		                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
			        }
			        ShowPlayerDialog(playerid,30,DIALOG_STYLE_LIST, "{00C600}» Maison «{FFFFFF} Retirer un objet ou une arme", maxstring, "Valider", "Retour");
	                player_Dialog[playerid]=3;
			    }
			    case 3:
			    {
			        player_Dialog[playerid]=5;
	        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
					ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Déposer de l'argent",string,"Déposer","Retour");
			    }
			    case 4:
			    {
			        player_Dialog[playerid]=6;
	        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}$%d{FFFFFF})",house[houseId][cash]);
					ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Retirer de l'argent",string,"Retirer","Retour");
			    }
			    case 5:
			    {
			        player_Dialog[playerid]=7;
	        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",PlayerInfo[playerid][pArmour]);
					ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Déposer du gilet par balles",string,"Déposer","Retour");
			    }
			    case 6:
			    {
			        player_Dialog[playerid]=8;
	        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",house[houseId][armour]);
					ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Retirer du gilet par balles",string,"Retirer","Retour");
			    }
			}
		}
		else if(player_Dialog[playerid] == 1)
		{
		    if(inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]) <= 0 || !server_IsValidItem(PlayerInfo[playerid][pInvModel][listitem]))
		        {msg_Client(playerid,COLOR_VEHICLE,"{8BE2E2}» Véhicule «{FFFFFF} Emplacement vide !"); house_ShowDialogSafe(playerid,houseId);return 1;}

			SetPVarInt(playerid,"house_ItemSlot",listitem);
			format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez déposer dans le coffre (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]));
			ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Déposer un objet",string,"Déposer","Retour");
            player_Dialog[playerid]=2;
		}
		else if(player_Dialog[playerid] == 2)
		{
		    new slot = GetPVarInt(playerid,"house_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]) || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez déposer dans le coffre (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]));
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Déposer un objet",string,"Déposer","Retour");
			}
			new houseSlot=-1;
			for(new i=14; i>=0; i--)
			{
			    if(house[houseId][hItemM][i] == PlayerInfo[playerid][pInvModel][slot])
			        {houseSlot=i;break;}
				else if(house[houseId][hItemM][i] <= 0)
				    {houseSlot=i;}
			}
			if(houseSlot==-1)
			    {return msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Plus de place dans le coffre."),house_ShowDialogSafe(playerid,houseId);}
            format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez déposé %d de %s.",strval(inputtext),GetItemName(PlayerInfo[playerid][pInvModel][slot]));
			msg_Client(playerid,COLOR_HOUSE,string);
			house[houseId][hItemM][houseSlot] = PlayerInfo[playerid][pInvModel][slot];
			house[houseId][hItemQ][houseSlot] += strval(inputtext);
			inventory_UpdateItem(playerid,PlayerInfo[playerid][pInvModel][slot],-strval(inputtext));
			house_ShowDialogSafe(playerid,houseId);
   			house_Save(houseId,true);
		}
		else if(player_Dialog[playerid] == 3)
		{
		    if(0 < house[houseId][hItemM][listitem] < 41)
		    {
				new wepname[32];
				GetWeaponName(house[houseId][hItemM][listitem],wepname,sizeof(wepname));
	            format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez retiré un(e) %s. (%d balle(s))",wepname,house[houseId][hItemQ][listitem]);
				msg_Client(playerid,COLOR_HOUSE,string);
				SafeGivePlayerWeapon(playerid,house[houseId][hItemM][listitem],house[houseId][hItemQ][listitem]);
				house[houseId][hItemM][listitem] = 0;
				house[houseId][hItemQ][listitem] = 0;
				house_ShowDialogSafe(playerid,houseId);
   				house_Save(houseId,true);
		    }
		    else if(house[houseId][hItemM][listitem] > 40 && house[houseId][hItemQ][listitem] > 0)
		    {
		        SetPVarInt(playerid,"house_ItemSlot",listitem);
				format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez retirer du coffre (Max: {00FF00}%d{FFFFFF})",house[houseId][hItemQ][listitem]);
				ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Retirer un objet",string,"Retirer","Retour");
	            player_Dialog[playerid]=4;
		    }
		    else
		        {msg_Client(playerid,COLOR_VEHICLE,"{8BE2E2}» Véhicule «{FFFFFF} Emplacement vide !"); house_ShowDialogSafe(playerid,houseId);return 1;}
		}
		else if(player_Dialog[playerid] == 4)
		{
		    new slot = GetPVarInt(playerid,"house_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > house[houseId][hItemQ][slot] || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez retirer du coffre (Max: {00FF00}%d{FFFFFF})",house[houseId][hItemQ][slot]);
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Retirer un objet",string,"Retirer","Retour");
			}
			format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez retiré %d de %s.",strval(inputtext),GetItemName(house[houseId][hItemM][slot]));
			msg_Client(playerid,COLOR_HOUSE,string);
			house[houseId][hItemQ][slot] -= strval(inputtext);
			inventory_UpdateItem(playerid,house[houseId][hItemM][slot],strval(inputtext));
			if(house[houseId][hItemQ][slot] <= 0)
			    {house[houseId][hItemM][slot]=0; house[houseId][hItemQ][slot]=0;}
			house_ShowDialogSafe(playerid,houseId);
   			house_Save(houseId,true);
		}
		else if(player_Dialog[playerid] == 5)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) >PlayerInfo[playerid][pCash])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Déposer de l'argent",string,"Déposer","Retour");
		    }
		    if((strval(inputtext)+house[houseId][cash])>100000)
		    {
		        format(string, sizeof(string),"{FF0000}Maximum $100.000 dans le coffre (Au total)\n{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Déposer de l'argent",string,"Déposer","Retour");
		    }
		    house[houseId][cash] += strval(inputtext);
		    SafeGivePlayerMoney(playerid,-strval(inputtext),"Depot coffre véhicule");
		    format(string, sizeof(string), "{00C600}» Maison «{FFFFFF} Vous avez déposé $%d dans le coffre de votre maison.", strval(inputtext));
		    msg_Client(playerid,COLOR_HOUSE,string);
			house_ShowDialogSafe(playerid,houseId);
   			house_Save(houseId,true);
		}
		else if(player_Dialog[playerid] == 6)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext)>house[houseId][cash])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}$%d{FFFFFF})",house[houseId][cash]);
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Retirer de l'argent",string,"Retirer","Retour");
		    }
		    house[houseId][cash] -= strval(inputtext);
		    SafeGivePlayerMoney(playerid,strval(inputtext),"Retrait coffre véhicule");
		    format(string, sizeof(string), "{00C600}» Maison «{FFFFFF} Vous avez retiré $%d dans le coffre de votre maison.", strval(inputtext));
		    msg_Client(playerid,COLOR_HOUSE,string);
			house_ShowDialogSafe(playerid,houseId);
   			house_Save(houseId,true);
		}
		else if(player_Dialog[playerid] == 7)
		{
		    if(!strlen(inputtext) || floatstr(inputtext) < 1 || floatstr(inputtext) > PlayerInfo[playerid][pArmour])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",PlayerInfo[playerid][pArmour]);
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Déposer du gilet par balles",string,"Déposer","Retour");
		    }
		    house[houseId][armour] += floatstr(inputtext);
		    SafeGivePlayerArmour(playerid,-strval(inputtext));
		    format(string, sizeof(string), "{00C600}» Maison «{FFFFFF} Vous avez déposé %0.0f de gilet dans le coffre de votre maison.", floatstr(inputtext));
		    msg_Client(playerid,COLOR_HOUSE,string);
			house_ShowDialogSafe(playerid,houseId);
   			house_Save(houseId,true);
		}
		else if(player_Dialog[playerid] == 8)
		{
		    if(!strlen(inputtext) || floatstr(inputtext) < 1 || floatstr(inputtext) > house[houseId][armour])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",house[houseId][armour]);
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		    if(floatstr(inputtext) > 100 || (PlayerInfo[playerid][pArmour]+floatstr(inputtext)) > 100)
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant, vous ne pouvez avoir que 100 d'armure sur vous !\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",house[houseId][armour]);
				return ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		    house[houseId][armour] -= floatstr(inputtext);
		    SafeSetPlayerArmour(playerid,(PlayerInfo[playerid][pArmour]+floatstr(inputtext)));
		    format(string, sizeof(string), "{00C600}» Maison «{FFFFFF} Vous avez retiré %0.0f de gilet dans le coffre de votre maison.", floatstr(inputtext));
		    msg_Client(playerid,COLOR_HOUSE,string);
			house_ShowDialogSafe(playerid,houseId);
   			house_Save(houseId,true);
		}
		return 1;
    }
    if(dialogid == 130)
    {
        if(!response)
		{
			if(player_Dialog[playerid]==0)
				{return 1;}
			else
				{house_Gestion(playerid,gPlayerInHouse[playerid]);return 1;}
		}
		if(player_Dialog[playerid] == 0)
		{
		    new houseid=gPlayerInHouse[playerid];
		    if(listitem == 0)
		    {
		        if(house[houseid][lock] == 0)
		        {
		            house[houseid][lock] = 1;
		            msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez fermé la porte de votre maison.");
		            house_Save(houseid);
		            house_Gestion(playerid,gPlayerInHouse[playerid]);
		            return 1;
		        }
		        else if(house[houseid][lock] == 1)
		        {
		            house[houseid][lock] = 0;
		            msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez ouvert la porte de votre maison.");
		            house_Save(houseid);
		            house_Gestion(playerid,gPlayerInHouse[playerid]);
		            return 1;
		        }
		    }
		    if(listitem == 1)
		    {
		        if(house[houseid][rentState] == 0)
		        {
		            house[houseid][rentState] = 1;
		            msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez activé la location de votre maison.");
		            house_Save(houseid);
		            house_Gestion(playerid,gPlayerInHouse[playerid]);
		            house_UpdateInfos(houseid);
		            return 1;
		        }
		        else if(house[houseid][rentState] == 1)
		        {
		            house[houseid][rentState] = 0;
		            msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez désactivé la location de votre maison.");
		            house_Save(houseid);
		            house_Gestion(playerid,gPlayerInHouse[playerid]);
		            house_UpdateInfos(houseid);
		            return 1;
		        }
		    }
		    if(listitem == 2)
		    {
		        format(string,sizeof(string),"Entrez le prix de location de votre maison : (Avant: $%d)",house[houseid][rentPrice]);
		        ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Gestion - Prix location",string,"Valider","Retour");
		        player_Dialog[playerid]=1;
		        return 1;
		    }
		    if(listitem == 3)
		    {
		        format(string,sizeof(string),"Entrez le nombre de locataire max pour votre maison : (Avant: %d - Max: 10)",house[houseid][rentMax]);
		        ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Gestion - Max locataires",string,"Valider","Retour");
		        player_Dialog[playerid]=2;
		        return 1;
		    }
		    if(listitem == 4)
		    {
		        format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez pris l'argent de la location. (+ $%d)",house[houseid][talking]);
		        msg_Client(playerid,COLOR_HOUSE,string);
		        SafeGivePlayerMoney(playerid,house[houseid][talking],"Récupere argent location");
		        house[houseid][talking] = 0;
		        house_Save(houseid);
		        house_Gestion(playerid,gPlayerInHouse[playerid]);
		        return 1;
		    }
		    if(listitem == 5)
		    {
		        format(string,sizeof(string),"Aucune (Gratuit)\n25% de remise ($100/Payday)\n50% de remise ($200/Payday)\n75% de remise ($300/Payday)");
		        ShowPlayerDialog(playerid,130,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Gestion - Assurance",string,"Valider","Retour");
		        player_Dialog[playerid]=3;
		        return 1;
		    }
		    if(listitem == 6)
		    {
		        new tmpstring[32],locstring[512],ifx=0, tmpTotal;
		        format(sql, sizeof(sql), "SELECT * FROM lvrp_users WHERE House1=%d OR House2=%d OR House3=%d ORDER BY id",gPlayerInHouse[playerid],gPlayerInHouse[playerid],gPlayerInHouse[playerid]);
	    		mysql_query(MYSQL,sql);
    		 	cache_get_row_count(tmpTotal);
		        for(new i=0; i<tmpTotal; i++)
				{
				    cache_get_value_name_int(i,"id", house_ExitTenant[playerid][ifx]);
					cache_get_value_name(i,"Name",Field, 32);
				    format(tmpstring,sizeof(tmpstring),"%s\n",Field);
					strins(locstring,tmpstring,strlen(locstring),sizeof(locstring));
					ifx++;
				}
				ShowPlayerDialog(playerid,130,DIALOG_STYLE_LIST,"{00C600}» Maison «{FFFFFF} Gestion - Virer des Locataires",locstring,"Valider","Retour");
				player_Dialog[playerid]=4;
		    }
		    if(listitem == 7)
		    {
		        format(string,sizeof(string),"{FFFFFF}Ancienne description : %s (36 caractères max)\n- Entrez une description courte de votre maison :",house[houseid][description]);
		        ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Gestion - Virer des Locataires",string,"Valider","Retour");
				player_Dialog[playerid]=5;
		    }
		    if(listitem == 8)
		    {
		        if(house[houseid][showDesc] == 0)
		        {
		            house[houseid][showDesc] = 1;
		            msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} La description sera désormais affichée.");
		            house_Save(houseid);
		            house_UpdateInfos(houseid);
		            house_Gestion(playerid,gPlayerInHouse[playerid]);
		            return 1;
		        }
		        else if(house[houseid][showDesc] == 1)
		        {
		            house[houseid][showDesc] = 0;
		            msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} La description sera ne sera plus affichée.");
		            house_Save(houseid);
		            house_UpdateInfos(houseid);
		            house_Gestion(playerid,gPlayerInHouse[playerid]);
		            return 1;
		        }
		    }
		}
		else if(player_Dialog[playerid] == 1)
		{
		    if(!strlen(inputtext) || strval(inputtext) >2500 || strval(inputtext) <0)
		    {
		        format(string,sizeof(string),"Erreur, prix conpris entre $1 et $2500.\nEntrez le prix de location de votre maison : (Avant: $%d)",house[gPlayerInHouse[playerid]][rentPrice]);
		        ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Gestion - Prix location",string,"Valider","Retour");
		        return 1;
		    }
		    house[gPlayerInHouse[playerid]][rentPrice] = strval(inputtext);
		    house_Save(gPlayerInHouse[playerid]);
		    format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez reglé le prix de location à $%d.",strval(inputtext));
		    msg_Client(playerid,COLOR_HOUSE,string);
		    house_Gestion(playerid,gPlayerInHouse[playerid]);
		    house_UpdateInfos(gPlayerInHouse[playerid]);
		}
		else if(player_Dialog[playerid] == 2)
		{
		    if(!strlen(inputtext) || strval(inputtext) >10 || strval(inputtext) <0)
		    {
		        format(string,sizeof(string),"Erreur, max locataire compris entre 1 et 10.\nEntrez le nombre de locataire max pour votre maison : (Avant: %d - Max: 10)",house[gPlayerInHouse[playerid]][rentMax]);
		        ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Gestion - Max locataires",string,"Valider","Retour");
		        return 1;
		    }
		    house[gPlayerInHouse[playerid]][rentMax] = strval(inputtext);
		    house_Save(gPlayerInHouse[playerid]);
		    format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez reglé le nombre max de locataires à %d.",strval(inputtext));
		    msg_Client(playerid,COLOR_HOUSE,string);
		    house_Gestion(playerid,gPlayerInHouse[playerid]);
		    house_UpdateInfos(gPlayerInHouse[playerid]);
		}
		else if(player_Dialog[playerid] == 3)
		{
		    if(listitem == 0)
		    {
		        house[gPlayerInHouse[playerid]][insurance] = 0;
		        house_Save(gPlayerInHouse[playerid]);
		        msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez choisi l'assurance : Aucune. (Gratuit)");
		        house_Gestion(playerid,gPlayerInHouse[playerid]);
		    }
		    if(listitem == 1)
		    {
		        house[gPlayerInHouse[playerid]][insurance] = 1;
		        house_Save(gPlayerInHouse[playerid]);
		        msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez choisi l'assurance : 25% de remise. ($100/Payday)");
		        house_Gestion(playerid,gPlayerInHouse[playerid]);
		    }
		    if(listitem == 2)
		    {
		        house[gPlayerInHouse[playerid]][insurance] = 2;
		        house_Save(gPlayerInHouse[playerid]);
		        msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez choisi l'assurance : 50% de remise. ($200/Payday)");
		        house_Gestion(playerid,gPlayerInHouse[playerid]);
		    }
		    if(listitem == 3)
		    {
		        house[gPlayerInHouse[playerid]][insurance] = 3;
		        house_Save(gPlayerInHouse[playerid]);
		        msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez choisi l'assurance : 75% de remise. ($300/Payday)");
		        house_Gestion(playerid,gPlayerInHouse[playerid]);
		    }
		}
		else if(player_Dialog[playerid] == 4)
		{
		    if(listitem >= 0)
		    {
				new bool:connected=false,p;
		        for(new i=0; i<MAX_PLAYERS_CURRENT+1;i++)
		        {
		            if(IsPlayerConnected(i) && PlayerInfo[i][pSQLID]==house_ExitTenant[playerid][listitem])
		                {connected=true; p=i; break;}
		        }
		        if(connected==false)
		        {
		            new Houses[3];
		            format(sql, sizeof(sql), "SELECT House1,House2,House3 FROM lvrp_users WHERE id=%d",house_ExitTenant[listitem]);
	    			mysql_query(MYSQL,sql);
	    			new count = 0;
	    			if(cache_get_row_count(count) && count > 0)
	    				{cache_get_value_index_int(0,0, Houses[0]); cache_get_value_index_int(0,1, Houses[1]); cache_get_value_index_int(0,2, Houses[1]);}
					if(Houses[0]==gPlayerInHouse[playerid])
					    {format(sql, sizeof(sql), "UPDATE lvrp_users SET House1=-1 WHERE id=%d",house_ExitTenant[listitem]);}
                    else if(Houses[1]==gPlayerInHouse[playerid])
					    {format(sql, sizeof(sql), "UPDATE lvrp_users SET House2=-1 WHERE id=%d",house_ExitTenant[listitem]);}
                    else if(Houses[2]==gPlayerInHouse[playerid])
					    {format(sql, sizeof(sql), "UPDATE lvrp_users SET House3=-1 WHERE id=%d",house_ExitTenant[listitem]);}
                    mysql_pquery(MYSQL,sql);
                    msg_Client(p,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez viré le joueur.");
		        }
		        else
		        {
		            if(PlayerInfo[p][pHousekey1]==gPlayerInHouse[playerid])
		                {PlayerInfo[p][pHousekey1]=-1;}
                    else if(PlayerInfo[p][pHousekey2]==gPlayerInHouse[playerid])
		                {PlayerInfo[p][pHousekey2]=-1;}
                    else if(PlayerInfo[p][pHousekey3]==gPlayerInHouse[playerid])
		                {PlayerInfo[p][pHousekey3]=-1;}
					msg_Client(p,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous avez été viré par le propriétaire.");
					format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez viré %s.",PlayerInfo[p][pRealName]);
					msg_Client(playerid,COLOR_HOUSE,string);
		        }
		    }
		}
		else if(player_Dialog[playerid] == 5)
		{
		    if(!strlen(inputtext) || strlen(inputtext) < 2 || strlen(inputtext) > 36)
		    {
		        format(string,sizeof(string),"{FF0000}Erreur dans la description !\n{FFFFFF}Ancienne description : %s (36 caractères max)\n- Entrez une description courte de votre maison :",house[gPlayerInHouse[playerid]][description]);
		        return ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"{00C600}» Maison «{FFFFFF} Gestion - Virer des Locataires",string,"Valider","Retour");
		    }
		    strmid(house[gPlayerInHouse[playerid]][description],inputtext,0,36,36);
		    format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez changé la description de votre maison en : %s.",inputtext);
			msg_Client(playerid,COLOR_HOUSE,string);
			house_Save(gPlayerInHouse[playerid]);
			house_UpdateInfos(gPlayerInHouse[playerid]);
   			house_Gestion(playerid,gPlayerInHouse[playerid]);
		}
		return 1;
    }
    if(dialogid == 89)
    {
        new facID;
	    if(PlayerInfo[playerid][pMember] >= 200)
			{facID = PlayerInfo[playerid][pMember]-200;}
	    else
			{return 1;}
			
        if(!response)
		{
			if(Dialogue_Gestion_Faction_Gang[playerid]==0)
				{return 1;}
			else
				{gang_ShowDialogEdit(playerid);return 1;}
		}
		if(Dialogue_Gestion_Faction_Gang[playerid] == 0)
		{
		    if(listitem == 0)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    	
        	    Dialogue_Gestion_Faction_Gang[playerid]=1;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Faction","Entrer le nom du gang :","Valider","Retour");
        	}
        	if(listitem == 1)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    
        	    msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} La position de votre QG a été changé.");
        	    new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid,x,y,z);
				FactionInfo[facID][fEntrance][0] = x;
				FactionInfo[facID][fEntrance][1] = y;
				FactionInfo[facID][fEntrance][2] = z;
				faction_Save(facID);
				faction_UpdateInfos(facID);
				gang_ShowDialogEdit(playerid);
				return 1;
        	}
        	if(listitem == 2)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    
        	    msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} La position de votre coffre a été changé.");
        	    new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid,x,y,z);
				FactionInfo[facID][fSafe][0] = x;
				FactionInfo[facID][fSafe][1] = y;
				FactionInfo[facID][fSafe][2] = z;
				faction_Save(facID);
				faction_UpdateInfos(facID);
				gang_ShowDialogEdit(playerid);
				return 1;
        	}
        	if(listitem == 3)
        	{
        	    Dialogue_Gestion_Faction_Gang[playerid]=2;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_LIST,"{006500}» Gang «{FFFFFF} Couleur du gang","Orange\nJaune\nRouge\nMarron\nViolet\nGris\nRose\nBleu Clair\nBleu Foncé\nVert Clair\nVert Foncé\n","Valider","Retour");
        	}
        	if(listitem == 4)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    	
        	    Dialogue_Gestion_Faction_Gang[playerid]=3;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
        	}
        	if(listitem == 5)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    
        	    Dialogue_Gestion_Faction_Gang[playerid]=4;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
        	}
        	if(listitem == 6)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    	
        	    Dialogue_Gestion_Faction_Gang[playerid]=5;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
        	}
        	if(listitem == 7)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    
        	    Dialogue_Gestion_Faction_Gang[playerid]=6;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
        	}
        	if(listitem == 8)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    
        	    Dialogue_Gestion_Faction_Gang[playerid]=7;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
        	}
        	if(listitem == 9)
        	{
        	    if(FactionInfo[facID][fChoseColor] == 0)
			    	{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Vous devez d'abbord choisir la couleur de votre gang.");return 1;}
			    
        	    Dialogue_Gestion_Faction_Gang[playerid]=8;
        	    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
        	}
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 1)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Ta longueur de nom de faction est trop longue.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Faction","Entrer le nom du gang :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Faction","Entrer le nom du gang :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fName], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez changé le nom de votre faction par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            faction_UpdateInfos(facID);
            gang_ShowDialogEdit(playerid);
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 2)
		{
		    new Dark;// :D C'est moi
            for(new id = 0; id < totalFactions; id++)
			{
				if(listitem+1 == FactionInfo[id][fColor])
					{Dark = 1;break;}
			}
			if(Dark == 1)
				{msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Cette couleur est déjà utiliser par un autre gang.");return 1;}
			else
			{
			    FactionInfo[facID][fColor] = listitem+1;
			    FactionInfo[facID][fChoseColor] = 1;
			    faction_Save(facID);
			    msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Ton gang a changé de couleur.");
			    Dialogue_Gestion_Faction_Gang[playerid] = 0;
			    gang_ShowDialogEdit(playerid);
			    for(new i=0; i<totalTags; i++)
				{
	 				if(tag[i][faction] == facID)
	 				    {tag_Update(i);}
				}
			}
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 3)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} La longueur du nom du rang 1 est trop longue.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank1], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez changé le nom du rang 1 de votre gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            gang_ShowDialogEdit(playerid);
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 4)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} La longueur du nom du rang 2 est trop longue.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank2], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez changé le nom du rang 2 de votre gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            gang_ShowDialogEdit(playerid);
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 5)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} La longueur du nom du rang 3 est trop longue.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank3], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez changé le nom du rang 3 de votre gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            gang_ShowDialogEdit(playerid);
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 6)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} La longueur du nom du rang 4 est trop longue.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank4], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez changé le nom du rang 4 de votre gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            gang_ShowDialogEdit(playerid);
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 7)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} La longueur du nom du rang 5 est trop longue.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank5], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez changé le nom du rang 5 de votre gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            gang_ShowDialogEdit(playerid);
		}
		else if(Dialogue_Gestion_Faction_Gang[playerid] == 8)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} La longueur du nom du rang 6 est trop longue.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_GANG, "{006500}» Gang «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT,"{006500}» Gang «{FFFFFF} Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank6], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{006500}» Gang «{FFFFFF} Vous avez changé le nom du rang 6 de votre gang par %s.", inputtext);
            msg_Client(playerid, COLOR_GANG, string);
            gang_ShowDialogEdit(playerid);
		}
		return 1;
    }
    if(dialogid == 117)
    {
        new facID;
	    if(PlayerInfo[playerid][pLeader] >= 200)
			{facID = PlayerInfo[playerid][pLeader]-200;}
	    else
			{return 1;}
			
        if(!response)
		{
			if(mafia_DialogGestion[playerid]==0)
				{return 1;}
			else
				{mafia_ShowDialogGestion(playerid);return 1;}
		}
		if(mafia_DialogGestion[playerid] == 0)
		{
		    if(listitem == 0)
        	{
        	    mafia_DialogGestion[playerid]=1;
        	    ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Faction","Entrer le nom de la mafia :","Valider","Retour");
        	}
        	if(listitem == 1)
        	{
        	    msg_Client(playerid,COLOR_MAFIA,"{717171}» Mafia «{FFFFFF} La position de votre QG a été changé.");
        	    new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid,x,y,z);
				FactionInfo[facID][fEntrance][0] = x;
				FactionInfo[facID][fEntrance][1] = y;
				FactionInfo[facID][fEntrance][2] = z;
				faction_Save(facID);
				faction_UpdateInfos(facID);
				mafia_ShowDialogGestion(playerid);
				return 1;
        	}
        	if(listitem == 2)
        	{
        	    mafia_DialogGestion[playerid]=3;
        	    ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
        	}
        	if(listitem == 3)
        	{
        	    mafia_DialogGestion[playerid]=4;
        	    ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
        	}
        	if(listitem == 4)
        	{
        	    mafia_DialogGestion[playerid]=5;
        	    ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
        	}
        	if(listitem == 5)
        	{
        	    mafia_DialogGestion[playerid]=6;
        	    ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
        	}
        	if(listitem == 6)
        	{
        	    mafia_DialogGestion[playerid]=7;
        	    ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
        	}
        	if(listitem == 7)
        	{
        	    mafia_DialogGestion[playerid]=8;
        	    ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
        	}
		}
		else if(mafia_DialogGestion[playerid] == 1)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Ta longueur de nom de mafia est trop longue.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Faction","Entrer le nom de la mafia :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Faction","Entrer le nom de la mafia :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fName], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez changé le nom de votre mafia par %s.", inputtext);
            msg_Client(playerid, COLOR_MAFIA, string);
            faction_UpdateInfos(facID);
            mafia_ShowDialogGestion(playerid);
		}
		else if(mafia_DialogGestion[playerid] == 3)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} La longueur du nom du rang 1 est trop longue.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 1","Entrer le nom du rang 1 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank1], inputtext, 0, 32, 32);
		    faction_Save(facID);
		    format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez changé le nom du rang 1 de votre mafia par %s.", inputtext);
            msg_Client(playerid, COLOR_MAFIA, string);
            mafia_ShowDialogGestion(playerid);
		}
		else if(mafia_DialogGestion[playerid] == 4)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} La longueur du nom du rang 2 est trop longue.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 2","Entrer le nom du rang 2 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank2], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez changé le nom du rang 2 de votre gang par %s.", inputtext);
            msg_Client(playerid, COLOR_MAFIA, string);
            mafia_ShowDialogGestion(playerid);
		}
		else if(mafia_DialogGestion[playerid] == 5)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} La longueur du nom du rang 3 est trop longue.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 3","Entrer le nom du rang 3 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank3], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez changé le nom du rang 3 de votre mafia par %s.", inputtext);
            msg_Client(playerid, COLOR_MAFIA, string);
            mafia_ShowDialogGestion(playerid);
		}
		else if(mafia_DialogGestion[playerid] == 6)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} La longueur du nom du rang 4 est trop longue.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 4","Entrer le nom du rang 4 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank4], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez changé le nom du rang 4 de votre mafia par %s.", inputtext);
            msg_Client(playerid, COLOR_MAFIA, string);
            mafia_ShowDialogGestion(playerid);
		}
		else if(mafia_DialogGestion[playerid] == 7)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} La longueur du nom du rang 5 est trop longue.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 5","Entrer le nom du rang 5 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank5], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez changé le nom du rang 5 de votre mafia par %s.", inputtext);
            msg_Client(playerid, COLOR_MAFIA, string);
            mafia_ShowDialogGestion(playerid);
		}
		else if(mafia_DialogGestion[playerid] == 8)
		{
		    if(!strlen(inputtext) || strlen(inputtext)>32)
		    {
		        msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} La longueur du nom du rang 6 est trop longue.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
		    }
		    else if(MySQLCheckChar(inputtext))
 			{
			 	msg_Client(playerid, COLOR_MAFIA, "{717171}» Mafia «{FFFFFF} Craactère interdit dans le nom.");
				return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{717171}» Mafia «{FFFFFF} Nom Rang 6","Entrer le nom du rang 6 :","Valider","Retour");
	 		}
		    strmid(FactionInfo[facID][fRank6], inputtext, 0, 32, 32);
      		faction_Save(facID);
		    format(string, sizeof(string), "{717171}» Mafia «{FFFFFF} Vous avez changé le nom du rang 6 de votre mafia par %s.", inputtext);
            msg_Client(playerid, COLOR_MAFIA, string);
            mafia_ShowDialogGestion(playerid);
		}
		return 1;
    }
    if(dialogid == 90)
    {
        new facID = PlayerInfo[playerid][pMember]-200;
        if(!response)
		{
			if(player_Dialog[playerid]==0) return 1;
			else
				{faction_ShowDialogSafe(playerid);return 1;}
		}
		if(player_Dialog[playerid] == 0)
		{
		    if(listitem==0)
		    {
		        new maxstring[512];
		        for(new i=0; i<gPlayerInventory[playerid]; i++)
		        {
		            format(string,sizeof(string),"- %s : [%d]\n",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,90,DIALOG_STYLE_LIST, "{FFFFFF}» Faction « Déposer un objet", maxstring, "Valider", "Retour");
                player_Dialog[playerid]=1;
		    }
		    else if(listitem==1)
		    {
	            if(GetPlayerWeapon(playerid) == 0)
					{return msg_Client(playerid, COLOR_INFO, "{FFFFFF}» Faction « Vous devez avoir une arme en main."),faction_ShowDialogSafe(playerid);}

				new wepId = GetPlayerWeapon(playerid);
				new ammo = GetPlayerAmmo(playerid);
		        new facSlot=-1;
				for(new i=9; i>=0; i--)
				{
				    /*if(FactionInfo[facID][fItemM][i] == wepId)
				        {facSlot=i;break;}
					else*/ if(FactionInfo[facID][fItemM][i] <= 0)
					    {facSlot=i;}
				}
				if(facSlot==-1)
				    {return msg_Client(playerid,COLOR_VEHICLE,"{FFFFFF}» Faction « Le coffre est plein."),faction_ShowDialogSafe(playerid);}
                format(string, sizeof(string), "* %s met quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
				format(string,sizeof(string),"{FFFFFF}» Faction « Vous avez déposé un(e) %s. (%d balle(s))",GetWepName(wepId),ammo);
				msg_Client(playerid,COLOR_VEHICLE,string);
                RemovePlayerWeapon(playerid, wepId);
                FactionInfo[facID][fItemM][facSlot] = wepId;
                FactionInfo[facID][fItemQ][facSlot] += ammo;
                faction_ShowDialogSafe(playerid);
                faction_Save(facID);
		    }
		    else if(listitem==2)
		    {
		        new maxstring[512];
		        for(new i=0; i<10; i++)
		        {
		            if(FactionInfo[facID][fItemM][i] > 0 && FactionInfo[facID][fItemM][i] < 46)
		            	{format(string,sizeof(string),"- %s : [%d]\n",GetWepName(FactionInfo[facID][fItemM][i]),FactionInfo[facID][fItemQ][i]);}
		            else
		            	{format(string,sizeof(string),"- %s : [%d]\n",GetItemName(FactionInfo[facID][fItemM][i]),FactionInfo[facID][fItemQ][i]);}
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,90,DIALOG_STYLE_LIST, "{FFFFFF}» Faction « Retirer un(e) objet/arme", maxstring, "Valider", "Retour");
                player_Dialog[playerid]=3;
		    }
		    else if(listitem == 3)
		    {
		        player_Dialog[playerid]=4;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
				ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Déposer de l'argent",string,"Déposer","Retour");
		    }
		    else if(listitem == 4)
		    {
		        player_Dialog[playerid]=5;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}$%d{FFFFFF})",FactionInfo[facID][fCash]);
				ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Retirer de l'argent",string,"Retirer","Retour");
		    }
		    else if(listitem == 5)
		    {
		        player_Dialog[playerid]=6;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",PlayerInfo[playerid][pArmour]);
				ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Déposer du gilet par balles",string,"Déposer","Retour");
		    }
		    else if(listitem == 6)
		    {
		        player_Dialog[playerid]=7;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",FactionInfo[facID][fArmour]);
				ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		}
		else if(player_Dialog[playerid]==1)
		{
		    if(inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]) <= 0)
		    	{return msg_Client(playerid,COLOR_VEHICLE,"{FFFFFF}» Faction « Emplacement vide !"),faction_ShowDialogSafe(playerid);}

			SetPVarInt(playerid,"gang_ItemSlot",listitem);
			format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez déposer dans le coffre (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]));
			ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction «Déposer un objet",string,"Valider","Retour");
            player_Dialog[playerid]=2;
		}
		else if(player_Dialog[playerid]==2)
		{
		    new slot = GetPVarInt(playerid,"gang_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]) || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez déposer dans le coffre (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]));
				return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Déposer un objet",string,"Déposer","Retour");
			}
			new facSlot=-1;
			for(new i=9; i>=0; i--)
			{
			    if(FactionInfo[facID][fItemM][i] == PlayerInfo[playerid][pInvModel][slot])
			        {facSlot=i;break;}
				else if(FactionInfo[facID][fItemM][i] <= 0)
				    {facSlot=i;}
			}
			if(facSlot==-1)
			    {return msg_Client(playerid,COLOR_VEHICLE,"{FFFFFF}» Faction « Le coffre est plein."),faction_ShowDialogSafe(playerid);}
            format(string,sizeof(string),"{FFFFFF}» Faction « Vous avez déposé %d de %s.",strval(inputtext),GetItemName(PlayerInfo[playerid][pInvModel][slot]));
			msg_Client(playerid,COLOR_VEHICLE,string);
			format(string, sizeof(string), "* %s dépose quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			FactionInfo[facID][fItemM][facSlot] = PlayerInfo[playerid][pInvModel][slot];
			FactionInfo[facID][fItemQ][facSlot] += strval(inputtext);
			inventory_UpdateItem(playerid,PlayerInfo[playerid][pInvModel][slot],-strval(inputtext));
			faction_ShowDialogSafe(playerid);
			faction_Save(facID);
		}
		else if(player_Dialog[playerid]==3)
		{
		    if(FactionInfo[facID][fItemM][listitem] > 0 && FactionInfo[facID][fItemM][listitem] < 46)
      		{
      		    SafeGivePlayerWeapon(playerid,FactionInfo[facID][fItemM][listitem],FactionInfo[facID][fItemQ][listitem]);
                format(string,sizeof(string),"{FFFFFF}» Faction « Vous avez pris un(e) %s (%d balle(s)).",GetWepName(FactionInfo[facID][fItemM][listitem]),FactionInfo[facID][fItemQ][listitem]);
			}
      		else
      		{
                //inventory_UpdateItem(playerid,FactionInfo[facID][fItemM][listitem],FactionInfo[facID][fItemQ][listitem]);
                //format(string,sizeof(string),"{FFFFFF}» Faction « Vous avez pris %d de %s.",FactionInfo[facID][fItemQ][listitem],GetItemName(FactionInfo[facID][fItemM][listitem]));
				SetPVarInt(playerid,"gangSafeRow",listitem);
				format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez retirer du coffre (Max: {00FF00}%d{FFFFFF})",FactionInfo[facID][fItemQ][listitem]);
                player_Dialog[playerid]=8;
				return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Retirer un objet",string,"Retirer","Retour");
			}
			FactionInfo[facID][fItemM][listitem] = 0;
			FactionInfo[facID][fItemQ][listitem] = 0;
      		msg_Client(playerid,COLOR_VEHICLE,string);
      		format(string, sizeof(string), "* %s prend quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
      		faction_ShowDialogSafe(playerid);
			faction_Save(facID);
		}
		else if(player_Dialog[playerid] == 4)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) >PlayerInfo[playerid][pCash])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
				return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Déposer de l'argent",string,"Déposer","Retour");
		    }
		    FactionInfo[facID][fCash] += strval(inputtext);
		    SafeGivePlayerMoney(playerid,-strval(inputtext),"Depot coffre mafia");
		    format(string, sizeof(string), "{FFFFFF}» Faction « Vous avez déposé $%d dans le coffre.", strval(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s dépose quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			faction_ShowDialogSafe(playerid);
			faction_Save(facID);
		}
		else if(player_Dialog[playerid] == 5)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext)>FactionInfo[facID][fCash])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}$%d{FFFFFF})",FactionInfo[facID][fCash]);
				return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Retirer de l'argent",string,"Retirer","Retour");
		    }
		    FactionInfo[facID][fCash] -= strval(inputtext);
		    SafeGivePlayerMoney(playerid,strval(inputtext),"Retrait coffre mafia");
		    format(string, sizeof(string), "{FFFFFF}» Faction « Vous avez retiré $%d dans le coffre.", strval(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s retire quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			faction_ShowDialogSafe(playerid);
			faction_Save(facID);
		}
		else if(player_Dialog[playerid] == 6)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) > PlayerInfo[playerid][pArmour])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",PlayerInfo[playerid][pArmour]);
				return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Déposer du gilet par balles",string,"Déposer","Retour");
		    }
		    FactionInfo[facID][fArmour] = floatadd(FactionInfo[facID][fArmour], strval(inputtext));
		    SafeGivePlayerArmour(playerid,-strval(inputtext));
		    format(string, sizeof(string), "{FFFFFF}» Faction « Vous avez déposé %0.0f de gilet dans le coffre.", strval(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s dépose quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			faction_ShowDialogSafe(playerid);
			faction_Save(facID);
		}
		else if(player_Dialog[playerid] == 7)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) > FactionInfo[facID][fArmour])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",FactionInfo[facID][fArmour]);
				return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		    if(strval(inputtext) > 100 || floatadd(PlayerInfo[playerid][pArmour], strval(inputtext)) > 100)
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant, vous ne pouvez avoir que 100 d'armure sur vous !\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",FactionInfo[facID][fArmour]);
				return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		    FactionInfo[facID][fArmour] -= floatsub(FactionInfo[facID][fArmour], strval(inputtext));
		    SafeSetPlayerArmour(playerid,(PlayerInfo[playerid][pArmour]+strval(inputtext)));
		    format(string, sizeof(string), "{FFFFFF}» Faction « Vous avez retiré %0.0f de gilet dans le coffre.", strval(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s retire quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			faction_ShowDialogSafe(playerid);
			faction_Save(facID);
		}
		else if(player_Dialog[playerid] == 8)
		{
		    new tmpId = GetPVarInt(playerid,"gangSafeRow");
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext)>FactionInfo[facID][fItemQ][tmpId])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer du coffre (Max: {00FF00}%d{FFFFFF})",FactionInfo[facID][fItemQ][tmpId]);
		        return ShowPlayerDialog(playerid,90,DIALOG_STYLE_INPUT,"{FFFFFF}» Faction « Retirer de l'argent",string,"Retirer","Retour");
		    }
		    inventory_UpdateItem(playerid,FactionInfo[facID][fItemM][tmpId],strval(inputtext));
		    format(string, sizeof(string), "{FFFFFF}» Faction « Vous avez retiré %d de '%d' du coffre.", strval(inputtext), GetItemName(FactionInfo[facID][fItemM][tmpId]));
		    if(FactionInfo[facID][fItemQ][tmpId]-strval(inputtext) <= 0)
		    {
		        FactionInfo[facID][fItemM][tmpId] = 0;
				FactionInfo[facID][fItemQ][tmpId] = 0;
		    }
		    else
		        {FactionInfo[facID][fItemQ][tmpId]-=strval(inputtext);}
   		    msg_Client(playerid,COLOR_VEHICLE,string);
      		format(string, sizeof(string), "* %s retire quelque chose dans le coffre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
      		faction_ShowDialogSafe(playerid);
			faction_Save(facID);
			DeletePVar(playerid,"gangSafeRow");
		}
		return 1;
    }
    if(dialogid == 34)
    {
        if(!response)
			{house_SellOffer[playerid]=-1; house_SellId[playerid]=0; house_SellPrice[playerid]=0; return 1;}

        if(house_SellOffer[playerid] == -1)
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Personne ne vous à proposez de vendre sa maison."); house_SellOffer[playerid]=-1; house_SellId[playerid]=0; house_SellPrice[playerid]=0; return 1;}
		if(house_SellId[playerid] == 0)
			{return 1;}
		if(house_SellPrice[playerid] == 0)
			{return 1;}

        if(PlayerInfo[playerid][pHousekey1]!=-1 && PlayerInfo[playerid][pHousekey2]!=-1 && PlayerInfo[playerid][pHousekey3]!=-1)
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Nombre Max. de maison atteint."); house_SellOffer[playerid]=-1; house_SellId[playerid]=0; house_SellPrice[playerid]=0; return 1;}

        if(house_SellId[playerid] == PlayerInfo[house_SellOffer[playerid]][pHousekey1]){}
		else if(house_SellId[playerid] == PlayerInfo[house_SellOffer[playerid]][pHousekey2]){}
		else if(house_SellId[playerid] == PlayerInfo[house_SellOffer[playerid]][pHousekey3]){}
		else
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} L'offre n'est plus disponible."); house_SellOffer[playerid]=-1; house_SellId[playerid]=0; house_SellPrice[playerid]=0; return 1;}

        if(!ProxDetectorS(8.0, playerid, house_SellOffer[playerid]))
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le propriétaire est trop loin."); house_SellOffer[playerid]=-1; house_SellId[playerid]=0; house_SellPrice[playerid]=0; return 1;}

		if(PlayerInfo[playerid][pCash] < house_SellPrice[playerid])
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent."); house_SellOffer[playerid]=-1; house_SellId[playerid]=0; house_SellPrice[playerid]=0; return 1;}

		SafeGivePlayerMoney(playerid,-house_SellPrice[playerid],"Achat Biz");
		SafeGivePlayerMoney(house_SellOffer[playerid],house_SellPrice[playerid],"Vente Biz");

        if(PlayerInfo[playerid][pHousekey1] == -1){PlayerInfo[playerid][pHousekey1]=house_SellId[playerid];}
		else if(PlayerInfo[playerid][pHousekey2] == -1){PlayerInfo[playerid][pHousekey2]=house_SellId[playerid];}
		else if(PlayerInfo[playerid][pHousekey3] == -1){PlayerInfo[playerid][pHousekey3]=house_SellId[playerid];}

		if(PlayerInfo[house_SellOffer[playerid]][pHousekey1] == house_SellId[playerid]){PlayerInfo[house_SellOffer[playerid]][pHousekey1]=-1;}
		else if(PlayerInfo[house_SellOffer[playerid]][pHousekey2] == house_SellId[playerid]){PlayerInfo[house_SellOffer[playerid]][pHousekey2]=-1;}
		else if(PlayerInfo[house_SellOffer[playerid]][pHousekey3] == house_SellId[playerid]){PlayerInfo[house_SellOffer[playerid]][pHousekey3]=-1;}

        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s à acheté votre maison pour $%d.",PlayerInfo[playerid][pRealName],house_SellPrice[playerid]);
		msg_Client(house_SellOffer[playerid],COLOR_INFO,string);
		format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez acheté la maison de %s pour $%d.",PlayerInfo[house_SellOffer[playerid]][pRealName],house_SellPrice[playerid]);
		msg_Client(playerid,COLOR_INFO,string);

		strmid(house[house_SellId[playerid]][owner], PlayerInfo[playerid][pRealName], 0, 64, 64);
		house_Save(house_SellId[playerid]);
		house_UpdateInfos(house_SellId[playerid]);

		house_SellOffer[playerid]=-1;
		house_SellId[playerid]=0;
		house_SellPrice[playerid]=0;
		return 1;
    }
	if(dialogid == 33)
    {
        if(!response)
			{bizz_SellOffer[playerid]=-1; bizz_SellId[playerid]=0; bizz_SellPrice[playerid]=0; return 1;}
			
        if(bizz_SellOffer[playerid] == -1)
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Personne ne vous à proposez de vendre son biz."); bizz_SellOffer[playerid]=-1; bizz_SellId[playerid]=0; bizz_SellPrice[playerid]=0; return 1;}
		if(bizz_SellId[playerid] == 0)
			{return 1;}
		if(bizz_SellPrice[playerid] == 0)
			{return 1;}
			
        if(PlayerInfo[playerid][pBizkey1]!=-1 && PlayerInfo[playerid][pBizkey2]!=-1 && PlayerInfo[playerid][pBizkey3]!=-1)
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Nombre Max. de biz atteint."); bizz_SellOffer[playerid]=-1; bizz_SellId[playerid]=0; bizz_SellPrice[playerid]=0; return 1;}

        if(bizz_SellId[playerid] == PlayerInfo[bizz_SellOffer[playerid]][pBizkey1]){}
		else if(bizz_SellId[playerid] == PlayerInfo[bizz_SellOffer[playerid]][pBizkey2]){}
		else if(bizz_SellId[playerid] == PlayerInfo[bizz_SellOffer[playerid]][pBizkey3]){}
		else
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} L'offre n'est plus disponible."); bizz_SellOffer[playerid]=-1; bizz_SellId[playerid]=0; bizz_SellPrice[playerid]=0; return 1;}
			
        if(!ProxDetectorS(8.0, playerid, bizz_SellOffer[playerid]))
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le propriétaire est trop loin."); bizz_SellOffer[playerid]=-1; bizz_SellId[playerid]=0; bizz_SellPrice[playerid]=0; return 1;}
			
        GetPlayerName(bizz_SellOffer[playerid], giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));

		if(PlayerInfo[playerid][pCash] < bizz_SellPrice[playerid])
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent."); bizz_SellOffer[playerid]=-1; bizz_SellId[playerid]=0; bizz_SellPrice[playerid]=0; return 1;}

		SafeGivePlayerMoney(playerid,-bizz_SellPrice[playerid],"Achat Biz");
		SafeGivePlayerMoney(bizz_SellOffer[playerid],bizz_SellPrice[playerid],"Vente Biz");

        if(PlayerInfo[playerid][pBizkey1] == -1){PlayerInfo[playerid][pBizkey1]=bizz_SellId[playerid];}
		else if(PlayerInfo[playerid][pBizkey2] == -1){PlayerInfo[playerid][pBizkey2]=bizz_SellId[playerid];}
		else if(PlayerInfo[playerid][pBizkey3] == -1){PlayerInfo[playerid][pBizkey3]=bizz_SellId[playerid];}
		
		if(PlayerInfo[bizz_SellOffer[playerid]][pBizkey1] == bizz_SellId[playerid]){PlayerInfo[bizz_SellOffer[playerid]][pBizkey1]=-1;}
		else if(PlayerInfo[bizz_SellOffer[playerid]][pBizkey2] == bizz_SellId[playerid]){PlayerInfo[bizz_SellOffer[playerid]][pBizkey2]=-1;}
		else if(PlayerInfo[bizz_SellOffer[playerid]][pBizkey3] == bizz_SellId[playerid]){PlayerInfo[bizz_SellOffer[playerid]][pBizkey3]=-1;}
		
		if(bizz_SellId[playerid] < 1000)
		{
			strmid(bizz[bizz_SellId[playerid]][owner], sendername, 0, strlen(sendername), 64);
			bizz_Save(bizz_SellId[playerid]);
			bizz_UpdateInfos(bizz_SellId[playerid]);
		}
		else
		{
		    strmid(sbizz[bizz_SellId[playerid]-1000][ubOwner], sendername, 0, strlen(sendername), 64);
			uniquebizz_Save(bizz_SellId[playerid]);
			uniquebizz_UpdateInfos(bizz_SellId[playerid]);
		}
		bizz_SellOffer[playerid]=-1;
		bizz_SellId[playerid]=0;
		bizz_SellPrice[playerid]=0;
		return 1;
    }
    if(dialogid == 32)
    {
        if(!response)
			{car_SellOffer[playerid]=-1; car_SellId[playerid]=0; car_SellPrice[playerid]=0; return 1;}

        if(car_SellOffer[playerid] == -1)
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Personne ne vous à proposez de vendre son véhicule."); car_SellOffer[playerid]=-1; car_SellId[playerid]=0; car_SellPrice[playerid]=0; return 1;}
		if(car_SellId[playerid] == 0)
			{return 1;}
		if(car_SellPrice[playerid] == 0)
			{return 1;}

        if(PlayerInfo[playerid][pCar][0]!=-1 && PlayerInfo[playerid][pCar][1]!=-1 && PlayerInfo[playerid][pCar][2]!=-1 && (PlayerInfo[playerid][pCar][3]!=-1 && PlayerInfo[playerid][pCarDev4]==1) && (PlayerInfo[playerid][pCar][4]!=-1 && PlayerInfo[playerid][pCarDev5]==1) && (PlayerInfo[playerid][pCar][5]!=-1 && PlayerInfo[playerid][pCarDev6]==1))
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Nombre Max. de véhicule atteint."); car_SellOffer[playerid]=-1; car_SellId[playerid]=0; car_SellPrice[playerid]=0; return 1;}

		if(car_SellId[playerid] == PlayerInfo[car_SellOffer[playerid]][pCar][0]){}
		else if(car_SellId[playerid] == PlayerInfo[car_SellOffer[playerid]][pCar][1]){}
		else if(car_SellId[playerid] == PlayerInfo[car_SellOffer[playerid]][pCar][2]){}
		else if(car_SellId[playerid] == PlayerInfo[car_SellOffer[playerid]][pCar][3]){}
		else if(car_SellId[playerid] == PlayerInfo[car_SellOffer[playerid]][pCar][4]){}
		else if(car_SellId[playerid] == PlayerInfo[car_SellOffer[playerid]][pCar][5]){}
		else
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} L'offre n'est plus disponible."); car_SellOffer[playerid]=-1; car_SellId[playerid]=0; car_SellPrice[playerid]=0; return 1;}

        if(!ProxDetectorS(8.0, playerid, car_SellOffer[playerid]))
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le propriétaire est trop loin."); car_SellOffer[playerid]=-1; car_SellId[playerid]=0; car_SellPrice[playerid]=0; return 1;}

        if(!IsPlayerConnected(car_SellOffer[playerid]))
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le propriétaire s'est déconnecté."); car_SellOffer[playerid]=-1; car_SellId[playerid]=0; car_SellPrice[playerid]=0; return 1;}


		if(PlayerInfo[playerid][pCash] < car_SellPrice[playerid])
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent."); car_SellOffer[playerid]=-1; car_SellId[playerid]=0; car_SellPrice[playerid]=0; return 1;}

		SafeGivePlayerMoney(playerid,-car_SellPrice[playerid],"Achat Vehicule");
		SafeGivePlayerMoney(car_SellOffer[playerid],car_SellPrice[playerid],"Vente Vehicule");

		if(PlayerInfo[playerid][pCar][0] == -1){PlayerInfo[playerid][pCar][0]=car_SellId[playerid];}
		else if(PlayerInfo[playerid][pCar][1] == -1){PlayerInfo[playerid][pCar][1]=car_SellId[playerid];}
		else if(PlayerInfo[playerid][pCar][2] == -1){PlayerInfo[playerid][pCar][2]=car_SellId[playerid];}
		else if(PlayerInfo[playerid][pCar][3] == -1 && PlayerInfo[playerid][pCarDev4]==1){PlayerInfo[playerid][pCar][3]=car_SellId[playerid];}
		else if(PlayerInfo[playerid][pCar][4] == -1 && PlayerInfo[playerid][pCarDev5]==1){PlayerInfo[playerid][pCar][4]=car_SellId[playerid];}
		else if(PlayerInfo[playerid][pCar][5] == -1 && PlayerInfo[playerid][pCarDev6]==1){PlayerInfo[playerid][pCar][5]=car_SellId[playerid];}

		if(PlayerInfo[car_SellOffer[playerid]][pCar][0] == car_SellId[playerid]){PlayerInfo[car_SellOffer[playerid]][pCar][0]=-1;}
		else if(PlayerInfo[car_SellOffer[playerid]][pCar][1] == car_SellId[playerid]){PlayerInfo[car_SellOffer[playerid]][pCar][1]=-1;}
		else if(PlayerInfo[car_SellOffer[playerid]][pCar][2] == car_SellId[playerid]){PlayerInfo[car_SellOffer[playerid]][pCar][2]=-1;}
		else if(PlayerInfo[car_SellOffer[playerid]][pCar][3] == car_SellId[playerid]){PlayerInfo[car_SellOffer[playerid]][pCar][3]=-1;}
		else if(PlayerInfo[car_SellOffer[playerid]][pCar][4] == car_SellId[playerid]){PlayerInfo[car_SellOffer[playerid]][pCar][4]=-1;}
		else if(PlayerInfo[car_SellOffer[playerid]][pCar][5] == car_SellId[playerid]){PlayerInfo[car_SellOffer[playerid]][pCar][5]=-1;}

        strmid(vehicle[car_SellId[playerid]][cOwner], PlayerInfo[playerid][pRealName], 0, 64, 64);
		vehicle_Save(car_SellId[playerid],0,0);
		RemovePlayerFromVehicle(car_SellOffer[playerid]);

		format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s à acheté votre véhicule pour $%d.",PlayerInfo[playerid][pRealName],car_SellPrice[playerid]);
		msg_Client(car_SellOffer[playerid],COLOR_INFO,string);
		format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez acheté le véhicule de %s pour $%d.",PlayerInfo[car_SellOffer[playerid]][pRealName],car_SellPrice[playerid]);
		msg_Client(playerid,COLOR_INFO,string);

		car_SellOffer[playerid]=-1;
		car_SellPrice[playerid]=0;
		car_SellId[playerid]=0;
        return 1;
    }
    if(dialogid == 93)
    {
        if(!response)
			{return 1;}
			
        new vehicleid = vehicle_GetId(PlayerInfo[playerid][pCar][listitem]);
		if(vehicleid== -1)
			{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Véhicule inconnu ...");return 1;}
			
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(IsPlayerInVehicle(i,vehicleid))
				{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Quelqu'un est dans votre véhicule ((Evite le metagame)).");return 1;}
		}
		if(IsPlayerInVehicle(playerid,vehicleid))
			{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous êtes dans ce véhicule.");return 1;}
		new Float:vehicleX, Float:vehicleY, Float:vehicleZ;
		GetVehiclePos(vehicleid,vehicleX,vehicleY,vehicleZ);
		SetPlayerCheckpoint(playerid,vehicleX,vehicleY,vehicleZ,8.0);
		msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Votre véhicule a été localisé sur votre radar.");
		return 1;
    }
    if(dialogid == 94)
    {
        if(!response)
			{return 1;}
        
        new vehicleid = vehicle_GetId(PlayerInfo[playerid][pCar][listitem]);
		if(vehicleid== -1)
			{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Véhicule inconnu ...");return 1;}
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(IsPlayerInVehicle(i,vehicleid))
				{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Quelqu'un est dans votre véhicule ((Evite le Powergame)).");return 1;}
		}
		if(IsPlayerInVehicle(playerid,vehicleid))
			{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Vous êtes dans ce véhicule.");return 1;}
			
		SafeGivePlayerMoney(playerid,-300,"Respawn vehicule");
		SetVehicleToRespawn(vehicleid);
		msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Votre véhicule a été respawn.");
		return 1;
    }
    if(dialogid == 92)
    {
        if(!response)
			{return 1;}
		if(PlayerInfo[playerid][pInvWeapon][listitem]==0)
		{
			new slots=4;
			if(PlayerInfo[playerid][pBag]>=2)slots++;
			if(PlayerInfo[playerid][pBag]==3)slots++;
			new gunID = GetPlayerWeapon(playerid);
			new gunAmmo = GetPlayerAmmo(playerid);
			new change = false;
			if(gunID > 0 && gunAmmo != 0)
			{
				for(new i=0; i<slots; i++)
				{
					if(PlayerInfo[playerid][pInvWeapon][i]==0)
						{PlayerInfo[playerid][pInvWeapon][i] = gunID; PlayerInfo[playerid][pInvAmmo][i] = gunAmmo;change=true; break;}
				}
				if(change)
				{
					RemovePlayerWeapon(playerid, gunID);
					format(string, sizeof(string), "*(( %s met une arme dans son sac ))*", PlayerInfo[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				}
				else
					{msg_Client(playerid, COLOR_STATS, "{969696}» Sac «{FFFFFF} Votre sac est plein.");}
			}
			else
				{msg_Client(playerid, COLOR_STATS, "{969696}» Sac «{FFFFFF} Aucune arme en main.");}
		}
		else
		{
			new weaponId, amoNbr, change=false;
			if(PlayerInfo[playerid][pInvWeapon][listitem]!=0)
				{weaponId=PlayerInfo[playerid][pInvWeapon][listitem]; amoNbr=PlayerInfo[playerid][pInvAmmo][listitem]; PlayerInfo[playerid][pInvWeapon][listitem]=0; PlayerInfo[playerid][pInvAmmo][listitem]=0; change=true;}
			else
				{return msg_Client(playerid, COLOR_STATS, "{969696}» Sac «{FFFFFF} Votre sac est vide.");}
			if(change)
			{
				SafeGivePlayerWeapon(playerid, weaponId, amoNbr);
				format(string, sizeof(string), "*(( %s sort une arme de son sac ))*", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
		}
		return 1;
    }
    if(dialogid == 35)
    {
        if(!IsPlayerConnected(bag_Target[playerid]))
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le joueur qui possédait le sac s'est déconnecté.");}
        if(!response)
		{
		    if(bag_Dialog[playerid]==0)
				{return 1;}
			else
				{return bag_ShowDialog(playerid,bag_Target[playerid]);}
		}
		if(bag_Dialog[playerid] == 0)
		{
		    if(listitem == 0)
		    {
		        new maxstring[512];
		        for(new i=0; i<gPlayerInventory[bag_Target[playerid]]; i++)
		        {
		            format(string,sizeof(string),"- %s : [%d]\n",GetItemName(PlayerInfo[bag_Target[playerid]][pInvModel][i]),PlayerInfo[bag_Target[playerid]][pInvQuant][i]);
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,35,DIALOG_STYLE_LIST, "{969696}» Sac «{FFFFFF} Retirer un objet", maxstring, "Valider", "Retour");
                bag_Dialog[playerid]=1;
		    }
		    if(listitem == 1)
		    {
		        new maxstring[512];
		        for(new i=0; i<gPlayerInventory[playerid]; i++)
		        {
		            format(string,sizeof(string),"- %s : [%d]\n",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,35,DIALOG_STYLE_LIST, "{969696}» Sac «{FFFFFF} Déposer un objet", maxstring, "Valider", "Retour");
                bag_Dialog[playerid]=3;
		    }
		    else if(listitem == 2)
		    {
		        new slots=4;
				if(PlayerInfo[bag_Target[playerid]][pBag]>=2)slots++;
				if(PlayerInfo[bag_Target[playerid]][pBag]==3)slots++;
				new tmpstring[128];
				for(new i=0;i<slots; i++)
			    {
			        if(PlayerInfo[bag_Target[playerid]][pInvWeapon][i] != 0)
			        {
					    format(tmpstring,sizeof(tmpstring),"{FFFFFF}[Slot {0000FF}%d{FFFFFF}] %s (%d balle(s))\n",i,GetWepName(PlayerInfo[bag_Target[playerid]][pInvWeapon][i]),PlayerInfo[bag_Target[playerid]][pInvAmmo][i]);
					    strins(string,tmpstring,strlen(string),sizeof(string));
					}
			        else
			        {
			            format(tmpstring,sizeof(tmpstring),"{FFFFFF}[Slot {0000FF}%d{FFFFFF}] Vide\n",i);
					    strins(string,tmpstring,strlen(string),sizeof(string));
					}
			    }
		   		ShowPlayerDialog(playerid,35,DIALOG_STYLE_LIST, "{969696}» Sac «{FFFFFF} Retirer une arme", string, "Valider", "Retour");
	   		    ShowPlayerDialog(playerid,35,DIALOG_STYLE_LIST, "{969696}» Sac «{FFFFFF} Retirer une arme", string, "Valider", "Retour");
	   		    bag_Dialog[playerid]=5;
		    }
		    else if(listitem == 3)
		    {
		        if(police_Duty[playerid]==1)
			    	{return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Impossible de dposer vos armes de service."),bag_ShowDialog(playerid,bag_Target[playerid]);}
	            if(GetPlayerWeapon(playerid) == 0)
					{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez avoir une arme en main."),bag_ShowDialog(playerid,bag_Target[playerid]);}

				new wepId = GetPlayerWeapon(playerid);
				new ammo = GetPlayerAmmo(playerid);
				new wepName[32];
				GetWeaponName(wepId,wepName,sizeof(wepName));
		        if(PlayerInfo[bag_Target[playerid]][pInvWeapon][0] <= 0 && PlayerInfo[bag_Target[playerid]][pBag] == 1)
					{PlayerInfo[bag_Target[playerid]][pInvWeapon][0]=wepId;PlayerInfo[bag_Target[playerid]][pInvAmmo][0]=ammo;}
				else if(PlayerInfo[bag_Target[playerid]][pInvWeapon][1] <= 0 && PlayerInfo[bag_Target[playerid]][pBag] == 1)
					{PlayerInfo[bag_Target[playerid]][pInvWeapon][1]=wepId;PlayerInfo[bag_Target[playerid]][pInvAmmo][1]=ammo;}
                else if(PlayerInfo[bag_Target[playerid]][pInvWeapon][2] <= 0 && PlayerInfo[bag_Target[playerid]][pBag] == 2)
					{PlayerInfo[bag_Target[playerid]][pInvWeapon][2]=wepId;PlayerInfo[bag_Target[playerid]][pInvAmmo][2]=ammo;}
                else if(PlayerInfo[bag_Target[playerid]][pInvWeapon][3] <= 0 && PlayerInfo[bag_Target[playerid]][pBag] == 2)
					{PlayerInfo[bag_Target[playerid]][pInvWeapon][3]=wepId;PlayerInfo[bag_Target[playerid]][pInvAmmo][3]=ammo;}
                else if(PlayerInfo[bag_Target[playerid]][pInvWeapon][4] <= 0 && PlayerInfo[bag_Target[playerid]][pBag] == 3)
					{PlayerInfo[bag_Target[playerid]][pInvWeapon][4]=wepId;PlayerInfo[bag_Target[playerid]][pInvAmmo][4]=ammo;}
                else if(PlayerInfo[bag_Target[playerid]][pInvWeapon][5] <= 0 && PlayerInfo[bag_Target[playerid]][pBag] == 3)
					{PlayerInfo[bag_Target[playerid]][pInvWeapon][5]=wepId;PlayerInfo[bag_Target[playerid]][pInvAmmo][5]=ammo;}
				RemovePlayerWeapon(playerid,wepId);
				format(string,sizeof(string),"{969696}» Sac «{FFFFFF} Vous avez déposé un(e) %s (%d balle(s)).",wepName,ammo);
				msg_Client(playerid,COLOR_STATS,string);
				format(string, sizeof(string), "* %s dépose quelque chose dans le sac.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
				bag_ShowDialog(playerid,bag_Target[playerid]);
		    }
		}
		else if(bag_Dialog[playerid] == 1)
		{
		    if(inventory_GetItemQuantity(bag_Target[playerid],PlayerInfo[bag_Target[playerid]][pInvModel][listitem]) <= 0)
		        {msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Emplacement vide !"); bag_ShowDialog(playerid,bag_Target[playerid]); return 1;}

			SetPVarInt(playerid,"bag_ItemSlot",listitem);
			format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez retirer dans le sac (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(bag_Target[playerid],PlayerInfo[bag_Target[playerid]][pInvModel][listitem]));
			ShowPlayerDialog(playerid,35,DIALOG_STYLE_INPUT,"{969696}» Sac «{FFFFFF} Retirer un objet",string,"Retirer","Retour");
            bag_Dialog[playerid]=2;

		}
		else if(bag_Dialog[playerid] == 2)
		{
		    new slot = GetPVarInt(playerid,"bag_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > inventory_GetItemQuantity(bag_Target[playerid],PlayerInfo[bag_Target[playerid]][pInvModel][slot]) || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez retirer dans le sac (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(bag_Target[playerid],PlayerInfo[bag_Target[playerid]][pInvModel][slot]));
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{969696}» Sac «{FFFFFF} Retirer un objet",string,"Retirer","Retour");
			}
			if(inventory_UpdateItem(playerid,PlayerInfo[bag_Target[playerid]][pInvModel][slot],strval(inputtext)))
			{
	            format(string,sizeof(string),"{969696}» Sac «{FFFFFF} Vous avez pris %d de %s.",strval(inputtext),GetItemName(PlayerInfo[bag_Target[playerid]][pInvModel][slot]));
				msg_Client(playerid,COLOR_STATS,string);
				format(string, sizeof(string), "* %s prend quelque chose dans le sac.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
				inventory_UpdateItem(bag_Target[playerid],PlayerInfo[bag_Target[playerid]][pInvModel][slot],-strval(inputtext));
			}
			else
			    {msg_Client(playerid,COLOR_INFO,"{969696}» Sac «{FFFFFF} Votre sac est plein.");}
            bag_ShowDialog(playerid,bag_Target[playerid]);
		}
		else if(bag_Dialog[playerid] == 3)
		{
		    if(inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]) <= 0)
		        {msg_Client(playerid,COLOR_STATS,"{969696}» Sac «{FFFFFF} Emplacement vide !"); bag_ShowDialog(playerid,bag_Target[playerid]); return 1;}

			SetPVarInt(playerid,"bag_ItemSlot",listitem);
			format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez déposer dans le sac (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]));
			ShowPlayerDialog(playerid,35,DIALOG_STYLE_INPUT,"{969696}» Sac «{FFFFFF} Déposer un objet",string,"Déposer","Retour");
            bag_Dialog[playerid]=4;

		}
		else if(bag_Dialog[playerid] == 4)
		{
		    new slot = GetPVarInt(playerid,"bag_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]) || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez déposer dans le sac (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(bag_Target[playerid],PlayerInfo[bag_Target[playerid]][pInvModel][slot]));
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{969696}» Sac «{FFFFFF} Déposer un objet",string,"Déposer","Retour");
			}
			if(inventory_UpdateItem(bag_Target[playerid],PlayerInfo[playerid][pInvModel][slot],strval(inputtext)))
			{
	            format(string,sizeof(string),"{969696}» Sac «{FFFFFF} Vous avez déposer %d de %s.",strval(inputtext),GetItemName(PlayerInfo[playerid][pInvModel][slot]));
				msg_Client(playerid,COLOR_STATS,string);
				format(string, sizeof(string), "* %s dépose quelque chose dans le sac.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
				inventory_UpdateItem(playerid,PlayerInfo[playerid][pInvModel][slot],-strval(inputtext));
			}
			else
			    {msg_Client(playerid,COLOR_INFO,"{969696}» Sac «{FFFFFF} Le sac est plein.");}
            bag_ShowDialog(playerid,bag_Target[playerid]);
		}
		else if(bag_Dialog[playerid] == 5)
		{
		    new wepname[32];
			if(PlayerInfo[bag_Target[playerid]][pInvWeapon][listitem] > 0)
			{
			    GetWeaponName(PlayerInfo[bag_Target[playerid]][pInvWeapon][listitem],wepname,sizeof(wepname));
				SafeGivePlayerWeapon(playerid,PlayerInfo[bag_Target[playerid]][pInvWeapon][listitem],PlayerInfo[bag_Target[playerid]][pInvAmmo][listitem]);
				format(string,sizeof(string),"{969696}» Sac «{FFFFFF} Vous avez pris un(e) %s (%d balle(s)).",wepname,PlayerInfo[bag_Target[playerid]][pInvAmmo][listitem]);
				PlayerInfo[bag_Target[playerid]][pInvWeapon][listitem] = 0;
				PlayerInfo[bag_Target[playerid]][pInvAmmo][listitem] = 0;
			}
			else
			    return msg_Client(playerid,COLOR_WHITE,"{969696}» Sac «{FFFFFF} Cet emplacement est vide.");
			msg_Client(playerid,COLOR_STATS,string);
			format(string, sizeof(string), "* %s retire quelque chose dans le sac.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			bag_ShowDialog(playerid,bag_Target[playerid]);
		}
		return 1;
    }
    if(dialogid == 95)
    {
        new counter = 0,resultid;
		for(new i=1; i <= totalVehicles; i++)
		{
			new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			if(dist)
				{resultid = i;counter++;}
		}
        if(counter == 0)
			{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Aucun véhicule pret de vous.");}
		else if(counter > 1)
			{return msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Trop de véhicule prêt de vous.");}
		
		new mycar = resultid;
        if(!response)
		{
			if(car_DialogSafe[playerid]==0) {return 1;}
			else
				{return car_ShowDialogTrunk(playerid,mycar);}
		}
		if(car_DialogSafe[playerid] == 0)
		{
		    if(listitem == 0)
		    {
		        new maxstring[512];
		        for(new i=0; i<gPlayerInventory[playerid]; i++)
		        {
		            format(string,sizeof(string),"- %s : [%d]\n",GetItemName(PlayerInfo[playerid][pInvModel][i]),PlayerInfo[playerid][pInvQuant][i]);
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,95,DIALOG_STYLE_LIST, "{8BE2E2}» Véhicule «{FFFFFF} Déposer un objet", maxstring, "Valider", "Retour");
                car_DialogSafe[playerid]=1;
		    }
		    else if(listitem == 1)
		    {
		        new maxstring[512];
		        for(new i=0; i<15; i++)
		        {
		            format(string,sizeof(string),"- %s : [%d]\n",GetItemName(vehicle[mycar][cItemM][i]),vehicle[mycar][cItemQ][i]);
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,95,DIALOG_STYLE_LIST, "{8BE2E2}» Véhicule «{FFFFFF} Retirer un objet", maxstring, "Valider", "Retour");
                car_DialogSafe[playerid]=3;
		    }
		    else if(listitem == 2)
		    {
		        if(police_Duty[playerid]==1 || gouv_Duty[playerid] == 1)
			    	{return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Impossible de déposer vos armes de service."),car_ShowDialogTrunk(playerid,mycar);}
	            if(GetPlayerWeapon(playerid) == 0 || GetPlayerAmmo(playerid) == 0)
					{return msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez avoir une arme en main."),car_ShowDialogTrunk(playerid,mycar);}

				new wepId = GetPlayerWeapon(playerid);
				new ammo = GetPlayerAmmo(playerid);
		        new slot=-1,wepname[32],nb=5;
		        GetWeaponName(wepId,wepname,sizeof(wepname));
				if(IsAMoto(mycar)) nb=2;
				if(IsAPlane(mycar) || IsAHelicopter(mycar) || IsARemorque(mycar)) nb=10;
		        for(new i=0; i<nb; i++)
		        {
		            if(vehicle[mycar][cWep][i] == 0)
		                {slot=i;break;}
		        }
				if(slot==-1)
				    {return msg_Client(playerid,COLOR_VEHICLE,"{8BE2E2}» Véhicule «{FFFFFF} Plus de place dans le coffre."),car_ShowDialogTrunk(playerid,mycar);}
                format(string, sizeof(string), "* %s dépose quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
				format(string,sizeof(string),"{8BE2E2}» Véhicule «{FFFFFF} Vous avez déposé un(e) %s. (%d balle(s))",wepname,ammo);
				msg_Client(playerid,COLOR_VEHICLE,string);
                RemovePlayerWeapon(playerid, wepId);
                vehicle[mycar][cWep][slot] = wepId;
                vehicle[mycar][cAmmo][slot] = ammo;
                car_ShowDialogTrunk(playerid,mycar);
                vehicle_Save(mycar,0,1);
		    }
		    else if(listitem == 3)
		    {
		        new maxstring[256],nb=5;
				if(IsAMoto(mycar)) nb=2;
				if(IsAPlane(mycar) || IsAHelicopter(mycar) || IsARemorque(mycar)) nb=10;
		        for(new i=0; i<nb; i++)
		        {
		            new wepname[32]="Aucune";
		            if(vehicle[mycar][cWep][i] != 0)
		                {GetWeaponName(vehicle[mycar][cWep][i],wepname,sizeof(wepname));}
		            format(string,sizeof(string),"[Slot %d] %s : (%d)\n",i+1,wepname,vehicle[mycar][cAmmo][i]);
	                strins(maxstring,string,strlen(maxstring),sizeof(maxstring));
		        }
		        ShowPlayerDialog(playerid,95,DIALOG_STYLE_LIST, "{8BE2E2}» Véhicule «{FFFFFF} Retirer une arme", maxstring, "Valider", "Retour");
                car_DialogSafe[playerid]=5;
		    }
		    else if(listitem == 4)
		    {
		        car_DialogSafe[playerid]=6;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
				ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Déposer de l'argent",string,"Déposer","Retour");
		    }
		    else if(listitem == 5)
		    {
		        car_DialogSafe[playerid]=7;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}$%d{FFFFFF})",vehicle[mycar][cCash]);
				ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Retirer de l'argent",string,"Retirer","Retour");
		    }
		    else if(listitem == 6)
		    {
		        if(police_Duty[playerid]==1 || gouv_Duty[playerid] == 1)
			    	{return msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Impossible de déposer votre gilet en service."),car_ShowDialogTrunk(playerid,mycar);}
		        car_DialogSafe[playerid]=8;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",PlayerInfo[playerid][pArmour]);
				ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Déposer du gilet par balles",string,"Déposer","Retour");
		    }
		    else if(listitem == 7)
		    {
		        car_DialogSafe[playerid]=9;
        	    format(string, sizeof(string),"{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",vehicle[mycar][cArmour]);
				ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		}
		else if(car_DialogSafe[playerid] == 1)
		{
		    if(inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]) <= 0)
		        {msg_Client(playerid,COLOR_VEHICLE,"{8BE2E2}» Véhicule «{FFFFFF} Emplacement vide !"); car_ShowDialogTrunk(playerid,mycar);return 1;}

			SetPVarInt(playerid,"trunk_ItemSlot",listitem);
			format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez déposer dans le coffre (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][listitem]));
			ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Déposer un objet",string,"Déposer","Retour");
            car_DialogSafe[playerid]=2;
		}
		else if(car_DialogSafe[playerid] == 2)
		{
		    new slot = GetPVarInt(playerid,"trunk_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]) || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez déposer dans le coffre (Max: {00FF00}%d{FFFFFF})",inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][slot]));
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Déposer un objet",string,"Déposer","Retour");
			}
			new carSlot=-1;
			for(new i=14; i>=0; i--)
			{
			    if(vehicle[mycar][cItemM][i] == PlayerInfo[playerid][pInvModel][slot])
			        {carSlot=i;break;}
				else if(vehicle[mycar][cItemM][i] == -1)
				    {carSlot=i;}
			}
			if(carSlot==-1)
			    {return msg_Client(playerid,COLOR_VEHICLE,"{8BE2E2}» Véhicule «{FFFFFF} Plus de place dans le coffre."),car_ShowDialogTrunk(playerid,mycar);}
            format(string,sizeof(string),"{8BE2E2}» Véhicule «{FFFFFF} Vous avez déposé %d de %s.",strval(inputtext),GetItemName(PlayerInfo[playerid][pInvModel][slot]));
			msg_Client(playerid,COLOR_VEHICLE,string);
			format(string, sizeof(string), "* %s dépose quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			vehicle[mycar][cItemM][carSlot] = PlayerInfo[playerid][pInvModel][slot];
			vehicle[mycar][cItemQ][carSlot] += strval(inputtext);
			inventory_UpdateItem(playerid,PlayerInfo[playerid][pInvModel][slot],-strval(inputtext));
			car_ShowDialogTrunk(playerid,mycar);
			vehicle_Save(mycar,0,1);
		}
		else if(car_DialogSafe[playerid] == 3)
		{
		    if(vehicle[mycar][cItemM][listitem] == -1)
		        {msg_Client(playerid,COLOR_VEHICLE,"{8BE2E2}» Véhicule «{FFFFFF} Emplacement vide !"); car_ShowDialogTrunk(playerid,mycar);return 1;}

			SetPVarInt(playerid,"trunk_ItemSlot",listitem);
			format(string, sizeof(string),"{FFFFFF}Entrer la quantité que vous desirez retirer dans le coffre (Max: {00FF00}%d{FFFFFF})",vehicle[mycar][cItemQ][listitem]);
			ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Retirer un objet",string,"Retirer","Retour");
            car_DialogSafe[playerid]=4;
		}
		else if(car_DialogSafe[playerid] == 4)
		{
		    new slot = GetPVarInt(playerid,"trunk_ItemSlot");
		    if(!strlen(inputtext) || strval(inputtext) > vehicle[mycar][cItemQ][slot] || strval(inputtext) < 1 )
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans la quantité !\n{FFFFFF}Entrer la quantité que vous desirez retirer dans le coffre (Max: {00FF00}%d{FFFFFF})",vehicle[mycar][cItemQ][slot]);
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Retirer un objet",string,"Retirer","Retour");
			}
			format(string,sizeof(string),"{8BE2E2}» Véhicule «{FFFFFF} Vous avez retiré %d de %s.",strval(inputtext),GetItemName(vehicle[mycar][cItemM][slot]));
			msg_Client(playerid,COLOR_VEHICLE,string);
			format(string, sizeof(string), "* %s retire quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			inventory_UpdateItem(playerid,vehicle[mycar][cItemM][slot],strval(inputtext));
			if(vehicle[mycar][cItemQ][slot]-strval(inputtext) <= 0)
				{vehicle[mycar][cItemM][slot] = -1;vehicle[mycar][cItemQ][slot] = 0;}
			else
				{vehicle[mycar][cItemQ][slot]-=strval(inputtext);}
			car_ShowDialogTrunk(playerid,mycar);
			vehicle_Save(mycar,0,1);
		}
		else if(car_DialogSafe[playerid] == 5)
		{
		    if(vehicle[mycar][cWep][listitem] == 0)
		        {msg_Client(playerid,COLOR_VEHICLE,"{8BE2E2}» Véhicule «{FFFFFF} Cet emplacement est vide."); car_ShowDialogTrunk(playerid,mycar); return 1;}

			new wepname[32];
			GetWeaponName(vehicle[mycar][cWep][listitem],wepname,sizeof(wepname));
            format(string,sizeof(string),"{8BE2E2}» Véhicule «{FFFFFF} Vous avez retiré un(e) %s. (%d balle(s))",wepname,vehicle[mycar][cAmmo][listitem]);
			msg_Client(playerid,COLOR_VEHICLE,string);
			format(string, sizeof(string), "* %s retire quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			SafeGivePlayerWeapon(playerid,vehicle[mycar][cWep][listitem],vehicle[mycar][cAmmo][listitem]);
			vehicle[mycar][cWep][listitem] = 0;
			vehicle[mycar][cAmmo][listitem] = 0;
			car_ShowDialogTrunk(playerid,mycar);
			vehicle_Save(mycar,0,1);
		}
		else if(car_DialogSafe[playerid] == 6)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) >PlayerInfo[playerid][pCash])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Déposer de l'argent",string,"Déposer","Retour");
		    }
		    if((strval(inputtext)+vehicle[mycar][cCash])>50000)
		    {
		        format(string, sizeof(string),"{FF0000}Maximum $50.000 dans le coffre (Au total)\n{FFFFFF}Entrer le montant que vous desirez mettre dans le coffre (Max: {00FF00}$%d{FFFFFF})",PlayerInfo[playerid][pCash]);
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Déposer de l'argent",string,"Déposer","Retour");
		    }
		    vehicle[mycar][cCash] += strval(inputtext);
		    SafeGivePlayerMoney(playerid,-strval(inputtext),"Depot coffre véhicule");
		    format(string, sizeof(string), "{8BE2E2}» Véhicule «{FFFFFF} Vous avez déposé $%d dans le coffre du véhicule.", strval(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s dépose quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			car_ShowDialogTrunk(playerid,mycar);
		    vehicle_Save(mycar,0,1);
		}
		else if(car_DialogSafe[playerid] == 7)
		{
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext)>vehicle[mycar][cCash])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}$%d{FFFFFF})",vehicle[mycar][cCash]);
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Retirer de l'argent",string,"Retirer","Retour");
		    }
		    vehicle[mycar][cCash] -= strval(inputtext);
		    SafeGivePlayerMoney(playerid,strval(inputtext),"Retrait coffre véhicule");
		    format(string, sizeof(string), "{8BE2E2}» Véhicule «{FFFFFF} Vous avez retiré $%d dans le coffre du véhicule.", strval(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s retire quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			car_ShowDialogTrunk(playerid,mycar);
		    vehicle_Save(mycar,0,1);
		}
		else if(car_DialogSafe[playerid] == 8)
		{
		    if(!strlen(inputtext) || floatstr(inputtext) < 1 || floatstr(inputtext) > PlayerInfo[playerid][pArmour])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",PlayerInfo[playerid][pArmour]);
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Déposer du gilet par balles",string,"Déposer","Retour");
		    }
		    vehicle[mycar][cArmour] += floatstr(inputtext);
		    SafeGivePlayerArmour(playerid,-strval(inputtext));
		    format(string, sizeof(string), "{8BE2E2}» Véhicule «{FFFFFF} Vous avez déposé %0.0f de gilet dans le coffre du véhicule.", floatstr(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s dépose quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			car_ShowDialogTrunk(playerid,mycar);
		    vehicle_Save(mycar,0,1);
		}
		else if(car_DialogSafe[playerid] == 9)
		{
		    if(!strlen(inputtext) || floatstr(inputtext) < 1 || floatstr(inputtext) > vehicle[mycar][cArmour])
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",vehicle[mycar][cArmour]);
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		    if(floatstr(inputtext) > 100 || (PlayerInfo[playerid][pArmour]+floatstr(inputtext)) > 100)
		    {
		        format(string, sizeof(string),"{FF0000}Erreur dans le montant, vous ne pouvez avoir que 100 d'armure sur vous !\n{FFFFFF}Entrer le montant que vous desirez retirer dans le coffre (Max: {00FF00}%0.0f{FFFFFF})",vehicle[mycar][cArmour]);
				return ShowPlayerDialog(playerid,95,DIALOG_STYLE_INPUT,"{8BE2E2}» Véhicule «{FFFFFF} Retirer du gilet par balles",string,"Retirer","Retour");
		    }
		    vehicle[mycar][cArmour] -= floatstr(inputtext);
		    SafeSetPlayerArmour(playerid,(PlayerInfo[playerid][pArmour]+floatstr(inputtext)));
		    format(string, sizeof(string), "{8BE2E2}» Véhicule «{FFFFFF} Vous avez retiré %0.0f de gilet dans le coffre du véhicule.", floatstr(inputtext));
		    msg_Client(playerid,COLOR_VEHICLE,string);
		    format(string, sizeof(string), "* %s retire quelque chose dans le coffre du véhicule.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,false);
			car_ShowDialogTrunk(playerid,mycar);
		    vehicle_Save(mycar,0,1);
		}
		return 1;
    }
	if(dialogid == 86)
    {
        if(!response)
		{
			if(player_Variable[playerid]==0) return 1;
			else
			{
				player_Variable[playerid]=0;
				format(string,sizeof(string),"- Relevé bancaire \n- Déposer du liquide (MAX:$%d) \n- Retirer du liquide (MAX:$%d)\n- Virement Bancaire\n- Demander un chéquier",PlayerInfo[playerid][pCash],PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_LIST,"{AADD66}» Banque «{FFFFFF} Opérations disponibles",string,"Valider","Quitter");
				return 1;
			}
		}
		if(player_Variable[playerid] == 0)
		{
			if(listitem == 0)
        	{
        	    GetPlayerName(playerid,sendername,sizeof(sendername));
        	    format(string, sizeof(string), "* %s appelle son banquier pour voir l'état de son compte.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
				player_Variable[playerid]=0;
				new Balance = PlayerInfo[playerid][pAccount];
				new Cash = PlayerInfo[playerid][pCash];
				msg_Client(playerid, COLOR_LIGHTRED, "$----------------[ Banque ]--------------$");
				format(string, sizeof(string), "| Compte en banque : $%d", Balance);
				msg_Client(playerid, COLOR_BANK, string);
				format(string, sizeof(string), "| Liquide : $%d", Cash);
				msg_Client(playerid, COLOR_BANK, string);
				msg_Client(playerid, COLOR_LIGHTRED, "$----------------------------------------$");
			}
			if(listitem == 1)
        	{
        	    player_Variable[playerid]=1;
        	    format(string,sizeof(string),"Dépot maximum : $%d .\n\nEntrez le montant que vous souhaitez déposer :",PlayerInfo[playerid][pCash]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Dépot",string,"Déposer","Retour");
        	}
        	if(listitem == 2)
        	{
        	    player_Variable[playerid]=2;
        	    format(string,sizeof(string),"Retrait maximum : $%d .\n\nEntrez le montant que vous souhaitez retirer :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Retrait",string,"Retirer","Retour");
        	}
        	if(listitem == 3)
        	{
        	    player_Variable[playerid]=3;
        	    format(string,sizeof(string),"Virement maximum : $%d .\n\nEntrez le montant que vous souhaitez virer ainsi que l'ID du joueur séparé d'un '/' . \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
        	}
        	if(listitem == 4)
        	{
        	    player_Variable[playerid]=4;
        	    format(string,sizeof(string),"Demande d'un chéquier au nom %s.",PlayerInfo[playerid][pRealName]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_MSGBOX,"{AADD66}» Banque «{FFFFFF} Virement",string,"Accepter","Refuser");
        	}
		}
		else if(player_Variable[playerid] == 1) // Le dépot
		{
		    if(!strlen(inputtext) || strlen(inputtext)>9)
		    {
		        format(string,sizeof(string),"Dépot maximum : $%d .\n\nErreur dans le montant :",PlayerInfo[playerid][pCash]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Dépot",string,"Déposer","Retour");
		        return 1;
		    }
		    new montant=strval(inputtext);
		    if(montant<1 || montant>PlayerInfo[playerid][pCash])
		    {
		        format(string,sizeof(string),"Dépot maximum : $%d .\n\nErreur dans le montant :",PlayerInfo[playerid][pCash]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Dépot",string,"Déposer","Retour");
		        return 1;
		    }
		    new curfunds = PlayerInfo[playerid][pAccount];
		    SafeGivePlayerMoney(playerid,-montant,"Dépot argent sur son compte banquaire");
		    PlayerInfo[playerid][pAccount]=montant+PlayerInfo[playerid][pAccount];
		    new Cash = PlayerInfo[playerid][pCash];
		    msg_Client(playerid, COLOR_LIGHTRED, "$----------------[ Banque ]--------------$");
			format(string, sizeof(string), "| Argent sur le compte avant dépot : $%d", curfunds);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Somme déposée : $%d", montant);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Compte en banque après dépot : $%d", PlayerInfo[playerid][pAccount]);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Liquide après dépot : $%d", Cash);
			msg_Client(playerid, COLOR_BANK, string);
			msg_Client(playerid, COLOR_LIGHTRED, "$---------------------------------------------$");
		    player_Variable[playerid]=0;
		}
		else if(player_Variable[playerid]==2) // Le retrait
		{
		    if(!strlen(inputtext) || strlen(inputtext)>9)
		    {
		        format(string,sizeof(string),"Retrait maximum : $%d .\n\nErreur dans le montant :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Retrait",string,"Retirer","Retour");
		        return 1;
		    }
		    new montant=strval(inputtext);
			if(montant<1 || montant>PlayerInfo[playerid][pAccount])
			{
			    format(string,sizeof(string),"Retrait maximum : $%d .\n\nErreur dans le montant :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Retrait",string,"Retirer","Retour");
				return 1;
			}
			player_Variable[playerid]=0;
			new curfunds = PlayerInfo[playerid][pAccount];
			SafeGivePlayerMoney(playerid,montant,"Retire argent de son compte banquaire");
			PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-montant;
   			new Cash = PlayerInfo[playerid][pCash];
		    msg_Client(playerid, COLOR_LIGHTRED, "$----------------[ Banque ]--------------$");
			format(string, sizeof(string), "| Argent sur le compte avant retrait : $%d", curfunds);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Somme retirée : $%d", montant);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Compte en banque après retrait : $%d", PlayerInfo[playerid][pAccount]);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Liquide après retrait : $%d", Cash);
			msg_Client(playerid, COLOR_BANK, string);
			msg_Client(playerid, COLOR_LIGHTRED, "$---------------------------------------------$");
		}
		else if(player_Variable[playerid]==3) // Le virement
		{
		    if(!strlen(inputtext) || strlen(inputtext)>12)
		    {
		        format(string,sizeof(string),"Virement maximum : $%d .\n\nErreur dans le montant. \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
		        return 1;
		    }
		    if(strfind(inputtext,"/",true) == -1) // Pas de / trouvé
		    {
		        format(string,sizeof(string),"Virement maximum : $%d .\n\nErreur pas '/' trouvé. \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
		    	return 1;
		    }
		    new virement[12][16];
			split(inputtext,virement,'/');
			if(!strlen(virement[0])) // Pas de montant
			{
			    format(string,sizeof(string),"Virement maximum : $%d .\n\nErreur dans le montant. \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
		    	return 1;
		    }
			if(!strlen(virement[1])) // Pas de destinataire
			{
			    format(string,sizeof(string),"Virement maximum : $%d .\n\nErreur, pas de destinataire. \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
		    	return 1;
		    }
			if(strlen(virement[2])>0) // Erreur syntaxe
			{
			    format(string,sizeof(string),"Virement maximum : $%d .\n\nErreur syntax, recommencé. \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
		    	return 1;
		    }
		    new montant=strval(virement[0]);
			new giveplayerid=strval(virement[1]);
			if(giveplayerid==playerid)
			{
			    format(string,sizeof(string),"Virement maximum : $%d .\n\nErreur, vous ne pouvez vous virer à vous même. \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
			    return 1;
			}
			if(montant<1 || montant>PlayerInfo[playerid][pAccount])
			{
			    format(string,sizeof(string),"Virement maximum : $%d .\n\nErreur dans le montant. \nEx : 3600/2  :",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"{AADD66}» Banque «{FFFFFF} Virement",string,"Virer","Retour");
			    return 1;
			}
			new Balance = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount] -= montant;
			PlayerInfo[giveplayerid][pAccount] += montant;

			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "* %s fait un virement.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			format(string,sizeof(string),"[Banque]; Vous recevez un virement de %s. Montant: $%d",sendername,montant);
			msg_Client(giveplayerid,COLOR_BANK,string);
			player_Variable[playerid]=0;
			msg_Client(playerid, COLOR_LIGHTRED, "$----------------[ Banque ]--------------$");
			format(string, sizeof(string), "| Argent sur le compte avant virement : $%d", Balance);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Somme du virement : $%d", montant);
			msg_Client(playerid, COLOR_BANK, string);
			format(string, sizeof(string), "| Compte en banque après virement : $%d", PlayerInfo[playerid][pAccount]);
			msg_Client(playerid, COLOR_BANK, string);
			msg_Client(playerid, COLOR_LIGHTRED, "$---------------------------------------------$");
		}
		else if(player_Variable[playerid]==4)
		{
		    if(response==1)
		    {
		        if(PlayerInfo[playerid][pCheck]==1)
		            {return msg_Client(playerid,COLOR_BANK,"{AADD66}» Banque «{FFFFFF} Vous avez déjà un chéquier.");}
				if(PlayerInfo[playerid][pLevel] <= 3)
				    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être level 3 minimum.");}
		        PlayerInfo[playerid][pCheck]=1;
				PlayerInfo[playerid][pCheckNumber]=20;
				msg_Client(playerid,COLOR_BANK,"{AADD66}» Banque «{FFFFFF} Votre chéquier vous a été délivré.");
				return 1;
		    }
	  		else
	  		{
	  		    player_Variable[playerid]=0;
				format(string,sizeof(string),"Relevé bancaire \nDéposer du liquide (MAX:$%d) \nRetirer du liquide (MAX:$%d)\nVirement Bancaire\nDemander un chéquier",PlayerInfo[playerid][pCash],PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_LIST,"{AADD66}» Banque «{FFFFFF} Opérations disponibles",string,"Valider","Quitter");
				return 1;
	  		}
		}
		return 1;
    }
    if(dialogid == 37)
    {
        if(!response)
		{
		    if(player_Dialog[playerid]==0) return 1;
			else
			{
			    new BizString[512];
			    new bizid = gPlayerInBizz[playerid];
			    player_Dialog[playerid]=0;
			    format(BizString, sizeof(BizString), "1. Acheter un vétement ($%d)\n2. Acheter une paire de lunette ($%d)\n3. Acheter un bandana ($%d)\n4. Acheter un casque de moto ($%d)\n5. Acheter une casquette ($%d)\n6. Acheter un châpeau ($%d)\n7. Acheter un berêt ($%d)\n8. Acheter un casque stereo ($%d)\n9. Acheter une montre ($%d)\n10. Acheter un sac ..\n11. Objets VIP",
			    bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8]);
			    ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST,"{2B6AFF}» Magasin de vétements «{FFFFFF} Achats",BizString,"Selectionner","Annuler");
				return 1;
			}
		}
		if(player_Dialog[playerid] == 0)
		{
		    if(listitem == 0)
        	{
        	    new skinL[300];
        	    for(new Skin=0; Skin<300; Skin++)
        	    	{skinL[Skin]=Skin;}
        	    ShowModelSelectionMenuEx(playerid, skinL, 299, "Choisissez un vetement", 2, 0.0, 0.0, 0.0);
        	    player_Dialog[playerid]=1;
        	    return 1;
        	}
        	if(listitem == 1)
        	{
        	    new glasse[33];
        	    for(new glasses=19006; glasses<19036; glasses++)
        	    	{glasse[glasses-19006]=glasses;}
                glasse[30]=19138; glasse[31]=19139; glasse[32]=19140;
			    ShowModelSelectionMenuEx(playerid, glasse, 33, "Choisissez une paire de lunettes", 2, 0.0, 0.0, 90.0);
        	    player_Dialog[playerid]=2;
			    return 1;
        	}
        	if(listitem == 2)
        	{
        	    if(PlayerInfo[playerid][pLevel] < 3)
	    			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez être niveau 3 pour pouvoir avoir un bandana.");return 1;}
	    		
        	    new Bandana[30];
        	    for(new bandana=18891; bandana<18921; bandana++)
        	    	{Bandana[bandana-18891]=bandana;}
			    ShowModelSelectionMenuEx(playerid, Bandana, 30, "Choisissez un bandana", 2, -20.0, 270.0, 0.0);
        	    player_Dialog[playerid]=3;
			    return 1;
        	}
        	if(listitem == 3)
        	{
        	    new Casque[5];
				Casque[0] = 18645;
				Casque[1] = 18976;
				Casque[2] = 18977;
				Casque[3] = 18978;
				Casque[4] = 18979;
			    ShowModelSelectionMenuEx(playerid, Casque, 5, "Choisissez un casque", 2, 0.0, 0.0, 90.0);
        	    player_Dialog[playerid]=4;
			    return 1;
        	}
        	if(listitem == 4)
        	{
        	    new Cap[23];
        	    for(new caps=18926; caps<18936; caps++)
        	    	{Cap[caps-18926]=caps;}
                for(new caps=18939; caps<18944; caps++)
        	    	{Cap[caps-18929]=caps;}
                for(new caps=18955; caps<18960; caps++)
        	    	{Cap[caps-18940]=caps;}
                Cap[20]=19160;
                Cap[21]=19093;
                Cap[22]=18636;
			    ShowModelSelectionMenuEx(playerid, Cap, 23, "Choisissez une casquette", 2, -20.0, 270.0, 0.0);
        	    player_Dialog[playerid]=5;
			    return 1;
        	}
        	if(listitem == 5)
        	{
        	    new Hat[21];
        	    for(new hats=18944; hats<18952; hats++)
        	    	{Hat[hats-18944]=hats;}
                for(new hats=18970; hats<18974; hats++)
        	    	{Hat[hats-18962]=hats;}
                Hat[12]=18969; Hat[13]=19095; Hat[14]=19096; Hat[15]=19097; Hat[16]=19098;
                Hat[17]=18639; Hat[18]=18962; Hat[19]=19099; Hat[20]=19100;
        	    ShowModelSelectionMenuEx(playerid, Hat, 21, "Choisissez un chapeau", 2, -20.0, 270.0, 0.0);
        	    player_Dialog[playerid]=6;
			    return 1;
        	}
        	if(listitem == 6)
        	{
        	    new Beret[4];
        	    for(new berets=18921; berets<18925; berets++)
        	    	{Beret[berets-18921]=berets;}
        	    ShowModelSelectionMenuEx(playerid, Beret, 4, "Choisissez un beret", 2, -20.0, 270.0, 0.0);
        	    player_Dialog[playerid]=7;
			    return 1;
        	}
        	if(listitem == 7)
        	{
        	    new Stereo[4];
        	    for(new stereos=19421; stereos<19425; stereos++)
        	    	{Stereo[stereos-19421]=stereos;}
        	    ShowModelSelectionMenuEx(playerid, Stereo, 4, "Choisissez un casque stereo", 2, 0.0, 0.0, 0.0);
        	    player_Dialog[playerid]=8;
			    return 1;
        	}
        	if(listitem == 8)
        	{
        	    new Watch[15];
        	    for(new watches=19039; watches<19054; watches++)
        	    	{Watch[watches-19039]=watches;}
        	    ShowModelSelectionMenuEx(playerid, Watch, 15, "Choisissez une montre", 2, -20.0, 270.0, 0.0);
        	    player_Dialog[playerid]=9;
			    return 1;
        	}
        	if(listitem == 9)
        	{
        	    new bizid = gPlayerInBizz[playerid];
                player_Dialog[playerid]=10;
        	    format(string,sizeof(string),"1. Sac Coyote ($%d) [2 Armes - 35 Emp.]\n2. Sac Alice Pack ($%d) [4 Armes - 45 Emp.]\n3. Sac Czech Backpack (Vip Diamant) ($%d) [6 Armes - 55Emp.]",
				bizz[bizid][itemCost][9],bizz[bizid][itemCost][10],bizz[bizid][itemCost][11]);
        	    ShowPlayerDialog(playerid,37,DIALOG_STYLE_LIST,"{2B6AFF}» Magasin de vétements «{FFFFFF} Achat d'un sac",string,"Acheter","Retour");
        	}
        	if(listitem == 10)
        	{
        	    new list = LoadModelSelectionMenu("LVRP/vip.txt");
        	    ShowModelSelectionMenu(playerid, list, "Choisissez un objet");
        	}
		}
		else if(player_Dialog[playerid] == 10)
		{
		    new bizid = gPlayerInBizz[playerid];

			pay_tempPrice[playerid] = bizz[bizid][itemCost][8+listitem];
			pay_tempArticle[playerid] = 10+listitem;
			pay_tempType[playerid] = 1;
			pay_showDialog(playerid, pay_tempPrice[playerid]);
		}
		return 1;
	}
    if(dialogid == 126)
    {
        if(!response)
			{return 1;}
		
		new bizid = gPlayerInSBizz[playerid]-1000;
		pay_tempPrice[playerid] = sbizz[bizid][ubPriceArticle][listitem];
		pay_tempProducts[playerid] = 0;
		pay_tempArticle[playerid] = listitem+1;
		pay_tempType[playerid] = 5;
		pay_showDialog(playerid, pay_tempPrice[playerid]);
		return 1;
    }
    if(dialogid == 25)
    {
        if(!response)
            {return 1;}
            
		format(sql,sizeof(sql),"SELECT * FROM lvrp_server_vehicles_prices WHERE id=%d",gps_Id[playerid][listitem]);
		mysql_query(MYSQL,sql);
        cache_get_value_name_int(0,"Price", pay_tempPrice[playerid]);
		cache_get_value_name_int(0,"Model", pay_tempProducts[playerid]);
		pay_tempArticle[playerid] = 1;
		pay_tempType[playerid] = 10;
		pay_showDialog(playerid, pay_tempPrice[playerid]);
		return 1;
	}
	if(dialogid == 104)
    {
        if(!response)
			{return 1;}
			
		new bizid = gPlayerInSBizz[playerid]-1000;
		pay_tempPrice[playerid] = sbizz[bizid][ubPriceArticle][listitem+1];
		pay_tempProducts[playerid] = 1;
		pay_tempArticle[playerid] = listitem+1;
		pay_tempType[playerid] = 5;
		pay_showDialog(playerid, pay_tempPrice[playerid]);
		return 1;
	}
	if(dialogid == 97)
    {
        if(!response)
			{return 1;}
			
		if(player_Dialog[playerid] == 1)
		{
		    if(strval(inputtext) < 1 || strval(inputtext) > 50)
	 			{ShowPlayerDialog(playerid,97,DIALOG_STYLE_INPUT,"{2B6AFF}» Tabac «{FFFFFF} Achats ticket de lotto","Erreur, numéro compris entre 1 et 50.\nEntrez le numero du ticket de lotto que vous désirez : (Entre 1 et 50)","Valider","");return 1;}
	 			
	 		PlayerInfo[playerid][plottoNr] = strval(inputtext);
	 		format(string, sizeof(string), "{2B6AFF}» Tabac «{FFFFFF} Ticket de lotto acheté, numéro choisi : %d.", strval(inputtext));
			msg_Client(playerid, COLOR_BIZ, string);
			player_Dialog[playerid]=0;
		    return 1;
		}
		new bizid = gPlayerInBizz[playerid];
		pay_tempPrice[playerid] = bizz[bizid][itemCost][listitem];
		pay_tempArticle[playerid] = listitem+1;
		pay_tempType[playerid] = 1;
		pay_showDialog(playerid, pay_tempPrice[playerid]);
		return 1;
	}
	if(dialogid == 70)
    {
		if(player_SellOther[playerid]==0)
		{
		    if(!response)
		    	{return 1;}
            if(!server_IsValidItem(PlayerInfo[playerid][pInvModel][listitem]))
		    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Erreur avec le slot."); player_SellOther[playerid]=0; player_SellOffer[playerid]=-1; return 1;}
		    player_SellId[playerid]=listitem; player_SellOther[playerid]=1;
		    format(string,sizeof(string),"{00FF00}%s{FFFFFF}\nEntrez la quantité que vous désirez donner :",GetItemName(PlayerInfo[playerid][pInvModel][listitem]));
		    ShowPlayerDialog(playerid,70,DIALOG_STYLE_INPUT,"» Donner «",string,"Valider","Annuler");
		}
		else if(player_SellOther[playerid]==1)
		{
		    if(!response)
		    	{return 1;}
		    if(!strlen(inputtext) || strval(inputtext)< 0 || strval(inputtext) > inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][player_SellId[playerid]]))
		    {
		        format(string,sizeof(string),"{FF0000}Erreur dans le montant.\n{00FF00}%s{FFFFFF}\nEntrez la quantité que vous désirez donner :",GetItemName(PlayerInfo[playerid][pInvModel][player_SellId[playerid]]));
		    	ShowPlayerDialog(playerid,70,DIALOG_STYLE_INPUT,"» Donner «",string,"Valider","Annuler");
		    	return 1;
			}
		    format(string,sizeof(string),"{FFFFFF}%s souhaite vous donner :\n- %s [{0000FF}%d{FFFFFF}]",PlayerInfo[playerid][pName],GetItemName(PlayerInfo[playerid][pInvModel][player_SellId[playerid]]),strval(inputtext));
			ShowPlayerDialog(player_SellOffer[playerid],70,DIALOG_STYLE_MSGBOX,"|Dons|",string,"Accepter","Refuser");
			player_SellOther[player_SellOffer[playerid]]=2;
			player_SellOffer[player_SellOffer[playerid]]=playerid;
			player_Variable[player_SellOffer[playerid]]=player_SellId[playerid];
			player_SellId[player_SellOffer[playerid]]=strval(inputtext);
		}
		else if(player_SellOther[playerid]==2)
		{
		    if(response)
		    {
		        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez accepté le don.");
		        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s a accepté votre don.",PlayerInfo[playerid][pName]);
		        msg_Client(player_SellOffer[playerid],COLOR_INFO,string);
		        inventory_UpdateItem(playerid,PlayerInfo[player_SellOffer[playerid]][pInvModel][player_Variable[playerid]],player_SellId[playerid]);
		        inventory_UpdateItem(player_SellOffer[playerid],PlayerInfo[player_SellOffer[playerid]][pInvModel][player_Variable[playerid]],-player_SellId[playerid]);
			}
		    else
		    {
		        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez refusé le don.");
		        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} %s a refusé votre don.",PlayerInfo[playerid][pName]);
		        msg_Client(player_SellOffer[playerid],COLOR_INFO,string);
		    }
		    player_SellOther[player_SellOffer[playerid]]=0; player_SellOffer[player_SellOffer[playerid]]=-1; player_Variable[player_SellOffer[playerid]]=-1; player_SellId[player_SellOffer[playerid]]=-1;
		    player_SellOther[playerid]=0; player_SellOffer[playerid]=-1; player_SellId[playerid]=-1; player_Variable[playerid]=-1;
		}
		return 1;
    }
    if(dialogid == 136)
    {
        if(!response)
   			{return 1;}
        if(player_SellOther[playerid]==0)
		{
            if(!server_IsValidItem(PlayerInfo[playerid][pInvModel][listitem]))
		    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Erreur avec le slot."); player_SellOther[playerid]=0; player_SellOffer[playerid]=-1; return 1;}
		    player_SellId[playerid]=listitem; player_SellOther[playerid]=1;
		    format(string,sizeof(string),"{00FF00}%s{FFFFFF}\nEntrez la quantité que vous désirez poser :",GetItemName(PlayerInfo[playerid][pInvModel][listitem]));
		    ShowPlayerDialog(playerid,136,DIALOG_STYLE_INPUT,"|Poser| Objet",string,"Valider","Annuler");
		}
		else if(player_SellOther[playerid]==1)
		{
		    if(!strlen(inputtext) || strval(inputtext)< 0  || strval(inputtext) > inventory_GetItemQuantity(playerid,PlayerInfo[playerid][pInvModel][player_SellId[playerid]]))
		    {
		        format(string,sizeof(string),"{FF0000}Erreur dans le montant.\n{00FF00}%s{FFFFFF}\nEntrez la quantité que vous désirez poser :",GetItemName(PlayerInfo[playerid][pInvModel][player_SellId[playerid]]));
		    	ShowPlayerDialog(playerid,136,DIALOG_STYLE_INPUT,"|Poser| Objet",string,"Valider","Annuler");
		    	return 1;
			}
			drop_Throw(playerid, PlayerInfo[playerid][pInvModel][player_SellId[playerid]], strval(inputtext), -1);
			format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez posé un(e) %s. [%d]",GetItemName(PlayerInfo[playerid][pInvModel][player_SellId[playerid]]),strval(inputtext));
			msg_Client(playerid,COLOR_INFO,string);
			format(string, sizeof(string), "* %s pose un objet à terre.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			inventory_UpdateItem(playerid,PlayerInfo[playerid][pInvModel][player_SellId[playerid]],-strval(inputtext));
			player_SellOther[playerid]=0; player_SellOffer[playerid]=-1; player_SellId[playerid]=-1;
		}
        return 1;
    }
    if(dialogid == 87)
    {
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pCash]>governement[PlayerInfo[player_Variable[playerid]][pMember]-6][license][4])
		    {
			    PlayerInfo[playerid][pGunLic] = 1;
			    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Félicitation, vous avez acheté le permis de port d'arme.");
			    SafeGivePlayerMoney(playerid, -governement[PlayerInfo[player_Variable[playerid]][pMember]-6][license][4],"Achat permis arme");
			    governement[PlayerInfo[player_Variable[playerid]][pMember]-6][safe] += governement[PlayerInfo[player_Variable[playerid]][pMember]-6][license][4];
			    return 1;
		    }
		    else
		    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");return 1;}
		}
		return 1;
    }
    if(dialogid == 111)
    {
        if(!response)
        	{msg_Client(player_SellOffer[playerid],COLOR_WHITE,"{FF8282}» Médecin «{FFFFFF} Le patient a refusé."); player_SellOffer[playerid]=-1; player_SellOther[playerid]=0;return 1;}
        	
        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez été soignez pour $%d, (Argent retiré de votre compte banquaire)",player_SellOther[playerid]);
        msg_Client(playerid,COLOR_INFO,string);
        format(string,sizeof(string),"{FF8282}» Médecin «{FFFFFF} %s a accepté votre soin $%d, l'argent ajouté au bonus.",PlayerInfo[playerid][pName],player_SellOther[playerid]);
        msg_Client(player_SellOffer[playerid],COLOR_ALLDEPT,string);

		PlayerInfo[playerid][pAccount]-=player_SellOther[playerid];
		PlayerInfo[player_SellOffer[playerid]][pJobBonus]+=player_SellOther[playerid];
		SafeSetPlayerHealth(playerid,75.0);
		
        if(medic_PlayerNeedMedic[playerid] == 1) // Bléssé
		{
			TogglePlayerControllable(playerid,true);
			ClearAnimations(playerid);
			medic_PlayerNeedMedic[playerid]=0; medic_PlayerMedicTime[playerid]=0;
			SetPlayerColor(playerid,0xFFFFFF00);
		}
		player_SellOffer[playerid]=-1; player_SellOther[playerid]=0;
		return 1;
    }
    if(dialogid == 45)
    {
        if(!response)
			{return 1;}
		if(!strlen(inputtext) || strlen(inputtext) > 10 || strlen(inputtext) < 0)
			{return ShowPlayerDialog(playerid,45,DIALOG_STYLE_INPUT,"» Beta Fermée «","{FF0000}Cette clée est invalide !\n\n{FFFFFF}Entrez votre clée beta pour vous inscrire :","Valider","");}
		new tmpKey = strval(inputtext);
		format(sql,sizeof(sql),"SELECT used FROM lvrp_server_betakeys WHERE serial = %d",tmpKey);
		mysql_tquery(MYSQL,sql,"beta_CheckKey","id",playerid,tmpKey);
       	return 1;
    }
	if(dialogid == 127)
    {
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pCash]>mecano_Price[playerid])
		    {
			    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Votre véhicule a été réparé pour $%d.",mecano_Price[playerid]);
			    msg_Client(playerid, COLOR_INFO, string);
			    format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez reparé le véhicule de %s pour $%d.",PlayerInfo[playerid][pName],mecano_Price[playerid]);
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, string);
			    SafeGivePlayerMoney(playerid, -mecano_Price[playerid],"Job, réparation");
			    SafeGivePlayerMoney(mecano_Offer[playerid], mecano_Price[playerid],"Payement réparation mécano");
			    SafeSetVehicleHealth(carid,1000.0);
			    mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
		    }
		    else
			{
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client n'a pas assez d'argent.");
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");
				mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
				return 1;
			}
		}
		if(response == 0)
		{
		    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez refusé.");
		    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client à refusé.");
		    mecano_Offer[playerid] = 0;
		    mecano_Price[playerid] = 0;
		    return 1;
		}
		return 1;
    }
    if(dialogid == 63)
    {
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pCash]>mecano_Price[playerid])
		    {
			    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Votre véhicule a été bridé pour $%d.",mecano_Price[playerid]);
			    msg_Client(playerid, COLOR_INFO, string);
			    format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez bridé le véhicule de %s pour $%d.",PlayerInfo[playerid][pName],mecano_Price[playerid]);
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, string);
			    SafeGivePlayerMoney(playerid, -mecano_Price[playerid],"Job, bridage");
			    SafeGivePlayerMoney(mecano_Offer[playerid], mecano_Price[playerid],"Payement bridage mécano");
			    vehicle[carid][cBrid]=car_GetBridVehicle(carid);
			    mecano_Offer[playerid] = 0;mecano_Price[playerid] = 0;
		    }
		    else
			{
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client n'a pas assez d'argent.");
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");
				mecano_Offer[playerid] = 0;mecano_Price[playerid] = 0;
				return 1;
			}
		}
		if(response == 0)
		{
		    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez refusé.");
		    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client à refusé.");
		    mecano_Offer[playerid] = 0;mecano_Price[playerid] = 0;
		    return 1;
		}
		return 1;
    }
    if(dialogid == 64)
    {
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pCash]>mecano_Price[playerid])
		    {
			    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Votre véhicule a été débridé pour $%d.",mecano_Price[playerid]);
			    msg_Client(playerid, COLOR_INFO, string);
			    format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez débridé le véhicule de %s pour $%d.",PlayerInfo[playerid][pName],mecano_Price[playerid]);
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, string);
			    SafeGivePlayerMoney(playerid, -mecano_Price[playerid],"Job, débridage");
			    SafeGivePlayerMoney(mecano_Offer[playerid], mecano_Price[playerid],"Payement débridage mécano");
			    vehicle[carid][cBrid]=0;
			    mecano_Offer[playerid] = 0;mecano_Price[playerid] = 0;
		    }
		    else
			{
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client n'a pas assez d'argent.");
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");
				mecano_Offer[playerid] = 0;mecano_Price[playerid] = 0;
				return 1;
			}
		}
		if(response == 0)
		{
		    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez refusé.");
		    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client à refusé.");
		    mecano_Offer[playerid] = 0;mecano_Price[playerid] = 0;
		    return 1;
		}
		return 1;
    }
    if(dialogid == 128)
    {
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pCash]>mecano_Price[playerid])
		    {
			    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Votre véhicule a été remplie pour $%d.",mecano_Price[playerid]);
			    msg_Client(playerid, COLOR_INFO, string);
			    format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez remplie le véhicule de %s pour $%d.",PlayerInfo[playerid][pName],mecano_Price[playerid]);
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, string);
			    SafeGivePlayerMoney(playerid, -mecano_Price[playerid],"job, remplie un véhicule");
			    SafeGivePlayerMoney(mecano_Offer[playerid], mecano_Price[playerid],"Payement plein mécano");
			    vehicle[carid][cGas]+=20;
			    mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
		    }
		    else
			{
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client n'a pas assez d'argent.");
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");
				mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
				return 1;
			}
		}
		if(response == 0)
		{
		    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez refusé.");
		    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client à refusé.");
		    mecano_Offer[playerid] = 0;
		    mecano_Price[playerid] = 0;
		    return 1;
		}
		return 1;
    }
    if(dialogid == 17)
    {
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pCash]>mecano_Price[playerid])
		    {
			    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} La carroserie de votre véhicule a été réparée pour $%d.",mecano_Price[playerid]);
			    msg_Client(playerid, COLOR_INFO, string);
			    format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez reparé la carrosrie du véhicule de %s pour $%d.",PlayerInfo[playerid][pName],mecano_Price[playerid]);
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, string);
			    SafeGivePlayerMoney(playerid, -mecano_Price[playerid],"Job, carroserie");
			    SafeGivePlayerMoney(mecano_Offer[playerid], mecano_Price[playerid],"Payement carroserie mécano");
			    UpdateVehicleDamageStatus(carid,0000,000000000000000000000000000000000,0000,encode_tires(0,0,0,0));
			    mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
		    }
		    else
			{
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client n'a pas assez d'argent.");
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");
				mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
				return 1;
			}
		}
		if(response == 0)
		{
		    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez refusé.");
		    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client à refusé.");
		    mecano_Offer[playerid] = 0;
		    mecano_Price[playerid] = 0;
		    return 1;
		}
		return 1;
    }
    if(dialogid == 22)
    {
        if(!response)
        	{police_TicketOffer[playerid]=-1;return 1;}
        police_GestionFineId[playerid]=police_GestionCheckFineId[playerid][listitem];
        police_TicketOffer[police_TicketOffer[playerid]] = playerid;
		police_TicketPrice[police_TicketOffer[playerid]] = fine[police_GestionFineId[playerid]][price];
		format(string,sizeof(string),"Vous avez reçu une amende de l'oficier %s :\nMotif : %s\nPrix : $%d",PlayerInfo[playerid][pName],fine[police_GestionFineId[playerid]][tmpName],fine[police_GestionFineId[playerid]][price]);
		ShowPlayerDialog(police_TicketOffer[playerid],40,DIALOG_STYLE_MSGBOX,"|Amende|",string,"Payer","Refuser");
		format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Vous avez donné une amende à %d pour $%d.",PlayerInfo[police_TicketOffer[playerid]][pName],fine[police_GestionFineId[playerid]][price]);
		police_TicketOffer[playerid]=-1;
		return 1;
    }
    if(dialogid == 40)
    {
        if(!response)
        	{msg_Client(police_TicketOffer[playerid],COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Amende rufusée."); msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez refusé l'amende."); police_TicketOffer[playerid]=-1; police_TicketPrice[playerid]=-1;  return 1;}
        	
        PlayerInfo[playerid][pAccount]-=police_TicketPrice[playerid];
        governement[PlayerInfo[police_TicketOffer[playerid]][pMember]-1][safe]+=police_TicketPrice[playerid];
        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous avez accepté l'amende de %s pour $%d, (Argent retiré de votre compte banquaire)",PlayerInfo[police_TicketOffer[playerid]][pName],police_TicketPrice[playerid]);
        msg_Client(playerid,COLOR_INFO,string);
        format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} %s a accepté votre amende de $%d, l'argent revient à la Mairie.",PlayerInfo[playerid][pName],police_TicketPrice[playerid]);
        msg_Client(police_TicketOffer[playerid],COLOR_POLICE,string);
		governement_Save(PlayerInfo[police_TicketOffer[playerid]][pMember]-1,false,false,false,false,false,false);
        police_TicketOffer[playerid]=-1; police_TicketPrice[playerid]=-1;
        return 1;
    }
    if(dialogid == 18)
    {
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pCash]>mecano_Price[playerid])
		    {
			    GetPlayerName(playerid,sendername,sizeof(sendername));
			    format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Les couleurs de votre véhicule ont été changée pour $%d.",mecano_Price[playerid]);
			    msg_Client(playerid, COLOR_INFO, string);
			    format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez changé les couleurs du véhicule de %s pour $%d.",sendername,mecano_Price[playerid]);
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, string);
			    SafeGivePlayerMoney(playerid, -mecano_Price[playerid],"Job, couleurs changées");
			    SafeGivePlayerMoney(mecano_Offer[playerid], mecano_Price[playerid],"Payement changement couleurs mécano");
			    ChangeVehicleColor(carid,mecano_Color1[playerid],mecano_Color2[playerid]);
			    vehicle[carid][cColorOne]=mecano_Color1[playerid];
			    vehicle[carid][cColorTwo]=mecano_Color1[playerid];
			    vehicle_Save(carid,0,0);
			    mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
		    	mecano_Color1[playerid]=0;
				mecano_Color2[playerid]=0;
		    }
		    else
			{
			    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client n'a pas assez d'argent.");
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent.");
				mecano_Offer[playerid] = 0;
		    	mecano_Price[playerid] = 0;
		    	mecano_Color1[playerid]=0;
				mecano_Color2[playerid]=0;
				return 1;
			}
		}
		if(response == 0)
		{
		    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez refusé.");
		    msg_Client(mecano_Offer[playerid], COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Le client à refusé.");
		    mecano_Offer[playerid] = 0;
		    mecano_Price[playerid] = 0;
		    return 1;
		}
		return 1;
    }
    if(dialogid == 101)
    {
        new tmpId=player_IsAtActorPoint(playerid,3,2.0);
        if(response == 1)
		{
		    if(PlayerInfo[playerid][pJobRemain] != 0)
		    {
		        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Vous devez attendre encore %d mins avant de pouvoir prendre un autre job.",PlayerInfo[playerid][pJobRemain]);
				msg_Client(playerid,COLOR_INFO,string);
				return 1;
			}
			if(PlayerInfo[playerid][pLevel] < 4 && (npc[tmpId][variable] == 17 || npc[tmpId][variable] == 11))
			    {SetActorChatBubble(tmpId,"(( Vous devez être level 4 minimum ! ))",0xFFFFFFDD,NAME_DISTANCE,5000); return 1;}
			if(PlayerInfo[playerid][pCarLic] != 1 && (npc[tmpId][variable] == 2 || npc[tmpId][variable] == 9 || npc[tmpId][variable] == 17 || npc[tmpId][variable] == 19))
			    {SetActorChatBubble(tmpId,"Il te faut le permis de conduire !",0xFFFFFFDD,NAME_DISTANCE,5000); return 1;}
            if(PlayerInfo[playerid][pLourdLic] != 1 && (npc[tmpId][variable] == 4 || npc[tmpId][variable] == 5 || npc[tmpId][variable] == 10))
			    {SetActorChatBubble(tmpId,"Il te faut le permis de poid lourd !",0xFFFFFFDD,NAME_DISTANCE,5000); return 1;}
            if(PlayerInfo[playerid][pBoatLic] != 1 && (npc[tmpId][variable] == 8))
			    {SetActorChatBubble(tmpId,"Il te faut le permis de navigation !",0xFFFFFFDD,NAME_DISTANCE,5000); return 1;}
            if(PlayerInfo[playerid][pFlyLic] != 1 && (npc[tmpId][variable] == 6))
			    {SetActorChatBubble(tmpId,"Il te faut le permis de voler !",0xFFFFFFDD,NAME_DISTANCE,5000); return 1;}
            PlayerInfo[playerid][pJob] = GettingJob[playerid];
		    PlayerInfo[playerid][pJobLvl] = 1;
		    PlayerInfo[playerid][pJobExp] = 0;
		    GettingJob[playerid] = 0;
		    format(string, sizeof(string), "* %s signe le contrat.", PlayerInfo[playerid][pName]);
		  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  	msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Tapez /aide pour voir vos nouvelles commandes.");
		  	SetActorChatBubble(tmpId,"T'as signé au bon endroit, tu peux commencer de suite !",0xFFFFFFDD,NAME_DISTANCE,5000);
		  	SetPlayerFacingActor(playerid, tmpId);
		  	ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
			ApplyDynamicActorAnimation(tmpId, "GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
		}
		if(response == 0)
		{
		    SetActorChatBubble(tmpId,"Ok, c'est toi le patron, fais comme tu veux.",0xFFFFFFDD,NAME_DISTANCE,5000);
		    LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
		    format(string, sizeof(string), "* %s déchire le contrat.", PlayerInfo[playerid][pName]);
		  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  	GettingJob[playerid] = 0;
		  	return 1;
		}
		return 1;
	}
	if(dialogid == 8)
    {
        if(!response)
			{return 1;}
		
		if(PlayerInfo[playerid][pIdentie] == 0)
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez avoir une carte d'identité pour apprendre une langue.");return 1;}
		
		if(listitem >= 0) 
		{
		    pay_tempPrice[playerid] = 75;
		    pay_tempArticle[playerid] = listitem+1;
			pay_tempType[playerid] = 15;
			pay_showDialog(playerid, pay_tempPrice[playerid]);
			return 1;
		}
		return 1;
    }
    if(dialogid == 49)
    {
        if(response)
        {
            if(langTime[playerid] > 0)
            {
                format(string,sizeof(string),"{FFFFFF}|Ecole de Langues| Apprentissage - {FF0000}%d{FFFFFF} s",langTime[playerid]);
                ShowPlayerDialog(playerid,49,DIALOG_STYLE_MSGBOX,string,"Vous êtes en train d'apprendre une langue,\nvous devez attendre que le compte à rebours soit terminé pour quitter.","Valider","");
                return 1;
            }
        }
        return 1;
    }
//--------------------------------Systeme de Permis ----------------------------------------------------------------
	if(dialogid == 71)
    {
        if(!response)
			{return 1;}
		
		if(PlayerInfo[playerid][pIdentie] == 0)
			{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez avoir une carte d'identité pour passer le permis.");return 1;}
			
		if(listitem == 0) //Permis de conduire
		{
		    if(PlayerInfo[playerid][pCarLic] == 0)
		 		{pay_tempPrice[playerid] = governement[interiors[gPlayerInInterior[playerid]][city]][license][0];}
			else
				{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez déjà le permis de conduire.");return 1;}
		}
		if(listitem == 1) //Permis de moto
		{
		    if(PlayerInfo[playerid][pMotoLic] == 0)
		 		{pay_tempPrice[playerid] = governement[interiors[gPlayerInInterior[playerid]][city]][license][1];}
			else
				{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez déjà le permis de moto.");return 1;}
		}
		if(listitem == 2) //Permis de vol
		{
		    if(PlayerInfo[playerid][pFlyLic] == 0)
		 		{pay_tempPrice[playerid] = governement[interiors[gPlayerInInterior[playerid]][city]][license][2];}
			else
				{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez déjà le permis de vol.");return 1;}
		}
		if(listitem == 3) //Permis de navigation
		{
		    if(PlayerInfo[playerid][pBoatLic] == 0)
		 		{pay_tempPrice[playerid] = governement[interiors[gPlayerInInterior[playerid]][city]][license][6];}
			else
				{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez déjà le permis de navigation.");return 1;}
		}
		if(listitem == 4) //Permis de poid lourd
		{
		    if(PlayerInfo[playerid][pLourdLic] == 0)
		 		{pay_tempPrice[playerid] = governement[interiors[gPlayerInInterior[playerid]][city]][license][3];}
			else
				{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez déjà le permis de poid lourd.");return 1;}
		}
		if(listitem == 5) //Point permis
		{
		    if(PlayerInfo[playerid][pPointPermis] <12)
		 		{pay_tempPrice[playerid] = LICENSE_POINT;}
			else
				{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez déjà tout vos points sur votre permis.");return 1;}
		}
		pay_tempArticle[playerid] = listitem+1;
		pay_tempType[playerid] = 11;
		pay_showDialog(playerid, pay_tempPrice[playerid]);
		return 1;
	}
	if(dialogid == 109)
    {
        if(!response)
		{
			if(permis_Step[playerid]==0) return 1;
			else
			{
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez échoué votre permis de vol.");
				permis_Player[playerid] = 0;
				return 1;
			}
		}
		if(permis_WaitTime[playerid] > 0)
		{
		    if(permis_Step[playerid] == 1)
		    {
		        format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Intro - Encore %d secconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,"Sachez que dès que vous prenez les commande d'un appareil aérien,\nil y a des risque, c'est risque peuvent est grave pour vous ainsi\nque pour les passagers C'est pour cela qu'a l'auto-école, on vous apprend à\nréduire ces risques.\n\nPour cela, soyez attentif.","Continuer","");
		    	permis_Step[playerid] = 1;
		    	return 1;
		    }
		    else if(permis_Step[playerid] == 2)
		    {
		        new string1[512];
			    new string2[512];
			    new TotoString[1024];
			    format(string1,sizeof(string1),"[En avion] Il faut toujours vérifier si la piste est dégagé, et que aucun n'est en train d'attérire.\nIl vous est conseillé d'avoir un co-pilotte en cas de malaise.\nFaite attention aux types d'avions que vous pilottez, la maniabilité peut être totalement différente.\nN'oublier pas de ranger les trains d'attérisage après le décolage.");
			    format(string2,sizeof(string2),"[En hélicopter] Vérifez que rien ne géne votre hélicopter avant de démarrer.\nLe décolage se fait de façon verticale et uniquement vertical.");
			    format(TotoString,sizeof(TotoString),"%s\n\n%s",string1,string2);
				format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Le décolage - Encore %d secconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,TotoString,"Continuer","");
			    permis_Step[playerid] = 2;
		    	return 1;
		    }
		    else if(permis_Step[playerid] == 3)
		    {
		        new string1[512];
			    new string2[512];
			    new TotoString[1024];
			    format(string1,sizeof(string1),"[En avion] Faite une demande d'attérissage à la tour de controle.\nVérifiez si la piste d'attérissage est dégagée.\nApres avoir attérie, allez garer votre avion, évitez de le\nlaisser sur la piste.");
			    format(string2,sizeof(string2),"[En hélicopter] Il est interdit d'attérir dans les rues sous peine d'amende.\n Avant d'attérire, vérifier si aucun obstacle encombre l'endroit.");
			    format(TotoString,sizeof(TotoString),"%s\n\n%s",string1,string2);
				format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} L'attérissage - Encore %d secconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,TotoString,"Continuer","");
			    permis_Step[playerid] = 3;
			    return 1;
		    }
		    else if(permis_Step[playerid] == 3)
		    {
		        format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La sécuritée - Encore %d secconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,"Faite attention à la stabilité, il faut faut bien stabiliser votre appareil.\nEn cas de turbulance, cela pourra vous faire perdre le controle\nde votre appareil et entraine un crash.\nN'oublier pas votre ceinture de sécurité, elle est totalement obligatoire!","Continuer","");
			    permis_Step[playerid] = 4;
			    return 1;
		    }
		}
		if(permis_Step[playerid] == 0)
		{
		    permis_WaitTime[playerid] = 15;
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Intro - Encore %d secconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,"Sachez que dès que vous prenez les commande d'un appareil aérien,\nil y a des risque, c'est risque peuvent est grave pour vous ainsi\nque pour les passagers C'est pour cela qu'a l'auto-école, on vous apprend à\nréduire ces risques.\n\nPour cela, soyez attentif.","Continuer","");
		    permis_Step[playerid] = 1;
		    permis_Player[playerid] = 1;
		}
		else if(permis_Step[playerid] == 1)
		{
		    permis_WaitTime[playerid] = 25;
		    new string1[512];
		    new string2[512];
		    new TotoString[1024];
		    format(string1,sizeof(string1),"[En avion] Il faut toujours vérifier si la piste est dégagée, et que aucun n'est en train d'attérire.\nIl vous est conseillé d'avoir un co-pilotte en cas de malaise.\nFaite attention aux types d'avions que vous pilottez, la maniabilité peut être totalement différente.\nN'oublier pas de ranger les trains d'attérisage après le décolage.");
		    format(string2,sizeof(string2),"[En hélicopter] Vérifez que rien ne géne votre hélicopter avant de démarrer.\nLe décolage se fait de façon verticale et uniquement vertical.");
		    format(TotoString,sizeof(TotoString),"%s\n\n%s",string1,string2);
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Le décolage - Encore %d secconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,TotoString,"Continuer","");
		    permis_Step[playerid] = 2;
		}
		else if(permis_Step[playerid] == 2)
		{
		    permis_WaitTime[playerid] = 25;
		    new string1[512];
		    new string2[512];
		    new TotoString[1024];
		    format(string1,sizeof(string1),"[En avion] Faite une demande d'attérissage à la tour de controle.\nVérifiez si la piste d'attérissage est dégagée.\nApres avoir attérie, allez garer votre avion, évitez de le\nlaisser sur la piste.");
		    format(string2,sizeof(string2),"[En hélicopter] Il est interdit d'attérir dans les rues sous peine d'amende.\n Avant d'attérire, vérifier si aucun obstacle encombre l'endroit.");
		    format(TotoString,sizeof(TotoString),"%s\n\n%s",string1,string2);
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} L'attérissage - Encore %d secconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,TotoString,"Continuer","");
		    permis_Step[playerid] = 3;
		}
		else if(permis_Step[playerid] == 3)
		{
		    permis_WaitTime[playerid] = 15;
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La sécuritée - Encore %d secconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,"Faite attention à la stabilité, il faut faut bien stabiliser votre appareil.\nEn cas de turbulance, cela pourra vous faire perdre le controle\nde votre appareil et entraine un crash.\nN'oublier pas votre ceinture de sécurité, elle est totalement obligatoire!\nIl vous est fortement déconseillé de voler en cas de brouillard et de tempettes.","Continuer","");
		    permis_Step[playerid] = 4;
		}
		else if(permis_Step[playerid] == 4)
		{
		    format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Fin du cour",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,string,"Vous allez maintenant passer au test écrit, attention, vous n'avez pas droit à l'erreur!","Continuer","");
		    permis_Step[playerid] = 5;
		}
		else if(permis_Step[playerid] == 5)
		{
		    ShowPlayerDialog(playerid,109,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Q1. Est-il recommendé de voler en cas de tempette?","Oui, il n'y a aucun risque\nNon, c'est fortement déconseillé","Continuer","");
		    permis_Step[playerid] = 6;
		}
		else if(permis_Step[playerid] == 6)
		{
		    if(listitem == 0)
		    {
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Mauvaise réponse.");
		    	permis_Player[playerid] = 0;
		        return 1;
		    }
		    if(listitem == 1)
		    {
		    	ShowPlayerDialog(playerid,109,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Q2. Ou peut-on atterir?","Dans la rue et sur les trottoirs\nSur les batiments\nA l'aéroport ou sur un hélipad","Continuer","");
		    	permis_Step[playerid] = 7;
		    }
		}
		else if(permis_Step[playerid] == 7)
		{
		    if(listitem == 0)
		    {
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Mauvaise réponse.");
		    	permis_Player[playerid] = 0;
		        return 1;
		    }
		    if(listitem == 1)
		    {
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Mauvaise réponse.");
		    	permis_Player[playerid] = 0;
		        return 1;
		    }
		    if(listitem == 2)
		    {
		    	ShowPlayerDialog(playerid,109,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Q3. Le décolage en hélicopter se fait?","De façon vertical\nDe façon horizontal\nN'importe quelle façon","Continuer","");
		    	permis_Step[playerid] = 8;
		    }
		}
		else if(permis_Step[playerid] == 8)
		{
		    if(listitem == 0)
		    {
		        ShowPlayerDialog(playerid,109,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Q4. La ceinture est obligatoire?","Biensûre que Oui\nBiensure que Non","Continuer","");
		    	permis_Step[playerid] = 9;
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Mauvaise réponse.");
		    	permis_Player[playerid] = 0;
		        return 1;
		    }
		    if(listitem == 1)
		    {
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Mauvaise réponse.");
		    	permis_Player[playerid] = 0;
		    }
		    if(listitem == 2)
		    {
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Mauvaise réponse.");
		    	permis_Player[playerid] = 0;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 9)
		{
		    if(listitem == 0)
		    {
		    	PlayerInfo[playerid][pFlyLic] = 1;
		    	GameTextForPlayer(playerid,"reussi",3000,1);
				permis_Player[playerid] = 0;
				permis_Step[playerid] = 0;
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Félicitation, vous avez réussi votre permis de vol.");
		    }
		    if(listitem == 1)
		    {
		    	msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Mauvaise réponse.");
		    	permis_Player[playerid] = 0;
		        return 1;
		    }
		}
    }
    if(dialogid == 102)
    {
        if(!response)
		{
			if(permis_Step[playerid]==0) return 1;
			else
			{
				msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez échoué votre permis de conduire.");
				permis_Player[playerid] = 0;
				return 1;
			}
		}
		if(permis_WaitTime[playerid] > 0)
		{
		    if(permis_Step[playerid] == 1)
		    {
		        format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Intro - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Bienvenue dans ce cours pratique dédié à la conduite d'un véhicule de type B,\n\nAvant de commencer, sachez que sur les routes le risque 0 n'existe pas, c'est pourquoi ce cours vous permettera d'être vigilant\nsur les routes de San Andreas.\n\nA la fin de ce cours, un questionnaire vous sera posé.\n\nBonne lecture.","Continuer","");
		    	permis_Step[playerid] = 1;
		    	return 1;
		    }
		    else if(permis_Step[playerid] == 2)
		    {
		        new tmp[512],stringf[1024];
		        format(tmp,sizeof(tmp),"{FFFFFF}Le premier chapitre porte sur la vitesse,\n\nLa vitesse est l'un des points les plus importants lors de votre conduite,\nen effet celle-ci est limité sur toutes les routes de San Andreas afin d'éviter tous risques d'accidents.\n\n");
		        strcat(stringf,tmp);
		        format(tmp,sizeof(tmp),"Plus votre vitesse est élevée, plus la distance de freinage est importante. Il est obligatoire d'avoir une distance\nde sécurité entre votre véhicule et celui situé devant vous.\n\nVoici un rappel sur les limitations de vitesse :\nEn ville : {00FF00}70{FFFFFF} KM/H\nHors agglomération : {FF8200}90{FFFFFF} KM/HAuto-Route : {FF0000}110{FFFFFF} KM/H");
		        strcat(stringf,tmp);
		       	format(tmp,sizeof(tmp),"{DE673A}» Auto-Ecole «{FFFFFF} La vitesse - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
		       	ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,tmp,stringf,"Continuer","");
				permis_Step[playerid] = 2;
				return 1;
		    }
		    else if(permis_Step[playerid] == 3)
		    {
		       	format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Le téléphone - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le second chapitre porte sur le téléphone,\n\nLe téléphone est interdit pendant la conduite, celui-ci est un grand facteur d'accident.\nLorsque vous téléphoner au volant de votre voiture, vous faîte moins attention à votre conduite,\nce qui diminue votre temps de réaction.","Continuer","");
		    	permis_Step[playerid] = 3;
		    	return 1;
		    }
		    else if(permis_Step[playerid] == 4)
		    {
		        format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La signalisation - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le troisième chapitre porte sur la signalisation,\n\nIl est important de comprendre les panneaux situés sur les routes.\nCeux-ci permettent de vous prévenir des danger, des traveaux et des d'accidents.\n\nA chaque intersections, arrêtez-vous et regardez des deux côtés avant de repartir.\nLa ligne peinte le long du trottoir sert en cas d'urgence médicale et fédérale ou de stationnement en cas de contrôle de police.","Continuer","");
		    	permis_Step[playerid] = 4;
		        return 1;
			}
			else if(permis_Step[playerid] == 5)
		    {
		    	new tmp[512];
		        format(tmp,sizeof(tmp),"{FFFFFF}Le quatrième chapitre porte sur le stationnement,\n\nDe nombreux parking sont installés dans tout San Andreas afin d'éviter tout gêne de stationnement sur les routes.\n\n");
		        strcat(string,tmp);
		        format(tmp,sizeof(tmp),"\nCertains parking sont réglementer par un durée limité.\n\nSi jamais vous n'êtes pas à côté d'un parking, vous êtes autorisé à vous stationner à cheval sur un trottoir pendant une courte durée.\nSachez que si votre véhicule est mal garé ou encombrant la route, il se retrouvera à la fourrière avec une amende.");
		        strcat(string,tmp);
		       	format(tmp,sizeof(tmp),"{DE673A}» Auto-Ecole «{FFFFFF} La stationnement - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
		       	ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,tmp,string,"Continuer","");
				permis_Step[playerid] = 5;
				return 1;
			}
			else if(permis_Step[playerid] == 6)
		    {
		        format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La conssomation - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le cinquième chapitre porte sur la consomation,\n\nIl est interdit de consommer de l'alcool ou un subsence illicite pendant votre conduite.\nVous augmentez votre risque d'accident de plus de 50 %, et pouvez subir de lourdes amendes.\n\nL'alcool et la drogue augmente fortement votre temps de réaction, vous rend dans un état second.","Continuer","");
		        permis_Step[playerid] = 6;
		    	return 1;
		    }
		    else if(permis_Step[playerid] == 7)
		    {
		        new tmp[512];
		        format(tmp,sizeof(tmp),"{FFFFFF}Le sixième chapitre porte sur les modifications et les assurances,\n\nL'assurance sur les véhicules est obligatoire pour circuler sur les routes. Si celle-ci est expirée ou inexistance vous recevrez une amende.");
		        strcat(string,tmp);
		        format(tmp,sizeof(tmp),"\nSachez que modifications de votre véhicule peuvent supprimer l'assurance de votre véhicule lors d'un accident.\n\nLes modifications de votre véhicule ne doivent pas dépasser plus de 1/2 mètre.\nSachez que le nitro est interdite sur les véhicules.");
		        strcat(string,tmp);
		       	format(tmp,sizeof(tmp),"{DE673A}» Auto-Ecole «{FFFFFF}  Les modifications & assurances - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
		       	ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,tmp,string,"Continuer","");
		        permis_Step[playerid] = 7;
		    	return 1;
		    }
		    else if(permis_Step[playerid] == 8)
		    {
		        format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La sécurité - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
				ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le septième chapitre porte sur la sécurité,\n\nPour votre plus grande sécurité, la ceinture est obligatoire dans tous les véhicules.\nCelle-ci peut vous sauver la vie lors d'un accident.\n\nLors de la tombée de la nuit, les phares sont obligatoires pour une meilleur visibité pour vous et pour les autres automobilistes.","Continuer","");
		        permis_Step[playerid] = 8;
		    	return 1;
		    }
		}
		if(permis_Step[playerid] == 0)
		{
		    permis_WaitTime[playerid] = 10;
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Intro - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Bienvenue dans ce cours pratique dédié à la conduite d'un véhicule de type B,\n\nAvant de commencer, sachez que sur les routes le risque 0 n'existe pas, c'est pourquoi ce cours vous permettera d'être vigilant\nsur les routes de San Andreas.\n\nA la fin de ce cours, un questionnaire vous sera posé.\n\nBonne lecture.","Continuer","");
		    permis_Step[playerid] = 1;
		    permis_Player[playerid] = 1;
		}
		else if(permis_Step[playerid] == 1)
		{
		    permis_WaitTime[playerid] = 20;
			new tmp[512],stringf[1024];
		    format(tmp,sizeof(tmp),"{FFFFFF}Le premier chapitre porte sur la vitesse,\n\nLa vitesse est l'un des points les plus importants lors de votre conduite,\nen effet celle-ci est limité sur toutes les routes de San Andreas afin d'éviter tous risques d'accidents.\n\n");
		    strcat(stringf,tmp);
		    format(tmp,sizeof(tmp),"Plus votre vitesse est élevée, plus la distance de freinage est importante. Il est obligatoire d'avoir une distance\nde sécurité entre votre véhicule et celui situé devant vous.\n\nVoici un rappel sur les limitations de vitesse :\nEn ville : {00FF00}70{FFFFFF} KM/H\nHors agglomération : {FF8200}90{FFFFFF} KM/HAuto-Route : {FF0000}110{FFFFFF} KM/H");
		    strcat(stringf,tmp);
		    format(tmp,sizeof(tmp),"{DE673A}» Auto-Ecole «{FFFFFF} La vitesse - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
		    ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,tmp,stringf,"Continuer","");
   			permis_Step[playerid] = 2;
		}
		else if(permis_Step[playerid] == 2)
		{
		    permis_WaitTime[playerid] = 15;
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Le téléphone - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le second chapitre porte sur le téléphone,\n\nLe téléphone est interdit pendant la conduite, celui-ci est un grand facteur d'accident.\nLorsque vous téléphoner au volant de votre voiture, vous faîte moins attention à votre conduite,\nce qui diminue votre temps de réaction.","Continuer","");
		    permis_Step[playerid] = 3;
		}
		else if(permis_Step[playerid] == 3)
		{
		    permis_WaitTime[playerid] = 20;
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La signalisation - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le troisième chapitre porte sur la signalisation,\n\nIl est important de comprendre les panneaux situés sur les routes.\nCeux-ci permettent de vous prévenir des danger, des traveaux et des d'accidents.\n\nA chaque intersections, arrêtez-vous et regardez des deux côtés avant de repartir.\nLa ligne peinte le long du trottoir sert en cas d'urgence médicale et fédérale ou de stationnement en cas de contrôle de police.","Continuer","");
		    permis_Step[playerid] = 4;
		}
		else if(permis_Step[playerid] == 4)
		{
		    permis_WaitTime[playerid] = 15;
			format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La signalisation - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le troisième chapitre porte sur la signalisation,\n\nIl est important de comprendre les panneaux situés sur les routes.\nCeux-ci permettent de vous prévenir des danger, des traveaux et des d'accidents.\n\nA chaque intersections, arrêtez-vous et regardez des deux côtés avant de repartir.\nLa ligne peinte le long du trottoir sert en cas d'urgence médicale et fédérale ou de stationnement en cas de contrôle de police.","Continuer","");
		    permis_Step[playerid] = 5;
		}
		else if(permis_Step[playerid] == 5)
		{
		    permis_WaitTime[playerid] = 20;
			new tmp[512];
		    format(tmp,sizeof(tmp),"{FFFFFF}Le quatrième chapitre porte sur le stationnement,\n\nDe nombreux parking sont installés dans tout San Andreas afin d'éviter tout gêne de stationnement sur les routes.\n\n");
		    strcat(string,tmp);
		    format(tmp,sizeof(tmp),"\nCertains parking sont réglementer par un durée limité.\n\nSi jamais vous n'êtes pas à côté d'un parking, vous êtes autorisé à vous stationner à cheval sur un trottoir pendant une courte durée.\nSachez que si votre véhicule est mal garé ou encombrant la route, il se retrouvera à la fourrière avec une amende.");
		    strcat(string,tmp);
		    format(tmp,sizeof(tmp),"{DE673A}» Auto-Ecole «{FFFFFF} La stationnement - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
		    ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,tmp,string,"Continuer","");
		    permis_Step[playerid] = 6;
		}
		else if(permis_Step[playerid] == 6)
		{
		    permis_WaitTime[playerid] = 15;
		    format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La conssomation - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le cinquième chapitre porte sur la consomation,\n\nIl est interdit de consommer de l'alcool ou un subsence illicite pendant votre conduite.\nVous augmentez votre risque d'accident de plus de 50 %, et pouvez subir de lourdes amendes.\n\nL'alcool et la drogue augmente fortement votre temps de réaction, vous rend dans un état second.","Continuer","");
		    permis_Step[playerid] = 7;
		}
		else if(permis_Step[playerid] == 7)
		{
		    permis_WaitTime[playerid] = 20;
		    new tmp[512];
		    format(tmp,sizeof(tmp),"{FFFFFF}Le sixième chapitre porte sur les modifications et les assurances,\n\nL'assurance sur les véhicules est obligatoire pour circuler sur les routes. Si celle-ci est expirée ou inexistance vous recevrez une amende.");
		    strcat(string,tmp);
		    format(tmp,sizeof(tmp),"\nSachez que modifications de votre véhicule peuvent supprimer l'assurance de votre véhicule lors d'un accident.\n\nLes modifications de votre véhicule ne doivent pas dépasser plus de 1/2 mètre.\nSachez que le nitro est interdite sur les véhicules.");
		    strcat(string,tmp);
		    format(tmp,sizeof(tmp),"{DE673A}» Auto-Ecole «{FFFFFF}  Les modifications & assurances - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
		    ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,tmp,string,"Continuer","");
			permis_Step[playerid] = 8;
		}
		else if(permis_Step[playerid] == 8)
		{
		    permis_WaitTime[playerid] = 15;
		    format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} La sécurité - Encore{FF0000} %d {FFFFFF}seconde(s)",permis_WaitTime[playerid]);
			ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,string,"{FFFFFF}Le septième chapitre porte sur la sécurité,\n\nPour votre plus grande sécurité, la ceinture est obligatoire dans tous les véhicules.\nCelle-ci peut vous sauver la vie lors d'un accident.\n\nLors de la tombée de la nuit, les phares sont obligatoires pour une meilleur visibité pour vous et pour les autres automobilistes.","Continuer","");
		    permis_Step[playerid] = 9;
		}
		else if(permis_Step[playerid] == 9)
		{
		    ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Qestion n°1","{DABB3E}* Quelle est la limitation de vitesse hors aglomération ? *{FFFFFF}\n- 70 KM/h\n- 80 KM/h\n- 90 KM/h\n- 100 KM/h\n- 110 KM/h","Valider","");
		    permis_Step[playerid] = 10;
		}
		else if(permis_Step[playerid] == 10)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Qestion n°1","{DABB3E}* Quelle est la limitation de vitesse hors aglomération ? *{FFFFFF}\n- 70 KM/h\n- 80 KM/h\n- 90 KM/h\n- 100 KM/h\n- 110 KM/h","Valider","");}
      		if(listitem == 1 || listitem == 2 || listitem == 4 || listitem == 5)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0;return 1;}
		    if(listitem == 3)
		    {
		    	ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°2","{DABB3E}* L'assurance de mon véhicule me permet .. *{FFFFFF}\n- une garantie de mon véhicule\n- de pouvoir modifier mon véhicule\n- d'éviter les contrôles policiers\n- d'augmenter ma limiation de vitesse","Valider","");
		    	permis_Step[playerid] = 11;
		    }
		}
		else if(permis_Step[playerid] == 11)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°2","{DABB3E}* L'assurance de mon véhicule me permet .. *{FFFFFF}\n- une garantie de mon véhicule\n- de pouvoir modifier mon véhicule\n- d'éviter les contrôles policiers\n- d'augmenter ma limiation de vitesse","Valider","");}
		    if(listitem == 2 || listitem == 4 || listitem == 5)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0;return 1;}
		    if(listitem == 1)
		    {
		        ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°3","{DABB3E}* Quelle modification est interdite ? *{FFFFFF}\n- .. Néons \n- .. Nitro\n- .. Jantes\n- .. Peinture","Valider","");
		    	permis_Step[playerid] = 12;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 12)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°3","{DABB3E}* Quelle modification est interdite ? *{FFFFFF}\n- .. Néons \n- .. Nitro\n- .. Jantes\n- .. Peinture","Valider","");}
		    if(listitem == 1 || listitem == 3 || listitem == 4)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0;return 1;}
		    if(listitem == 2)
		    {
		        ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°4","{DABB3E}* Où ai-je le droit de me stationner *{FFFFFF}\n- Où je veux \n- A l'intersection de deux routes\n- Dans les parkings ou à cheval sur un trottoir","Valider","");
		    	permis_Step[playerid] = 13;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 13)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°4","{DABB3E}* Où ai-je le droit de me stationner *{FFFFFF}\n- Où je veux \n- A l'intersection de deux routes\n- Dans les parkings ou à cheval sur un trottoir","Valider","");}
		    if(listitem == 1 || listitem == 2)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0;return 1;}
		    if(listitem == 3)
		    {
		        ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°5","{DABB3E}* Qu'ait-il obligatoire lors de la tombée de la nuit ? *{FFFFFF}\n- Allumer ma radio \n- Allumer mes phares\n- Allumer mes néons\n- Klaxonner à chaque voiture","Valider","");
		    	permis_Step[playerid] = 14;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 14)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°5","{DABB3E}* Qu'ait-il obligatoire lors de la tombée de la nuit ? *{FFFFFF}\n- Allumer ma radio \n- Allumer mes phares\n- Allumer mes néons\n- Klaxonner à chaque voiture","Valider","");}
		    if(listitem == 1 || listitem == 3 || listitem == 4)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0; return 1;}
		    if(listitem == 2)
		    {
		        ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°6","{DABB3E}* A quoi serre la ligne blanche peint le long du trottoir ? *{FFFFFF}\n- En cas d'urgence ou de contrôle de police\n- A se stationner à durée illimité\n- A motif décoratif","Valider","");
		    	permis_Step[playerid] = 15;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 15)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°6","{DABB3E}* A quoi serre la ligne blanche peint le long du trottoir ? *{FFFFFF}\n- En cas d'urgence ou de contrôle de police\n- A se stationner à durée illimité\n- A motif décoratif","Valider","");}
		    if(listitem == 2 || listitem == 3)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0; return 1;}
		    if(listitem == 1)
		    {
		        ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°7","{DABB3E}* Je reçois un appel sur mon téléphone .. *{FFFFFF}\n- Je racroche ou le laisse sonner\n- Je réponds le plus vite possible\n- Je racroche et envoie un message disant que je conduis","Valider","");
		    	permis_Step[playerid] = 16;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 16)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°7","{DABB3E}* Je reçois un appel sur mon téléphone .. *{FFFFFF}\n- Je racroche ou le laisse sonner\n- Je réponds le plus vite possible\n- Je racroche et envoie un message disant que je conduis","Valider","");}
		    if(listitem == 2 || listitem == 3)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0; return 1;}
		    if(listitem == 1)
		    {
		        ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°8","{DABB3E}* Il est interdit .. *{FFFFFF}\n- d'écouter la radio\n- de boire ou consommer de la drogue\n- de conduire la nuit","Valider","");
		    	permis_Step[playerid] = 17;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 17)
		{
		    if(listitem == 0)
		    	{return ShowPlayerDialog(playerid,102,DIALOG_STYLE_LIST,"{DE673A}» Auto-Ecole «{FFFFFF} Question n°8","{DABB3E}* Il est interdit .. *{FFFFFF}\n- d'écouter la radio\n- de boire ou consommer de la drogue\n- de conduire la nuit","Valider","");}
		    if(listitem == 1 || listitem == 3)
		    	{msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Réponse incorrecte !");permis_Player[playerid] = 0; return 1;}
		    if(listitem == 2)
		    {
		        ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,"{DE673A}» Auto-Ecole «{FFFFFF} Fin du questionnaire","Vous avez réussi le questionnaire, vous allez passer à l'étape pratique.","Valider","");
		    	permis_Step[playerid] = 18;
		        return 1;
		    }
		}
		else if(permis_Step[playerid] == 18)
		{
		    permis_City[playerid]=interiors[gPlayerInInterior[playerid]][city];
		    permis_Step[playerid]=0;
		    SafeSetPlayerPos(playerid,interiors[gPlayerInInterior[playerid]][pos][0],interiors[gPlayerInInterior[playerid]][pos][1],interiors[gPlayerInInterior[playerid]][pos][2]);
		    SetPlayerFacingAngle(playerid,interiors[gPlayerInInterior[playerid]][pos][4]);
		    permis_Player[playerid] = 2;
		    server_SetPlayerInterior(playerid, 0);
		    server_SetPlayerVirtualWorld(playerid, 0);
		    msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Montez dans un véhicule pour effectuer le test de conduite.");
		}
		return 1;
    }
 	if(dialogid == 72)
    {
  		if(response == 1)
		{
			if(IsPlayerConnected(playerid))
			{
			    if(HireCar[playerid] != -1)
				{
					msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous devez d'abord délouer votre véhicule de location!");
					TogglePlayerControllable(playerid, 1);
	                RemovePlayerFromVehicle(playerid);
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
				{
					if(HireCar[i] == GetPlayerVehicleID(playerid))
					{
						msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Cette voiture est déjà louée par quelqu'un!");
						TogglePlayerControllable(playerid, 1);
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
				}
				if(IsARentCar(carid))
				{
				    if(PlayerInfo[playerid][pCarLic] == 0)
				    {
				        msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous ne possédez pas le permis de conduite!");
				        TogglePlayerControllable(playerid, 1);
	                    RemovePlayerFromVehicle(playerid);
				        return 1;
				    }
					pay_tempPrice[playerid] = sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR][ubEnterPrice];
					pay_tempProducts[playerid] = 0;
					pay_tempArticle[playerid] = 1;
					pay_tempType[playerid] = 6;
					pay_showDialog(playerid, pay_tempPrice[playerid]);
					return 1;
				}
				else if(IsARentBoat(carid))
				{
				    if(PlayerInfo[playerid][pBoatLic] == 0)
				    {
				        msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous ne possédez pas le permis de bateau!");
				        TogglePlayerControllable(playerid, 1);
	                    RemovePlayerFromVehicle(playerid);
				        return 1;
				    }
					pay_tempPrice[playerid] = sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+3][ubEnterPrice];
					pay_tempProducts[playerid] = 0;
					pay_tempArticle[playerid] = 1;
					pay_tempType[playerid] = 18;
					pay_showDialog(playerid, pay_tempPrice[playerid]);
					return 1;
				}
				else if(IsARentPlane(carid))
				{
				    if(PlayerInfo[playerid][pFlyLic] == 0)
				    {
				        msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Vous ne possédez pas le permis d'avion !");
				        TogglePlayerControllable(playerid, 1);
	                    RemovePlayerFromVehicle(playerid);
				        return 1;
				    }
					pay_tempPrice[playerid] = sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+4][ubEnterPrice];
					pay_tempProducts[playerid] = 0;
					pay_tempArticle[playerid] = 1;
					pay_tempType[playerid] = 19;
					pay_showDialog(playerid, pay_tempPrice[playerid]);
					return 1;
				}
				else if(IsARentBike(carid))
				{
					pay_tempPrice[playerid] = sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+2][ubEnterPrice];
					pay_tempProducts[playerid] = 0;
					pay_tempArticle[playerid] = 1;
					pay_tempType[playerid] = 8;
					pay_showDialog(playerid, pay_tempPrice[playerid]);
					return 1;
				}
				else if(IsARentMoto(carid))
				{
					pay_tempPrice[playerid] = sbizz[MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR+1][ubEnterPrice];
					pay_tempProducts[playerid] = 0;
					pay_tempArticle[playerid] = 1;
					pay_tempType[playerid] = 7;
					pay_showDialog(playerid, pay_tempPrice[playerid]);
					return 1;
				}
			}
        }
        if(response == 0)
			{TogglePlayerControllable(playerid, 1);RemovePlayerFromVehicle(playerid);return 1;}
		return 1;
    }
    if(dialogid == 125)
    {
        if(response == 1) // Commencer
        {
            if(IsAPizzaCar(carid) && PlayerInfo[playerid][pJob] == 1)
            {
                job_City[playerid] = vehicle[carid][cJobCity];
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez livrer des pizza à l'aide de votre scooter, charger des pizza dans son coffre.");
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Descendez du scooter pour aller chercher des pizza au dépot, touche 'Y' pour en prendre une.");
                msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous pouvez prendre 3 pizza dans le coffre de votre scooter.");
				gPlayerCheckpoint[playerid]=20; job_TempVar[playerid]=0;
				new houseid = job_GetRandomVar(1,job_City[playerid]);
				SetPlayerCheckpoint(playerid,house[houseid][pos][0],house[houseid][pos][1],house[houseid][pos][2],2.5);
		        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez livrer les pizza. (Point rouge minimap)");
            }
            else if(IsAFarmerCar(carid) && PlayerInfo[playerid][pJob] == 2)
			{
			    job_City[playerid] = vehicle[carid][cJobCity];
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Utilisez la moissonneuse batteuse pour récolter des bottes de paille dans l'un des 3 champs.");
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Le petit véhicule vous servira à transporter ces bottes à la ferme.");
			}
            else if(IsATrashCar(carid) && PlayerInfo[playerid][pJob] == 4)
			{
			    job_City[playerid] = vehicle[carid][cJobCity];
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez vider les poubelles à l'aide de votre camion.");
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Une fois à côté d'une poubelle, utiliser la touche 'Y' pour une vider une.");
				gPlayerCheckpoint[playerid]=23; job_TempVar[playerid]=0; job_CheckPoints[playerid]=1;
				job_ObjectN[playerid] = job_GetRandomVar(2,job_City[playerid]);
				SetPlayerCheckpoint(playerid,trash[job_ObjectN[playerid]][pos][0],trash[job_ObjectN[playerid]][pos][1],trash[job_ObjectN[playerid]][pos][2],5.0);
		        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez vider les poubelles. (Point rouge minimap)");
			}
			else if(IsAWorkerCar(carid) && PlayerInfo[playerid][pJob] == 5)
			{
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez chercher les matériaux au lieu indiqué. (Touche 'Y')");
			    job_CheckPoints[playerid]=0;
			    SetPlayerCheckpoint(playerid, gWorkerPoints[5][0],gWorkerPoints[5][1],gWorkerPoints[5][2], 3.0);
				gPlayerCheckpoint[playerid] = 15;
			}
			else if(IsAPiloteCar(carid) && PlayerInfo[playerid][pJob] == 6)
			{
			    job_City[playerid] = vehicle[carid][cJobCity];
				job_CheckPoints[playerid] = 0;
				gPlayerCheckpoint[playerid] = 25;
        		OnPlayerEnterCheckpoint(playerid);
        		msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Votre planning a été établi.");
			}
			else if(IsAPostCar(carid) && PlayerInfo[playerid][pJob] == 7)
			{
			    job_City[playerid] = vehicle[carid][cJobCity];
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez poster les lettres à l'aide de votre scooter, charger les lettres dans son coffre.");
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Descendez du scooter pour aller chercher des lettres au dépot, touche 'Y' pour en prendre une.");
                msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous pouvez prendre 10 lettres dans le coffre de votre scooter.");
				gPlayerCheckpoint[playerid]=26; job_TempVar[playerid]=0;
				new houseid = job_GetRandomVar(1,job_City[playerid]);
				SetPlayerCheckpoint(playerid,house[houseid][pos][0],house[houseid][pos][1],house[houseid][pos][2],2.5);
		        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez poster les lettres. (Point rouge minimap)");
			}
			else if(IsAFisherCar(carid) && PlayerInfo[playerid][pJob] == 8)
			{
			    job_City[playerid] = vehicle[carid][cJobCity];
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez pêcher du poisson à l'aide de votre filet de bâteau. (Zone bleue minimap)");
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Pour descendre/monter votre filet appuyez sur la touche 'Y',.");
                msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Un fois le poisson pêché, déposez le au port.");
				if(job_City[playerid]==0)
					{GangZoneShowForPlayer(playerid,job_Zone[1],COLOR_LIGHTBLUE);}
				else
				    {GangZoneShowForPlayer(playerid,job_Zone[0],COLOR_LIGHTBLUE);}
			 	gPlayerCheckpoint[playerid] = 27;
		    }
			else if(IsATruckerCar(carid) && PlayerInfo[playerid][pJob] == 10)
			{
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Utiliser une des remorques pour commencer votre travail.");
			    job_CheckPoints[playerid]=0; gPlayerCheckpoint[playerid]=10;
			    job_City[playerid] = vehicle[carid][cJobCity]; job_TempVar[playerid] = 0;

				/*gPlayerCheckpoint[playerid]=28; job_CheckPoints[playerid]=0;
            	job_HoldingObjectSlot[playerid] = CreateDynamicObject(3631,0,0,-1000,0,0,0,-1,-1,-1,400);
				AttachDynamicObjectToVehicle(job_HoldingObjectSlot[playerid], carid, 0.000000,-1.650000,0.300000,0.000000,0.000000,89.819984);
                new rand = random(3);
				if(rand==0)
				    {SetPlayerCheckpoint(playerid,1630.2732,721.9963,10.8203,8);}
                else if(rand==1)
				    {SetPlayerCheckpoint(playerid,-1836.2363,143.5305,15.1172,8);}
                else if(rand==2)
				     {SetPlayerCheckpoint(playerid,-183.2642,1016.0228,19.6573,8);}*/
			}
			else if(IsABusCar(carid) && PlayerInfo[playerid][pJob] == 12)
			{
				gPlayerCheckpoint[playerid] = 30;
				job_TempVar[playerid] = random(totalBusStop);
				SetPlayerCheckpoint(playerid, stop[job_TempVar[playerid]][pos][0], stop[job_TempVar[playerid]][pos][1], stop[job_TempVar[playerid]][pos][2], 8.0);
			}
			else if(IsAFundCar(carid) && PlayerInfo[playerid][pJob] == 19)
			{
			    job_Start[playerid] = 1; job_CheckPoints[playerid]=0; job_TempVar[playerid]=0;
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Vous devez remplir les ATMs vides à l'aide de la touche 'Y'.");
			    msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Les ATMs ont été marqué sur votre radar.");
			    for(new i = 0; i<totalATMs; i++)
				{
					if(atm[i][used]==1 && atm[i][cash] < 25000)
						{atm_Icon[playerid][i]=CreateDynamicMapIcon(atm[i][pos][0], atm[i][pos][1], atm[i][pos][2], 0, COLOR_CHOCOLATE, -1, -1, playerid, 1000.0);}
				}
			}
			//msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Votre planning a été établi.");
			TogglePlayerControllable(playerid,true);
            job_ShowTexts(playerid);
            job_Start[playerid] = 1;
            job_SetSkin(playerid,PlayerInfo[playerid][pJob]);
            if(IsPlayerInAnyVehicle(playerid))
                {job_CarId[playerid]=carid;}
            new engine,lights,alarm,doors,bonnet,boot,objective;
	        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
         	SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	        vehicle[carid][cEngine] = true;
	        if(PlayerInfo[playerid][pJobTime] < JOB_TIME)
	        {
	            format(string,sizeof(string),"{78769D}» Job «{FFFFFF} Il vous reste %d minutes de travaille pour obtenir le PayDay.",JOB_TIME-PlayerInfo[playerid][pJobTime]);
	            msg_Client(playerid,COLOR_JOB,string);
			}
	        return 1;
        }
        if(response == 0) // Sortir
        	{job_End(playerid);}
        return 1;
    }
    if(dialogid == 84)
    {
        if(!response)
		{
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
		    return 1;
		}
    	if(listitem == 0)
 		{
 		    if(PlayerInfo[playerid][pCar][0] == -1 || PlayerInfo[playerid][pCar][1] == -1 || PlayerInfo[playerid][pCar][2] == -1 || PlayerInfo[playerid][pCar][3] == -1 && PlayerInfo[playerid][pCarDev4] == 1 || PlayerInfo[playerid][pCar][4] == -1 && PlayerInfo[playerid][pCarDev5] == 1 || PlayerInfo[playerid][pCar][5] == -1 && PlayerInfo[playerid][pCarDev6] == 1)
			{
			    if(PlayerInfo[playerid][pIdentie] == 0)
				{
					msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous devez avoir une carte d'identité pour acheter un véhicule.");
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
	 		    if(vehicle[carid][cOwned] == 1)
				{
					msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule appartient déjà à quelqu'un.");
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(vehicle[carid][cOwned] == 2)
				{
					msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Ce véhicule appartient à une faction.");
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(IsAPlane(carid) && PlayerInfo[playerid][pFlyLic] < 1)
				{
        			msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas le permis de vol.");
			    	TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				else if(IsABoat(carid) && PlayerInfo[playerid][pBoatLic] < 1)
				{
			    	msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas le permis de navigation.");
			    	TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				else if(IsAMoto(carid) && PlayerInfo[playerid][pMotoLic] < 1)
				{
			    	msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas le permis de moto.");
			    	TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				else if(IsABike(carid))
					{TogglePlayerControllable(playerid, 1);}
				else if(IsACar(carid))
				{
				    if(PlayerInfo[playerid][pCarLic] != 1)
				    {
				        msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} Vous n'avez pas le permis de voiture.");
				    	TogglePlayerControllable(playerid, 1);
						RemovePlayerFromVehicle(playerid);
						return 1;
				    }
				}
		 		pay_tempPrice[playerid] = vehicle[carid][cValue];
				pay_tempProducts[playerid] = 0;
				pay_tempArticle[playerid] = 1;
				pay_tempType[playerid] = 10;
				pay_showDialog(playerid, pay_tempPrice[playerid]);
			}
			else
			{
				msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez atteint la limite de véhicules max.");
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
	 			return 1;
			}
 		}
 		if(listitem == 1)
 		{
 		    TogglePlayerControllable(playerid, 1);
			new engine,lights,alarm,doors,bonnet,boot,objective;
 		    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
            vehicle[carid][cEngine]=true;
            SafeSetVehiclePos(carid,593.4396,-1242.4973,18.0115);
            msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous testez ce véhicule pendant 40 secondes.");
            SetTimerEx("car_EndTest",40000,0,"ii",playerid,carid);
		}
 		if(listitem == 2) // Admin
 		{
 		    TogglePlayerControllable(playerid, 1);
			new engine,lights,alarm,doors,bonnet,boot,objective;
         	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
            vehicle[carid][cEngine]=true;
 		}
        return 1;
	}
	if(dialogid == 134)
    {
        if(!response)
	    {
	        if(player_Dialog[playerid] == 0){vehicle_Save(carid,1,0); uniquebizz_Save(player_Variable[playerid]); player_Variable[playerid] = -1; return 1;}
			else
				{bizz_ShowDialogTuning(playerid);return 1;}
	    }
	    new changed=false;
	    if(player_Dialog[playerid]==0)
	    {
	        if(listitem == 0)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Couleurs - Prix : $100","Noire\nBlanche\nRouge\nVerte\nJaune\nBleu\nEntrer un id","Valider","Retour");
	            player_Dialog[playerid]=1;
	        }
	        if(listitem == 1)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Pots","Pot Echapement Xs ($750)\nPot Echapement Xz ($650)\nPot Slamin ($500)\nPot Chrome ($500)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=3;
	        }
	        if(listitem == 2)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Tablier avant","Tablier Xs ($950)\nTablier Xz ($850)\nTablier Slamin ($750)\nTablier Chrome ($750)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=4;
	        }
	        if(listitem == 3)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Tablier arrière","Tablier Arriere Xs ($1000)\nTablier Arriere Xz ($900)\nTablier Arriere Slamin ($750)\nTablier Arriere Chrome ($750)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=5;
	        }
	        if(listitem == 4)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Tablier lateraux","Tablier Lateral Xs ($500)\nTablier Lateral Xz ($350)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=6;
	        }
	        if(listitem == 5)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Ailleron","Ailleron Xs ($600)\nAilleron Xz ($450)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=7;
	        }
	        if(listitem == 6)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Toit","Alient Xs ($250)\nX-Flow Xz ($200)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=8;
	        }
	        if(listitem == 7)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Jantes","Cutter ($1000)\nRimshine ($950)\nMega ($1050)\nGrove ($1200)\nSwitch ($900)\nShadow ($1100)\nClassic ($1600)\nDollar ($1550)\nImport ($800)\nAtomic ($750)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=9;
	        }
	        if(listitem == 8)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Nitro","Nitro x2 ($500)\nNitro x5 ($1000)\nNitro x10 ($2000)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=10;
	        }
	        if(listitem == 9)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Hydraulics","Hydraulics ($1000)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=12;
	        }
	        if(listitem == 10)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} PaintJobs","Paintjob 1 ($500)\nPaintjob 2 ($500)\nPaintjob 3 ($500)\nRetirer la peinture","Valider","Retour");
	            player_Dialog[playerid]=11;
	        }
	        if(listitem == 11)
	        {
	            ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF} Néons","Néons Bleu ($250)\nNéons Rouge ($250)\nNéons Vert ($250)\nNéons Blanc ($250)\nNéons Rose ($250)\nNéons Jaune ($%d)\nRetirer le composant","Valider","Retour");
	            player_Dialog[playerid]=13;
	        }
	    }
	    else if(player_Dialog[playerid]==1)
	    {
	        if(PlayerInfo[playerid][pCash] >= 100)
        	{
		        if(listitem == 0){ChangeVehicleColor(carid,0,0); SafeGivePlayerMoney(playerid,-100,"Tunning achat, Couleurs"); vehicle[carid][cColorOne]=0;vehicle[carid][cColorTwo]=0;}
		        if(listitem == 1){ChangeVehicleColor(carid,1,1); SafeGivePlayerMoney(playerid,-100,"Tunning achat, Couleurs"); vehicle[carid][cColorOne]=1;vehicle[carid][cColorTwo]=1;}
		        if(listitem == 2){ChangeVehicleColor(carid,3,3); SafeGivePlayerMoney(playerid,-100,"Tunning achat, Couleurs"); vehicle[carid][cColorOne]=3;vehicle[carid][cColorTwo]=3;}
		        if(listitem == 3){ChangeVehicleColor(carid,16,16); SafeGivePlayerMoney(playerid,-100,"Tunning achat, Couleurs"); vehicle[carid][cColorOne]=16;vehicle[carid][cColorTwo]=16;}
		        if(listitem == 4){ChangeVehicleColor(carid,6,6); SafeGivePlayerMoney(playerid,-100,"Tunning achat, Couleurs"); vehicle[carid][cColorOne]=6;vehicle[carid][cColorTwo]=6;}
		        if(listitem == 5){ChangeVehicleColor(carid,7,7); SafeGivePlayerMoney(playerid,-100,"Tunning achat, Couleurs"); vehicle[carid][cColorOne]=7;vehicle[carid][cColorTwo]=7;}
		        if(listitem == 6)
		        {
		            ShowPlayerDialog(playerid,134,DIALOG_STYLE_INPUT,"{2B6AFF}» Tuning «{FFFFFF} Couleurs - Prix : $100","Entrez l'id de la/les couleur(s).\nEx: couleur1/couleur2 -> 0/1 -> noire/blanche :","Valider","Retour");
		            player_Dialog[playerid]=2;
		            return 1;
		        }
		        bizz_ShowDialogTuning(playerid);
            }
			else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
	    }
	    else if(player_Dialog[playerid]==2)
	    {
	        new couleur[12][16];
			split(inputtext,couleur,'/');
			
			if(!strlen(couleur[0])) // Pas de couleur 1
				{ShowPlayerDialog(playerid,134,DIALOG_STYLE_INPUT,"{2B6AFF}» Tuning «{FFFFFF} Couleurs - Prix : $100","Erreur, pas de couleur 1.\nEntrez l'id de la/les couleur(s).\nEx: couleur1/couleur2 -> 0/1 -> noire/blanche :","Valider","Retour");return 1;}
			if(!strlen(couleur[1])) // Pas de couleur 1
				{ShowPlayerDialog(playerid,134,DIALOG_STYLE_INPUT,"{2B6AFF}» Tuning «{FFFFFF} Couleurs - Prix : $100","Erreur, pas de couleur 2.\nEntrez l'id de la/les couleur(s).\nEx: couleur1/couleur2 -> 0/1 -> noire/blanche :","Valider","Retour");return 1;}
			if(strlen(couleur[2])>0) // Erreur syntaxe
				{ShowPlayerDialog(playerid,134,DIALOG_STYLE_INPUT,"{2B6AFF}» Tuning «{FFFFFF} Couleurs - Prix : $100","Erreur syntaxe.\nEntrez l'id de la/les couleur(s).\nEx: couleur1/couleur2 -> 0/1 -> noire/blanche :","Valider","Retour");return 1;}
				
		    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Couleur(s) repeinte(nt).");
		    new couleur1=strval(couleur[0]);
			new couleur2=strval(couleur[1]);
			vehicle[carid][cColorOne]=couleur1;
			vehicle[carid][cColorTwo]=couleur2;
			sbizz[player_Variable[playerid]][ubCaisse]+=100;
			ChangeVehicleColor(carid,couleur1,couleur2);
			SafeGivePlayerMoney(playerid,-100,"Tunning achat, Couleurs");
	        bizz_ShowDialogTuning(playerid);
	        PlayerPlaySound(playerid,1133,0,0,0);
		}
		else if(player_Dialog[playerid]==3)
	    {
	        if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] >= 750)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1034); vehicle[carid][tExhausts]=1034; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1046); vehicle[carid][tExhausts]=1046; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1065); vehicle[carid][tExhausts]=1065; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1064); vehicle[carid][tExhausts]=1064; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1028); vehicle[carid][tExhausts]=1028; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1089); vehicle[carid][tExhausts]=1089; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    SafeGivePlayerMoney(playerid,-750,"Tunning achat, Pots");
					    sbizz[player_Variable[playerid]][ubCaisse]+=750;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] >= 650)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1037); vehicle[carid][tExhausts]=1037; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1045); vehicle[carid][tExhausts]=1048; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1066); vehicle[carid][tExhausts]=1066; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1069); vehicle[carid][tExhausts]=1069; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1029); vehicle[carid][tExhausts]=1029; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1092); vehicle[carid][tExhausts]=1092; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Pot(s) d'échapement installé(s).");
					    SafeGivePlayerMoney(playerid,-650,"Tunning achat, Pots");
					    sbizz[player_Variable[playerid]][ubCaisse]+=650;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pCash] >= 500)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536){AddVehicleComponent(carid,1105); vehicle[carid][tExhausts]=1105; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534){AddVehicleComponent(carid,1127); vehicle[carid][tExhausts]=1127; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575){AddVehicleComponent(carid,1043); vehicle[carid][tExhausts]=1043; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535){AddVehicleComponent(carid,1114); vehicle[carid][tExhausts]=1114; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567){AddVehicleComponent(carid,1132); vehicle[carid][tExhausts]=1132; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576){AddVehicleComponent(carid,1135); vehicle[carid][tExhausts]=1135; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Pot(s) d'échapement installé(s).");
					    SafeGivePlayerMoney(playerid,-500,"Tunning achat, Pots");
					    sbizz[player_Variable[playerid]][ubCaisse]+=500;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 3)
			{
			    if(PlayerInfo[playerid][pCash] >= 500)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536){AddVehicleComponent(carid,1104); vehicle[carid][tExhausts]=1104; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534){AddVehicleComponent(carid,1126); vehicle[carid][tExhausts]=1126; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575){AddVehicleComponent(carid,1044); vehicle[carid][tExhausts]=1044; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535){AddVehicleComponent(carid,1113); vehicle[carid][tExhausts]=1113; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567){AddVehicleComponent(carid,1129); vehicle[carid][tExhausts]=1129; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576){AddVehicleComponent(carid,1136); vehicle[carid][tExhausts]=1136; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Pot(s) d'échapement installé(s).");
					    SafeGivePlayerMoney(playerid,-500,"Tunning achat, Pots");
					    sbizz[player_Variable[playerid]][ubCaisse]+=500;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 4)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé le(s) pot(s) d'échapement.");
			    tuning_RemoveComponent(carid,0);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==4)
	    {
			if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] >= 950)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1171); vehicle[carid][tFrontBumper]=1171; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1153); vehicle[carid][tFrontBumper]=1153; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1160); vehicle[carid][tFrontBumper]=1160; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1155); vehicle[carid][tFrontBumper]=1155; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1169); vehicle[carid][tFrontBumper]=1169; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1166); vehicle[carid][tFrontBumper]=1166; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tablier avant installé.");
					    SafeGivePlayerMoney(playerid,-950,"Tunning achat, Tablier");
					    sbizz[player_Variable[playerid]][ubCaisse]+=950;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] >= 850)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1172); vehicle[carid][tFrontBumper]=1172; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1152); vehicle[carid][tFrontBumper]=1152; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1173); vehicle[carid][tFrontBumper]=1173; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1157); vehicle[carid][tFrontBumper]=1157; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1170); vehicle[carid][tFrontBumper]=1170; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1165); vehicle[carid][tFrontBumper]=1165; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tablier avant installé.");
					    SafeGivePlayerMoney(playerid,-850,"Tunning achat, Tablier");
					    sbizz[player_Variable[playerid]][ubCaisse]+=850;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pCash] >= 750)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536){AddVehicleComponent(carid,1181); vehicle[carid][tFrontBumper]=1181; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534){AddVehicleComponent(carid,1185); vehicle[carid][tFrontBumper]=1185; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575){AddVehicleComponent(carid,1175); vehicle[carid][tFrontBumper]=1175; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535){AddVehicleComponent(carid,1116); vehicle[carid][tFrontBumper]=1116; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567){AddVehicleComponent(carid,1188); vehicle[carid][tFrontBumper]=1188; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576){AddVehicleComponent(carid,1190); vehicle[carid][tFrontBumper]=1190; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tablier avant installé.");
					    SafeGivePlayerMoney(playerid,-750,"Tunning achat, Tablier");
					    sbizz[player_Variable[playerid]][ubCaisse]+=750;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 3)
			{
			    if(PlayerInfo[playerid][pCash] >= 750)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536){AddVehicleComponent(carid,1182); vehicle[carid][tFrontBumper]=1182; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534){AddVehicleComponent(carid,1179); vehicle[carid][tFrontBumper]=1179; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575){AddVehicleComponent(carid,1174); vehicle[carid][tFrontBumper]=1174; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535){AddVehicleComponent(carid,1115); vehicle[carid][tFrontBumper]=1115; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567){AddVehicleComponent(carid,1189); vehicle[carid][tFrontBumper]=1189; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576){AddVehicleComponent(carid,1191); vehicle[carid][tFrontBumper]=1191; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tablier avant installé.");
					    SafeGivePlayerMoney(playerid,-750,"Tunning achat, Tablier");
					    sbizz[player_Variable[playerid]][ubCaisse]+=750;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 4)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé le tablier avant.");
			    tuning_RemoveComponent(carid,1);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==5)
	    {
			if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] >= 1000)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1149); vehicle[carid][tRearBumper]=1149; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1150); vehicle[carid][tRearBumper]=1150; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1159); vehicle[carid][tRearBumper]=1159; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1154); vehicle[carid][tRearBumper]=1154; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1141); vehicle[carid][tRearBumper]=1141; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1169); vehicle[carid][tRearBumper]=1169; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tablier arrière installé.");
	        			SafeGivePlayerMoney(playerid,-1000,"Tunning achat, Tablier");
	        			sbizz[player_Variable[playerid]][ubCaisse]+=1000;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] >= 900)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1148); vehicle[carid][tRearBumper]=1148; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1151); vehicle[carid][tRearBumper]=1151; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1161); vehicle[carid][tRearBumper]=1161; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1156); vehicle[carid][tRearBumper]=1156; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1140); vehicle[carid][tRearBumper]=1140; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1167); vehicle[carid][tRearBumper]=1167; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tablier arrière installé.");
					    SafeGivePlayerMoney(playerid,-900,"Tunning achat, Tablier");
					    sbizz[player_Variable[playerid]][ubCaisse]+=900;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 2)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé le tablier arrière.");
			    tuning_RemoveComponent(carid,2);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==6)
	    {
	        if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] >= 500)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1036);AddVehicleComponent(carid,1040); vehicle[carid][tSideBumper]=1036;vehicle[carid][tSideBumper2]=1040; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1047);AddVehicleComponent(carid,1051); vehicle[carid][tSideBumper]=1047;vehicle[carid][tSideBumper2]=1051; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1069);AddVehicleComponent(carid,1071); vehicle[carid][tSideBumper]=1069;vehicle[carid][tSideBumper2]=1071; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1056);AddVehicleComponent(carid,1062); vehicle[carid][tSideBumper]=1056;vehicle[carid][tSideBumper2]=1062; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1026);AddVehicleComponent(carid,1027); vehicle[carid][tSideBumper]=1026;vehicle[carid][tSideBumper2]=1027; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1090);AddVehicleComponent(carid,1094); vehicle[carid][tSideBumper]=1090;vehicle[carid][tSideBumper2]=1094; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tabliers latéraux installés.");
						SafeGivePlayerMoney(playerid,-500,"Tunning achat, Tablier");
						sbizz[player_Variable[playerid]][ubCaisse]+=500;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] >= 350)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1039); AddVehicleComponent(carid,1041); vehicle[carid][tSideBumper]=1039;vehicle[carid][tSideBumper2]=1041; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1048);  AddVehicleComponent(carid,1052); vehicle[carid][tSideBumper]=1048;vehicle[carid][tSideBumper2]=1052; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1070); AddVehicleComponent(carid,1072); vehicle[carid][tSideBumper]=1070;vehicle[carid][tSideBumper2]=1072; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1057); AddVehicleComponent(carid,1063); vehicle[carid][tSideBumper]=1057;vehicle[carid][tSideBumper2]=1063; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1030); AddVehicleComponent(carid,1031); vehicle[carid][tSideBumper]=1030;vehicle[carid][tSideBumper2]=1031; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1093); AddVehicleComponent(carid,1095); vehicle[carid][tSideBumper]=1093;vehicle[carid][tSideBumper2]=1095; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Tabliers latéraux installés.");
						SafeGivePlayerMoney(playerid,-350,"Tunning achat, Tablier");
						sbizz[player_Variable[playerid]][ubCaisse]+=350;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
					else
						{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				}
			}
			if(listitem == 2)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé les tabliers latéraux.");
			    tuning_RemoveComponent(carid,5);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==7)
	    {
	        if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] >= 600)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1147); vehicle[carid][tSpoilers]=1147; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1049); vehicle[carid][tSpoilers]=1049; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1162); vehicle[carid][tSpoilers]=1162; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1058); vehicle[carid][tSpoilers]=1058; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1138); vehicle[carid][tSpoilers]=1138; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1164); vehicle[carid][tSpoilers]=1164; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Ailleron installé.");
						SafeGivePlayerMoney(playerid,-600,"Tunning achat, Aillerons");
						sbizz[player_Variable[playerid]][ubCaisse]+=600;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
					else {msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] >= 450)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1146); vehicle[carid][tSpoilers]=1146; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1050); vehicle[carid][tSpoilers]=1050; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1158); vehicle[carid][tSpoilers]=1158; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1060); vehicle[carid][tSpoilers]=1060; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1139); vehicle[carid][tSpoilers]=1139; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1163); vehicle[carid][tSpoilers]=1163; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Ailleron installé.");
						SafeGivePlayerMoney(playerid,-450,"Tunning achat, Aillerons");
						sbizz[player_Variable[playerid]][ubCaisse]+=450;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				}
				else {msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 2)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé l'ailleron.");
			    tuning_RemoveComponent(carid,4);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==8)
	    {
	        if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] >= 250)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1038); vehicle[carid][tRoof]=1038; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1054); vehicle[carid][tRoof]=1054; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1067); vehicle[carid][tRoof]=1067; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1055); vehicle[carid][tRoof]=1055; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1032); vehicle[carid][tRoof]=1032; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1088); vehicle[carid][tRoof]=1088; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Toit installé.");
		                SafeGivePlayerMoney(playerid,-250,"Tunning achat, Toit");
		                sbizz[player_Variable[playerid]][ubCaisse]+=250;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
					else
						{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] >= 200)
	        	{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){AddVehicleComponent(carid,1035); vehicle[carid][tRoof]=1035; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){AddVehicleComponent(carid,1053); vehicle[carid][tRoof]=1053; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){AddVehicleComponent(carid,1068); vehicle[carid][tRoof]=1068; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){AddVehicleComponent(carid,1061); vehicle[carid][tRoof]=1061; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){AddVehicleComponent(carid,1033); vehicle[carid][tRoof]=1033; changed=true;}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){AddVehicleComponent(carid,1091); vehicle[carid][tRoof]=1091; changed=true;}
					else{msg_Client(playerid, COLOR_WHITE, "» Véhicule « Impossible sur ce modèle."); bizz_ShowDialogTuning(playerid); return 1;}
					if(changed)
					{
					    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Toit installé.");
		                SafeGivePlayerMoney(playerid,-200,"Tunning achat, Toit");
		                sbizz[player_Variable[playerid]][ubCaisse]+=200;
			        	PlayerPlaySound(playerid,1133,0,0,0);
			        	bizz_ShowDialogTuning(playerid);
					}
				 }
				 else
				 	{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 2)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé le toit.");
			    tuning_RemoveComponent(carid,3);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==9)
	    {
	        if(IsABike(carid) || IsAMoto(carid))
	        {
	        	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Impossible sur ce véhicule.");
	        	bizz_ShowDialogTuning(playerid);
	            return 1;
	        }
	        if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] < 1000){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1079); vehicle[carid][tWheels]=1079; SafeGivePlayerMoney(playerid,-1000,"Tunning achat, Jante"); changed=true;
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] < 950){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1075); vehicle[carid][tWheels]=1075; SafeGivePlayerMoney(playerid,-950,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pCash] < 1050){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1074); vehicle[carid][tWheels]=1074; SafeGivePlayerMoney(playerid,-1050,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 3)
			{
			    if(PlayerInfo[playerid][pCash] < 1200){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1081); vehicle[carid][tWheels]=1081; SafeGivePlayerMoney(playerid,-1200,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pCash] < 900){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1080); vehicle[carid][tWheels]=1080; SafeGivePlayerMoney(playerid,-900,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 5)
			{
			    if(PlayerInfo[playerid][pCash] < 1100){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1073); vehicle[carid][tWheels]=1073; SafeGivePlayerMoney(playerid,-1100,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 6)
			{
			    if(PlayerInfo[playerid][pCash] < 1600){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1077); vehicle[carid][tWheels]=1077; SafeGivePlayerMoney(playerid,-1600,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 7)
			{
			    if(PlayerInfo[playerid][pCash] < 1550){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1083); vehicle[carid][tWheels]=1083; SafeGivePlayerMoney(playerid,-1550,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 8)
			{
			    if(PlayerInfo[playerid][pCash] < 800){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1082); vehicle[carid][tWheels]=1082; SafeGivePlayerMoney(playerid,-800,"Tunning achat, Jante"); changed=true;
			}
            if(listitem == 9)
			{
			    if(PlayerInfo[playerid][pCash] < 750){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
				AddVehicleComponent(carid,1085); vehicle[carid][tWheels]=1085; SafeGivePlayerMoney(playerid,-750,"Tunning achat, Jante"); changed=true;
			}
			if(listitem == 10)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé les jantes.");
			    tuning_RemoveComponent(carid,6);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
            if(changed)
			{
			    sbizz[player_Variable[playerid]][ubCaisse]+=800;
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Jantes installées.");
	            PlayerPlaySound(playerid,1133,0,0,0);
	            bizz_ShowDialogTuning(playerid);
            }
	    }
	    else if(player_Dialog[playerid]==10)
	    {
	        if(IsABike(carid) || IsAMoto(carid))
	        {
	        	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Impossible sur ce véhicule.");
	        	bizz_ShowDialogTuning(playerid);
	            return 1;
	        }
	        if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCash] >= 500)
	        	{
	        	    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Nitro x2 installée.");
					AddVehicleComponent(carid,1009); vehicle[carid][tNitro]=1009; SafeGivePlayerMoney(playerid,-500,"Tunning achat, Nitro");
					sbizz[player_Variable[playerid]][ubCaisse]+=500;
					PlayerPlaySound(playerid,1133,0,0,0);
					bizz_ShowDialogTuning(playerid);
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCash] >= 1000)
	        	{
	        	    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Nitro x5 installée.");
					AddVehicleComponent(carid,1008); vehicle[carid][tNitro]=1008; SafeGivePlayerMoney(playerid,-1000,"Tunning achat, Nitro");
					sbizz[player_Variable[playerid]][ubCaisse]+=1000;
					PlayerPlaySound(playerid,1133,0,0,0);
					bizz_ShowDialogTuning(playerid);
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pCash] >= 2000)
	        	{
	        	    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Nitro x6 installée.");
					AddVehicleComponent(carid,1010); vehicle[carid][tNitro]=1010; SafeGivePlayerMoney(playerid,-2000,"Tunning achat, Nitro");
					sbizz[player_Variable[playerid]][ubCaisse]+=2000;
					PlayerPlaySound(playerid,1133,0,0,0);
					bizz_ShowDialogTuning(playerid);
				}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 3)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé la nitro.");
			    tuning_RemoveComponent(carid,8);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==11)
	    {
	        if(IsABike(carid) || IsAMoto(carid))
	        {
	        	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Impossible sur ce véhicule.");
	        	bizz_ShowDialogTuning(playerid);
	            return 1;
	        }
	        if(PlayerInfo[playerid][pCash] >= 500)
	        {
		        if(listitem == 0)
					{ChangeVehiclePaintjob(carid,0); vehicle[carid][paintjob]=0; changed=true;}
				if(listitem == 1)
					{ChangeVehiclePaintjob(carid,1); vehicle[carid][paintjob]=1; changed=true;}
				if(listitem == 2)
					{ChangeVehiclePaintjob(carid,2); vehicle[carid][paintjob]=2; changed=true;}
					
				if(changed)
				{
				    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} PaintJob installée.");
				    SafeGivePlayerMoney(playerid,-500,"Tunning achat, PaintJob");
				    sbizz[player_Variable[playerid]][ubCaisse]+=500;
		            PlayerPlaySound(playerid,1133,0,0,0);
		            bizz_ShowDialogTuning(playerid);
	            }
            }
            else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
            if(listitem == 3)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé la paintJob.");
			    ChangeVehiclePaintjob(carid,-1);
			    vehicle[carid][paintjob]=-1;
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==12)
	    {
	        if(IsABike(carid) || IsAMoto(carid))
	        {
	        	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Impossible sur ce véhicule.");
	        	bizz_ShowDialogTuning(playerid);
	            return 1;
	        }
	        if(listitem == 0)
			{
	        	if(PlayerInfo[playerid][pCash] >= 1000)
        		{
		            AddVehicleComponent(carid,1087);
		            vehicle[carid][tHydraulics]=1087;
		            sbizz[player_Variable[playerid]][ubCaisse]+=1000;
		            PlayerPlaySound(playerid,1133,0,0,0);
		            bizz_ShowDialogTuning(playerid);
		            SafeGivePlayerMoney(playerid,-1000,"Tunning achat, Hydraulics");
	        	}
				else
					{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous n'avez pas assez d'argent !"); bizz_ShowDialogTuning(playerid); return 1;}
			}
			if(listitem == 1)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé les hidrolics.");
			    tuning_RemoveComponent(carid,7);
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
	    else if(player_Dialog[playerid]==13)
	    {
	        if(IsAMoto(carid) || IsABike(carid) || IsABoat(carid) || IsAPlane(carid) || IsATrain(carid))
	        {
	        	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Impossible sur ce véhicule.");
	        	bizz_ShowDialogTuning(playerid);
	            return 1;
	        }
	        if(listitem >= 0 && listitem <= 5)
			{
			    if(PlayerInfo[playerid][pCash] >= 250)
        		{
				    if(listitem == 0)
				    	{vehicle[carid][cNeon] = 18648;}
	                if(listitem == 1)
	                    {vehicle[carid][cNeon] = 18647;}
	                if(listitem == 2)
	                    {vehicle[carid][cNeon] = 18649;}
	                if(listitem == 3)
	                    {vehicle[carid][cNeon] = 18652;}
	                if(listitem == 4)
	                    {vehicle[carid][cNeon] = 18651;}
	                if(listitem == 5)
	                    {vehicle[carid][cNeon] = 18650;}
				    if(car_Neon1[carid] != 0 || car_Neon2[carid] != 0)
					{
					    if(IsValidDynamicObject(car_Neon1[carid]))
						    {DestroyDynamicObject(car_Neon1[carid]);}
						if(IsValidDynamicObject(car_Neon2[carid]))
						    {DestroyDynamicObject(car_Neon2[carid]);}
					}
					car_Neon1[carid] = CreateDynamicObject(18647,0,0,0,0,0,0,-1,-1,-1,100);
					car_Neon2[carid] = CreateDynamicObject(18647,0,0,0,0,0,0,-1,-1,-1,100);
					AttachDynamicObjectToVehicle(car_Neon1[carid], carid, -0.8, 0.0, -0.45, 0.0, 0.0, 0.0);
			      	AttachDynamicObjectToVehicle(car_Neon2[carid], carid, 0.8, 0.0, -0.45, 0.0, 0.0, 0.0);
				    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Néons achetés.");
				    SafeGivePlayerMoney(playerid,-250,"Tunning achat, Néons");
				    sbizz[player_Variable[playerid]][ubCaisse]+=250;
				    PlayerPlaySound(playerid,1133,0,0,0);
				    bizz_ShowDialogTuning(playerid);
			    }
			}
			if(listitem == 6)
			{
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tuning «{FFFFFF} Vous avez supprimé les néons.");
			    vehicle[carid][cNeon] = 0;
			    if(car_Neon1[carid] != 0 || car_Neon2[carid] != 0)
				{
				    if(IsValidDynamicObject(car_Neon1[carid]))
					    {DestroyDynamicObject(car_Neon1[carid]);}
					if(IsValidDynamicObject(car_Neon2[carid]))
					    {DestroyDynamicObject(car_Neon2[carid]);}
				}
				car_Neon1[carid] = 0;
				car_Neon2[carid] = 0;
			    PlayerPlaySound(playerid,1133,0,0,0);
			    bizz_ShowDialogTuning(playerid);
			}
	    }
        return 1;
    }
    if(dialogid == 124)
    {
        if(!response)
			{return 1;}
			
		if(listitem == 0)
		{
		    if(PlayerInfo[playerid][pGarageKey1] > -1)
		    {
		        msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Votre garage a été localisé. (point rouge minimap)");
		        SetPlayerCheckpoint(playerid,garage[PlayerInfo[playerid][pGarageKey1]][pos][0],garage[PlayerInfo[playerid][pGarageKey1]][pos][1],garage[PlayerInfo[playerid][pGarageKey1]][pos][2], 3);
		    }
		    else
				{msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Vous n'avez pas de garage à cette emplacement."); return 1;}
		}
		if(listitem == 1)
		{
		    if(PlayerInfo[playerid][pGarageKey2] > -1)
		    {
		        msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Votre garage a été localisé. (point rouge minimap)");
		        SetPlayerCheckpoint(playerid,garage[PlayerInfo[playerid][pGarageKey2]][pos][0],garage[PlayerInfo[playerid][pGarageKey2]][pos][1],garage[PlayerInfo[playerid][pGarageKey2]][pos][2], 3);
		    }
		    else
				{msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Vous n'avez pas de garage à cette emplacement."); return 1;}
		}
		if(listitem == 2)
		{
		    if(PlayerInfo[playerid][pGarageKey3] > -1)
		    {
		        msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Votre garage a été localisé. (point rouge minimap)");
		        SetPlayerCheckpoint(playerid,garage[PlayerInfo[playerid][pGarageKey3]][pos][0],garage[PlayerInfo[playerid][pGarageKey3]][pos][1],garage[PlayerInfo[playerid][pGarageKey3]][pos][2], 3);
		    }
		    else
				{msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Vous n'avez pas de garage à cette emplacement."); return 1;}
		}
		return 1;
    }
    if(dialogid == 129)
    {
        if(!response)
			{return 1;}
		    
		if(listitem == 0)
		{
		    if(PlayerInfo[playerid][pGarageKey1] > -1)
		    {

				new prix = garage[PlayerInfo[playerid][pGarageKey1]][price]/4*3;
				format(string,sizeof(string),"{10ce96}» Garage «{FFFFFF} Vous avez vendu votre garage pour $%d",prix);
			    msg_Client(playerid,COLOR_GARAGE,string);
			    SafeGivePlayerMoney(playerid, prix,"Vendu un garage");
			    garage_Reset(PlayerInfo[playerid][pGarageKey1]);
			    PlayerInfo[playerid][pGarageKey1] = -1;
		    }
		    else
				{msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Vous n'avez pas de garage à cette emplacement."); return 1;}
		}
		if(listitem == 1)
		{
		    if(PlayerInfo[playerid][pGarageKey2] > -1)
		    {
		        new prix = garage[PlayerInfo[playerid][pGarageKey2]][price]/4*3;
				format(string,sizeof(string),"{10ce96}» Garage «{FFFFFF} Vous avez vendu votre garage pour $%d",prix);
			    msg_Client(playerid,COLOR_GARAGE,string);
			    SafeGivePlayerMoney(playerid, prix,"Vendu un garage");
			    garage_Reset(PlayerInfo[playerid][pGarageKey2]);
			    PlayerInfo[playerid][pGarageKey2] = -1;
		    }
		    else
				{msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Vous n'avez pas de garage à cette emplacement."); return 1;}
		}
		if(listitem == 2)
		{
		    if(PlayerInfo[playerid][pGarageKey3] > -1)
		    {
		        new prix = garage[PlayerInfo[playerid][pGarageKey3]][price]/4*3;
				format(string,sizeof(string),"{10ce96}» Garage «{FFFFFF} Vous avez vendu votre garage pour $%d",prix);
			    msg_Client(playerid,COLOR_GARAGE,string);
			    SafeGivePlayerMoney(playerid, prix,"Vendu un garage");
			    garage_Reset(PlayerInfo[playerid][pGarageKey3]);
			    PlayerInfo[playerid][pGarageKey3] = -1;
		    }
		    else
				{msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Vous n'avez pas de garage à cette emplacement."); return 1;}
		}
        return 1;
    }
    if(dialogid == 131)
    {
        if(!response)
			{return 1;}
		
		if(listitem == 0)
		{
		    if(PlayerInfo[playerid][pHousekey1] > -1)
		    {
		        msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Votre maison a été localisée. (Point rouge minimap)");
		        SetPlayerCheckpoint(playerid,house[PlayerInfo[playerid][pHousekey1]][pos][0],house[PlayerInfo[playerid][pHousekey1]][pos][1],house[PlayerInfo[playerid][pHousekey1]][pos][2], 3);
		        return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de maison à cette emplacement."); return 1;}
		}
        if(listitem == 1)
		{
		    if(PlayerInfo[playerid][pHousekey2] > -1)
		    {
		        msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Votre maison a été localisée. (Point rouge minimap)");
		        SetPlayerCheckpoint(playerid,house[PlayerInfo[playerid][pHousekey2]][pos][0],house[PlayerInfo[playerid][pHousekey2]][pos][1],house[PlayerInfo[playerid][pHousekey2]][pos][2], 3);
		        return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de maison à cette emplacement."); return 1;}
		}
		if(listitem == 2)
		{
		    if(PlayerInfo[playerid][pHousekey3] > -1)
		    {
		        msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Votre maison a été localisée. (Point rouge minimap)");
		        SetPlayerCheckpoint(playerid,house[PlayerInfo[playerid][pHousekey3]][pos][0],house[PlayerInfo[playerid][pHousekey3]][pos][1],house[PlayerInfo[playerid][pHousekey3]][pos][2], 3);
		        return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de maison à cette emplacement."); return 1;}
		}
		return 1;
    }
    if(dialogid == 113)
    {
        if(!response)
			{return 1;}
		
		if(listitem == 0)
		{
		    if(PlayerInfo[playerid][pBizkey1] > -1)
		    {
			    if(PlayerInfo[playerid][pBizkey1] >= 1000)
			    {
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre biz a été localisé. (Point rouge minimap)");
			        SetPlayerCheckpoint(playerid,sbizz[PlayerInfo[playerid][pBizkey1]-1000][ubEntrance_x],sbizz[PlayerInfo[playerid][pBizkey1]-1000][ubEntrance_y],sbizz[PlayerInfo[playerid][pBizkey1]-1000][ubEntrance_z], 3);
			        return 1;
			    }
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre biz a été localisé. (Point rouge minimap)");
			    SetPlayerCheckpoint(playerid,bizz[PlayerInfo[playerid][pBizkey1]][pos][0],bizz[PlayerInfo[playerid][pBizkey1]][pos][1],bizz[PlayerInfo[playerid][pBizkey1]][pos][2], 3);
			    return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas de biz à cette emplacement."); return 1;}
		}
		if(listitem == 1)
		{
		    if(PlayerInfo[playerid][pBizkey2] > -1)
		    {
			    if(PlayerInfo[playerid][pBizkey2] >= 1000)
			    {
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre biz a été localisé. (Point rouge minimap)");
			        SetPlayerCheckpoint(playerid,sbizz[PlayerInfo[playerid][pBizkey2]-1000][ubEntrance_x],sbizz[PlayerInfo[playerid][pBizkey2]-1000][ubEntrance_y],sbizz[PlayerInfo[playerid][pBizkey2]-1000][ubEntrance_z], 3);
			        return 1;
			    }
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre biz a été localisé. (Point rouge minimap)");
			    SetPlayerCheckpoint(playerid,bizz[PlayerInfo[playerid][pBizkey2]][pos][0],bizz[PlayerInfo[playerid][pBizkey2]][pos][1],bizz[PlayerInfo[playerid][pBizkey2]][pos][2], 3);
			    return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas de biz à cette emplacement."); return 1;}
		}
		if(listitem == 2)
		{
		    if(PlayerInfo[playerid][pBizkey3] > -1)
		    {
			    if(PlayerInfo[playerid][pBizkey3] >= 1000)
			    {
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre biz a été localisé. (Point rouge minimap)");
			        SetPlayerCheckpoint(playerid,sbizz[PlayerInfo[playerid][pBizkey3]-1000][ubEntrance_x],sbizz[PlayerInfo[playerid][pBizkey3]-1000][ubEntrance_y],sbizz[PlayerInfo[playerid][pBizkey3]-1000][ubEntrance_z], 3);
			        return 1;
			    }
			    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre biz a été localisé. (Point rouge minimap)");
			    SetPlayerCheckpoint(playerid,bizz[PlayerInfo[playerid][pBizkey3]][pos][0],bizz[PlayerInfo[playerid][pBizkey3]][pos][1],bizz[PlayerInfo[playerid][pBizkey3]][pos][2], 3);
			    return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas de biz à cette emplacement."); return 1;}
		}
		return 1;
	}
    if(dialogid == 105)
    {
        if(!response)
			{return 1;}
		
		if(listitem == 0)
		{
		    if(PlayerInfo[playerid][pBizkey1] > -1)
		    {
			    if(PlayerInfo[playerid][pBizkey1] >= 1000)
			    {
			        new prix = sbizz[PlayerInfo[playerid][pBizkey1]-1000][ubPrix]/4*3;
			        format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez vendu votre biz pour $%d + argent de la caisse $%d",prix,sbizz[PlayerInfo[playerid][pBizkey1]-1000][ubCaisse]);
			        msg_Client(playerid,COLOR_BIZ,string);
			        new toto = prix+sbizz[PlayerInfo[playerid][pBizkey1]-1000][ubCaisse];
			        SafeGivePlayerMoney(playerid, toto,"Vendu un biz");
			        uniquebizz_Reset(PlayerInfo[playerid][pBizkey1]-1000);
			        PlayerInfo[playerid][pBizkey1] = -1;
			        return 1;
			    }
			    new prix = bizz[PlayerInfo[playerid][pBizkey1]][price]/4*3;
			    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez vendu votre biz pour $%d + argent de la caisse $%d",prix,bizz[PlayerInfo[playerid][pBizkey1]][fund]);
			    msg_Client(playerid,COLOR_BIZ,string);
			    new toto = prix+bizz[PlayerInfo[playerid][pBizkey1]][fund];
			    SafeGivePlayerMoney(playerid, toto,"Vendu un biz");
			    bizz_Reset(PlayerInfo[playerid][pBizkey1]);
			    PlayerInfo[playerid][pBizkey1] = -1;
			    return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas de biz à cette emplacement."); return 1;}
		}
		if(listitem == 1)
		{
		    if(PlayerInfo[playerid][pBizkey2] > -1)
		    {
			    if(PlayerInfo[playerid][pBizkey2] >= 1000)
			    {
			        new prix = sbizz[PlayerInfo[playerid][pBizkey2]-1000][ubPrix]/4*3;
			        format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez vendu votre biz pour $%d + argent de la caisse $%d",prix,sbizz[PlayerInfo[playerid][pBizkey2]-1000][ubCaisse]);
			        msg_Client(playerid,COLOR_BIZ,string);
			        new toto = prix+sbizz[PlayerInfo[playerid][pBizkey2]-1000][ubCaisse];
			        SafeGivePlayerMoney(playerid, toto,"Vendu un biz");
			        uniquebizz_Reset(PlayerInfo[playerid][pBizkey2]-1000);
			        PlayerInfo[playerid][pBizkey2] = -1;
			        return 1;
			    }
			    new prix = bizz[PlayerInfo[playerid][pBizkey2]][price]/4*3;
			    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez vendu votre biz pour $%d + argent de la caisse $%d",prix,bizz[PlayerInfo[playerid][pBizkey2]][fund]);
			    msg_Client(playerid,COLOR_BIZ,string);
			    new toto = prix+bizz[PlayerInfo[playerid][pBizkey2]][fund];
			    SafeGivePlayerMoney(playerid, toto,"Vendu un biz");
			    bizz_Reset(PlayerInfo[playerid][pBizkey2]);
			    PlayerInfo[playerid][pBizkey2] = -1;
			    return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas de biz à cette emplacement."); return 1;}
		}
		if(listitem == 2)
		{
		    if(PlayerInfo[playerid][pBizkey3] > -1)
		    {
			    if(PlayerInfo[playerid][pBizkey3] >= 1000)
			    {
			        new prix = sbizz[PlayerInfo[playerid][pBizkey3]-1000][ubPrix]/4*3;
			        format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez vendu votre biz pour $%d + argent de la caisse $%d",prix,sbizz[PlayerInfo[playerid][pBizkey3]-1000][ubCaisse]);
			        msg_Client(playerid,COLOR_BIZ,string);
			        new toto = prix+sbizz[PlayerInfo[playerid][pBizkey3]-1000][ubCaisse];
			        SafeGivePlayerMoney(playerid, toto,"Vendu un biz");
			        uniquebizz_Reset(PlayerInfo[playerid][pBizkey3]-1000);
			        PlayerInfo[playerid][pBizkey3] = -1;
			        return 1;
			    }
			    new prix = bizz[PlayerInfo[playerid][pBizkey3]][price]/4*3;
			    format(string,sizeof(string),"{2B6AFF}» Biz «{FFFFFF} Vous avez vendu votre biz pour $%d + argent de la caisse $%d",prix,bizz[PlayerInfo[playerid][pBizkey3]][fund]);
			    msg_Client(playerid,COLOR_BIZ,string);
			    new toto = prix+bizz[PlayerInfo[playerid][pBizkey3]][fund];
			    SafeGivePlayerMoney(playerid, toto,"Vendu un biz");
			    bizz_Reset(PlayerInfo[playerid][pBizkey3]);
			    PlayerInfo[playerid][pBizkey3] = -1;
			    return 1;
		    }
		    else
				{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas de biz à cette emplacement."); return 1;}
		}
		return 1;
    }
    if(dialogid == 114)
    {
        if(!response)
			{return 1;}
		
		if(listitem == 0)
		{
		    if(PlayerInfo[playerid][pHousekey1] > -1)
		    {
		        if(strcmp(house[PlayerInfo[playerid][pHousekey1]][owner], PlayerInfo[playerid][pRealName], true) == 0)
				{
			        new prix = house[PlayerInfo[playerid][pHousekey1]][price]/4*3;
			        format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez vendu votre maison pour $%d",prix);
				    msg_Client(playerid,COLOR_HOUSE,string);
				    SafeGivePlayerMoney(playerid, prix,"Vendu une maison");
				    house_Reset(PlayerInfo[playerid][pHousekey1]);
				    PlayerInfo[playerid][pHousekey1] = -1;
			        return 1;
		        }
		        else
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas le propriétaire."); return 1;}
		    }
	    	else
				{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'avez pas de maison à cette emplacement."); return 1;}
		}
		if(listitem == 1)
		{
		    if(PlayerInfo[playerid][pHousekey2] > -1)
		    {
		        if(strcmp(house[PlayerInfo[playerid][pHousekey2]][owner], PlayerInfo[playerid][pRealName], true) == 0)
				{
			        new prix = house[PlayerInfo[playerid][pHousekey2]][price]/4*3;
			        format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez vendu votre maison pour $%d",prix);
				    msg_Client(playerid,COLOR_HOUSE,string);
				    SafeGivePlayerMoney(playerid, prix,"Vendu une maison");
				    house_Reset(PlayerInfo[playerid][pHousekey2]);
				    PlayerInfo[playerid][pHousekey2] = -1;
			        return 1;
		        }
		        else
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas le propriétaire."); return 1;}
		    }
		    else
				{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'avez pas de maison à cette emplacement."); return 1;}
		}
		if(listitem == 2)
		{
		    if(PlayerInfo[playerid][pHousekey3] > -1)
		    {
		        if(strcmp(house[PlayerInfo[playerid][pHousekey3]][owner], PlayerInfo[playerid][pRealName], true) == 0)
				{
			        new prix = house[PlayerInfo[playerid][pHousekey3]][price]/4*3;
			        format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Vous avez vendu votre maison pour $%d",prix);
				    msg_Client(playerid,COLOR_HOUSE,string);
				    SafeGivePlayerMoney(playerid, prix,"Vendu une maison");
				    house_Reset(PlayerInfo[playerid][pHousekey3]);
				    PlayerInfo[playerid][pHousekey3] = -1;
			        return 1;
		        }
		        else
					{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'êtes pas le propriétaire."); return 1;}
		    }
		    else
				{msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'avez pas de maison à cette emplacement."); return 1;}
		}
		return 1;
    }
	if(dialogid == 83)
    {
  		if(!response)
			{return 1;}
        GameTextForPlayer(playerid, "~w~Teleporter", 5000, 1);
		server_SetPlayerInterior(playerid, 0);
		server_SetPlayerVirtualWorld(playerid, 0);
		if(listitem == 0)
		{
		 	if (GetPlayerState(playerid) == 2)
				{SafeSetVehiclePos(carid,542.2597,-1282.9371,17.2422);}
			else
				{SafeSetPlayerPos(playerid,542.2597,-1282.9371,17.2422);}
	    }
	    if(listitem == 1)
		{
	        if (GetPlayerState(playerid) == 2)
				{SafeSetVehiclePos(carid,2126.2930,-1121.8076,25.3608);}
			else
				{SafeSetPlayerPos(playerid,2126.2930,-1121.8076,25.3608);}
		}
		if(listitem == 2)
		{
		 	if (GetPlayerState(playerid) == 2)
				{SafeSetVehiclePos(carid,437.7709,-1354.7351,14.8516);}
				else
				{SafeSetPlayerPos(playerid,437.7709,-1354.7351,14.8516);}
		}
		if(listitem == 3)
		{
		 	if (GetPlayerState(playerid) == 2)
				{SafeSetVehiclePos(carid,997.8630,-1911.9779,11.2065);}
			else
				{SafeSetPlayerPos(playerid,911.8658,-1965.2183,1.3055);}
		}
		if(listitem == 4)
		{
		 	if (GetPlayerState(playerid) == 2)
				{SafeSetVehiclePos(carid,1484.2015,-2433.7385,13.5547);}
			else
				{SafeSetPlayerPos(playerid,1484.2015,-2433.7385,13.5547);}
		}
		if(listitem == 5)
		{
		 	if (GetPlayerState(playerid) == 2)
				{SafeSetVehiclePos(carid,1110.4121,-1748.1361,13.5703);}
			else
				{SafeSetPlayerPos(playerid,1110.4121,-1748.1361,13.5703);}
	 	}
	 	return 1;
	}
	if(dialogid == 81)
    {
        new infostring[512], title[128];
        if(inscription_Step[playerid] == 0)
        {
            inscription_Question(playerid);
            inscription_Step[playerid]=1;
            return 1;
        }
        if(inscription_Step[playerid] == 10)
        {
            if(response==1)
            {
                SetTimerEx("inscription_StartIntro",1500,0,"ii",playerid,1);
                FadeColorForPlayer(playerid,0,0,0,0,0,0,0,255,15,0);
                SetTimerEx("FadeColorForPlayer",1500,0,"iiiiiiiiiii",playerid,0,0,0,255,0,0,0,0,15,0);
	            TimerConnectOff(playerid);
	            server_SetPlayerVirtualWorld(playerid,playerid+1);
				/*OnPlayerRegister(playerid,PlayerInfo[playerid][pKey]);
				PlayerInfo[playerid][pMod_sa_Spawn]=0;
				PlayerInfo[playerid][pMod_sa]=0;*/
				return 1;
			}
            if(response==0)
            {
                format(title,sizeof(title),"{33CCFF}» Inscription «{FFFFFF} Mot de passe - Etape {FF0000}2{FFFFFF}/10");
				format(infostring,sizeof(infostring),"{FFFFFF}Entrez un mot de passe pour votre connexion :");
				ShowPlayerDialog(playerid,81,DIALOG_STYLE_PASSWORD,title,infostring,"Valider","");
				inscription_Step[playerid]=3;
	            return 1;
            }
        }
        
        if(!response)
			{msg_Client(playerid, COLOR_SERVER, "{005660}» Serveur «{C8C8C8} Vous avez annulé l'inscription.");msg_Client(playerid, COLOR_SERVER, "{005660}» Serveur «{C8C8C8} Utilisez '/q' pour quitter."); TimerKick(playerid); return 1;}

        if(inscription_Step[playerid] == 2)
        {
            format(title,sizeof(title),"{33CCFF}» Inscription «{FFFFFF} Mot de passe - Etape {FF0000}2{FFFFFF}/10");
			format(infostring,sizeof(infostring),"{FFFFFF}Entrez un mot de passe pour votre connexion :");
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_PASSWORD,title,infostring,"Valider","");
			inscription_Step[playerid]=3;
            return 1;
        }
        if(inscription_Step[playerid] == 3)
        {
            if(!strlen(inputtext))
			{
				format(infostring,sizeof(infostring),"{FF0000}Entrez un mot de passe pour votre connexion :");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_PASSWORD,"{33CCFF}» Inscription «{FFFFFF} Mot de passe - Etape {FF0000}2{FFFFFF}/10",infostring,"Valider","");
			}
			if(strlen(inputtext) < 3)
			{
				format(infostring,sizeof(infostring),"{FF0000}Quatre carractères minimum !\n{FFFFFF}Entrez un mot de passe pour votre connexion :");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_PASSWORD,"{33CCFF}» Inscription «{FFFFFF} Mot de passe - Etape {FF0000}2{FFFFFF}/10",infostring,"Valider","");
			}
			if(strlen(inputtext) > 32)
			{
				format(infostring,sizeof(infostring),"{FF0000}32 carractères maximum !\n{FFFFFF}Entrez un mot de passe pour votre connexion :");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_PASSWORD,"{33CCFF}» Inscription «{FFFFFF} Mot de passe - Etape {FF0000}2{FFFFFF}/10",infostring,"Valider","");
			}
			strmid(PlayerInfo[playerid][pKey], inputtext, 0, strlen(inputtext), 255);
			format(infostring,sizeof(infostring),"{DABB3E}* Choisissez votre origine *{FFFFFF}\n  Vice City\n  Liberty City\n  Chinatown");
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Origine - Etape {FF0000}3{FFFFFF}/10",infostring,"Valider","");
			inscription_Step[playerid]=4;
            return 1;
        }
        if(inscription_Step[playerid] == 4)
        {
            if(listitem==0)
			{
			 	format(infostring,sizeof(infostring),"{DABB3E}* Choisissez votre origine *{FFFFFF}\n  Vice City\n  Liberty City\n  Chinatown");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Origine - Etape {FF0000}3{FFFFFF}/10",infostring,"Valider","");
			}
			PlayerInfo[playerid][pOrigin]=listitem;
			inscription_Step[playerid]=5;
			format(infostring,sizeof(infostring),"{DABB3E}* Choisissez votre sexe *{FFFFFF}\n  Homme\n  Femme");
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Sexe - Etape {FF0000}4{FFFFFF}/10",infostring,"Valider","");
            return 1;
        }
        if(inscription_Step[playerid] == 5)
        {
            if(listitem==0)
			{
			    format(infostring,sizeof(infostring),"{DABB3E}* Choisissez votre sexe *{FFFFFF}\n  Homme\n  Femme");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Sexe - Etape {FF0000}4{FFFFFF}/10",infostring,"Valider","");
			}
			if(listitem==1){ PlayerInfo[playerid][pSex]=1;SetPlayerSkin(playerid, 26);PlayerInfo[playerid][pChar] = 26;} // homme
			if(listitem==2){ PlayerInfo[playerid][pSex]=2;SetPlayerSkin(playerid, 298);PlayerInfo[playerid][pChar] = 298;} // femme
			format(infostring,sizeof(infostring),"{FFFFFF}Entrer votre adresse email :");
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_INPUT,"{33CCFF}» Inscription «{FFFFFF} Email - Etape {FF0000}5{FFFFFF}/10",infostring,"Valider","");
			inscription_Step[playerid]=6;
			return 1;
        }
        if(inscription_Step[playerid] == 6)
        {
            if(!server_CheckEmail(inputtext))
			{
				format(infostring,sizeof(infostring),"{FF0000}Erreur dans l'adresse email.\n{FFFFFF}Entrer votre adresse email :");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_INPUT,"{33CCFF}» Inscription «{FFFFFF} Email - Etape {FF0000}5{FFFFFF}/10",infostring,"Valider","");
			}
			strmid(PlayerInfo[playerid][pEmail],inputtext,0,32,32);
			inscription_Step[playerid]=7;
			format(infostring,sizeof(infostring),"{DABB3E}* Choisissez une langue *{FFFFFF}\n  - Japonais\n  - Espagnol\n  - Russe\n  - Arabe\n  - Italien\n  - Allemand\n  - Français\n  - Chinois\n  - Portugais\n  - Turc\n  - Antillais\n  - Mexicain\n  - Créole\n  - Jamaicain\n  - Coréen\n  - Cantonais\n  - Ukrainien");
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Langue - Etape {FF0000}6{FFFFFF}/10",infostring,"Valider","");
            return 1;
        }
        if(inscription_Step[playerid] == 7)
        {
            if(listitem==0)
			{
			    format(infostring,sizeof(infostring),"{DABB3E}* Choisissez une langue *{FFFFFF}\n  - Japonais\n  - Espagnol\n  - Russe\n  - Arabe\n  - Italien\n  - Allemand\n  - Français\n  - Chinois\n  - Portugais\n  - Turc\n  - Antillais\n  - Mexicain\n  - Créole\n  - Jamaicain\n  - Coréen\n  - Cantonais\n  - Ukrainien");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Langue - Etape {FF0000}6{FFFFFF}/10",infostring,"Valider","");
   			}
			PlayerInfo[playerid][pLang1]=listitem;
			inscription_Step[playerid]=8;
			format(infostring,sizeof(infostring),"{FFFFFF}Entrez votre âge :");
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_INPUT,"{33CCFF}» Inscription «{FFFFFF} Age - Etape {FF0000}7{FFFFFF}/10",infostring,"Valider","");
            return 1;
        }
        if(inscription_Step[playerid] == 8)
        {
            if(!strlen(inputtext) || strval(inputtext) > 70 || strval(inputtext) < 16)
			{
			    format(infostring,sizeof(infostring),"{FF0000}Erreur dans l'âge, il doit être compris entre 16 et 70 ans.\n{FFFFFF}Entrez votre âge :");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_INPUT,"{33CCFF}» Inscription «{FFFFFF} Age - Etape {FF0000}7{FFFFFF}/10",infostring,"Valider","");
   			}
			PlayerInfo[playerid][pAge]=strval(inputtext);
			inscription_Step[playerid]=9;
			format(infostring,sizeof(infostring),"{DABB3E}* Choisissez votre ville de résidence *{FFFFFF}\n  - Los Santos\n  - San Fierro\n  - Las Venturas\n  - Fort Carson\n  - Bay Side\n  - Angel Pine\n  - Dillimore\n  - Blueberry\n  - Montgomery\n  - Palomino Creek\n  - Las Payasdas\n  - Las Barbancas\n  - El Quebrados");
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Ville - Etape {FF0000}8{FFFFFF}/10",infostring,"Valider","");
            return 1;
        }
        if(inscription_Step[playerid] == 9)
        {
   			if(listitem==0)
   			{
   			    format(infostring,sizeof(infostring),"{DABB3E}* Choisissez votre ville de résidence *{FFFFFF}\n  - Los Santos\n  - San Fierro\n  - Las Venturas\n  - Fort Carson\n  - Bay Side\n  - Angel Pine\n  - Dillimore\n  - Blueberry\n  - Montgomery\n  - Palomino Creek\n  - Las Payasdas\n  - Las Barbancas\n  - El Quebrados");
				return ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"{33CCFF}» Inscription «{FFFFFF} Ville - Etape {FF0000}8{FFFFFF}/10",infostring,"Valider","");
   			}
   			PlayerInfo[playerid][pCity]=listitem-1;
			new sex[24];
			if(PlayerInfo[playerid][pSex] == 1) { sex = "Homme"; }
			else if(PlayerInfo[playerid][pSex] == 2) { sex = "Femme"; }


			format(title,sizeof(title),"{33CCFF}» Inscription «{FFFFFF} Récapitulatif - {FF0000}9{FFFFFF}/10");
			format(infostring,sizeof(infostring),"{FFFFFF}Nom : %s\nMot de passe : %s\n\nOrigine : %s\nAge : %d ans\n\nSexe : %s\nEmail : %s\n\nLangue : %s\nVille : %s",PlayerInfo[playerid][pRealName],PlayerInfo[playerid][pKey],GetOriginName(PlayerInfo[playerid][pOrigin]),PlayerInfo[playerid][pAge],sex,PlayerInfo[playerid][pEmail],GetLangName(PlayerInfo[playerid][pLang1]),GetCityName(PlayerInfo[playerid][pCity]));
			ShowPlayerDialog(playerid,81,DIALOG_STYLE_MSGBOX,title,infostring,"Creer","Modifier");
			inscription_Step[playerid]=10;
			return 1;
        }
		if(listitem==0)
		    {inscription_Question(playerid); return 1;}
        
		if(listitem==inscription_ValidQuestion[playerid])
			{inscription_Note[playerid]++;}
        inscription_QuestionNumber[playerid]++;
        if(inscription_QuestionNumber[playerid]>=15)
		{
		    if(inscription_Note[playerid]>=12)
		    {
		        format(string,sizeof(string),"{FFFFFF}Vous avez réussi le questionnaire de connaissance avec une note de %d/15.\nVous allez maintenant passer à la création de votre compte.",inscription_Note[playerid]);
				ShowPlayerDialog(playerid,81,DIALOG_STYLE_MSGBOX,"{33CCFF}» Inscription «{FFFFFF} Information - {FF0000}1{FFFFFF}/8",string,"Valider","");
		        inscription_Step[playerid]=2;
		        inscription_Note[playerid]=0;
		        inscription_QuestionNumber[playerid]=0;
		        inscription_ValidQuestion[playerid]=0;
		        inscription_RandomList[playerid]=0;
		        return 1;
		    }
		    else
			{
			    format(string,sizeof(string),"{005660}» Serveur «{C8C8C8} Vous avez ratté le questionnaire avec une note de %d/15.");
			    msg_Client(playerid, COLOR_SERVER, string);
				MySQLKick(playerid,-1,"Questionnaire échoué");
				return 1;
			}
		}
        else
			{inscription_Question(playerid); return 1;}
	}
	if(dialogid == 73)
	{
	    if(!response)
	    {
	        if(Dialogue_Admin_Panel[playerid] == 0){ Clicked[playerid] = -1; return 1;}
			else
			{
			    ShowPlayerDialog(playerid,73,DIALOG_STYLE_LIST,"» Admin Panel « Menu principal","Modifier les stats\nSanctions\nAutres","Valider","Annuler");
			    Dialogue_Admin_Panel[playerid] = 0;
			    return 1;
			}
	    }
	    if(Dialogue_Admin_Panel[playerid] == 0)
	    {
		    if(listitem == 0)// Infos
		    {
		        IniStatsPanel(playerid);
		        return 1;
		    }
		    if(listitem == 1) // Sanctions
		    {
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_LIST,"» Admin Panel « Sanctions","Kick\nBan\nJail\nExpulser\nMute OOC\nMute IC\nFreeze\nDe-freeze","Valider","Retour");
		        Dialogue_Admin_Panel[playerid] = 2;
		    }
		    if(listitem == 2)// Autres
		    {
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_LIST,"» Admin Panel « Autres","Goto\nGethere\nRestaurer sa vie\nRestaurer son armure","Valider","Retour");
		        Dialogue_Admin_Panel[playerid] = 3;
		    }
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 2)
	    {
	        if(listitem == 0)// kick
		    {
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"» Admin Panel « Kick","Entrez la raison du kick : (Non Obligatoir)","Valider","Retour");
		        Dialogue_Admin_Panel[playerid] = 4;
		    }
		    if(listitem == 1)// ban
		    {
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"» Admin Panel « Ban","Entrez la raison du ban : (Non Obligatoir)","Valider","Retour");
		        Dialogue_Admin_Panel[playerid] = 5;
		    }
		    if(listitem == 2)// jail
		    {
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"» Admin Panel « Jail","Entrez la raison du jail : (Non Obligatoir)","Valider","Retour");
		        Dialogue_Admin_Panel[playerid] = 6;
		    }
		    if(listitem == 3)// expulser
		    {
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"» Admin Panel « Expulser","Entrez la raison de l'expulssion : (Non Obligatoir)","Valider","Retour");
		        Dialogue_Admin_Panel[playerid] = 7;
		    }
		    if(listitem == 4)// mute OOC
		    {
		        
		    }
		    if(listitem == 5)// mute IC
		    {

		    }
		    if(listitem == 6)// freeze
		    {
		        GetPlayerName(Clicked[playerid],sendername,sizeof(sendername));
		        GetPlayerName(playerid,giveplayer,sizeof(giveplayer));
		        TogglePlayerControllable(Clicked[playerid],false);
		        msg_Client(Clicked[playerid],COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez été freeze par un admin.");
		        GameTextForPlayer(Clicked[playerid], "Tu es freeze",3000, 3);
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez freeze %s",sendername);
          		msg_Client(playerid,COLOR_WHITE,string);
          		format(string, sizeof(string), "%s à freeze %s.",giveplayer, sendername);
				log_Admin(string);
		    }
		    if(listitem == 7)// de-freeze
		    {
		        GetPlayerName(Clicked[playerid],sendername,sizeof(sendername));
		        GetPlayerName(playerid,giveplayer,sizeof(giveplayer));
		        TogglePlayerControllable(Clicked[playerid],true);
		        msg_Client(Clicked[playerid],COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez été dé-freeze par un admin.");
		        GameTextForPlayer(Clicked[playerid], "Tu es defreeze",3000, 3);
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez dé-freeze %s",sendername);
          		msg_Client(playerid,COLOR_WHITE,string);
          		format(string, sizeof(string), "%s à dé-freeze %s.",giveplayer, sendername);
				log_Admin(string);
		    }
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 3)
	    {
	        if(listitem == 0)// goto
		    {
		        if(Spectate[playerid] != -1)
				{
					return 1;
				}
				new Float:plocx,Float:plocy,Float:plocz;
				GetPlayerPos(Clicked[playerid], plocx, plocy, plocz);
				if(PlayerInfo[Clicked[playerid]][pInt] > 0)
				{
					server_SetPlayerInterior(playerid,PlayerInfo[Clicked[playerid]][pInt]);
				}
				if(PlayerInfo[playerid][pInt] == 0)
					{server_SetPlayerInterior(playerid,0);}
				if(plocz > 530.0 && PlayerInfo[Clicked[playerid]][pInt] == 0) //the highest land point in sa = 526.8
				{
					server_SetPlayerInterior(playerid,1);
				}
				if (GetPlayerState(playerid) == 2)
				{
					SafeSetVehiclePos(carid, plocx, plocy+4, plocz);
				}
				else
					{SafeSetPlayerPos(playerid,plocx,plocy+2, plocz);}
				msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
		        return 1;
		    }
		    if(listitem == 1)// gethere
		    {
		        new Float:plocx,Float:plocy,Float:plocz;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				if(PlayerInfo[playerid][pInt] > 0)
				{
					server_SetPlayerInterior(Clicked[playerid],PlayerInfo[playerid][pInt]);
				}
				if(PlayerInfo[playerid][pInt] == 0)
					{server_SetPlayerInterior(Clicked[playerid],0);}
				if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
				{
					server_SetPlayerInterior(Clicked[playerid],1);
				}
				if (GetPlayerState(Clicked[playerid]) == 2)
				{
					SafeSetVehiclePos(carid, plocx, plocy+4, plocz);
				}
				else
				{
					SafeSetPlayerPos(Clicked[playerid],plocx,plocy+2, plocz);
					msg_Client(Clicked[playerid], COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous avez été téléporté.");
				}
		        return 1;
		    }
		    if(listitem == 2)// vie
		    {
		        GetPlayerName(Clicked[playerid],sendername,sizeof(sendername));
		        GetPlayerName(playerid,giveplayer,sizeof(giveplayer));
		        SafeSetPlayerHealth(Clicked[playerid], 100);
		        msg_Client(Clicked[playerid],COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez été soigné par un admin.");
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez restauré la vie de %s.",sendername);
		        msg_Client(playerid,COLOR_WHITE,string);
		        format(string, sizeof(string), "%s à restauré la vie de %s.",giveplayer, sendername);
				log_Admin(string);
		        return 1;
		    }
		    if(listitem == 3)// armure
		    {
		        GetPlayerName(Clicked[playerid],sendername,sizeof(sendername));
		        GetPlayerName(playerid,giveplayer,sizeof(giveplayer));
		        SafeSetPlayerArmour(Clicked[playerid], 100);
		        msg_Client(Clicked[playerid],COLOR_INFO,"{CF9756}» Info «{FFFFFF} Votre armure a été restauré par un admin.");
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Vous avez restauré l'armure de %s.",sendername);
		        msg_Client(playerid,COLOR_WHITE,string);
		        format(string, sizeof(string), "%s à restauré l'armure de %s.",giveplayer, sendername);
				log_Admin(string);
		        return 1;
		    }
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 4)
	    {
	        if(!strlen(inputtext))
	        	{format(string,sizeof(string),"[Kick] %s a été kické par l'admin %s, raison : Aucune.",PlayerInfo[Clicked[playerid]][pRealName],PlayerInfo[playerid][pRealName]);}
	        else
	        	{format(string,sizeof(string),"[Kick] %s a été kické par l'admin %s, raison : %s ",PlayerInfo[Clicked[playerid]][pRealName],PlayerInfo[playerid][pRealName],inputtext);}
	        
			SendClientMessageToAll(COLOR_LIGHTRED, string);
	        format(string, sizeof(string), "%s à kick %s, raison : %s.",PlayerInfo[playerid][pRealName], PlayerInfo[Clicked[playerid]][pRealName], inputtext);
			log_Admin(string);
			MySQLKick(Clicked[playerid],playerid,inputtext);
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 5)
	    {
	        if(PlayerInfo[Clicked[playerid]][pAdmin] >= PlayerInfo[playerid][pAdmin])
       			{msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous ne pouvez pas ban un supérieur.");return 1;}

	        new Kicked[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,sendername,sizeof(sendername));
	        GetPlayerName(Clicked[playerid],Kicked,sizeof(Kicked));
	        
	        if(!strlen(inputtext))
	        	{format(string,sizeof(string),"[Ban] %s a été banni par l'admin %s, raison : Aucune.",Kicked,sendername);}
	        else
	        	{format(string,sizeof(string),"[Ban] %s a été banni par l'admin %s, raison : %s ",Kicked,sendername,inputtext);}
	        
			SendClientMessageToAll(COLOR_LIGHTRED, string);
	        format(string, sizeof(string), "%s à ban %s, raison : %s.",sendername, Kicked, inputtext);
			log_Admin(string);
			MySQLBan(Clicked[playerid],playerid,inputtext,-1);
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 6)
	    {
	        if(!strlen(inputtext))
	        	{SetPVarString(playerid,"Jail_Raison","Aucune");}
	        else
	        	{SetPVarString(playerid,"Jail_Raison",inputtext);}
	        
	        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"» Admin Panel « Jail","Entrez le temps du jail : (En minute(s))","Valider","Retour");
		    Dialogue_Admin_Panel[playerid] = 8;
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 7)
	    {
	        new Kicked[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,sendername,sizeof(sendername));
	        GetPlayerName(Clicked[playerid],Kicked,sizeof(Kicked));
	        
	        if(!strlen(inputtext))
	        	{format(string,sizeof(string),"|Expulssion| %s a été expulsé par l'admin %s, raison : Aucune.",Kicked,sendername);}
	        else
	        	{format(string,sizeof(string),"|Expulssion| %s a été expulsé par l'admin %s, raison : %s ",Kicked,sendername,inputtext);}
			
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetPlayerSpawn(Clicked[playerid]);
			format(string, sizeof(string), "%s à expulssé %s, raison : %s.",sendername, Kicked, inputtext);
			log_Admin(string);
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 8)
	    {
	        new Kicked[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,sendername,sizeof(sendername));
	        GetPlayerName(Clicked[playerid],Kicked,sizeof(Kicked));
	        new times = strval(inputtext);
	        new Raison[128];
	        GetPVarString(playerid, "Jail_Raison", Raison, 128);
	        
	        if(!strlen(inputtext) || times < 0 || times > 60)
	        	{return ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"» Admin Panel « Jail","Erreur dans le temps [entre 1 et 60(en mn)]\nEntrez le temps du jail :","Valider","Retour");}

			MySQLJail(Clicked[playerid],playerid,Raison,times);
	        return 1;
	    }
	}
	if(dialogid == 110)
	{
	    if(!response)
	    {
	        if(Dialogue_Admin_Panel[playerid] == 0)
				{ShowPlayerDialog(playerid,73,DIALOG_STYLE_LIST,"» Admin Panel « Menu principal","Modifier les stats\nSanctions\nAutres","Ok","Annuler");return 1;}
			else
				{IniStatsPanel(playerid);return 1;}
	    }
	    if(Dialogue_Admin_Panel[playerid] == 0)
	    {
	        if(listitem == 0)
	        {
	            format(string,sizeof(string),"Attention le niveau du joueur est en référence avec l'age du joueur!\nEntrez le nouveau niveau du joueur : (Ancien Lvl %d)",PlayerInfo[Clicked[playerid]][pLevel]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nouveau niveau du joueur",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 1;
	        }
	        if(listitem == 1)
	        {
	            if(PlayerInfo[playerid][pAdmin] >= 4)
				{
		            format(string,sizeof(string),"Entrez le niveau Admin du joueur (Ancien Lvl %d)",PlayerInfo[Clicked[playerid]][pAdmin]);
		            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nouveau niveau Admin",string,"Valider","Retour");
		            Dialogue_Admin_Panel[playerid] = 2;
	            }
	            else
	            {
	                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Vous devez être admin level 7.");
	                IniStatsPanel(playerid);
				}
	        }
	        if(listitem == 2)
	        {
	            format(string,sizeof(string),"Aucun\nMembre de Comfiance\nHelpeur\nVip lvl 1\nVip lvl 2\nVip lvl 3\nVip lvl 4");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Nouveau rang V.I.P ",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 3;
	        }
	        if(listitem == 3)
	        {
	            format(string,sizeof(string),"Entrez les nouveaux points de respects du joueur (Ancien points %d)",PlayerInfo[Clicked[playerid]][pExp]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nouveaux points de respects du joueur",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 4;
	        }
	        if(listitem == 4)
	        {
	            format(string,sizeof(string),"Homme\nFemme");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Nouveau sexe du joueur",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 5;
			}
			if(listitem == 5)
	        {
	            format(string,sizeof(string),"Vice City\nLiberty City\nChinatown\nLos Santos\nSan Fierro\nLas Venturas\nFort Carson");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Nouvelle origine du joueur",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 6;
			}
			if(listitem == 6)
	        {
	            format(string,sizeof(string),"Entrez le nouveau nombre d'avertissement du joueur : (Ancien %d)",PlayerInfo[Clicked[playerid]][pWarnings]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nombre d'avertissement",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 7;
			}
			if(listitem == 7)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant d'argent du joueur : (Ancien $%d)",PlayerInfo[Clicked[playerid]][pCash]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Argent en liquide",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 8;
			}
			if(listitem == 8)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant du compte en banque du joueur : (Ancien $%d)",PlayerInfo[Clicked[playerid]][pAccount]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Compte en banque",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 9;
			}
			if(listitem == 9)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant des points de permis du joueur : (Ancien %d)",PlayerInfo[Clicked[playerid]][pPointPermis]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Points de permis",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 10;
	        }
	        if(listitem == 10)
	        {
	            new tmpstring[32];
	            for(new i=1; i<22; i++)
	            {
	                format(tmpstring,sizeof(tmpstring),"%s\n",GetJobName(i));
					strins(string,tmpstring,strlen(string),sizeof(string));
	            }
	            new facstring[512];
	            format(facstring,sizeof(facstring),"Aucun\n%s",string);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Job",facstring,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 11;
	        }
	        if(listitem == 11)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant des matériaux joueur : (Ancien %d mats)",inventory_GetItemQuantity(Clicked[playerid],1576));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Matériaux",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 12;
	        }
	        if(listitem == 12)
	        {
	            new tmpstring[32];
		        for(new fac=0;fac<totalFactions; fac++)
		        {
		            if(FactionInfo[fac][fCreate] == 1)
		            {
					    format(tmpstring,sizeof(tmpstring),"%s\n",FactionInfo[fac][fName]);
					    strins(string,tmpstring,strlen(string),sizeof(string));
		            }
		        }
		        new facstring[512];
		 	    format(facstring,sizeof(facstring),"Aucune\nLSPD\nSFPD\nLVPD\nSASD\nFBI\nGouvernement LS\nGouvernement SF\nGouvernement LV\nGouvernement SA\nSan News\n%s",string);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Leader",facstring,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 13;
	        }
	        if(listitem == 13)
	        {
	            new tmpstring[32];
		        for(new fac=0;fac<totalFactions; fac++)
		        {
		            if(FactionInfo[fac][fCreate] == 1)
		            {
					    format(tmpstring,sizeof(tmpstring),"%s\n",FactionInfo[fac][fName]);
					    strins(string,tmpstring,strlen(string),sizeof(string));
		            }
		        }
		        new facstring[512];
		 	    format(facstring,sizeof(facstring),"Aucune\nLSPD\nSFPD\nLVPD\nSASD\nFBI\nGouvernement LS\nGouvernement SF\nGouvernement LV\nGouvernement SA\nSan News\n%s",string);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Membre",facstring,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 14;
	        }
	        if(listitem == 14)
	        {
	            format(string,sizeof(string),"Entrez le nouveau rang du joueur : (Ancien rang %d)",PlayerInfo[Clicked[playerid]][pRank]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Rang",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 15;
	        }
	        if(listitem == 15)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle ID du skin du joueur : (Ancien skin, ID: %d)",PlayerInfo[Clicked[playerid]][pChar]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Skin",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 16;
	        }
	        if(listitem == 16)
	        {
	            format(string,sizeof(string),"Entrez le nouveau numéro du joueur : (Ancien Tel: %d)",PlayerInfo[Clicked[playerid]][pNumber]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Numero de tel",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 17;
	        }
	        if(listitem == 17)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs1 de voiture du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pCar][0]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef voiture1",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 18;
	        }
	        if(listitem == 18)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs2 de voiture du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pCar][1]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef voiture2",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 19;
	        }
	        if(listitem == 19)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs3 de voiture du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pCar][2]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef voiture3",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 20;
	        }
	        if(listitem == 20)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs4 de voiture du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pCar][3]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef voiture4",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 21;
	        }
	        if(listitem == 21)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs5 de voiture du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pCar][4]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef voiture5",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 22;
	        }
	        if(listitem == 22)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs6 de voiture du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pCar][5]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef voiture6",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 23;
	        }
	        if(listitem == 23)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Slot veh4 dévérouillé",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 24;
	        }
	        if(listitem == 24)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Slot veh5 dévérouillé",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 25;
	        }
	        if(listitem == 25)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Slot veh6 dévérouillé",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 26;
	        }
	        
	        if(listitem == 26)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs1 du biz du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pBizkey1]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Biz1",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 27;
	        }
	        if(listitem == 27)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs2 du biz du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pBizkey2]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Biz2",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 28;
	        }
	        if(listitem == 28)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs3 du biz du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pBizkey3]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Biz3",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 29;
	        }
	        if(listitem == 29)
	        {
	            format(string,sizeof(string),"Passé\nNon passé");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Permis conduite",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 30;
	        }
	        if(listitem == 30)
	        {
	            format(string,sizeof(string),"Passé\nNon passé");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Permis moto",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 31;
	        }
	        if(listitem == 31)
	        {
	            format(string,sizeof(string),"Passé\nNon passé");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Permis de vol",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 32;
	        }
	        if(listitem == 32)
	        {
	            format(string,sizeof(string),"Passé\nNon passé");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Permis bateau",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 33;
	        }
			if(listitem == 33)
	        {
	            format(string,sizeof(string),"Passé\nNon passé");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Permis de poid lourd",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 34;
	        }
	        if(listitem == 34)
	        {
	            format(string,sizeof(string),"Passé\nNon passé");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Permis port d'arme",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 35;
	        }
	        if(listitem == 35)
	        {
	            format(string,sizeof(string),"Passé\nNon passé");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Permis de pêche",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 36;
	        }
	        if(listitem == 36)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de weed du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],1575));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Weed",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 37;
	        }
	        if(listitem == 37)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant d'héroïne du joueur (Ancien : %d)",PlayerInfo[Clicked[playerid]][pHeroine]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Heroïne",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 38;
	        }
	        if(listitem == 38)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de cocaïne du joueur (Ancien : %d)",PlayerInfo[Clicked[playerid]][pCocaine]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Cocaïne",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 39;
	        }
	        if(listitem == 39)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant d'ecstasy du joueur (Ancien : %d)",PlayerInfo[Clicked[playerid]][pEcstasy]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Ecstasy",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 40;
	        }
	        if(listitem == 40)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de tabac du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],2751));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Tabac",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 41;
	        }
	        if(listitem == 41)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de feuilles du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],328));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Feuilles",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 42;
	        }
	        if(listitem == 42)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de cigarettes du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],19897));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Cigarettes",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 43;
	        }
	        if(listitem == 43)
	        {
	            format(string,sizeof(string),"Normal\nBlocké");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Compte",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 44;
	        }
	        if(listitem == 44)
	        {
	            format(string,sizeof(string),"Aucune\nJaponais\nEspagnol\nRusse\nArabe\nItalien\nAllemand\nFrançais\nChinois\nPortugais\nTurc\nAntillais\nMexicain\nCréole\nJamaicain\nCoréen\nCantonais\nUkrainien");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Langue 1",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 45;
	        }
	        if(listitem == 45)
	        {
	            format(string,sizeof(string),"Aucune\nJaponais\nEspagnol\nRusse\nArabe\nItalien\nAllemand\nFrançais\nChinois\nPortugais\nTurc\nAntillais\nMexicain\nCréole\nJamaicain\nCoréen\nCantonais\nUkrainien");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Langue 2",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 46;
	        }
	        if(listitem == 46)
	        {
	            format(string,sizeof(string),"Entrez la nouvelle adresse email du joueur :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Email",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 47;
	        }
	        if(listitem == 47)
	        {
	            format(string,sizeof(string),"Elbow\nBoxing\nGrabKick\nKneeHeed\nGungFu\nNormal");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Email",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 48;
	        }
	        if(listitem == 48)
	        {
	            format(string,sizeof(string),"Entrez le temps d'attente avant de rebraquez(en secondes) :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Temps Rebraquage Véhicule",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 49;
	        }
	        if(listitem == 49)
	        {
	            format(string,sizeof(string),"Entrez le temps d'attente avant de rebraquez(en secondes) :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Temps Rebraquage Joueur",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 50;
	        }
	        if(listitem == 50)
	        {
	            format(string,sizeof(string),"Entrez le temps d'attente avant de rebraquez(en secondes) :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Temps Rebraquage Biz",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 51;
	        }
	        if(listitem == 51)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id du garage1 du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pGarageKey1]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef garage1",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 52;
	        }
	        if(listitem == 52)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id du garage2 du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pGarageKey2]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef garage2",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 53;
	        }
	        if(listitem == 53)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id du garage3 du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pGarageKey3]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef garage3",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 54;
	        }
	        if(listitem == 54)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle nombre de rename que dispose le joueur : (Nb Renames Actu: %d)",PlayerInfo[Clicked[playerid]][pRename]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Rename(s)",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 55;
	        }
	        if(listitem == 55)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs1 de la maison du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pHousekey1]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Maison1",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 56;
	        }
	        if(listitem == 56)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs2 de la maison du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pHousekey2]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Maison2",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 57;
	        }
	        if(listitem == 57)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle id des clefs3 de la maison du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pHousekey3]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Maison3",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 58;
	        }
	        if(listitem == 58)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle nombre de ChangeNum que dispose le joueur : (Nb ChangeNum Actu: %d)",PlayerInfo[Clicked[playerid]][pChangeNum]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangeNum(s)",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 59;
	        }
	        if(listitem == 59)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Invenatire 5",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 60;
	        }
	        if(listitem == 60)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Invenatire 5",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 61;
	        }
	        if(listitem == 61)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « identité",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 62;
	        }
	        if(listitem == 62)
	        {
	            format(string,sizeof(string),"Entrez le nouvelle nombre de ChangePlaque que dispose le joueur : (Nb ChangePlaque Actu: %d)",PlayerInfo[Clicked[playerid]][pChangePlaque]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangePlaque(s)",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 63;
	        }
	        if(listitem == 63)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Helpeur",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 64;
	        }
	        if(listitem == 64)
	        {
	            format(string,sizeof(string),"Entrez l'âge du joueur : (Ancien: %d)",PlayerInfo[Clicked[playerid]][pAge]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Age",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 65;
	        }
	        if(listitem == 65)
	        {
	            format(string,sizeof(string),"Entrez le nombre de changeAge : (Ancien: %d)",PlayerInfo[Clicked[playerid]][pChangeAge]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangeAge",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 66;
	        }
	        if(listitem == 66)
	        {
	            format(string,sizeof(string),"Entrez le nombre de changeSexe : (Ancien: %d)",PlayerInfo[Clicked[playerid]][pChangeSex]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangeSexe",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 67;
	        }
	        if(listitem == 67)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « Animateur",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 68;
	        }
	        if(listitem == 68)
	        {
	            format(string,sizeof(string),"Oui\nNon");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"» Admin Panel « License de Taxi",string,"Valider","Retour");
	            Dialogue_Admin_Panel[playerid] = 69;
	        }
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 1)
	    {
	        new lvl = strval(inputtext);
	        if(lvl < 1 || lvl > 100 || !strlen(inputtext))
	        {
	            format(string,sizeof(string),"Level entre 1 et 100.\nAttention le niveau du joueur est en référence avec l'age du joueur!\nEntrez le nouveau niveau du joueur : (Ancien Lvl %d, Ancien age %d)",PlayerInfo[Clicked[playerid]][pLevel],PlayerInfo[Clicked[playerid]][pLevel]+15);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nouveau niveau du joueur",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pLevel] = lvl;
	        MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Level", PlayerInfo[Clicked[playerid]][pLevel]);
	        IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 2)
	    {
	        new lvl = strval(inputtext);
	        if(lvl < 0 || lvl > 7 || !strlen(inputtext))
	        {
	            format(string,sizeof(string),"Level entre 1 et 7.\nEntrez le niveau Admin du joueur (Ancien Lvl %d)",PlayerInfo[Clicked[playerid]][pAdmin]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nouveau niveau Admin du joueur",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pAdmin] = lvl;
	        MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "AdminLevel", PlayerInfo[Clicked[playerid]][pAdmin]);
	        IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 3)
	    {
	        if(listitem >= 0)// Aucun
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	            PlayerInfo[Clicked[playerid]][pDonateRank] = listitem;
		        IniStatsPanel(playerid);// On remontre le panel
		        MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "DonateRank", PlayerInfo[Clicked[playerid]][pDonateRank]);
	        }
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 4)
	    {
	        new points = strval(inputtext);
	        if(!strlen(inputtext) || points < 0 || points > 100)
	        {
	            format(string,sizeof(string),"Points entre 0 et 100.\nEntrez les nouveaux points de respects du joueur (Ancien points %d)",PlayerInfo[Clicked[playerid]][pExp]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nouveaux points de respects du joueur",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pExp] = points;
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Respect", PlayerInfo[Clicked[playerid]][pExp]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 5)
	    {
	        if(listitem == 0)// Homme
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		        PlayerInfo[Clicked[playerid]][pSex] = 1;
			    IniStatsPanel(playerid);// On remontre le panel
	        }
	        if(listitem == 1)// Femme
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		        PlayerInfo[Clicked[playerid]][pSex] = 2;
			    IniStatsPanel(playerid);// On remontre le panel
	        }
	        MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Sex", PlayerInfo[Clicked[playerid]][pSex]);
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 6)
	    {
	        if(listitem >= 0)
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		        PlayerInfo[Clicked[playerid]][pOrigin] = listitem+1;
			    IniStatsPanel(playerid);// On remontre le panel
	        	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Origin", PlayerInfo[Clicked[playerid]][pOrigin]);
			}
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 7)
	    {
	        new warns = strval(inputtext);
	        if(!strlen(inputtext) || warns < 0 || warns > 5)
	        {
	            format(string,sizeof(string),"Avertissements entre 0 et 5.\nEntrez le nouveau nombre d'avertissement du joueur : (Ancien %d)",PlayerInfo[Clicked[playerid]][pWarnings]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Nombres d'avertissements",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pWarnings] = warns;
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Warnings", PlayerInfo[Clicked[playerid]][pWarnings]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 8)
	    {
	        new cashs = strval(inputtext);
	        if(!strlen(inputtext) || cashs < 0)
	        {
	            format(string,sizeof(string),"Erreur dans le montant\nEntrez le nouveau montant d'argent du joueur : (Ancien $%d)",PlayerInfo[Clicked[playerid]][pCash]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Argent en liquide",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
         	PlayerInfo[Clicked[playerid]][pCash] = cashs;
         	SafeResetPlayerMoney(Clicked[playerid],PlayerInfo[Clicked[playerid]][pCash]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 9)
	    {
	        new cashs = strval(inputtext);
	        if(!strlen(inputtext) || cashs < 0)
	        {
	            format(string,sizeof(string),"Erreur dans le montant.\nEntrez le nouveau montant du compte en banque du joueur : (Ancien $%d)",PlayerInfo[Clicked[playerid]][pAccount]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Compte en banque",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pAccount] = cashs;
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Bank", PlayerInfo[Clicked[playerid]][pAccount]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 10)
	    {
	        new points = strval(inputtext);
	        if(!strlen(inputtext) || points < 0 || points > 15)
	        {
	            format(string,sizeof(string),"Erreur montant compris entre 0 et 15.\nEntrez le nouveau montant des points de permis du joueur : (Ancien %d)",PlayerInfo[Clicked[playerid]][pPointPermis]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Points de permis",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pPointPermis] = points;
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "PointPermis", PlayerInfo[Clicked[playerid]][pPointPermis]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 11)
	    {
	        if(listitem >= 0)
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	            PlayerInfo[Clicked[playerid]][pJob] = listitem;
	            PlayerInfo[Clicked[playerid]][pJobLvl] = 1;
	            PlayerInfo[Clicked[playerid]][pJobExp] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		    	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Job", PlayerInfo[Clicked[playerid]][pJob]);
		    	return 1;
	        }
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 12)
	    {
	        new points = strval(inputtext);
	        if(!strlen(inputtext) || points < 0)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant des points de permis du joueur : (Ancien %d mats)",inventory_GetItemQuantity(Clicked[playerid],1576));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Matériaux",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        inventory_ResetItemQuant(Clicked[playerid],1576,points);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 13)
	    {
	        if(listitem >= 0)
	        {
	            if(listitem >= 10)
	            {
	                if(FactionInfo[listitem-11][fCreate] == 0)
	                {
	                    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Cette faction n'est pas déffinie.");
	                    IniStatsPanel(playerid);// On remontre le panel
	                    return 1;
	                }
	                else
	                {
	                    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
				        PlayerInfo[Clicked[playerid]][pLeader] = listitem+40;
				        PlayerInfo[Clicked[playerid]][pMember] = listitem+40;
				        PlayerInfo[Clicked[playerid]][pRank] = 6;
					    OnPlayerUpdateSQL(Clicked[playerid]);
					    IniStatsPanel(playerid);// On remontre le panel
	                }
	            }
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		        PlayerInfo[Clicked[playerid]][pLeader] = listitem;
		        PlayerInfo[Clicked[playerid]][pMember] = listitem;
		        PlayerInfo[Clicked[playerid]][pRank] = 6;
			    OnPlayerUpdateSQL(Clicked[playerid]);
			    IniStatsPanel(playerid);// On remontre le panel
			    return 1;
	        }
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 14)
	    {
	        if(listitem >= 0)
	        {
	            if(listitem >= 10)
	            {
	                if(FactionInfo[listitem-11][fCreate] == 0)
	                {
	                    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Cette faction n'est pas déffinie.");
	                    IniStatsPanel(playerid);// On remontre le panel
	                    return 1;
	                }
	                else
	                {
	                    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
				        PlayerInfo[Clicked[playerid]][pMember] = listitem+40;
				        PlayerInfo[Clicked[playerid]][pRank] = 1;
					    OnPlayerUpdateSQL(Clicked[playerid]);
					    IniStatsPanel(playerid);// On remontre le panel
	                }
	            }
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		        PlayerInfo[Clicked[playerid]][pMember] = listitem;
		        PlayerInfo[Clicked[playerid]][pRank] = 1;
			    OnPlayerUpdateSQL(Clicked[playerid]);
			    IniStatsPanel(playerid);// On remontre le panel
			    return 1;
	        }
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 15)
	    {
	        new rang = strval(inputtext);
	        if(!strlen(inputtext) || rang<0||rang>7) // Les caractère entrés
	        {
	            format(string,sizeof(string),"Rang compris entre 1 et 7(Si FNO Max:6).\nEntrez le nouveau rang du joueur : (Ancien rang %d)",PlayerInfo[Clicked[playerid]][pRank]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Rang",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pRank] = rang;
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Rank", PlayerInfo[Clicked[playerid]][pRank]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 16)
	    {
	        new Skin = strval(inputtext);
	        if(!strlen(inputtext) || Skin> 311 || Skin<0)
	        {
	            format(string,sizeof(string),"Erreur dans l'Id.\nEntrez le nouvelle ID du skin du joueur : (Ancien skin, ID: %d)",PlayerInfo[Clicked[playerid]][pChar]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Skin",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pChar] = Skin;
	        SetPlayerSkin(Clicked[playerid],Skin);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Skin", PlayerInfo[Clicked[playerid]][pChar]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 17)
	    {
	        new tel = strval(inputtext);
	        if(!strlen(inputtext) || strlen(inputtext)> 4 || strlen(inputtext)<4)
	        {
	            format(string,sizeof(string),"Erreur, 4 chiffre!\nEntrez le nouveau numéro du joueur : (Ancien Tel: %d)",PlayerInfo[Clicked[playerid]][pNumber]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Numero de tel",string,"Valider","Retour");
	            return 1;
	        }
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pNumber] = tel;
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "PhoneNr", PlayerInfo[Clicked[playerid]][pNumber]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 18)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pCar][0] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pCar][0] = strval(inputtext);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Car1", PlayerInfo[Clicked[playerid]][pCar][0]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 19)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pCar][1] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pCar][1] = strval(inputtext);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Car1", PlayerInfo[Clicked[playerid]][pCar][1]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 20)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pCar][2] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pCar][2] = strval(inputtext);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Car1", PlayerInfo[Clicked[playerid]][pCar][2]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 21)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pCar][3] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pCar][3] = strval(inputtext);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Car1", PlayerInfo[Clicked[playerid]][pCar][3]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 22)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pCar][4] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pCar][4] = strval(inputtext);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Car1", PlayerInfo[Clicked[playerid]][pCar][4]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 23)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pCar][5] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pCar][5] = strval(inputtext);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Car1", PlayerInfo[Clicked[playerid]][pCar][5]);
		    IniStatsPanel(playerid);// On remontre le panel
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 24)
	    {
	        if(listitem == 0)
		 	{
		 	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarDev4] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
		 	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarDev4] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "CarUnLock4", PlayerInfo[Clicked[playerid]][pCarDev4]);
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 25)
	    {
	        if(listitem == 0)
		 	{
		 	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarDev5] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
		 	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarDev5] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "CarUnLock5", PlayerInfo[Clicked[playerid]][pCarDev5]);
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 26)
	    {
	        if(listitem == 0)
		 	{
		 	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarDev6] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
		 	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarDev6] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "CarUnLock6", PlayerInfo[Clicked[playerid]][pCarDev6]);
	        return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 27)
	    {
	        new bizid = strval(inputtext);
	        if(!strlen(inputtext) || bizid<-1)
	        {
	            format(string,sizeof(string),"Erreur dans l'Id.\nEntrez le nouvelle id des clefs1 du biz du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pBizkey1]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Biz1",string,"Valider","Retour");
	            return 1;
	        }
            GetPlayerName(Clicked[playerid], sendername, sizeof(sendername));
            if(PlayerInfo[Clicked[playerid]][pBizkey1] == -1) { PlayerInfo[Clicked[playerid]][pBizkey1] = bizid; }
            if(bizz[bizid][owned]==1)
		    {
     			for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	        	{
           			if(PlayerInfo[i][pBizkey1] == bizid) { PlayerInfo[i][pBizkey1] = -1;}
					else if(PlayerInfo[i][pBizkey2] == bizid) { PlayerInfo[i][pBizkey2] = -1; }
					else if(PlayerInfo[i][pBizkey3] == bizid) { PlayerInfo[i][pBizkey3] = -1;}
           		}
    		}
			format(bizz[bizid][owner], 32 ,"%s",sendername);
			bizz[bizid][owned] = 1;
			bizz_Save(bizid);
			bizz_UpdateInfos(bizid);
			OnPlayerUpdateSQL(Clicked[playerid]);
		    IniStatsPanel(playerid);// On remontre le panel
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 28)
	    {
	        new bizid = strval(inputtext);
	        if(!strlen(inputtext) || bizid<-1)
	        {
	            format(string,sizeof(string),"Erreur dans l'Id.\nEntrez le nouvelle id des clefs2 du biz du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pBizkey2]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Biz2",string,"Valider","Retour");
	            return 1;
	        }
            GetPlayerName(Clicked[playerid], sendername, sizeof(sendername));
            if(PlayerInfo[Clicked[playerid]][pBizkey2] == -1) { PlayerInfo[Clicked[playerid]][pBizkey1] = bizid; }
            if(bizz[bizid][owned]==1)
		    {
     			for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	        	{
           			if(PlayerInfo[i][pBizkey1] == bizid) { PlayerInfo[i][pBizkey1] = -1;}
					else if(PlayerInfo[i][pBizkey2] == bizid) { PlayerInfo[i][pBizkey2] = -1; }
					else if(PlayerInfo[i][pBizkey3] == bizid) { PlayerInfo[i][pBizkey3] = -1;}
           		}
    		}
			format(bizz[bizid][owner], 32 ,"%s",sendername);
			bizz[bizid][owned] = 1;
			bizz_Save(bizid);
			bizz_UpdateInfos(bizid);
			OnPlayerUpdateSQL(Clicked[playerid]);
		    IniStatsPanel(playerid);// On remontre le panel
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 29)
	    {
	        new bizid = strval(inputtext);
	        if(!strlen(inputtext) || bizid<-1)
	        {
	            format(string,sizeof(string),"Erreur dans l'Id.\nEntrez le nouvelle id des clefs3 du biz du joueur : (Ancien id: %d)",PlayerInfo[Clicked[playerid]][pBizkey3]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef Biz3",string,"Valider","Retour");
	            return 1;
	        }
            GetPlayerName(Clicked[playerid], sendername, sizeof(sendername));
            if(PlayerInfo[Clicked[playerid]][pBizkey3] == -1) { PlayerInfo[Clicked[playerid]][pBizkey1] = bizid; }
            if(bizz[bizid][owned]==1)
		    {
     			for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	        	{
           			if(PlayerInfo[i][pBizkey1] == bizid) { PlayerInfo[i][pBizkey1] = -1;}
					else if(PlayerInfo[i][pBizkey2] == bizid) { PlayerInfo[i][pBizkey2] = -1; }
					else if(PlayerInfo[i][pBizkey3] == bizid) { PlayerInfo[i][pBizkey3] = -1;}
           		}
    		}
			format(bizz[bizid][owner], 32 ,"%s",sendername);
			bizz[bizid][owned] = 1;
			bizz_Save(bizid);
			bizz_UpdateInfos(bizid);
			OnPlayerUpdateSQL(Clicked[playerid]);
		    IniStatsPanel(playerid);// On remontre le panel
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 30)
	    {
	        if(listitem == 0)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarLic] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pCarLic] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "CarLic", PlayerInfo[Clicked[playerid]][pCarLic]);
		 	return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 31)
	    {
	        if(listitem == 0)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pMotoLic] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pMotoLic] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "MotoLic", PlayerInfo[Clicked[playerid]][pMotoLic]);
		 	return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 32)
	    {
	        if(listitem == 0)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pFlyLic] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pFlyLic] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "FlyLic", PlayerInfo[Clicked[playerid]][pFlyLic]);
		 	return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 33)
	    {
	        if(listitem == 0)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pBoatLic] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pBoatLic] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "BoatLic", PlayerInfo[Clicked[playerid]][pBoatLic]);
		 	return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 34)
	    {
	        if(listitem == 0)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pLourdLic] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pLourdLic] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "LourdLic", PlayerInfo[Clicked[playerid]][pLourdLic]);
		 	return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 35)
	    {
	        if(listitem == 0)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pGunLic] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pGunLic] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "GunLic", PlayerInfo[Clicked[playerid]][pGunLic]);
		 	return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 36)
	    {
	        if(listitem == 0)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pFishLic] = 1;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
                msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	    PlayerInfo[Clicked[playerid]][pFishLic] = 0;
		    	IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "FishLic", PlayerInfo[Clicked[playerid]][pFishLic]);
		 	return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 37)
	    {
	        new weed = strval(inputtext);
	        if(!strlen(inputtext) || weed < 0)
	        {
	            format(string,sizeof(string),"Erreur dans le montant.\nEntrez le nouveau montant de weed du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],1575));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Weed",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	inventory_ResetItemQuant(Clicked[playerid],1575,weed);
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Weed", inventory_GetItemQuantity(Clicked[playerid],1575));
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 38)
	    {
	        new weed = strval(inputtext);
	        if(!strlen(inputtext) || weed < 0)
	        {
	            format(string,sizeof(string),"Erreur dans le montant.\nEntrez le nouveau montant d'héroïne du joueur (Ancien : %d)",PlayerInfo[Clicked[playerid]][pHeroine]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Heroïne",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pHeroine] = weed;
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Heroine", PlayerInfo[Clicked[playerid]][pHeroine]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 39)
	    {
	        new weed = strval(inputtext);
	        if(!strlen(inputtext) || weed < 0)
	        {
	            format(string,sizeof(string),"Erreur dans le montant.\nEntrez le nouveau montant de cocaïne du joueur (Ancien : %d)",PlayerInfo[Clicked[playerid]][pCocaine]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Cocaïne",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pCocaine] = weed;
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Cocaine", PlayerInfo[Clicked[playerid]][pCocaine]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 40)
	    {
	        new weed = strval(inputtext);
	        if(!strlen(inputtext) || weed < 0)
	        {
	            format(string,sizeof(string),"Erreur dans le montant.\nEntrez le nouveau montant d'ecstasy du joueur (Ancien : %d)",PlayerInfo[Clicked[playerid]][pEcstasy]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Ecstasy",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pEcstasy] = weed;
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Ecstasy", PlayerInfo[Clicked[playerid]][pEcstasy]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 41)
	    {
	        new weed = strval(inputtext);
	        if(!strlen(inputtext) || weed < 0)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de tabac du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],2751));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Tabac",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	inventory_ResetItemQuant(Clicked[playerid],2751,weed);
		 	IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 42)
	    {
	        new weed = strval(inputtext);
	        if(!strlen(inputtext) || weed < 0)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de feuilles du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],328));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Feuilles",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	inventory_ResetItemQuant(Clicked[playerid],328,weed);
		 	IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 43)
	    {
	        new weed = strval(inputtext);
	        if(!strlen(inputtext) || weed < 0)
	        {
	            format(string,sizeof(string),"Entrez le nouveau montant de cigarettes du joueur (Ancien : %d)",inventory_GetItemQuantity(Clicked[playerid],19897));
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Cigarettes",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
            inventory_ResetItemQuant(Clicked[playerid],19897,weed);
		 	IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 44)
	    {
	        if(listitem == 0)
		 	{
			 	msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
			 	PlayerInfo[Clicked[playerid]][pLocked] = 0;
			    IniStatsPanel(playerid);// On remontre le panel
		 	}
		 	if(listitem == 1)
		 	{
		 	    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
			 	PlayerInfo[Clicked[playerid]][pLocked] = 1;
			    IniStatsPanel(playerid);// On remontre le panel
			    MySQLKick(Clicked[playerid],playerid,"Compte locké");
		 	}
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 45)
	    {
	        if(listitem >= 0)
		 	{
			 	msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
			 	PlayerInfo[Clicked[playerid]][pLang1] = listitem;
			 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Lang1", PlayerInfo[Clicked[playerid]][pLang1]);
			    IniStatsPanel(playerid);// On remontre le panel
		 	}
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 46)
	    {
	        if(listitem >= 0)
		 	{
			 	msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
			 	PlayerInfo[Clicked[playerid]][pLang2] = listitem;
			 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Lang2", PlayerInfo[Clicked[playerid]][pLang2]);
			    IniStatsPanel(playerid);// On remontre le panel
		 	}
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 47)
	    {
	        if(!server_CheckEmail(inputtext))
			{
				format(string,sizeof(string),"Entrez la nouvelle adresse email du joueur :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Email",string,"Valider","Retour");
				return 1;
			}
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
			strmid(PlayerInfo[Clicked[playerid]][pEmail],inputtext,0,32,32);
			MySQLUpdatePlayerCharSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Email", PlayerInfo[Clicked[playerid]][pEmail]);
			IniStatsPanel(playerid);// On remontre le panel
			return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 48)
	    {
	        if(listitem >= 0)
		 	{
			 	msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
			 	PlayerInfo[Clicked[playerid]][pCombatStyle] = listitem;
			 	gym_SetCombatStyle(playerid, PlayerInfo[playerid][pCombatStyle], true);
			 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "CombatStyle", PlayerInfo[Clicked[playerid]][pCombatStyle]);
			    IniStatsPanel(playerid);// On remontre le panel
		 	}
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 49)
	    {
	        new temp = strval(inputtext);
	        if(!strlen(inputtext) || temp < 0)
	        {
	            format(string,sizeof(string),"Entrez le temps d'attente avant de rebraquez(en secondes) :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Temps Rebraquage Véhicule",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pRobTimeCar] = temp;
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 50)
	    {
	        new temp = strval(inputtext);
	        if(!strlen(inputtext) || temp < 0)
	        {
	            format(string,sizeof(string),"Entrez le temps d'attente avant de rebraquez(en secondes) :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Temps Rebraquage Joueur",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pRobTimePocket] = temp;
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 51)
	    {
	        new temp = strval(inputtext);
	        if(!strlen(inputtext) || temp < 0)
	        {
	            format(string,sizeof(string),"Entrez le temps d'attente avant de rebraquez(en secondes) :");
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Temps Rebraquage Biz",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pRobTimeBizz] = temp;
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 52)
	    {
	        new id = strval(inputtext);
	        if(!strlen(inputtext))
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	            PlayerInfo[Clicked[playerid]][pGarageKey1] = -1;
	            MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Garage1", PlayerInfo[Clicked[playerid]][pGarageKey1]);
	            IniStatsPanel(playerid);// On remontre le panel
	            return 1;
	        }
	        if(id<0 || id> totalGarages)
			{
			    format(string,sizeof(string),"Erreur dans l'Id\nEntrez le nouvelle id du garage1 du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pGarageKey1]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef garage1",string,"Valider","Retour");
			    return 1;
			}
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pGarageKey1] = id;
	        MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Garage1", PlayerInfo[Clicked[playerid]][pGarageKey1]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 53)
	    {
	        new id = strval(inputtext);
	        if(!strlen(inputtext))
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	            PlayerInfo[Clicked[playerid]][pGarageKey2] = -1;
	            MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Garage2", PlayerInfo[Clicked[playerid]][pGarageKey2]);
	            IniStatsPanel(playerid);// On remontre le panel
	            return 1;
	        }
	        if(id<0 || id> totalGarages)
			{
			    format(string,sizeof(string),"Erreur dans l'Id\nEntrez le nouvelle id du garage1 du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pGarageKey2]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef garage2",string,"Valider","Retour");
			    return 1;
			}
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pGarageKey2] = id;
	        MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Garage2", PlayerInfo[Clicked[playerid]][pGarageKey2]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 54)
	    {
	        new id = strval(inputtext);
	        if(!strlen(inputtext))
	        {
	            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	            PlayerInfo[Clicked[playerid]][pGarageKey3] = -1;
	            MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Garage3", PlayerInfo[Clicked[playerid]][pGarageKey3]);
	            IniStatsPanel(playerid);// On remontre le panel
	            return 1;
	        }
	        if(id<0 || id> totalGarages)
			{
			    format(string,sizeof(string),"Erreur dans l'Id\nEntrez le nouvelle id du garage1 du joueur : (Ancien id: %d)\nLaissez vide pour aucun ( -1 )",PlayerInfo[Clicked[playerid]][pGarageKey3]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Clef garage2",string,"Valider","Retour");
			    return 1;
			}
			msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        PlayerInfo[Clicked[playerid]][pGarageKey3] = id;
	        MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Garage3", PlayerInfo[Clicked[playerid]][pGarageKey3]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 55)
	    {
	        new rename = strval(inputtext);
	        if(!strlen(inputtext) || rename < 0 || rename > 50)
	        {
	            format(string,sizeof(string),"Erruer dans le nombre.\nEntrez le nouvelle nombre de rename que dispose le joueur : (Nb Renames Actu: %d)",PlayerInfo[Clicked[playerid]][pRename]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Rename(s)",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pRename] = rename;
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "PointsRename", PlayerInfo[Clicked[playerid]][pRename]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 56)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pHousekey1] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            IniStatsPanel(playerid);// On remontre le panel
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pHousekey1] = strval(inputtext);
	        format(house[PlayerInfo[Clicked[playerid]][pHousekey1]][owner], 32 ,"%s",PlayerInfo[Clicked[playerid]][pRealName]);
			house[PlayerInfo[Clicked[playerid]][pHousekey1]][owned] = 1;
			house_Save(PlayerInfo[Clicked[playerid]][pHousekey1]);
			house_UpdateInfos(PlayerInfo[Clicked[playerid]][pHousekey1]);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "House1", PlayerInfo[Clicked[playerid]][pHousekey1]);
		    IniStatsPanel(playerid);// On remontre le panel
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 57)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pHousekey2] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            IniStatsPanel(playerid);// On remontre le panel
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pHousekey2] = strval(inputtext);
	        format(house[PlayerInfo[Clicked[playerid]][pHousekey2]][owner], 32 ,"%s",PlayerInfo[Clicked[playerid]][pRealName]);
			house[PlayerInfo[Clicked[playerid]][pHousekey2]][owned] = 1;
			house_Save(PlayerInfo[Clicked[playerid]][pHousekey2]);
			house_UpdateInfos(PlayerInfo[Clicked[playerid]][pHousekey2]);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "House2", PlayerInfo[Clicked[playerid]][pHousekey2]);
		    IniStatsPanel(playerid);// On remontre le panel
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 58)
	    {
	        if(!strlen(inputtext))
	        {
	            PlayerInfo[Clicked[playerid]][pHousekey3] = -1;
	            OnPlayerUpdateSQL(Clicked[playerid]);
	            IniStatsPanel(playerid);// On remontre le panel
	            return 1;
	        }
	        PlayerInfo[Clicked[playerid]][pHousekey3] = strval(inputtext);
	        format(house[PlayerInfo[Clicked[playerid]][pHousekey3]][owner], 32 ,"%s",PlayerInfo[Clicked[playerid]][pRealName]);
			house[PlayerInfo[Clicked[playerid]][pHousekey3]][owned] = 1;
			house_Save(PlayerInfo[Clicked[playerid]][pHousekey3]);
			house_UpdateInfos(PlayerInfo[Clicked[playerid]][pHousekey3]);
		    MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "House3", PlayerInfo[Clicked[playerid]][pHousekey3]);
		    IniStatsPanel(playerid);// On remontre le panel
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 59)
	    {
	        new changenum = strval(inputtext);
	        if(!strlen(inputtext) || changenum < 0 || changenum > 50)
	        {
	            format(string,sizeof(string),"Erreur dans le nombre.\nEntrez le nouvelle nombre de ChangeNum que dispose le joueur : (Nb ChangeNum Actu: %d)",PlayerInfo[Clicked[playerid]][pChangeNum]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangeNum(s)",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pChangeNum] = changenum;
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "ChangeNum", PlayerInfo[Clicked[playerid]][pChangeNum]);
		    IniStatsPanel(playerid);// On remontre le panel
		    return 1;
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 60)
	    {
	        if(listitem == 0)// Oui
	        	{PlayerInfo[Clicked[playerid]][pInvDev5] = 1;}
	        if(listitem == 1)
	        	{PlayerInfo[Clicked[playerid]][pInvDev5] = 0;}
	        	
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        IniStatsPanel(playerid);// On remontre le panel
	    }
     	else if(Dialogue_Admin_Panel[playerid] == 61)
	    {
	        if(listitem == 0)// Oui
	        	{PlayerInfo[Clicked[playerid]][pInvDev6] = 1;}
	        if(listitem == 1)
	        	{PlayerInfo[Clicked[playerid]][pInvDev6] = 0;}
	        	
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 62)
	    {
	        if(listitem == 0)// Oui
	        	{PlayerInfo[Clicked[playerid]][pIdentie] = 1;}
	        if(listitem == 1)
	        	{PlayerInfo[Clicked[playerid]][pIdentie] = 0;}
	        
	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 63)
	    {
	        new changeplaque = strval(inputtext);
	        if(!strlen(inputtext) || changeplaque < 0 || changeplaque > 50)
	        {
	            format(string,sizeof(string),"Erreur dans le nombre.\nEntrez le nouvelle nombre de ChangePlaque que dispose le joueur : (Nb ChangePlaque Actu: %d)",PlayerInfo[Clicked[playerid]][pChangePlaque]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangePlaque(s)",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pChangePlaque] = changeplaque;
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "ChangePlaque", PlayerInfo[Clicked[playerid]][pChangePlaque]);
		    IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 64)
	    {
	        if(listitem == 0)// Oui
	        	{PlayerInfo[Clicked[playerid]][pHelper] = 1;}
	        if(listitem == 1)
	        	{PlayerInfo[Clicked[playerid]][pHelper] = 0;}

	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 65)
	    {
	        if(!strlen(inputtext) || strval(inputtext) < 16 || strval(inputtext) > 70)
	        {
	            format(string,sizeof(string),"Age compris entre 16 et 70 ans.\nEntrez l'âge du joueur : (Ancien: %d)",PlayerInfo[Clicked[playerid]][pAge]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « Age",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pAge] = strval(inputtext);
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "Age", PlayerInfo[Clicked[playerid]][pAge]);
		    IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 66)
	    {
	        if(!strlen(inputtext))
	        {
	            format(string,sizeof(string),"Erreur.\nEntrez le nombre de changeAge du joueur : (Ancien: %d)",PlayerInfo[Clicked[playerid]][pChangeAge]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangeAge",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pChangeAge] = strval(inputtext);
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "ChangeAge", PlayerInfo[Clicked[playerid]][pChangeAge]);
		    IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 67)
	    {
	        if(!strlen(inputtext))
	        {
	            format(string,sizeof(string),"Erreur.\nEntrez le nombre de changeSexe du joueur : (Ancien: %d)",PlayerInfo[Clicked[playerid]][pChangeSex]);
	            ShowPlayerDialog(playerid,110,DIALOG_STYLE_INPUT,"» Admin Panel « ChangeSexe",string,"Valider","Retour");
	            return 1;
	        }
            msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
		 	PlayerInfo[Clicked[playerid]][pChangeSex] = strval(inputtext);
		 	MySQLUpdatePlayerIntSingle(PlayerInfo[Clicked[playerid]][pSQLID], "ChangeSex", PlayerInfo[Clicked[playerid]][pChangeSex]);
		    IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 68)
	    {
	        if(listitem == 0)// Oui
	        	{PlayerInfo[Clicked[playerid]][pAnimator] = 1;}
	        if(listitem == 1)
	        	{PlayerInfo[Clicked[playerid]][pAnimator] = 0;}

	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        IniStatsPanel(playerid);// On remontre le panel
	    }
	    else if(Dialogue_Admin_Panel[playerid] == 69)
	    {
	        if(listitem == 0)// Oui
	        	{PlayerInfo[Clicked[playerid]][pTaxi] = 1;}
	        if(listitem == 1)
	        	{PlayerInfo[Clicked[playerid]][pTaxi] = 0;}

	        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Stat edité.");
	        IniStatsPanel(playerid);// On remontre le panel
	    }
	    return 1;
	}
 	if(dialogid == 76)
    {
  		if(response)
		{
		 if(listitem == 0)
		 {
		 ShowPlayerDialog(playerid,77,DIALOG_STYLE_INPUT,"Lien","Veillez en entré un lien streaming d'un musique \npour pouvoir la lire . (.mp3 , .uma ) :","Lire","Annuler");
		 }
		 if(listitem == 1)
		 {
		 StopAudioStreamForPlayer(playerid);
         msg_Client(playerid, COLOR_WHITE, "Vous avez arreté la musique .");
		 }
		 if(listitem == 2)
		 {
		 ShowPlayerDialog(playerid,78,DIALOG_STYLE_INPUT,"Lien","Veillez en entré un lien streaming d'un musique \npour pouvoir la lire à tous le monde . (.mp3 , .uma ) :","Lire","Annuler");
		 }
		 if(listitem == 3)
		 {
		 	msg_Client(playerid, COLOR_WHITE, "Vous avez arreté la musique à tous le monde.");
		 	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	        {
           		StopAudioStreamForPlayer(i);
           	}
		 }
		 if(listitem == 4)
		 {
		    ShowPlayerDialog(playerid,88,DIALOG_STYLE_INPUT,"ID","Veillez entrer un ID ( entre 1002 et 1188 )","Lire","Annuler");
		 }
		}
	}
	if(dialogid == 77)
	{
		if(response)
		{
		PlayAudioStreamForPlayer(playerid, inputtext);
        msg_Client(playerid, COLOR_WHITE, "La musique se lance ...");
		}
	}
	if(dialogid == 78)
	{
		if(response)
		{
		msg_Client(playerid, COLOR_WHITE, "La musique se lance à tous le monde...");
		for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	        {
           PlayAudioStreamForPlayer(i, inputtext);
           }
		}
	}
    if(dialogid == 88)
	{
		if(response)
		{
		    new Id = strval(inputtext);
		    if(Id < 1002 || Id > 1190)
				{msg_Client(playerid, COLOR_WHITE, " L'ID de la musique doit etre en 1002 et 1188 !"); return ShowPlayerDialog(playerid,88,DIALOG_STYLE_INPUT,"ID","Veillez entrer un ID ( entre 1002 et 1188 )","Lire","Annuler"); }
		    PlayerPlaySound(playerid, Id, 0.0, 0.0, 0.0);
		}
	}
	if(dialogid == 7)
	{
		if(!response)
		{
		    if(admin_CarDialog[playerid]==0) return 1;
		    else
		    {
		    	ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule","Sauvegarder la nouvelle position du véhicule\nChanger les couleurs du véhicule\nChanger le propriétaire du véhicule\nChanger le prix d'achat du véhicule\nChanger la plaque du véhicule \nChanger le model du véhicule \nChanger le statut du véhicule \nSupprimé les tunnings du véhicule\nSupprimé le vehicule\nBridage\nRang - Job Ville","Valider", "Quitter");
		    	admin_CarDialog[playerid]=0;
		    	return 1;
		    }
		}
		if(admin_CarDialog[playerid]==0)
		{
		    if(listitem==0)
		    {
		        if(gPlayerInGarage[playerid] !=-1){vehicle[carid][cVW]=gPlayerInGarage[playerid];vehicle[carid][cInt]=1;}
				else{vehicle[carid][cVW]=0;vehicle[carid][cInt]=0;}
				msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Véhicule parké !");
				new Float:x,Float:y,Float:z,Float:a;
			    GetVehiclePos(carid, x, y, z);
				GetVehicleZAngle(carid, a);
				vehicle[carid][cLocationx] = x;
				vehicle[carid][cLocationy] = y;
				vehicle[carid][cLocationz] = z;
				vehicle[carid][cAngle] = a;
				vehicle_Save(carid,1,0);
				car_Recreate(playerid,carid);
				return 1;
		    }
		    if(listitem==1)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Couleurs","Entrez les couleur du véhicule de cette façon : couleur1/couleur2 :\nExemple : 0/1","Valider", "Retour");
		        admin_CarDialog[playerid]=1;
		    }
		    if(listitem==2)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Propriétaire","Faction Légale\nFaction Illégale\nJobs\nLocation\nJoueur\nAutres ..","Valider", "Retour");
		        admin_CarDialog[playerid]=2;
		    }
		    if(listitem==3)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Prix","Entrez le nouveau prix du véhicule :","Valider", "Retour");
		        admin_CarDialog[playerid]=9;
		    }
			if(listitem==4)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Plaque","Entrez la nouvelle palque du véhicule :\nLaissez vide pour emttre par default.","Valider", "Retour");
		        admin_CarDialog[playerid]=10;
		    }
		    if(listitem==5)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Model","Entrez le nouveau model du véhicule :","Valider", "Retour");
		        admin_CarDialog[playerid]=11;
		    }
		    if(listitem==6)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Statu","Libre\nEn fourrière Mécanciien\nEn fourrière LSPD","Valider", "Retour");
		        admin_CarDialog[playerid]=12;
		    }
		    if(listitem==7)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Tunning enlevé !");
		        vehicle[carid][tExhausts] = 0;
				vehicle[carid][tFrontBumper] = 0;
				vehicle[carid][tRearBumper] = 0;
				vehicle[carid][tRoof] = 0;
				vehicle[carid][tSpoilers] = 0;
				vehicle[carid][tSideBumper] = 0;
				vehicle[carid][tWheels] = 0;
				vehicle[carid][tHydraulics] = 0;
				vehicle[carid][tNitro] = 0;
				vehicle[carid][tSideBumper2] = 0;
				vehicle_Save(carid,1,0);
				car_Recreate(playerid,carid);
		    }
		    if(listitem==8)
		    {
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le véhicule a été supprimé. (id SAMP %d - id SQL : %d) .",carid,vehicle[carid][SQLID]);
	            msg_Client(playerid,COLOR_WHITE,string);
		        DestroyVehicle(carid);
		        format(sql,sizeof(sql),"DELETE FROM lvrp_server_vehicles WHERE id=%d",vehicle[carid][SQLID]);
				mysql_pquery(MYSQL,sql);
				vehicle[carid][SQLID]=-1;
				vehicle[carid][used]=0;
				car_Reset(carid,0,false,true);
		    }
		    if(listitem==9)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Bridage","Bridé\nDébridé","Valider", "Retour");
		        admin_CarDialog[playerid]=13;
		    }
		    if(listitem==10)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Bridage","Rang\n[Job] Ville","Valider", "Retour");
		        admin_CarDialog[playerid]=14;
		    }
		}
		else if(admin_CarDialog[playerid]==1)
		{
		    new color[12][16];
			split(inputtext,color,'/');
			
			if(!strlen(color[0])) // Pas de couleur 1
				{ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Couleurs","Erreur, pas de couleur 1\nEntrez les couleurs du véhicule de cette façon : couleur1/couleur2 :\nExemple : 0/1","Valider", "Retour");return 1;}
			if(!strlen(color[1])) // Pas de couleur 1
				{ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Couleurs","Erreur, pas de couleur 2\nEntrez les couleurs du véhicule de cette façon : couleur1/couleur2 :\nExemple : 0/1","Valider", "Retour");		    	return 1;}
			if(strlen(color[2])>0) // Erreur syntaxe
				{ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Couleurs","Erreur de syntaxe\nEntrez les couleurs du véhicule de cette façon : couleur1/couleur2 :\nExemple : 0/1","Valider", "Retour");return 1;}
				
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Couleurs changées !");
		    new color1=strval(color[0]);
			new color2=strval(color[1]);
			ChangeVehicleColor(carid,color1,color2);
			vehicle[carid][cColorOne]=color1;
			vehicle[carid][cColorTwo]=color2;
	        vehicle_Save(carid,0,0);
	        return 1;
		}
		else if(admin_CarDialog[playerid]==2)
		{
		    if(listitem==0)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Propriétaire - F. statics","{FFFFFF}- LSPD\n- SFPD\n- LVPD\n- SASD\n- FBI\n- Gouvernement LS\n- Gouvernement SF\n- Gouvernement LV\n- Gouvernement SA\n- San News","Valider", "Retour");
		        admin_CarDialog[playerid]=3;
		    }
		    if(listitem==1)
		    {
		        new tmpstring[32];
		        for(new fac=0;fac<totalFactions; fac++)
		        {
		            if(FactionInfo[fac][fCreate] == 1)
		            {
					    format(tmpstring,sizeof(tmpstring),"%s\n",FactionInfo[fac][fName]);
					    strins(string,tmpstring,strlen(string),sizeof(string));
		            }
		        }
		 	    format(string,sizeof(string),"%s",string);
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Propriétaire - F. dynamiques",string,"Valider","Retour");
		        admin_CarDialog[playerid]=4;
		    }
		    if(listitem==2)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Propriétaire - Job","Livreur de Pizza\nFermier\nMineur\nEboueur\nOuvrier\nPilote de Ligne\nFacteur\nPêcheur\nVoiturier\nCamionneur\nMedecin\nBagagiste\nDéménageur\nBucheron\nJardinier\nPompier\nMécanicien\nRécupérateur de Carcasse\nConvoyeur de fond\nChauffeur de taxi","Valider","Retour");
		        admin_CarDialog[playerid]=5;
		    }
		    if(listitem==3)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Propriétaire - Location","Voiture de location\nMoto de location\nBateau de location\nVelo de location\nAvion de location","Valider","Retour");
		        admin_CarDialog[playerid]=6;
		    }
		    if(listitem==4)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Propriétaire - Joueur","{FFFFFF}Entrez l'id du joueur {FF0000}connecté{FFFFFF} à qui appartiendera le véhicule :","Valider","Retour");
		        admin_CarDialog[playerid]=7;
		    }
		    if(listitem==5)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule - Propriétaire - Autre","[Auto-Ecole] Voiture\n[Auto-Ecole] Camion\n[Bot] véhicule pour les bots\n[Reserve] En réserve pour vendre\n[Owned 0] A Vendre\n[Owned 1] Appartenance à un joueur\n[Owned 2] Faction\n[Owned 3] Job\n[Event] Animateur","Valider","Retour");
		        admin_CarDialog[playerid]=8;
		    }
		}
		else if(admin_CarDialog[playerid]==3)
		{
		    if(listitem>=0)
		    {
	            if(vehicle[carid][cOwned]==1)
			    	{car_ChangeOffLineOwner(carid);}
			    	
	            vehicle[carid][cOwned] = 2;
	            format(vehicle[carid][cOwner], 32 ,"Owned2");
	            vehicle[carid][cType] = listitem+1; format(vehicle[carid][cLicense], 14 ,GetFactionName(listitem+1));
	            SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
	            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le véhicule appartient maintenant à la faction : %s.",vehicle[carid][cLicense]);
	            msg_Client(playerid,COLOR_WHITE,string);
				vehicle_Save(carid,0,0);
				car_Recreate(playerid,carid);
		    }
		}
		else if(admin_CarDialog[playerid]==4)
		{
		    if(listitem>=0)
		    {
		        
	            if(vehicle[carid][cOwned]==1)
			    	{car_ChangeOffLineOwner(carid);}
			    	
	            vehicle[carid][cOwned] = 2;
	            format(vehicle[carid][cOwner], 32 ,"Owned2");
	            if(listitem>=0)
				{
				    if(FactionInfo[listitem][fCreate]==0)
				    {
				        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule","Sauvegarder la nouvelle position du véhicule\nChanger les couleurs du véhicule\nChanger le propriétaire du véhicule\nChanger le prix d'achat du véhicule\nChanger la plaque du véhicule \nChanger le model du véhicule \nChanger le statut du véhicule \nSupprimé les tunnings du véhicule\nSupprimé le vehicule","Valider", "Quitter");
		    			admin_CarDialog[playerid]=0;
		    			return 1;
				    }
					vehicle[carid][cType] = 200+listitem;
					format(vehicle[carid][cLicense], 14 ,FactionInfo[listitem][fName]);
                    SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
				}
	            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le véhicule appartient maintenant à la faction : %s.",vehicle[carid][cLicense]);
	            msg_Client(playerid,COLOR_WHITE,string);
				vehicle_Save(carid,0,0);
				car_Recreate(playerid,carid);
		    }
		}
  		else if(admin_CarDialog[playerid]==5)
		{
		    if(listitem>=0)
		    {
	            if(vehicle[carid][cOwned]==1)
			    	{car_ChangeOffLineOwner(carid);}
			    
	            vehicle[carid][cOwned] = 3;
	            format(vehicle[carid][cOwner], 32 ,"Owned2");
	            if(listitem==0){vehicle[carid][cType] = CAR_PIZZA; format(vehicle[carid][cLicense], 32 ,"Pizza");}
	            if(listitem==1){vehicle[carid][cType] = CAR_FARMER; format(vehicle[carid][cLicense], 32 ,"Fermier");}
	            if(listitem==2){vehicle[carid][cType] = CAR_SWEEPER; format(vehicle[carid][cLicense], 32 ,"Mineur");}
	            if(listitem==3){vehicle[carid][cType] = CAR_TRASH; format(vehicle[carid][cLicense], 32 ,"Eboueur");}
	            if(listitem==4){vehicle[carid][cType] = CAR_WORKER; format(vehicle[carid][cLicense], 32 ,"Ouvrier");}
	            if(listitem==5){vehicle[carid][cType] = CAR_PILOTE; format(vehicle[carid][cLicense], 32 ,"P.Ligne");}
	            if(listitem==6){vehicle[carid][cType] = CAR_POST; format(vehicle[carid][cLicense], 32 ,"Facteur");}
	            if(listitem==7){vehicle[carid][cType] = CAR_FISHER; format(vehicle[carid][cLicense], 32 ,"Pecheur");}
	            if(listitem==8){vehicle[carid][cType] = CAR_VALET; format(vehicle[carid][cLicense], 32 ,"Voiturier");}
	            if(listitem==9){vehicle[carid][cType] = CAR_TRUCKER; format(vehicle[carid][cLicense], 32 ,"Camionneur");}
	            if(listitem==10){vehicle[carid][cType] = CAR_MEDIC; format(vehicle[carid][cLicense], 32 ,"Medecin");}
	            if(listitem==11){vehicle[carid][cType] = CAR_BUS; format(vehicle[carid][cLicense], 32 ,"Bagagiste");}
	            if(listitem==16){vehicle[carid][cType] = CAR_MECANO; format(vehicle[carid][cLicense], 32 ,"Mecano");}
	            if(listitem==18){vehicle[carid][cType] = CAR_FUND; format(vehicle[carid][cLicense], 32 ,"TDF");}
	            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le véhicule appartient maintenant au job : %s.",vehicle[carid][cLicense]);
	            msg_Client(playerid,COLOR_WHITE,string);
	            SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
				vehicle_Save(carid,0,0);
				car_Recreate(playerid,carid);
		    }
		}
		else if(admin_CarDialog[playerid]==6)
		{
		    if(listitem>=0)
		    {
	            if(vehicle[carid][cOwned]==1)
			    	{car_ChangeOffLineOwner(carid);}
			    	
	    		vehicle[carid][cOwned] = 2;
	            format(vehicle[carid][cOwner], 32 ,"Owned2");
	            if(listitem==0){vehicle[carid][cType] = CAR_LOC_CAR; format(vehicle[carid][cLicense], 32 ,"Loc. Voiture");}
	            if(listitem==1){vehicle[carid][cType] = CAR_LOC_MOTO; format(vehicle[carid][cLicense], 32 ,"Loc. Moto");}
	            if(listitem==2){vehicle[carid][cType] = CAR_LOC_BOAT; format(vehicle[carid][cLicense], 32 ,"Loc. Bateau");}
	            if(listitem==3){vehicle[carid][cType] = CAR_LOC_BIKE; format(vehicle[carid][cLicense], 32 ,"Loc. Velo");}
	            if(listitem==5){vehicle[carid][cType] = CAR_LOC_PLANE; format(vehicle[carid][cLicense], 32 ,"Loc. Avion");}
	            format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le véhicule appartient maintenant à : %s.",vehicle[carid][cLicense]);
	            msg_Client(playerid,COLOR_WHITE,string);
	            SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
				vehicle_Save(carid,0,0);
				car_Recreate(playerid,carid);
		    }
		}
		else if(admin_CarDialog[playerid]==7)
		{
		    if(!strlen(inputtext))
		    	{return ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Propriétaire - Joueur","{FFFFFF}Entrez l'id du joueur {FF0000}connecté{FFFFFF} à qui appartiendera le véhicule :","Valider","Retour");}
		    
	        if(vehicle[carid][cOwned]==1)
				{car_ChangeOffLineOwner(carid);}
				
	    	new playa=strval(inputtext);
	    	if(IsPlayerConnected(playa))
	    	{
	    	    if(PlayerInfo[playa][pCar][0]==-1||PlayerInfo[playa][pCar][1]==-1||PlayerInfo[playa][pCar][2]==-1||PlayerInfo[playa][pCar][3]==-1||PlayerInfo[playa][pCar][4]==-1&&PlayerInfo[playa][pCarDev5]==1||PlayerInfo[playa][pCar][5]==-1&&PlayerInfo[playa][pCarDev6]==1)
	    	    {
	    	        if(PlayerInfo[playa][pCar][0]==-1)PlayerInfo[playa][pCar][0]=vehicle[carid][SQLID];
	    	        else if(PlayerInfo[playa][pCar][1]==-1)PlayerInfo[playa][pCar][1]=vehicle[carid][SQLID];
	    	        else if(PlayerInfo[playa][pCar][2]==-1)PlayerInfo[playa][pCar][2]=vehicle[carid][SQLID];
	    	        else if(PlayerInfo[playa][pCar][3]==-1)PlayerInfo[playa][pCar][3]=vehicle[carid][SQLID];
	    	        else if(PlayerInfo[playa][pCar][4]==-1 && PlayerInfo[playa][pCarDev5]==1)PlayerInfo[playa][pCar][4]=vehicle[carid][SQLID];
	    	        else if(PlayerInfo[playa][pCar][5]==-1 && PlayerInfo[playa][pCarDev6]==1)PlayerInfo[playa][pCar][5]=vehicle[carid][SQLID];
	    	        GetPlayerName(playa,sendername,sizeof(sendername));
	    	        vehicle[carid][cOwned] = 1;
	    	        vehicle[carid][cType] = CAR_OWN;
	    	        format(vehicle[carid][cOwner], 32 ,"%s",sendername);
	    	        format(vehicle[carid][cLicense], 32 ,"%s %d",NICK_NAME,carid);
	    	        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le véhicule appartient à : %s.",sendername);
	            	msg_Client(playerid,COLOR_WHITE,string);
	            	SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
	    	        vehicle_Save(carid,0,0);
	    	        OnPlayerUpdateSQL(playa);
	    	        car_Recreate(playerid,carid);
	    	    }
	    	    else
		    	{
		    	    ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule","Sauvegarder la nouvelle position du véhicule\nChanger les couleurs du véhicule\nChanger le propriétaire du véhicule\nChanger le prix d'achat du véhicule\nChanger la plaque du véhicule \nChanger le model du véhicule \nChanger le statut du véhicule \nSupprimé les tunnings du véhicule\nSupprimé le vehicule ","Valider", "Quitter");
			    	admin_CarDialog[playerid]=0;
			    	msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce joueur a déjà le maximum de véhicule.");
			    	return 1;
		    	}
	    	}
	    	else
	    	{
	    	    ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule","Sauvegarder la nouvelle position du véhicule\nChanger les couleurs du véhicule\nChanger le propriétaire du véhicule\nChanger le prix d'achat du véhicule\nChanger la plaque du véhicule \nChanger le model du véhicule \nChanger le statut du véhicule \nSupprimé les tunnings du véhicule\nSupprimé le vehicule \nBridage\nRang - Job Ville","Valider", "Quitter");
		    	admin_CarDialog[playerid]=0;
		    	msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Ce joueur n'est pas connecté !");
		    	return 1;
	    	}
		}
		else if(admin_CarDialog[playerid]==8)
		{
		    if(listitem>=0)
		    {
		        
	            if(vehicle[carid][cOwned]==1)
			    	{car_ChangeOffLineOwner(carid);}
			    	
	    		vehicle[carid][cOwned] = 2;
	            format(vehicle[carid][cOwner], 32 ,"Owned2");
	            
	    		if(listitem==0)
					{vehicle[carid][cType] = CAR_SCHOOL; format(vehicle[carid][cLicense], 32 ,"Auto-Ecole");}
	    		if(listitem==2)
					{vehicle[carid][cType] = CAR_BOT; format(vehicle[carid][cLicense], 32 ,"Bot");}
	    		if(listitem==3)
					{car_Reset(carid,0);}
	    		if(listitem==4)
				{
					vehicle[carid][cType] = CAR_SELL;
					format(vehicle[carid][cLicense], 32 ,"A Vendre");
					vehicle[carid][cOwned]=0;
					format(vehicle[carid][cOwner], 32 ,"A vendre");
				}
	    		if(listitem==5)
					{vehicle[carid][cType] = CAR_OWN; format(vehicle[carid][cLicense], 32 ,"%s - %d",NICK_NAME,carid); vehicle[carid][cOwned] = 1; format(vehicle[carid][cOwner], 32 ,"Etat");}
	    		if(listitem==6)
					{vehicle[carid][cType] = CAR_CREATED; format(vehicle[carid][cLicense], 32 ,"Faction",NICK_NAME,carid);}
                if(listitem==7)
					{vehicle[carid][cOwned] = 3;vehicle[carid][cType] = CAR_CREATED; format(vehicle[carid][cLicense], 32 ,"Job");}
                if(listitem==8)
					{vehicle[carid][cOwned] = 2;vehicle[carid][cType] = CAR_EVENT; format(vehicle[carid][cLicense], 32 ,"Event");}
					
	    		format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le véhicule appartient maintenant à : %s.",vehicle[carid][cLicense]);
	            msg_Client(playerid,COLOR_WHITE,string);
	            SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
				vehicle_Save(carid,0,0);
				car_Recreate(playerid,carid);
		    }
		}
		else if(admin_CarDialog[playerid]==9)
		{
      		if(!strlen(inputtext))
		    	{return ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Prix","Erreur, entrez un prix.\nEntrez le nouveau prix du véhicule :","Valider", "Retour");}
		    
		    vehicle[carid][cValue] = strval(inputtext);
   			vehicle_Save(carid,0,0);
   			format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le prix du véhicule est désormais $%d.", strval(inputtext));
   			msg_Client(playerid,COLOR_WHITE,string);
		}
		else if(admin_CarDialog[playerid]==10)
		{
		    if(!strlen(inputtext))
			{
				format(vehicle[carid][cLicense], 32 ,"%s - %s",NICK_NAME,carid);
				format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} La plaque du véhicule est désormais : %s.", vehicle[carid][cLicense]);
   				msg_Client(playerid,COLOR_WHITE,string);
				vehicle_Save(carid,0,0);
				SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
			}
		    else
		    {
		        format(vehicle[carid][cLicense], 32 ,"%s",inputtext);
		        format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} La plaque du véhicule est désormais : %s.", vehicle[carid][cLicense]);
   				msg_Client(playerid,COLOR_WHITE,string);
		        vehicle_Save(carid,0,0);
		        SetVehicleNumberPlate(carid,vehicle[carid][cLicense]);
		    }
		}
		else if(admin_CarDialog[playerid]==11)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 611 || strval(inputtext) < 400)
				{return ShowPlayerDialog(playerid,7, DIALOG_STYLE_INPUT, "» Admin « Edit véhicule - Model","Erreur dans le model, id compris entre 400 et 611.\nEntrez le nouveau model du véhicule :","Valider", "Retour");}
				
			format(vehicle[carid][cDescription], 32 ,"%s",vehName[strval(inputtext)-400]);
			vehicle[carid][cModel]=strval(inputtext);
			tuning_RemoveComponent(carid,0); tuning_RemoveComponent(carid,1); tuning_RemoveComponent(carid,2); tuning_RemoveComponent(carid,3);
			tuning_RemoveComponent(carid,4); tuning_RemoveComponent(carid,5);
			format(string,sizeof(string),"{FF2727}» Admin «{FFABAD} Le model du véhicule est désormais : Un(e) %s.",vehName[strval(inputtext)-400]);
   			msg_Client(playerid,COLOR_WHITE,string);
			vehicle_Save(carid,0,0);
		    car_Recreate(playerid,carid);
		}
		else if(admin_CarDialog[playerid]==12)
		{
		    if(listitem==0)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Véhicule libre.");
		        vehicle[carid][cStatut] = 0;
		        vehicle_Save(carid,0,0);
		    }
		    if(listitem==1)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Véhicule en fourrière mécanicien.");
		        vehicle[carid][cStatut] = 1;
		        vehicle_Save(carid,0,0);
		    }
		    if(listitem==2)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Véhicule en fourrière LSPD.");
		        vehicle[carid][cStatut] = 2;
		        vehicle_Save(carid,0,0);
		    }
		}
		else if(admin_CarDialog[playerid]==13)
		{
		    if(listitem==0)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Véhicule bridé.");
		        vehicle[carid][cBrid] = car_GetBridVehicle(carid);
		        speedometer_Update(playerid,4,0);
		        vehicle_Save(carid,0,0);
		    }
		    if(listitem==1)
		    {
		        msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Véhicule débridé.");
		        vehicle[carid][cBrid] = 0;
		        speedometer_Update(playerid,4,0);
		        vehicle_Save(carid,0,0);
		    }
		}
		else if(admin_CarDialog[playerid]==14)
		{
		    if(listitem==0)
		    {
		        ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule","Entrez le rang faction du véhicule :","Valider", "Quitter");
                admin_CarDialog[playerid]=15;
		    }
		    if(listitem==1)
		    {
		        new tmpstring[128];
				for(new i=0; i<MAX_CITY+1; i++)
				{
				    format(tmpstring,sizeof(tmpstring),"- %s\n",GetCityName(i));
				    strins(string,tmpstring,strlen(string),sizeof(string));
				}
				ShowPlayerDialog(playerid,7,DIALOG_STYLE_LIST,"» Admin « Edit véhicule",string,"Valider","Annuler");
				admin_CarDialog[playerid]=16;
		    }
		}
		else if(admin_CarDialog[playerid]==15)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 8 || strval(inputtext) < 0)
		        {return ShowPlayerDialog(playerid,7, DIALOG_STYLE_LIST, "» Admin « Edit véhicule","Rang compris entre 0 à 8.\nEntrez le rang faction du véhicule :","Valider", "Quitter");}
            vehicle[carid][cRank] = strval(inputtext);
		    vehicle_Save(carid,0,0);
		}
		else if(admin_CarDialog[playerid]==16)
		{
		    vehicle[carid][cJobCity]=listitem;
		    if(listitem==13)
				{vehicle[carid][cJobCity]=-1;}
            vehicle_Save(carid,0,0);
		}
		return 1;
	}
	if(dialogid == 80)
    {
  		if(!response)
			{return 1;}
			
		if(player_Dialog[playerid] == 0)
		{
		    new bool:listen=false;
			if(listitem == 0)
			{
				format(vehicle[carid][stream],128,"Aucun");
				for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			    {
			        if(IsPlayerConnected(i) && !IsPlayerNPC(i) && IsPlayerInVehicle(i,carid))
			            {StopAudioStreamForPlayer(playerid);}
			    }
			}
		 	if(listitem == 1)
				{strmid(vehicle[carid][stream],"http://streaming.radio.funradio.fr/fun-1-44-96?.uma",0,128,128); listen=true;}
			else if(listitem == 2)
			 	{strmid(vehicle[carid][stream],"http://player.skyrock.fr/V4/skyrock/skyrock.m3u",0,128,128); listen=true;}
			else if(listitem == 3)
			 	{strmid(vehicle[carid][stream],"http://broadcast.infomaniak.ch/vibrationfm-high.mp3",0,128,128); listen=true;}
			else if(listitem == 4)
			 	{strmid(vehicle[carid][stream],"http://broadcast.infomaniak.ch/laradioplus-high.mp3",0,128,128); listen=true;}
	   		else if(listitem == 5)
			 	{strmid(vehicle[carid][stream],"http://mp3.live.tv-radio.com/nrj/all/nrj_113225.mp3",0,128,128); listen=true;}
			else if(listitem == 6)
			 	{strmid(vehicle[carid][stream],"http://listen.radionomy.com/Fresh-Dance.m3u",0,128,128); listen=true;}
	        else if(listitem == 7)
			 	{strmid(vehicle[carid][stream],"http://generationfm-underground.ice.infomaniak.ch/generationfm-underground-high.mp3",0,128,128); listen=true;}
			else if(listitem == 8)
			{
			    ShowPlayerDialog(playerid,80,DIALOG_STYLE_INPUT,"» Radio «","Entrez un lien stream (.mp3, .uma, etc) :","Valider","Quitter");
			    player_Dialog[playerid]=1;
			}
			if(listen == true)
			{
			    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
			    {
			        if(IsPlayerConnected(i) && !IsPlayerNPC(i) && IsPlayerInVehicle(i,carid))
			            {PlayAudioStreamForPlayer(i, vehicle[carid][stream]);}
			    }
			}
		}
		else if(player_Dialog[playerid] == 1)
		{
		    format(vehicle[carid][stream],128,inputtext);
		    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		    {
		        if(IsPlayerConnected(i) && !IsPlayerNPC(i) && IsPlayerInVehicle(i,carid))
		            {PlayAudioStreamForPlayer(i, inputtext);}
		    }
		}
		return 1;
	}
 	if(dialogid == 85)
    {
        new bizid = gPlayerInBizz[playerid];
        if(!response)
			{return 1;}
			
		if(player_Dialog[playerid] == 0)
		{
	        if(listitem == 0) // Elbow
		 	{
		 		gym_StyleBefore[playerid] = PlayerInfo[playerid][pCombatStyle];
		 		gym_TempStyle[playerid] = 1;
		 		msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Gym «{FFFFFF} Vous tester la technique Elbow pendant 5 secondes.");
				gym_SetCombatStyle(playerid, 0, true);
				SetTimerEx("gym_TestCombatStyle", 5000, 0, "ii", playerid,gym_StyleBefore[playerid]);
		 	}
		 	if(listitem == 1) // Boxing
		 	{
		 		gym_StyleBefore[playerid] = PlayerInfo[playerid][pCombatStyle];
		 		gym_TempStyle[playerid] = 2;
		 		msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Gym «{FFFFFF} Vous tester la technique Boxing pendant 5 secondes.");
				gym_SetCombatStyle(playerid, 1, true);
				SetTimerEx("gym_TestCombatStyle", 5000, 0, "ii", playerid,gym_StyleBefore[playerid]);
		 	}
		 	if(listitem == 2) // Grabkick
		 	{
		 		gym_StyleBefore[playerid] = PlayerInfo[playerid][pCombatStyle];
		 		gym_TempStyle[playerid] = 3;
		 		msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Gym «{FFFFFF} Vous tester la technique Grabkick pendant 5 secondes.");
				gym_SetCombatStyle(playerid, 2, true);
				SetTimerEx("gym_TestCombatStyle", 5000, 0, "ii", playerid,gym_StyleBefore[playerid]);
		 	}
		 	if(listitem == 3) // Kneehead
		 	{
		 		gym_StyleBefore[playerid] = PlayerInfo[playerid][pCombatStyle];
		 		gym_TempStyle[playerid] = 4;
		 		msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Gym «{FFFFFF} Vous tester la technique Kneehead pendant 5 secondes.");
				gym_SetCombatStyle(playerid, 3, true);
				SetTimerEx("gym_TestCombatStyle", 5000, 0, "ii", playerid,gym_StyleBefore[playerid]);
		 	}
		 	if(listitem == 4) // Kungfu
		 	{
		 		gym_StyleBefore[playerid] = PlayerInfo[playerid][pCombatStyle];
		 		gym_TempStyle[playerid] = 5;
		 		msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Gym «{FFFFFF} Vous tester la technique Kungfu pendant 5 secondes.");
				gym_SetCombatStyle(playerid, 4, true);
				SetTimerEx("gym_TestCombatStyle", 5000, 0, "ii", playerid,gym_StyleBefore[playerid]);
		 	}
		 	if(listitem == 5) // Normal
		 	{
		 	    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Gym «{FFFFFF} Vous avez acheté la technique normal pour $0.");
		 	    PlayerInfo[playerid][pCombatStyle] = 5;
		 	    gym_SetCombatStyle(playerid, 5, true);
		 	}
		 }
		 else if(player_Dialog[playerid] >= 1)
		 {
			pay_tempPrice[playerid] = bizz[bizid][itemCost][player_Dialog[playerid]-1];
			pay_tempArticle[playerid] = player_Dialog[playerid];
			pay_tempType[playerid] = 1;
			pay_showDialog(playerid, pay_tempPrice[playerid]);
		}
		return 1;
    }
    if(dialogid == 132)
    {
        if(!response)
        	{return 1;}
        	
        if(PlayerInfo[playerid][pGunLic] != 1)
			{msg_Client(playerid, COLOR_STATS, "|Ecole de tir| Permis d'arme requis.");return 1;}
			
		pay_tempPrice[playerid] = 50;
		pay_tempType[playerid] = 3;
		pay_tempArticle[playerid] = listitem+1;
		pay_showDialog(playerid, pay_tempPrice[playerid]);
		return 1;
    }
    if(dialogid == 120)
    {
        if(!response)
        	{return 1;}
        	
        new vehicleid = -1;
		if(gouv_DialogGestion[playerid]==0)
		{
		    if(listitem==0)
		    {
		        if(PlayerInfo[playerid][pIdentie] !=0)
		            {return msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Mairie «{FFFFFF} Vous avez déjà votre carte d'identité.");}
			    format(string,sizeof(string),"{FFFFFF}Informations sur votre carte d'identité :\n  {33CCFF}- Nom :{FFFFFF} %s\n  {33CCFF}- Sexe :{FFFFFF} %s\n  {33CCFF}- Age :{FFFFFF} %d",PlayerInfo[playerid][pRealName],GetSexName(PlayerInfo[playerid][pSex]),PlayerInfo[playerid][pAge]);
			    ShowPlayerDialog(playerid,120,DIALOG_STYLE_MSGBOX,"{FF6E00}» Mairie «{FFFFFF} Carte d'identité",string,"Valider","Annuler");
			    gouv_DialogGestion[playerid]=1;
		    }
		    if(listitem==1)
		    {
		        /*if(PlayerInfo[playerid][pCar][0] == -1 && PlayerInfo[playerid][pCar][1] == -1 && PlayerInfo[playerid][pCar][2] == -1 && PlayerInfo[playerid][pCar][3] == -1 && PlayerInfo[playerid][pCar][4] == -1 && PlayerInfo[playerid][pCar][5] == -1)
	 	        	{msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Mairie «{FFFFFF} Vous n'avez pas de véhicules.");return 1;}
	 	        if(PlayerInfo[playerid][pChangePlaque] <= 0)
	 	        	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de ChangePlaque.");return 1;}
	 	        new car1[64]="[Vehicule 1]  Aucun",car2[64]="[Vehicule 2]  Aucun",car3[64]="[Vehicule 3]  Aucun",car4[64]=" ",car5[64]=" ",car6[64]=" ";
				new key1 = PlayerInfo[playerid][pCar][0];
				new key2 = PlayerInfo[playerid][pCar][1];
				new key3 = PlayerInfo[playerid][pCar][2];
				new key4 = PlayerInfo[playerid][pCar][3];
				new key5 = PlayerInfo[playerid][pCar][4];
				new key6 = PlayerInfo[playerid][pCar][5];
				if(key1!=-1)
				{
					format(car1,sizeof(car1),"[Vehicule 1]  %s (Plaque: %s) (SQLid: %d)",vehName[GetVehicleModel(key1)-400],vehicle[key1][cLicense],key1);
				}
				if(key2!=-1)
				{
					format(car2,sizeof(car2),"[Vehicule 2]  %s (Plaque: %s) (SQLid: %d)",vehName[GetVehicleModel(key2)-400],vehicle[key2][cLicense],key2);
				}
				if(key3!=-1)
				{
					format(car3,sizeof(car3),"[Vehicule 3]  %s (Plaque: %s) (SQLid: %d)",vehName[GetVehicleModel(key3)-400],vehicle[key3][cLicense],key3);
				}
				if(key4!=-1 && PlayerInfo[playerid][pCarDev4] == 1)
				{
					format(car4,sizeof(car4),"[Vehicule 4]  %s (Plaque: %s) (SQLid: %d)",vehName[GetVehicleModel(key4)-400],vehicle[key4][cLicense],key4);
				}
				if(key5!=-1 && PlayerInfo[playerid][pCarDev5] == 1)
				{
					format(car5,sizeof(car5),"[Vehicule 5]  %s (Plaque: %s) (SQLid: %d)",vehName[GetVehicleModel(key5)-400],vehicle[key5][cLicense],key5);
				}
				if(key6!=-1 && PlayerInfo[playerid][pCarDev6] == 1)
				{
					format(car6,sizeof(car6),"[Vehicule 6]  %s (Plaque: %s) (SQLid: %d)",vehName[GetVehicleModel(key6)-400],vehicle[key6][cLicense],key6);
				}
				format(string,sizeof(string),"%s \n%s \n%s \n%s \n%s \n%s",car1,car2,car3,car4,car5,car6);
				ShowPlayerDialog(playerid,120,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer la plaque",string,"Valider","Quitter");
				gouv_DialogGestion[playerid]=2;*/
			}
			if(listitem==2)
		    {
		        if(PlayerInfo[playerid][pMarried] == 0)
		            {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'êtes pas marrié !");}
		        player_Divorce(playerid);
		        msg_Client(playerid,COLOR_INFO,"{FF6E00}» Mairie «{FFFFFF} Vous avez divorcé.");
		    }
			return 1;
		}
		else if(gouv_DialogGestion[playerid]==1)
		{
		    PlayerInfo[playerid][pIdentie]=2;
		    msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Mairie «{FFFFFF} Votre carte d'identité vous a été délivrée.");
		    return 1;
		}
		/*else if(gouv_DialogGestion[playerid]==2)
		{
		    if(listitem==0){vehicleid=PlayerInfo[playerid][pCar][0];}
			else if(listitem==1){vehicleid=PlayerInfo[playerid][pCar][1];}
        	else if(listitem==2){vehicleid=PlayerInfo[playerid][pCar][2];}
			else if(listitem==3){vehicleid=PlayerInfo[playerid][pCar][3];}
			else if(listitem==4){vehicleid=PlayerInfo[playerid][pCar][4];}
			else if(listitem==5){vehicleid=PlayerInfo[playerid][pCar][5];}
			if(vehicleid== -1)
				{msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Véhicule inconnu ...");return 1;}
			format(string,sizeof(string),"Entrez le nouveau de nom de votre plaque : (Ancienne plaque: %d) (Id: %d)",vehicle[vehicleid][cLicense],vehicleid);
			ShowPlayerDialog(playerid,120,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer la plaque",string,"Valider","Retour");
			gouv_DialogGestion[playerid]=3;
			return 1;
		}*/
		else if(gouv_DialogGestion[playerid] == 3)
		{
		    if(!strlen(inputtext) || strval(inputtext) > 14 || strval(inputtext) < 1)
		    {
		        format(string,sizeof(string),"Erreur dans le nom (14 caractère max)\nEntrez le nouveau de nom de votre plaque : (Ancienne plaque: %d) (Id: %d)",vehicle[vehicleid][cLicense],vehicleid);
				ShowPlayerDialog(playerid,120,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer la plaque",string,"Valider","Retour");
		        return 1;
		    }
		    format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre plaque en '%s'.",inputtext);
		    msg_Client(playerid,COLOR_MAIRIE,string);
		    strmid(vehicle[vehicleid][cLicense], inputtext, 0,14,14);
		    PlayerInfo[playerid][pChangePlaque]--;
			vehicle_Save(vehicleid,0,0);
			return 1;
		}
        return 1;
    }
    if(dialogid == 121)
    {
        if(!response)
	    {
	        if(gouv_DialogGestion[playerid] == 0)return 1;
			else
			{
			    format(string,sizeof(string),"{FFFFFF}- Changer votre mot de passe\n- Changer votre adresse email\n- Changer de ville\n- Changer votre nom [Renames disponible(s): %d]\n- Changer votre numéro de tel [disponible(s): %d]\n- Changer de Sexe [disponible(s): %d]\n- Changer d'âge [disponible(s): %d]",
				PlayerInfo[playerid][pRename],PlayerInfo[playerid][pChangeNum],PlayerInfo[playerid][pChangeSex],PlayerInfo[playerid][pChangeAge]);
				ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer vos stats",string,"Valider","Annuler");
				gouv_DialogGestion[playerid] = 0;
			    return 1;
			}
	    }
	    if(gouv_DialogGestion[playerid] == 0)
	    {
	        if(listitem == 0)
	        {
	            ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer le mot de passe","Entrez votre nouveau mot de passe :","Valider","Retour");
                gouv_DialogGestion[playerid] = 1;
	        }
	        if(listitem == 1)
	        {
	            ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer l'adresse email","Entrez votre nouvelle adresse email :","Valider","Retour");
                gouv_DialogGestion[playerid] = 2;
	        }
	        if(listitem == 2)
	        {
	            ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer de ville","{FFFFFF}- Los Santos\n- San Fierro\n- Las Venturas\n- Fort Carson\n- Bay Side\n- Angel Pine\n- Dillimore\n- Blueberry\n- Montgomery\n- Palomino Creek\n- Las Payasdas\n- Las Barbancas\n- El Quebrados","Valider","Retour");
                gouv_DialogGestion[playerid] = 5;
	        }
	        if(listitem == 3)
	        {
	            if(PlayerInfo[playerid][pRename] == 0)
	            {
	                msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Mairie «{FFFFFF} Vous n'avez pas de rename disponible.");
	                format(string,sizeof(string),"{FFFFFF}- Changer votre mot de passe\n- Changer votre adresse email\n- Changer de ville\n- Changer votre nom [Renames disponible(s): %d]\n- Changer votre numéro de tel [disponible(s): %d]\n- Changer de Sexe [disponible(s): %d]\n- Changer d'âge [disponible(s): %d]",
					PlayerInfo[playerid][pRename],PlayerInfo[playerid][pChangeNum],PlayerInfo[playerid][pChangeSex],PlayerInfo[playerid][pChangeAge]);
					ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer vos stats",string,"Valider","Annuler");
					gouv_DialogGestion[playerid] = 0;
	                return 1;
	            }
	            ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer de nom","Entrez votre nouveau nom sous forme RP (Ex: Tomas_Dupons )","Valider","Retour");
                gouv_DialogGestion[playerid] = 3;
	        }
	        if(listitem == 4)
	        {
	            if(PlayerInfo[playerid][pChangeNum] == 0)
	            {
	                msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Mairie «{FFFFFF} Vous n'avez pas de point pour changer votre numéro.");
	                format(string,sizeof(string),"{FFFFFF}- Changer votre mot de passe\n- Changer votre adresse email\n- Changer de ville\n- Changer votre nom [Renames disponible(s): %d]\n- Changer votre numéro de tel [disponible(s): %d]\n- Changer de Sexe [disponible(s): %d]\n- Changer d'âge [disponible(s): %d]",
					PlayerInfo[playerid][pRename],PlayerInfo[playerid][pChangeNum],PlayerInfo[playerid][pChangeSex],PlayerInfo[playerid][pChangeAge]);
					ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer vos stats",string,"Valider","Annuler");
					gouv_DialogGestion[playerid] = 0;
	                return 1;
	            }
	            ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer de numéro de tel","Entrez votre nouveau numéro de téléphone (4 chiffres) :","Valider","Retour");
                gouv_DialogGestion[playerid] = 4;
	        }
	        if(listitem == 5)
	        {
	            if(PlayerInfo[playerid][pChangeSex] == 0)
	            {
	                msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Mairie «{FFFFFF} Vous n'avez pas de point pour changer votre sexe.");
	                format(string,sizeof(string),"{FFFFFF}- Changer votre mot de passe\n- Changer votre adresse email\n- Changer de ville\n- Changer votre nom [Renames disponible(s): %d]\n- Changer votre numéro de tel [disponible(s): %d]\n- Changer de Sexe [disponible(s): %d]\n- Changer d'âge [disponible(s): %d]",
					PlayerInfo[playerid][pRename],PlayerInfo[playerid][pChangeNum],PlayerInfo[playerid][pChangeSex],PlayerInfo[playerid][pChangeAge]);
					ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer vos stats",string,"Valider","Annuler");
					gouv_DialogGestion[playerid] = 0;
	                return 1;
	            }
	            ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer de sexe","{FFFFFF}- Homme\n- Femme","Valider","Retour");
                gouv_DialogGestion[playerid] = 6;
	        }
	        if(listitem == 6)
	        {
	            if(PlayerInfo[playerid][pChangeAge] == 0)
	            {
	                msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Mairie «{FFFFFF} Vous n'avez pas de point pour changer votre âge.");
	                format(string,sizeof(string),"{FFFFFF}- Changer votre mot de passe\n- Changer votre adresse email\n- Changer de ville\n- Changer votre nom [Renames disponible(s): %d]\n- Changer votre numéro de tel [disponible(s): %d]\n- Changer de Sexe [disponible(s): %d]\n- Changer d'âge [disponible(s): %d]",
					PlayerInfo[playerid][pRename],PlayerInfo[playerid][pChangeNum],PlayerInfo[playerid][pChangeSex],PlayerInfo[playerid][pChangeAge]);
					ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer vos stats",string,"Valider","Annuler");
					gouv_DialogGestion[playerid] = 0;
	                return 1;
	            }
	            ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer d'âge","Entrez votre âge :","Valider","Retour");
                gouv_DialogGestion[playerid] = 7;
	        }
        }
        else if(gouv_DialogGestion[playerid] == 1)
	    {
	        if(!strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 16)
	        	{return ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer le mot de passe","Mot de passe compris entre 4 et 16 carractères.\nEntrez votre nouveau mot de passe :","Valider","Retour");}
			format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre passe en : %s",inputtext);
            new cryptepass[128];
			sha1(inputtext,cryptepass);
			strmid(PlayerInfo[playerid][pKey], cryptepass, 0, strlen(cryptepass), 128);
			msg_Client(playerid,COLOR_MAIRIE,string);
			MySQLUpdatePlayerCharSingle(PlayerInfo[playerid][pSQLID],"Pass",cryptepass);
			//if(setting[inscription]==false)
			//	{format(sql, sizeof(sql), "UPDATE fluxbb_users SET password='%s' WHERE username='%s'", inputtext, PlayerInfo[playerid][pName]);mysql_query(MYSQL,sql);}
			msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Mot de passe actualisé sur la DB. Utilisez le pour l'UCP.");
			return 1;
	    }
	    else if(gouv_DialogGestion[playerid] == 2)
	    {
	        if(!server_CheckEmail(inputtext) || !strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 32)
	        	{return ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer le mot de passe","Erreur dans l'adresse email.\nEntrez votre nouvelle adresse email :","Valider","Retour");}
	        	
			strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), 255);
			format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre adresse email en : %s",inputtext);
			msg_Client(playerid,COLOR_MAIRIE,string);
			MySQLUpdatePlayerCharSingle(PlayerInfo[playerid][pSQLID],"Email",inputtext);
			//if(setting[inscription]==false)
			//	{format(sql, sizeof(sql), "UPDATE fluxbb_users SET email='%s' WHERE username='%s'", inputtext, PlayerInfo[playerid][pName]);mysql_query(MYSQL,sql);}
			return 1;
	    }
	    else if(gouv_DialogGestion[playerid] == 3)
	    {
	        if(!server_SpecName(inputtext) || !strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 32)
	        	{return ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer de nom","Nom non RP!\nEntrez votre nouveau nom sous forme RP (Ex: Tomas_Dupons )","Valider","Retour");}
	        	
			//ChangeNameOfPlayer(playerid, inputtext);
			format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre nom en : %s",inputtext);
			msg_Client(playerid,COLOR_MAIRIE,string);
			PlayerInfo[playerid][pRename]-=1;
			msg_Client(playerid,COLOR_SERVER,"{005660}» Serveur «{C8C8C8} Nom actualisé sur la DB. Utilisez le pour l'UCP.");
			return 1;
	    }
	    else if(gouv_DialogGestion[playerid] == 4)
	    {
	        if(!strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 4)
	        	{return ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer de numéro de tel","Entrez votre nouveau numéro de téléphone (4 chiffres) :","Valider","Retour");}
	        if(tel_IsUsed(strval(inputtext)))
	            {return ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer de numéro de tel","Ce numéro est déjà utilisé.\nEntrez votre nouveau numéro de téléphone (4 chiffres) :","Valider","Retour");}
			format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre numéro de téléphone en : %d",strval(inputtext));
			msg_Client(playerid,COLOR_MAIRIE,string);
			PlayerInfo[playerid][pNumber]=strval(inputtext);
			PlayerInfo[playerid][pChangeNum]-=1;
			MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "PhoneNr", PlayerInfo[playerid][pNumber]);
			return 1;
	    }
	    else if(gouv_DialogGestion[playerid] == 5)
	    {
            format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre ville en : %s",GetCityName(listitem));
			msg_Client(playerid,COLOR_MAIRIE,string);
			PlayerInfo[playerid][pCity]=listitem;
			MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "City", PlayerInfo[playerid][pCity]);
			return 1;
	    }
	    else if(gouv_DialogGestion[playerid] == 6)
	    {
	        format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre sex en : %s",GetSexName(listitem+1));
			msg_Client(playerid,COLOR_MAIRIE,string);
	        PlayerInfo[playerid][pSex]=listitem+1;
	        PlayerInfo[playerid][pChangeSex]-=1;
	        MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "Sex", PlayerInfo[playerid][pSex]);
	    }
	    else if(gouv_DialogGestion[playerid] == 7)
	    {
	        if(!strlen(inputtext) || strval(inputtext) < 16 || strval(inputtext) > 70)
	        	{return ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT,"{FF6E00}» Mairie «{FFFFFF} Changer d'âge","Entrez votre âge (Entre 16 et 70 ans) :","Valider","Retour");}
	        format(string,sizeof(string),"{FF6E00}» Mairie «{FFFFFF} Vous avez changé votre âge en : %d ans",strval(inputtext));
			msg_Client(playerid,COLOR_MAIRIE,string);
			PlayerInfo[playerid][pAge]=strval(inputtext);
			PlayerInfo[playerid][pChangeAge]-=1;
			MySQLUpdatePlayerIntSingle(PlayerInfo[playerid][pSQLID], "Age", PlayerInfo[playerid][pAge]);
			return 1;
	    }
        return 1;
    }
	if(dialogid == 82)
    {
  		if(!response)
		  	{return 1;}
        server_SetPlayerInterior(playerid, 0);
  		if(listitem == 0)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 1543.6796,-1675.2576,13.5569);}
	        else
	        	{SafeSetPlayerPos(playerid, 1543.6796,-1675.2576,13.5569);}
  		}
  		if(listitem == 1)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 1652.3850,-1666.7813,21.4375);}
	        else
	        	{SafeSetPlayerPos(playerid, 1652.3850,-1666.7813,21.4375);}
  		}
  		if(listitem == 2)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 2755.0706,-2437.8530,13.6432);}
	        else
	        	{SafeSetPlayerPos(playerid, 2755.0706,-2437.8530,13.6432);}
  		}
  		if(listitem == 3)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 1186.7922,-1323.7046,13.5591);}
	        else
	        	{SafeSetPlayerPos(playerid, 1186.7922,-1323.7046,13.5591);}
  		}
  		if(listitem == 4)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 1481.3722,-1750.8760,15.4453);}
	        else
	        	{SafeSetPlayerPos(playerid, 1481.3722,-1750.8760,15.4453);}
  		}
  		if(listitem == 5)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 2039.4921,-1412.5177,17.1641);}
	        else
	        	{SafeSetPlayerPos(playerid, 2039.4921,-1412.5177,17.1641);}
  		}
  		if(listitem == 6)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 1792.9287,-1281.1332,13.6328);}
	        else
	        	{SafeSetPlayerPos(playerid, 1792.9287,-1281.1332,13.6328);}
  		}
  		if(listitem == 7)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 1792.9287,-1281.1332,13.6328);}
	        else
	        	{SafeSetPlayerPos(playerid, 1792.9287,-1281.1332,13.6328);}
  		}
  		if(listitem == 8)
  		{
	  		if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), 1543.6796,-1675.2576,13.5569);}
	        else
	        	{SafeSetPlayerPos(playerid, 1543.6796,-1675.2576,13.5569);}
  		}
		if(listitem >= 9)
  		{
  		    if(FactionInfo[listitem-9][fCreate] == 0)
			  	{return 1;}
  		    if (IsPlayerInAnyVehicle(playerid))
				{SafeSetVehiclePos(GetPlayerVehicleID(playerid), FactionInfo[listitem-9][fEntrance][0],FactionInfo[listitem-9][fEntrance][1],FactionInfo[listitem-9][fEntrance][2]);}
	        else
	        	{SafeSetPlayerPos(playerid, FactionInfo[listitem-9][fEntrance][0],FactionInfo[listitem-9][fEntrance][1],FactionInfo[listitem-9][fEntrance][2]);}
  		}
	}
    if(dialogid == 133)
    {
        if(tel_DialogUrgence[playerid] ==0)
        {
            if(response==1) // police
	    	{
	    	    ShowPlayerDialog(playerid,133,DIALOG_STYLE_INPUT,"{8B8B00}» Tel «{FFFFFF} Urgence - Police","Entrer en une courte phrase le motif de votre appel ainsi que le lieu :","Valider","Quitter");
	    	    tel_DialogUrgence[playerid]=1;
	    	    return 1;
	    	}
	    	if(response==0) // samu
	    	{
	    	    ShowPlayerDialog(playerid,133,DIALOG_STYLE_INPUT,"{8B8B00}» Tel «{FFFFFF} Urgence - Samu","Entrer en une courte phrase le motif de votre appel ainsi que le lieu :","Valider","Quitter");
	    	    tel_DialogUrgence[playerid]=2;
	    	    return 1;
	    	}
        }
        new Float:XX,Float:YY,Float:ZZ;
        GetPlayerPos(playerid,XX,YY,ZZ);
        if(tel_DialogUrgence[playerid] ==1)
        {
            if(!response) return 1;
			format(string,sizeof(string),"» Appel « {FFFFFF}%s, Num: %d, motif: %s (/p(olice) tda)",PlayerInfo[playerid][pName],PlayerInfo[playerid][pNumber],inputtext);
			//msg_Radio(GetCountyPlayer(playerid)+1, COLOR_POLICE, string);
			msg_Radio(1, COLOR_POLICE, string);
			msg_Radio(3, COLOR_POLICE, string);
			msg_Radio(4, COLOR_POLICE, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			pdtrace[0]=XX; pdtrace[1]=YY; pdtrace[2]=ZZ, pdtrace1=1;
        }
        if(tel_DialogUrgence[playerid] ==2)
        {
            if(!response) return 1;
			format(string,sizeof(string),"» Appel « {FFFFFF}%s, Num: %d, motif: %s (/med(ecin) tda)",PlayerInfo[playerid][pName],PlayerInfo[playerid][pNumber],inputtext);
			msg_Job(11,COLOR_ALLDEPT,string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			emdtrace[0]=XX; emdtrace[1]=YY; emdtrace[2]=ZZ, emdtrace1=1;
        }
        return 1;
    }
	if(dialogid == 1)
    {
        new aidestring[1024],aidestring1[512],aidestring2[512],aidestring3[512],aidestring4[512],aidestring5[512];
        if(!response)
	    {
	        if(aide_Dialog[playerid] == 0)return 1;
			else
			{
			    ShowPlayerDialog(playerid,1,DIALOG_STYLE_LIST,"» Aide «","[Général]\n[Tchat]\n[Job]\n[Faction]\n[Maison(s)]\n[Biz]\n[Voiture(s)]\n[Garage(s)]","Ouvrir","Fermer");
			    aide_Dialog[playerid] = 0;
			    return 1;
			}
	    }
	    if(aide_Dialog[playerid]==0)
	    {
	        if(listitem == 0)
	        {
	            format(aidestring1,sizeof(aidestring1),"{FF9900}[Compte]{FFFFFF}\n/stats - Affiche vos stats\n/sac - Affiche votre sac\n/skills - Affiche vos skills\n/permis - Affiche vos permis\n");
				format(aidestring2,sizeof(aidestring2),"{FF9900}[Général]{FFFFFF}\n/montrer - Montrer vos permis/votre carte d'identité\n/acheter - Acheter dans un biz unique\n/poser - Poser quelque chose\n/utiliser - Utiliser quelque chose\n/spawn - Choisir votre lieu de spawn\n/admins - Voir les admins connectés\n/cagoule - Mettre votre cagoule\n/annuaire - Annuaire\n/marche - Choisir votre style de marche");
				format(aidestring3,sizeof(aidestring3),"/animlist - Liste des animations\n/credits - Crédits du GameMode\n/utiliserdrogue - Utiliser de la drogue\n/freq - Regler la fréquence de votre talkie\n/afk - Absence\n/quitter - Quitter votre faction/job\n/delouer - Délouer votre véhicule\n/comeback - Retour à votre ancienne position\n/forfait - Gestion de votre forfait\n/banque - Déposer/retirer de l'argent dans la banque");
				format(aidestring4,sizeof(aidestring4),"/tme - Message au dessus de votre tête\n/pme - Message descriptif au sol\n/vme - Message descriptif du véhicule");
				format(aidestring4,sizeof(aidestring5),"/policiers - Voir les policiers en service\n/fumer - Fumer une cigarette\n/t - Téléphone\n/annuaire - Voir l'annuaire");
				format(aidestring,sizeof(aidestring),"%s\n%s\n%s\n%s",aidestring1,aidestring2,aidestring3,aidestring4,aidestring5);
	            ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Général",aidestring,"Quitter","Retour");
	            aide_Dialog[playerid]=1;
	        }
	        if(listitem == 1)
	        {
	            format(aidestring1,sizeof(aidestring1),"{FF9900}[Tchat]{FFFFFF}\n/o(ooc) - Canal ooc\n/b - Canal ooc\n/c(rier) - Crier\n/f(action) - Canal faction\n/me - action de vous\n/do - Décrir une scene\n/n(ewbie) - Canal des nouveaux \n/chu(choter) - Chuchoter à un joueur\n/pm - Message privé (V.I.P ou admins)\n/l1 - Langue parler 1 IG\n/l2 - Langue parler 2 IG");
	            ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Tchat",aidestring1,"Quitter","Retour");
	            aide_Dialog[playerid]=2;
	        }
	        if(listitem == 2)
	        {
	            if(PlayerInfo[playerid][pJob] == 0)
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de job."); return 1;}
	            if(PlayerInfo[playerid][pJob] == 1)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Livreur de Pizza]{FFFFFF}\nMonter juste dans un scooter.\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 2)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Fermier]{FFFFFF}\nMonter juste dans une moisonneuse.\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 3)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Mineur]{FFFFFF}\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 4)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Eboueur]{FFFFFF}\nMonter juste dans un camion poubelles.\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 5)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Ouvrier]{FFFFFF}\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 6)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Pilote de lignes]{FFFFFF}\nMonter juste dans un avion de ligne.\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 7)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Facteur]{FFFFFF}\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 8)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Pêcheur]{FFFFFF}\nMonter juste dans un bateau de pêche.\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 9)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Voiturier]{FFFFFF}\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 10)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Camionneur]{FFFFFF}\nMonter juste dans un camion.\n/job - Commandes");}
				if(PlayerInfo[playerid][pJob] == 11)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Medecin]{FFFFFF}\n/medecin - Commandes");}
                if(PlayerInfo[playerid][pJob] == 17)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Mécanicien]{FFFFFF}\n/Mecano - Commandes");}
				/*if(PlayerInfo[playerid][pJob] == 12)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Chauffeur de Bus]{FFFFFF}\nMonter juste dans un bus.\n/og - ouvrir la grille\n/job - Commandes");}
                if(PlayerInfo[playerid][pJob] == 13)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Chauffeur de Taxi]{FFFFFF}\nMonter juste dans un taxi.\n/og - ouvrir la grille");}*/
                if(PlayerInfo[playerid][pJob] == 14)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Bucheron]{FFFFFF}/job - Commandes");}
                if(PlayerInfo[playerid][pJob] == 19)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Job - Transporeur de fonds]{FFFFFF}\nMonter juste dans un fourgon.\n/job - Commandes");}
					
	            ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Job",aidestring1,"Quitter","Retour");
	            aide_Dialog[playerid]=3;
	        }
	        if(listitem == 3)
	        {
	            if(PlayerInfo[playerid][pMember] == 0)
					{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous n'avez pas de faction."); return 1;}
	            if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Faction - Police]{FFFFFF}\n/p(olice) - Commandes principales\n/r(adio) - Radio\n/d(epartement) - Parler aux factions légales\n/four(rière) - Gestion de la fourrière\n/membre - Liste des membres connectés\n/f(action) - Cannal OOC de la faction");}
	   			if(PlayerInfo[playerid][pMember] == 5)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Faction - F.B.I]{FFFFFF}\n/fbi - Commandes principales\n/r(adio) - Radio\n/d(epartement) - Parler aux factions légales\n/four(rière) - Gestion de la fourrière\n/membre - Liste des membres connectés\n/f(action) - Cannal OOC de la faction");}
	   			if(PlayerInfo[playerid][pMember] >= 6 && PlayerInfo[playerid][pMember] <= 9)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Faction - Gouvernement]{FFFFFF}\n/gouv(ernement) - Commandes principales\n/r(adio) - Radio\n/d(epartement) - Parler aux factions légales\n/membre - Liste des membres connectés\n/f(action) - Cannal OOC de la faction");}
                if(PlayerInfo[playerid][pMember] == 10)
					{format(aidestring1,sizeof(aidestring1),"{FF9900}[Faction - San News]{FFFFFF}\n/san(news) - Commandes principales\n/membres - Liste des membres connectés\n/f(action) - Cannal OOC de la faction");}
				if(PlayerInfo[playerid][pLeader] >= 200 || PlayerInfo[playerid][pMember] >= 200)
				{
				    new facID = PlayerInfo[playerid][pMember]-200;
				    if(FactionInfo[facID][fType] == 1)
						{format(aidestring1,sizeof(aidestring1),"{FF9900}[Faction - Gang]{FFFFFF}\n/gang - Commandes principales\n/membres - Liste des membres connectés\n/f(action) - Cannal OOC de la faction");}
					else if(FactionInfo[facID][fType] == 2)
						{format(aidestring1,sizeof(aidestring1),"{FF9900}[Faction - Mafia]{FFFFFF}\n/mafia - Commandes principales\n/membres - Liste des membres connectés\n/f(action) - Cannal OOC de la faction");}
	   			}
	   			
	   			ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Faction",aidestring1,"Quitter","Retour");
	            aide_Dialog[playerid]=4;
	        }
	        if(listitem == 4)
	        {
	            format(aidestring1,sizeof(aidestring1),"{FF9900}[Utiles]{FFFFFF}\n/ma(ison) acheter - Pour acheter une maison\n/ma(ison) louer - Louer une maison\n/ma(ison) delouer - Delouer une maison\n/ma(ison) fraper - Fraper à la porte\n");
	            format(aidestring2,sizeof(aidestring2),"{FF9900}[Propriétaire]{FFFFFF}\n/ma(ison) porte - Ouvrir/fermer la porte\n/ma(ison) gestion - Gestion de votre maison\n/ma(ison) vendre - Vendre une maison\n/ma(ison) localiser - Localiser une maison\n/ma(ison) mobi(lier) - Gestion du mobilier\n/ma(ison) vendrea - Vendre votre maison à un joueur");
	            format(aidestring,sizeof(aidestring),"%s\n%s",aidestring1,aidestring2);
	            ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Maison(s)",aidestring,"Quitter","Retour");
	            aide_Dialog[playerid]=5;
	        }
	        if(listitem == 5)
	        {
	            format(aidestring1,sizeof(aidestring1),"{FF9900}[Utiles]{FFFFFF}\n/biz acheter - Acheter un biz\n");
	            format(aidestring2,sizeof(aidestring2),"{FF9900}[Propriétaire]{FFFFFF}\n/biz vendre - Vendre un biz\n/biz localiser - Localiser un biz\n/biz infos - Infos sur vos/votre biz\n/biz gestion - Gérer votre biz\n/biz type - Définir le type de biz");
	            format(aidestring,sizeof(aidestring),"%s\n%s",aidestring1,aidestring2);
	            ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Biz",aidestring,"Quitter","Retour");
	            aide_Dialog[playerid]=6;
	        }
	        if(listitem == 6)
	        {
	            format(aidestring1,sizeof(aidestring1),"{FF9900}[Utiles]{FFFFFF}\n/v(ehicule) coffre - Commandes pour le coffre\n/v(ehicule) remplir - Remplir un véhicule à la station service\n/v(ehicule) vitre - Ouvrir/fermer la fenêtre\n/v(ehicule) capot - Ouvrir/fermer le capot\n/v(ehicule) neon - Allumer/enteindre les néons\n");
	            format(aidestring2,sizeof(aidestring2),"/v(ehicule) ejecter - Ejecter quelqu'un du véhicule\n/v(ehicule) radio - Ecouter la radio\n/v(ehicule) Jerrican - Remplir/utiliser votre jérricain\n/v(ehicule) bruler - Bruler un véhicule à l'aide d'un jerrican + briquet\n\n{FF9900}[Propriétaire]{FFFFFF}\n/v(ehicule) vendre - vendre un véhicule\n/v(ehicule) vendrea - Vendre un véhicule à un joueur\n");
	            format(aidestring3,sizeof(aidestring3),"/v(ehicule) localiser - Localiser un véhicule\n/v(ehicule) respawn - Respawn un véhicule\n/v(ehicule) garer - Garer un véhicule\n/v(ehicule) infos - Infos sur vos/votre véhicule(s)\n/v(ehicule) portes - Ouvrir/fermer les portes\n/v(ehicule) cadena - Enlever/mettre le cadena (juste vélo)\n/v(ehicule) spawn - SPawn votre véhicule\n/vme - Message descriptif du véhicule\n\n\n");
	            format(aidestring4,sizeof(aidestring4),"Touche 'é' - Allumer les phares\nTouche 'A' et 'E' - Clignotants\nTouche 'N' - Démarrer");
	            format(aidestring,sizeof(aidestring),"%s%s%s%s",aidestring1,aidestring2,aidestring3,aidestring4);
	            ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Voiture(s)",aidestring,"Quitter","Retour");
	            aide_Dialog[playerid]=7;
	        }
	        if(listitem == 7)
	        {
	            format(aidestring1,sizeof(aidestring1),"{FF9900}[Utiles]{FFFFFF}\n/garage acheter - Acheter le garage\n/entrer - Pour entrer dans un garage (Sur le pickup)\n/sortir - Sortir du garage \n\n{FF9900}[Propriétaire]{FFFFFF}\n/garage vendre - Vendre un garage\n/garage localiser - Localiser un garage\n/garage porte - Ouvrir/fermer la porte\n/garage vendrea - Vendre à un joueur");
	            ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"» Aide « Garages(s)",aidestring1,"Quitter","Retour");
	            aide_Dialog[playerid]=8;
	        }
	    }
		return 1;
	}
	if(dialogid == 12346)
	{
	    if(response==0)
	    {
	        KillTimer(player_antihack[playerid]);
         	SetTimerEx("TimerKick", 1000, 0, "i", playerid);
	        return 1;
	    }
	    if(strlen(inputtext))
	    {
			new tmppass[64];
			strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
			OnPlayerLogin(playerid,tmppass);
		}
		else
		{
			ShowPlayerDialog(playerid,12346,DIALOG_STYLE_INPUT,"» Connexion «","{AA3333}Mauvais mot de passe.\n\n{FFFFFF}Veuillez entrer le bon mot de passe {00A5FF}ci-dessous {FFFFFF}:","Valider","Quitter");
	        gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 3)
				{MySQLKick(playerid,-1,"Mot de passe échoué 3 fois");}
		}
		return 1;
	}
	return 1;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    new Float:x,Float:y,Float:z,string[128];
    GetPlayerPos(playerid,x,y,z);
    if(!response)
        {return 1;}
    new fur = house_CheckUnusedFurniture(gPlayerInHouse[playerid]);
    if(fur==-1)
        {return msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous n'avez plus d'emplacements libre.");}
	house[gPlayerInHouse[playerid]][hItem][fur]=modelid;
	house[gPlayerInHouse[playerid]][hFurPos_x][fur]=x+1;
	house[gPlayerInHouse[playerid]][hFurPos_y][fur]=y;
	house[gPlayerInHouse[playerid]][hFurPos_z][fur]=z;
	house_UpdateFurnitureInfos(gPlayerInHouse[playerid],fur);
	format(sql,sizeof(sql),"INSERT INTO lvrp_server_houses_furnitures (HouseId,ObjectId,Pos_x,Pos_y,Pos_z)  VALUES (%d,'%d',%f,%f,%f)",gPlayerInHouse[playerid],modelid,x+1,y,z);
	mysql_query(MYSQL,sql);
	house[gPlayerInHouse[playerid]][fFurSQLid][fur]=cache_insert_id();
	printf("[house:furniture] [+] Houseid %d | Slot %d | SQLid %d",gPlayerInHouse[playerid],fur,house[gPlayerInHouse[playerid]][fFurSQLid][fur]);
	format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Objet ajouté. [Emplacement %d - SQLid %d]",fur+1,house[gPlayerInHouse[playerid]][fFurSQLid][fur]);
	msg_Client(playerid,COLOR_HOUSE,string);
    return 1;
}

public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
	new string[256];
	if(extraid == 1)
	{
	    if(response)
	    {
	    
	    	police[PlayerInfo[playerid][pMember]-1][skin][player_Dialog[playerid]-9] = modelid;
	    	format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Vous avez changé le skin du rang %d en skin id %d.",player_Dialog[playerid]-8,modelid);
		    msg_Client(playerid,COLOR_POLICE,string);
		    police_Gestion(playerid);
		    police_Save(PlayerInfo[playerid][pMember]-1);
		}
	    else
			{police_Gestion(playerid); return 1;}
	}
	if(extraid == 2)// Binco
	{
	    if(response)
	    {
	        if(player_Dialog[playerid]==1)
	        {
	        	if(!IsValidSkin(modelid))
	        	{
	        	    new BizString[512];
				    new bizid = gPlayerInBizz[playerid];
					player_Dialog[playerid]=0;
					msg_Client(playerid,COLOR_BIZ,"{CF9756}» Info «{FFFFFF} Skin interdit.");
					format(BizString, sizeof(BizString), "1. Acheter un vétement ($%d)\n2. Acheter une paire de lunette ($%d)\n3. Acheter un bandana ($%d)\n4. Acheter un casque de moto ($%d)\n5. Acheter une casquette ($%d)\n6. Acheter un châpeau ($%d)\n7. Acheter un berêt ($%d)\n8. Acheter un casque stereo ($%d)\n9. Acheter une montre ($%d)\n10. Acheter un sac ..",
			        bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8]);
					ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST,"{2B6AFF}» Magasin de vétements «{FFFFFF} Achats",BizString,"Selectionner","Annuler");
					return 1;
	        	}
			}
	    	pay_tempPrice[playerid] = bizz[gPlayerInBizz[playerid]][itemCost][player_Dialog[playerid]-1];
	    	pay_tempArticle[playerid] = player_Dialog[playerid];
	    	pay_tempProducts[playerid] = 1;
	    	pay_tempType[playerid] = 1;
	    	pay_tempOther[playerid] = modelid;
	    	pay_showDialog(playerid, pay_tempPrice[playerid]);
		}
		else
		{
		    new BizString[512];
		    new bizid = gPlayerInBizz[playerid];
			player_Dialog[playerid]=0;
			format(BizString, sizeof(BizString), "1. Acheter un vétement ($%d)\n2. Acheter une paire de lunette ($%d)\n3. Acheter un bandana ($%d)\n4. Acheter un casque de moto ($%d)\n5. Acheter une casquette ($%d)\n6. Acheter un châpeau ($%d)\n7. Acheter un berêt ($%d)\n8. Acheter un casque stereo ($%d)\n9. Acheter une Montre ($%d)\n10. Acheter un sac ..",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8]);
			ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST,"{2B6AFF}» Magasin de vétements «{FFFFFF} Achats",BizString,"Selectionner","Annuler");
			return 1;
		}
	}
	if(extraid == 3)
	{
	    if(response)
	    {

	    	FBIInfo[skin][player_Dialog[playerid]-8] = modelid;
	    	format(string,sizeof(string),"|Fbi| Vous avez changé le skin du rang %d en skin id %d.",player_Dialog[playerid]-7,modelid);
		    msg_Client(playerid,COLOR_FBI,string);
		    fbi_Gestion(playerid);
		    fbi_Save();
		}
	    else
			{fbi_Gestion(playerid); return 1;}
	}
	if(extraid == 4)
	{
	    if(response)
	    {
	        format(string,sizeof(string),"» Admin « Vous avez changé le modèle en %d.",modelid);
		    msg_Client(playerid,COLOR_WHITE,string);
	        gate[player_Variable[playerid]][model]=modelid;
	        gate_Update(player_Variable[playerid]);
	        gate_Save(player_Variable[playerid]);
	    }
	    else
	        {gate_Dialog(playerid);}
	}
	if(extraid == 5)
	{
	    if(response)
	    {

	    	governement[PlayerInfo[playerid][pMember]-6][skin][gouv_DialogGestion[playerid]-7] = modelid;
	    	format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous avez changé le skin du rang %d en skin id %d.",gouv_DialogGestion[playerid]-6,modelid);
		    msg_Client(playerid,COLOR_MAIRIE,string);
		    governement_Gestion(playerid);
		    governement_Save(PlayerInfo[playerid][pMember]-6,false,false,false,false,false,false);
		}
	    else
			{governement_Gestion(playerid); return 1;}
	}
	if(extraid == 6)
	{
	    if(response)
	    {

	    	FireInfo[skin][fire_DialogGestion[playerid]-7] = modelid;
	    	format(string,sizeof(string),"{C7006C}» Pompier «{FFFFFF} Vous avez changé le skin du rang %d en skin id %d.",fire_DialogGestion[playerid]-6,modelid);
		    msg_Client(playerid,COLOR_MAIRIE,string);
		    fire_Gestion(playerid);
		    fire_Save();
		}
	    else
			{fire_Gestion(playerid); return 1;}
	}
	if(extraid == 7)
	{
	    if(response)
	    {

	    	MecanoInfo[skin][mecano_DialogGestion[playerid]-7] = modelid;
	    	format(string,sizeof(string),"{78769D}» Mécanicien «{FFFFFF} Vous avez changé le skin du rang %d en skin id %d.",mecano_DialogGestion[playerid]-6,modelid);
		    msg_Client(playerid,COLOR_JOB,string);
		    mecano_Gestion(playerid);
		    mecano_Save();
		}
	    else
			{mecano_Gestion(playerid); return 1;}
	}
	if(extraid == 8)
	{
	    if(response)
	    {

	    	BikerInfo[skin][biker_DialogGestion[playerid]-7] = modelid;
	    	format(string,sizeof(string),"{140073}» Biker'z «{FFFFFF} Vous avez changé le skin du rang %d en skin id %d.",biker_DialogGestion[playerid]-6,modelid);
		    msg_Client(playerid,COLOR_WHITE,string);
		    biker_Gestion(playerid);
		    biker_Save();
		}
	    else
			{biker_Gestion(playerid); return 1;}
	}
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    new string[256];
    for(new i=1; i<13; i++)
    {
        if(playertextid == phone_Contact[playerid][i])
        	{ShowPlayerDialog(playerid,68,DIALOG_STYLE_LIST,"|Téléphone| Contact","- Appeler\n- Envoyer un SMS\n- Supprimer","Valider","Quitter"); phone_ContactChosen[playerid]=i;}
    }
    if(playertextid == phone_Contact[playerid][0])
    	{ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX,"{8B8B00}» Tel «{FFFFFF} Appel - Urgences","Vous désirez :","La Police","Le Samu");tel_DialogUrgence[playerid]=0;}
    else if(playertextid == phone_BackSMS[playerid][0] || playertextid == phone_BackSMS[playerid][1] || playertextid == phone_BackSMS[playerid][2] || playertextid == phone_BackSMS[playerid][3] || playertextid == phone_BackSMS[playerid][4])
	{
	    format(sql, sizeof(sql), "SELECT * FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
		new Text[128],Num,Date;
		new count = 0;
		if(cache_get_row_count(count) && count > 0)
		{
		    if(phone_Text[playerid]==1)
		    {
		        if(playertextid == phone_BackSMS[playerid][0])
		       		{cache_get_value_name(0,"SMS_Received_Msg1",Text, 128); cache_get_value_name_int(0,"SMS_Received_Num1", Num);cache_get_value_name_int(0,"SMS_Received_Date1", Date);}
                else if(playertextid == phone_BackSMS[playerid][1])
		       		{cache_get_value_name(0,"SMS_Received_Msg2",Text, 128); cache_get_value_name_int(0,"SMS_Received_Num2", Num);cache_get_value_name_int(0,"SMS_Received_Date2", Date);}
                else if(playertextid == phone_BackSMS[playerid][2])
		       		{cache_get_value_name(0,"SMS_Received_Msg3",Text, 128); cache_get_value_name_int(0,"SMS_Received_Num3", Num);cache_get_value_name_int(0,"SMS_Received_Date3", Date);}
                else if(playertextid == phone_BackSMS[playerid][3])
		       		{cache_get_value_name(0,"SMS_Received_Msg4",Text, 128); cache_get_value_name_int(0,"SMS_Received_Num4", Num);cache_get_value_name_int(0,"SMS_Received_Date4", Date);}
                else if(playertextid == phone_BackSMS[playerid][4])
		       		{cache_get_value_name(0,"SMS_Received_Msg5",Text, 128); cache_get_value_name_int(0,"SMS_Received_Num5", Num);cache_get_value_name_int(0,"SMS_Received_Date5", Date);}
		    }
		    else if(phone_Text[playerid]==2)
		    {
		        if(playertextid == phone_BackSMS[playerid][0])
		       		{cache_get_value_name(0,"SMS_Sent_Msg1",Text, 128);cache_get_value_name_int(0,"SMS_Sent_Num1", Num);cache_get_value_name_int(0,"SMS_Sent_Date1", Date);}
                else if(playertextid == phone_BackSMS[playerid][1])
		       		{cache_get_value_name(0,"SMS_Sent_Msg2",Text, 128);cache_get_value_name_int(0,"SMS_Sent_Num1", Num);cache_get_value_name_int(0,"SMS_Sent_Date1", Date);}
                else if(playertextid == phone_BackSMS[playerid][2])
		       		{cache_get_value_name(0,"SMS_Sent_Msg3",Text, 128);cache_get_value_name_int(0,"SMS_Sent_Num1", Num);cache_get_value_name_int(0,"SMS_Sent_Date1", Date);}
                else if(playertextid == phone_BackSMS[playerid][3])
		       		{cache_get_value_name(0,"SMS_Sent_Msg4",Text, 128);cache_get_value_name_int(0,"SMS_Sent_Num1", Num);cache_get_value_name_int(0,"SMS_Sent_Date1", Date);}
                else if(playertextid == phone_BackSMS[playerid][4])
		       		{cache_get_value_name(0,"SMS_Sent_Msg5",Text, 128);cache_get_value_name_int(0,"SMS_Sent_Num1", Num);cache_get_value_name_int(0,"SMS_Sent_Date1", Date);}
		    }
		    format(string,sizeof(string),"{00FFFA}Message : {FFFFFF}%s\n{00FFFA}Expéditeur : {FFFFFF}%d\n{00FFFA}Date : {FFFFFF}%s",Text,Num,date(Date,1));
			ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"|SMS|",string,"Valider","");
	    }
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	new string[256];
	// PAYEMENT
	// En Cash
    if(clickedid == pay_TextButton1)
		{pay_validPay(playerid,1);}
	// Par C.B
	else if(clickedid == pay_TextButton2)
		{pay_validPay(playerid,2);}
	// Par cheque
	if(PlayerInfo[playerid][pLevel] >= 5)
	{
		if(clickedid == pay_TextButton3)
			{pay_validPay(playerid,3);}
	}

	// Annuler
	if(clickedid == pay_TextExit)
		{pay_Reset(playerid);}
		
	// TELEPHONE
	else if(clickedid == phone_Buton3)
		{phone_Show(playerid);}
	else if(clickedid == phone_Menu)
	{
	    TextDrawHideForPlayer(playerid,phone_Menu);
	    TextDrawShowForPlayer(playerid,phone_MenuClavier);
	    TextDrawShowForPlayer(playerid,phone_MenuSMS);
	    TextDrawShowForPlayer(playerid,phone_MenuMP3);
	    TextDrawShowForPlayer(playerid,phone_MenuRadio);
	    TextDrawShowForPlayer(playerid,phone_MenuMap);
	    TextDrawShowForPlayer(playerid,phone_MenuConso);
	    TextDrawShowForPlayer(playerid,phone_MenuRep);
	    TextDrawShowForPlayer(playerid,phone_MenuMessagerie);
	}
	else if(clickedid == phone_MenuClavier)
	{
	    TextDrawHideForPlayer(playerid,phone_MenuClavier);
	    TextDrawHideForPlayer(playerid,phone_MenuSMS);
	    TextDrawHideForPlayer(playerid,phone_MenuMP3);
	    TextDrawHideForPlayer(playerid,phone_MenuRadio);
	    TextDrawHideForPlayer(playerid,phone_MenuMap);
	    TextDrawHideForPlayer(playerid,phone_MenuConso);
	    TextDrawHideForPlayer(playerid,phone_MenuRep);
	    TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	    for(new i=0; i<13; i++)
	    	{TextDrawShowForPlayer(playerid,phone_Num[i]);}
		PlayerTextDrawShow(playerid,phone_Title[playerid]);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"Clavier");
		strdel(phone_TempNum[playerid],0,4);
		PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],"_");
		PlayerTextDrawShow(playerid,phone_WrittenNum[playerid]);
		phone_Type[playerid]=1;
	}
	else if(clickedid == phone_MenuSMS)
	{
	    TextDrawHideForPlayer(playerid,phone_MenuClavier);
	    TextDrawHideForPlayer(playerid,phone_MenuSMS);
	    TextDrawHideForPlayer(playerid,phone_MenuMP3);
	    TextDrawHideForPlayer(playerid,phone_MenuRadio);
	    TextDrawHideForPlayer(playerid,phone_MenuMap);
	    TextDrawHideForPlayer(playerid,phone_MenuConso);
	    TextDrawHideForPlayer(playerid,phone_MenuRep);
	    TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	    TextDrawShowForPlayer(playerid,phone_SMSReceived);
	    TextDrawShowForPlayer(playerid,phone_SMSSent);
	    PlayerTextDrawShow(playerid,phone_Title[playerid]);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"SMS");
	}
	else if(clickedid == phone_MenuRep)
	{
	    TextDrawHideForPlayer(playerid,phone_MenuClavier);
	    TextDrawHideForPlayer(playerid,phone_MenuSMS);
	    TextDrawHideForPlayer(playerid,phone_MenuMP3);
	    TextDrawHideForPlayer(playerid,phone_MenuRadio);
	    TextDrawHideForPlayer(playerid,phone_MenuMap);
	    TextDrawHideForPlayer(playerid,phone_MenuConso);
	    TextDrawHideForPlayer(playerid,phone_MenuRep);
	    TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	    TextDrawShowForPlayer(playerid,phone_CreateContactBack);
	    TextDrawShowForPlayer(playerid,phone_CreateContact);
	    PlayerTextDrawShow(playerid,phone_Title[playerid]);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"Repertoire");
		PlayerTextDrawShow(playerid,phone_Contact[playerid][0]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][1]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][2]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][3]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][4]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][5]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][6]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][7]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][8]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][9]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][10]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][11]);
		PlayerTextDrawShow(playerid,phone_Contact[playerid][12]);
		format(sql, sizeof(sql), "SELECT * FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
		new Text[12][10], Num[12];
		new count = 0;
		if(cache_get_row_count(count) && count > 0)
		{
		    cache_get_value_name(0,"Contact1",Text[0], 32); cache_get_value_name_int(0,"Contact_Num1", Num[0]);
		    cache_get_value_name(0,"Contact2",Text[1], 32); cache_get_value_name_int(0,"Contact_Num2", Num[1]);
		    cache_get_value_name(0,"Contact3",Text[2], 32); cache_get_value_name_int(0,"Contact_Num3", Num[2]);
		    cache_get_value_name(0,"Contact4",Text[3], 32); cache_get_value_name_int(0,"Contact_Num4", Num[3]);
		    cache_get_value_name(0,"Contact5",Text[4], 32); cache_get_value_name_int(0,"Contact_Num5", Num[4]);
		    cache_get_value_name(0,"Contact6",Text[5], 32); cache_get_value_name_int(0,"Contact_Num6", Num[5]);
		    cache_get_value_name(0,"Contact7",Text[6], 32); cache_get_value_name_int(0,"Contact_Num7", Num[6]);
		    cache_get_value_name(0,"Contact8",Text[7], 32); cache_get_value_name_int(0,"Contact_Num8", Num[7]);
		    cache_get_value_name(0,"Contact9",Text[8], 32); cache_get_value_name_int(0,"Contact_Num9", Num[8]);
		    cache_get_value_name(0,"Contact10",Text[9], 32); cache_get_value_name_int(0,"Contact_Num10", Num[9]);
		    cache_get_value_name(0,"Contact11",Text[10], 32); cache_get_value_name_int(0,"Contact_Num11", Num[10]);
		    cache_get_value_name(0,"Contact12",Text[11], 32); cache_get_value_name_int(0,"Contact_Num12", Num[11]);
		}
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[0],Num[0]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][1],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[1],Num[1]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][2],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[2],Num[2]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][3],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[3],Num[3]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][4],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[4],Num[4]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][5],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[5],Num[5]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][6],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[6],Num[6]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][7],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[7],Num[7]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][8],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[8],Num[8]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][9],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[9],Num[9]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][10],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[10],Num[10]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][11],string);
		format(string,sizeof(string),"- %s(~r~%d~w~)",Text[11],Num[11]);
		PlayerTextDrawSetString(playerid,phone_Contact[playerid][12],string);
	}
	else if(clickedid == phone_CreateContact)
	{
	    ShowPlayerDialog(playerid,61,DIALOG_STYLE_INPUT,"|Téléphone| Creer un contact - Nom","{FFFFFF}Entrez le nom suivit du numéro sous la cette forme : {FF0000}nom/num{FFFFFF} :\n (8 carractères max pour le nom.)","Valider","Quitter");
	}
	else if(clickedid == phone_SMSReceived)
	{
	    phone_Text[playerid]=1;
	    TextDrawHideForPlayer(playerid,phone_SMSReceived);
	    TextDrawHideForPlayer(playerid,phone_SMSSent);
	    TextDrawShowForPlayer(playerid,phone_BackGroundSMS);
	    PlayerTextDrawShow(playerid,phone_Title[playerid]);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"SMS recus");
	    new Text_SMS[5][128], Num[5], Date[5];
	    format(sql, sizeof(sql), "SELECT * FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
	  	new count = 0;
		if(cache_get_row_count(count) && count > 0)
		{
		    cache_get_value_name(0,"SMS_Received_Msg1",Text_SMS[0], 128);cache_get_value_name(0,"SMS_Received_Msg2",Text_SMS[1], 128);cache_get_value_name(0,"SMS_Received_Msg3",Text_SMS[2], 128);cache_get_value_name(0,"SMS_Received_Msg4",Text_SMS[3], 128);cache_get_value_name(0,"SMS_Received_Msg5",Text_SMS[4], 128);
		    cache_get_value_name_int(0,"SMS_Received_Num1", Num[0]); cache_get_value_name_int(0,"SMS_Received_Num2", Num[1]); cache_get_value_name_int(0,"SMS_Received_Num3", Num[2]); cache_get_value_name_int(0,"SMS_Received_Num4", Num[3]); cache_get_value_name_int(0,"SMS_Received_Num5", Num[4]);
            cache_get_value_name_int(0,"SMS_Received_Date1", Date[0]); cache_get_value_name_int(0,"SMS_Received_Date2", Date[1]); cache_get_value_name_int(0,"SMS_Received_Date3", Date[2]); cache_get_value_name_int(0,"SMS_Received_Date4", Date[3]); cache_get_value_name_int(0,"SMS_Received_Date5", Date[4]);
            strdel(Text_SMS[0], 20, 128);strdel(Text_SMS[1], 20, 128);strdel(Text_SMS[2], 20, 128);strdel(Text_SMS[3], 20, 128);strdel(Text_SMS[4], 20, 128);
            ConvertirTexte(Text_SMS[0]); ConvertirTexte(Text_SMS[1]); ConvertirTexte(Text_SMS[2]); ConvertirTexte(Text_SMS[3]); ConvertirTexte(Text_SMS[4]);
		}
		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[0],Text_SMS[0]);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][0]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][0],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[1],Text_SMS[1]);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][1]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][1],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[2],Text_SMS[2]);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][2]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][2],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[3],Text_SMS[3]);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][3]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][3],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[4],Text_SMS[4]);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][4]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][4],string);
	}
	else if(clickedid == phone_SMSSent)
	{
	    phone_Text[playerid]=2;
	    TextDrawHideForPlayer(playerid,phone_SMSReceived);
	    TextDrawHideForPlayer(playerid,phone_SMSSent);
	    TextDrawShowForPlayer(playerid,phone_BackGroundSMS);
	    PlayerTextDrawShow(playerid,phone_Title[playerid]);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"SMS envoyes");
	    new Text1[128],Text2[128],Text3[128],Text4[128],Text5[128], Num[5], Date[5];
	    format(sql, sizeof(sql), "SELECT * FROM lvrp_users_phones WHERE SQLid = %d LIMIT 1",PlayerInfo[playerid][pSQLID]);
	  	mysql_query(MYSQL,sql);
	  	new count = 0;
		if(cache_get_row_count(count) && count > 0)
		{
		    cache_get_value_name(0,"SMS_Sent_Msg1",Text1, 128);cache_get_value_name(0,"SMS_Sent_Msg2",Text2, 128);cache_get_value_name(0,"SMS_Sent_Msg3",Text3, 128);cache_get_value_name(0,"SMS_Sent_Msg4",Text4, 128);cache_get_value_name(0,"SMS_Sent_Msg5",Text5, 128);
		    cache_get_value_name_int(0,"SMS_Sent_Num1", Num[0]); cache_get_value_name_int(0,"SMS_Sent_Num2", Num[1]); cache_get_value_name_int(0,"SMS_Sent_Num3", Num[2]); cache_get_value_name_int(0,"SMS_Sent_Num4", Num[3]); cache_get_value_name_int(0,"SMS_Sent_Num5", Num[4]);
            cache_get_value_name_int(0,"SMS_Sent_Date1", Date[0]); cache_get_value_name_int(0,"SMS_Sent_Date2", Date[1]); cache_get_value_name_int(0,"SMS_Sent_Date3", Date[2]); cache_get_value_name_int(0,"SMS_Sent_Date4", Date[3]); cache_get_value_name_int(0,"SMS_Sent_Date5", Date[4]);
            strdel(Text1, 20, 128);strdel(Text2, 20, 128);strdel(Text3, 20, 128);strdel(Text4, 20, 128);strdel(Text5, 20, 128);
            ConvertirTexte(Text1); ConvertirTexte(Text2); ConvertirTexte(Text3); ConvertirTexte(Text4); ConvertirTexte(Text5);
		}
		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[0],Text1);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][0]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][0],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[1],Text2);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][1]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][1],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[2],Text3);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][2]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][2],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[3],Text4);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][3]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][3],string);

		format(string,sizeof(string),"Num: ~r~%d~w~ ~n~~p~%s",Num[4],Text5);
		PlayerTextDrawShow(playerid,phone_BackSMS[playerid][4]);
		PlayerTextDrawSetString(playerid,phone_BackSMS[playerid][4],string);
	}
	else if(clickedid == phone_MenuRadio)
	{
	    TextDrawHideForPlayer(playerid,phone_MenuClavier);
	    TextDrawHideForPlayer(playerid,phone_MenuSMS);
	    TextDrawHideForPlayer(playerid,phone_MenuMP3);
	    TextDrawHideForPlayer(playerid,phone_MenuRadio);
	    TextDrawHideForPlayer(playerid,phone_MenuMap);
	    TextDrawHideForPlayer(playerid,phone_MenuConso);
	    TextDrawHideForPlayer(playerid,phone_MenuRep);
	    TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	    for(new i=0; i<7; i++)
	    	{TextDrawShowForPlayer(playerid,phone_Radio[i]);}
		PlayerTextDrawShow(playerid,phone_Title[playerid]);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"Radio");
	}
	else if(clickedid == phone_MenuMap)
	{
	    TextDrawHideForPlayer(playerid,phone_MenuClavier);
	    TextDrawHideForPlayer(playerid,phone_MenuSMS);
	    TextDrawHideForPlayer(playerid,phone_MenuMP3);
	    TextDrawHideForPlayer(playerid,phone_MenuRadio);
	    TextDrawHideForPlayer(playerid,phone_MenuMap);
	    TextDrawHideForPlayer(playerid,phone_MenuConso);
	    TextDrawHideForPlayer(playerid,phone_MenuRep);
	    TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	    PlayerTextDrawShow(playerid,phone_Title[playerid]);
	    TextDrawShowForPlayer(playerid,phone_Map);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"Carte");
	}
	else if(clickedid == phone_MenuMP3)
	{
	    TextDrawHideForPlayer(playerid,phone_MenuClavier);
	    TextDrawHideForPlayer(playerid,phone_MenuSMS);
	    TextDrawHideForPlayer(playerid,phone_MenuMP3);
	    TextDrawHideForPlayer(playerid,phone_MenuRadio);
	    TextDrawHideForPlayer(playerid,phone_MenuMap);
	    TextDrawHideForPlayer(playerid,phone_MenuConso);
	    TextDrawHideForPlayer(playerid,phone_MenuRep);
	    TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	    PlayerTextDrawShow(playerid,phone_Title[playerid]);
	    TextDrawShowForPlayer(playerid,phone_MP3[0]);
	    TextDrawShowForPlayer(playerid,phone_MP3[1]);
		PlayerTextDrawSetString(playerid,phone_Title[playerid],"MP3");
	}
	else if(clickedid == phone_MenuConso)
	{
	    TextDrawHideForPlayer(playerid,phone_MenuClavier);
	    TextDrawHideForPlayer(playerid,phone_MenuSMS);
	    TextDrawHideForPlayer(playerid,phone_MenuMP3);
	    TextDrawHideForPlayer(playerid,phone_MenuRadio);
	    TextDrawHideForPlayer(playerid,phone_MenuMap);
	    TextDrawHideForPlayer(playerid,phone_MenuConso);
	    TextDrawHideForPlayer(playerid,phone_MenuRep);
	    TextDrawHideForPlayer(playerid,phone_MenuMessagerie);
	    PlayerTextDrawShow(playerid,phone_Title[playerid]);
	    PlayerTextDrawShow(playerid,phone_ConsoTime[playerid]);
	    PlayerTextDrawShow(playerid,phone_ConsoSMS[playerid]);
	    PlayerTextDrawSetString(playerid,phone_Title[playerid],"Info Conso");
	    format(string,sizeof(string),"Appel restant : %d mins",PlayerInfo[playerid][pPhoneTime]/60);
	    PlayerTextDrawSetString(playerid,phone_ConsoTime[playerid],string);
	    new prices;
		if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==1){prices=5;}
		else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==2){prices=2;}
		else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==3){prices=1;}
		else if(PlayerInfo[playerid][pOperator] == 1 && PlayerInfo[playerid][pFormul]==4){prices=0;}
		if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==1){prices=4;}
		else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==2){prices=3;}
		else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==3){prices=1;}
		else if(PlayerInfo[playerid][pOperator] == 2 && PlayerInfo[playerid][pFormul]==4){prices=0;}
		if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==1){prices=3;}
		else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==2){prices=3;}
		else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==3){prices=1;}
		else if(PlayerInfo[playerid][pOperator] == 3 && PlayerInfo[playerid][pFormul]==4){prices=0;}
		if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==1){prices=0;}
		else if(PlayerInfo[playerid][pOperator] == 4 && PlayerInfo[playerid][pFormul]==2){prices=0;}
        format(string,sizeof(string),"Prix SMS : %d",prices);
	    PlayerTextDrawSetString(playerid,phone_ConsoSMS[playerid],string);
	}
	else if(clickedid == phone_Num[0])
	{
		strcat(phone_TempNum[playerid],"1");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[1])
	{
		strcat(phone_TempNum[playerid],"2");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[2])
	{
		strcat(phone_TempNum[playerid],"3");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[3])
	{
		strcat(phone_TempNum[playerid],"4");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[4])
	{
		strcat(phone_TempNum[playerid],"5");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[5])
	{
		strcat(phone_TempNum[playerid],"6");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[6])
	{
		strcat(phone_TempNum[playerid],"7");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[7])
	{
		strcat(phone_TempNum[playerid],"8");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[8])
	{
		strcat(phone_TempNum[playerid],"9");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[10])
	{
		strcat(phone_TempNum[playerid],"0");
	    PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[12])
	{
	    new num = strlen(phone_TempNum[playerid]);
		if(num == 1) strdel(phone_TempNum[playerid],0,1),PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],"_");
		else if(num == 2) strdel(phone_TempNum[playerid],1,2),PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
		else if(num == 3) strdel(phone_TempNum[playerid],2,3),PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
		else if(num == 4) strdel(phone_TempNum[playerid],3,4),PlayerTextDrawSetString(playerid,phone_WrittenNum[playerid],phone_TempNum[playerid]);
	}
	else if(clickedid == phone_Num[9])
	{
		if(PlayerInfo[playerid][pNumber] == 0)
			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de téléphone.");return 1;}
		if(PlayerInfo[playerid][pOperator] == 0)
			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas d'opérateur téléphonique.");return 1;}
        if(strval(phone_TempNum[playerid]) == 0)
			{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Entrez un numéro valide.");return 1;}
			
		format(string,sizeof(string),"{FFFFFF}Numéro du correspondant : {0000FF}%s{FFFFFF}\nEntrez votre message :",phone_TempNum[playerid]);
		ShowPlayerDialog(playerid,52,DIALOG_STYLE_INPUT,"{8B8B00}» Tel «{FFFFFF} SMS",string,"Envoyer","Annuler");
	}
	else if(clickedid == phone_Call)
	{
	    if(phone_Type[playerid]==1)
	    {
	        phone_CallTo(playerid,strval(phone_TempNum[playerid]));
	        strdel(phone_TempNum[playerid],0,4);
		}
		else if(phone_Type[playerid]==2)
	    {
	        if(Mobile[playerid] != -1)
				{msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Vous êtes déjà en train de téléphoner.");return 1;}
				
            for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
					    TextDrawHideForPlayer(playerid,phone_CallFrom);
					    PlayerTextDrawHide(playerid,phone_CallFromNum[playerid]);
					    PlayerTextDrawSetString(playerid,phone_Title[playerid],"Appel");
					    PlayerTextDrawShow(playerid,phone_CallTime[playerid]);
						Mobile[playerid] = i; //caller connecting
						msg_Client(i,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} La ligne décroche.");
						format(string, sizeof(string), "* %s décroche son téléphone.", PlayerInfo[playerid][pName]);
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						RingTone[playerid] = 0;
						phone_Type[i]=3;
						phone_Type[playerid]=3;
						phone_Time[i][0]=0; phone_Time[i][1]=0;
						phone_Time[playerid][0]=0; phone_Time[playerid][1]=0;
					}
				}
			}
	    }
	}
	else if(clickedid == phone_Hang)
	{
	    if(phone_Type[playerid]==2)
	    {
	        for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
			{
			    if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
					    msg_Client(i,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} L'appel a été rejeté.");
						CellTime[i] = 0;
						Mobile[i] = -1;
						SetPlayerSpecialAction(i, SPECIAL_ACTION_STOPUSECELLPHONE);
						phone_Show(i);
						phone_Type[i]=0;
					}
				}
			}
			msg_Client(playerid,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Vous avez rejetté l'appel.");
	        Mobile[playerid] = -1;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			phone_Show(playerid);
	        phone_Type[playerid]=0;
	    }
	    else if(phone_Type[playerid]==3)
	    {
	        if(IsPlayerConnected(Mobile[playerid]) && Mobile[playerid] != INVALID_PLAYER_ID)
			{
			    if(Mobile[playerid] != -1)
				{
				    if(Mobile[Mobile[playerid]] == playerid)
					{
						msg_Client(Mobile[playerid],  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} La ligne raccroche.");
						CellTime[Mobile[playerid]] = 0;
						Mobile[Mobile[playerid]] = -1;
						SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
						phone_Show(Mobile[playerid]);
						phone_Type[Mobile[playerid]]=0;
					}
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
					msg_Client(playerid,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Vous avez raccroché.");
					Mobile[playerid] = -1;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					phone_Show(playerid);
					phone_Type[playerid]=0;
				}
			}
	    }
	    else
	    {
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	        Mobile[playerid] = -1;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			phone_Show(playerid);
			phone_Type[playerid]=0;
	    }
	}
	else if(clickedid == phone_Radio[0])
		{PlayAudioStreamForPlayer(playerid, "http://streaming.radio.funradio.fr/fun-1-44-96?.uma");}
    else if(clickedid == phone_Radio[1])
		{PlayAudioStreamForPlayer(playerid, "http://player.skyrock.fr/V4/skyrock/skyrock.m3u");}
    else if(clickedid == phone_Radio[2])
		{PlayAudioStreamForPlayer(playerid, "http://mp3.live.tv-radio.com/nrj/all/nrj_113225.mp3");}
    else if(clickedid == phone_Radio[3])
		{PlayAudioStreamForPlayer(playerid, "http://broadcast.infomaniak.ch/laradioplus-high.mp3");}
    else if(clickedid == phone_Radio[4])
		{PlayAudioStreamForPlayer(playerid, "http://broadcast.infomaniak.ch/vibrationfm-high.mp3");}
    else if(clickedid == phone_Radio[5])
		{PlayAudioStreamForPlayer(playerid, "http://listen.radionomy.com/Fresh-Dance.m3u");}
    else if(clickedid == phone_Radio[6] || clickedid == phone_MP3[1])
		{StopAudioStreamForPlayer(playerid);}
    else if(clickedid == phone_MP3[0])
		{ShowPlayerDialog(playerid,53,DIALOG_STYLE_INPUT,"{8B8B00}» Tel «{FFFFFF} MP3","{FFFFFF}Entrez un lien stream :","Lire","Annuler");}
	return 1;
}
stock pay_showDialog(playerid,prices)
{
    if(prices<=0)
		{return pay_Reset(playerid);}
		
    new prize[32],bank[32],cashs[32];
	format(prize,sizeof(prize),"Prix : $%d",prices);
	format(bank,sizeof(bank),"Banque : $%d",PlayerInfo[playerid][pAccount]);
	format(cashs,sizeof(cashs),"Cash : $%d",PlayerInfo[playerid][pCash]);
    PlayerTextDrawSetString(playerid,pay_TextArticle[playerid],"_");
    PlayerTextDrawSetString(playerid,pay_TextPrice[playerid],prize);
    PlayerTextDrawSetString(playerid,pay_TextBank[playerid],bank);
    PlayerTextDrawSetString(playerid,pay_TextCash[playerid],cashs);
    
    TextDrawShowForPlayer(playerid, pay_TextDesigne1);
	TextDrawShowForPlayer(playerid, pay_TextDesigne2);
	TextDrawShowForPlayer(playerid, pay_TextDesigne3);
	TextDrawShowForPlayer(playerid, pay_TextTitle);
	TextDrawShowForPlayer(playerid, pay_TextDesigne4);
	TextDrawShowForPlayer(playerid, pay_TextDesigne5);
	PlayerTextDrawShow(playerid, pay_TextArticle[playerid]);
	PlayerTextDrawShow(playerid, pay_TextPrice[playerid]);
	PlayerTextDrawShow(playerid, pay_TextBank[playerid]);
	PlayerTextDrawShow(playerid, pay_TextCash[playerid]);
	TextDrawShowForPlayer(playerid, pay_TextInfo);
	TextDrawShowForPlayer(playerid, pay_TextButton1);
	TextDrawShowForPlayer(playerid, pay_TextButton2);
	TextDrawShowForPlayer(playerid, pay_TextButton3);
	TextDrawShowForPlayer(playerid, pay_TextExit);
	TextDrawShowForPlayer(playerid, pay_TextDesigne6);
	TextDrawShowForPlayer(playerid, pay_TextDesigne7);
	TextDrawShowForPlayer(playerid, pay_TextDesigne8);
	SelectTextDraw(playerid,0x00FF00AA);
	return 1;
}
stock pay_validPay(playerid,moyen)
{
    if(pay_tempPrice[playerid]<=0)
	{
		pay_Reset(playerid);
		return msg_Client(playerid,COLOR_STATS,"|Debug| Mauvais prix.");
	}
	
	if(pay_tempType[playerid]<=0)
		{return pay_Reset(playerid);}
		
	if(pay_tempType[playerid]<5 && pay_tempArticle[playerid]<0)
		{return pay_Reset(playerid);}
	
	if(moyen==1 && PlayerInfo[playerid][pCash]<pay_tempPrice[playerid])
	{
	    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas assez d'argent sur vous !");
	    return pay_showDialog(playerid,pay_tempPrice[playerid]);
	}
	if(moyen==2 && PlayerInfo[playerid][pAccount]<pay_tempPrice[playerid])
	{
	    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas assez sur votre compte bancaire !");
	    return pay_showDialog(playerid,pay_tempPrice[playerid]);
	}
	if(moyen==3 && ( PlayerInfo[playerid][pCheck] == 0 || PlayerInfo[playerid][pAccount]<pay_tempPrice[playerid]))
	{
	    msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'avez pas de chequier sur vous ou pas assez en compte banquaire !");
	    return pay_showDialog(playerid,pay_tempPrice[playerid]);
	}
    new artPrice = pay_tempPrice[playerid];
    if(moyen==3 && artPrice > 35000)
	    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Les chèques acceptent que les payement inférieur à $35.000."),pay_showDialog(playerid,pay_tempPrice[playerid]);}
    new typePaiement = pay_tempType[playerid];
    new string[512],sendername[MAX_PLAYER_NAME];
    new article = pay_tempArticle[playerid];
    new carid = GetPlayerVehicleID(playerid);
    GetPlayerName(playerid,sendername,sizeof(sendername));
    if(typePaiement==1)
	{
	    if(gPlayerInBizz[playerid] < 0)
	    {
	        msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes plus dans un biz.");
	        pay_Reset(playerid);
	        return 1;
		}
		new bizid = gPlayerInBizz[playerid];
		pay_Reset(playerid);
		if(bizz[bizid][typeZ] == 1) // 24/7
		{
		    if(article==1)
		    {
			    if(PlayerInfo[playerid][pNumber] != 0) { msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un téléphone."); return 1;}
	            PlayerInfo[playerid][pNumber] = tel_generateNewNumber();
	            format(string, sizeof(string), "{2B6AFF}» 24/7 «{FFFFFF} Téléphone acheté, votre numéro est le %d", PlayerInfo[playerid][pNumber]);
				msg_Client(playerid,COLOR_BIZ,string);
			}
			else if(article==2)
		    {
				if(inventory_GetItemQuantity(playerid,1210) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà une malette."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,1210,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Malette acheté, aide: /porter");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==3)
		    {
                if(inventory_GetItemQuantity(playerid,2894) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un annuaire."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,2894,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Annuaire acheté, aide: /annu(aire)");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==4)
		    {
                if(inventory_GetItemQuantity(playerid,1851) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà des Dé."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,1851,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Dé acheté, aide: /de");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==5)
		    {
		        Condom[playerid] ++;
                msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Préservatif acheté.");
		    }
		    else if(article==6)
		    {
		        if(PlayerInfo[playerid][pLevel] < 5){msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous devez etre minimun level 5 pour acheter une cagoule."); return 1;}
                if(PlayerInfo[playerid][pMask] != 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà une cagoule."); return 1;}
                PlayerInfo[playerid][pMask] = 1;
                msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Cagoule achetée, aide: /cagoule");
		    }
		    else if(article==7)
		    {
                if(inventory_GetItemQuantity(playerid,19087) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà des Cordes."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,19087,3)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Cordes achetées.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==8)
		    {
		        SafeGivePlayerWeapon(playerid, 41, 200);
                msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Bombe lacrimo achetée.");
		    }
		    else if(article==9)
		    {
                if(inventory_GetItemQuantity(playerid,2351) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un Briquet."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,2351,30)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Briquet acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==10)
		    {
                if(inventory_GetItemQuantity(playerid,2226) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà une BoomBox."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,2226,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} BoomBox achetée, aide: /boombox");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==11)
		    {
                if(inventory_GetItemQuantity(playerid,2966) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un Talkie Walkie."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,2966,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Talkie Walkie acheté, aide: /ta");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
  		    }
		    else if(article==12)
		    {
		        SafeGivePlayerWeapon(playerid, 14, 1);
                msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Bouquet de fleures achetée.");
		    }
		    else if(article==13)
		    {
		        SafeGivePlayerWeapon(playerid, 5, 1);
                msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Batte achetée.");
		    }
		    else if(article==14)
		    {
				if(inventory_GetItemQuantity(playerid,18634) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un Pied de biche."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,18634,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Pied de biche acheté, aide: /piedbiche.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==15)
		    {
		        SafeGivePlayerWeapon(playerid, 43, 50);
                msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Appareil Photo acheté.");
		    }
		    else if(article==16)
		    {
		        if(inventory_GetItemQuantity(playerid,1946) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un Ballon de basket."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,1946,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Ballon de basket acheté, aide: /basket.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==17)
		    {
		        SafeGivePlayerWeapon(playerid, 6, 1);
                msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» 24/7 «{FFFFFF} Pelle achetée.");
		    }
		    else{msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» 24/7 «{FFFFFF} Article inconnu."); return 1;}
		}
		else if(bizz[bizid][typeZ] == 2 || bizz[bizid][typeZ] == 15 || bizz[bizid][typeZ] == 16 || bizz[bizid][typeZ] == 17 || bizz[bizid][typeZ] == 18 || bizz[bizid][typeZ] == 19) // Magasin de vêtements
		{
			if(article==1)
		    {
		        PlayerInfo[playerid][pChar] = pay_tempOther[playerid];
				SetPlayerSkin(playerid,pay_tempOther[playerid]);
				msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Magasin de vétements «{FFFFFF} Tenue achetée");
		    }
		    else if(article >=2 && article <= 9)
		    {
		        format(string,sizeof(string),"{2B6AFF}» Magasin de vétements «{FFFFFF} %s acheté(e), /porter",GetItemName(pay_tempOther[playerid]));
		        msg_Client(playerid,COLOR_BIZ,string);
		        inventory_UpdateItem(playerid,pay_tempOther[playerid],1);
		    }
		    else if(article==10)
		    {
		        RemovePlayerAttachedObject(playerid,BagSlotObject[playerid]);
		        PlayerInfo[playerid][pBag] = 1;
		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Magasin de vétements «{FFFFFF} Sac Coyote acheté, aide: /sac");
		    	bag_Load(playerid);
		    }
		    else if(article==11)
		    {
		        RemovePlayerAttachedObject(playerid,BagSlotObject[playerid]);
		        PlayerInfo[playerid][pBag] = 2;
		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Magasin de vétements «{FFFFFF} Sac Alice Pack acheté, aide: /sac");
		    	bag_Load(playerid);
		    }
		    else if(article==12)
		    {
		        if(PlayerInfo[playerid][pDonateRank] == 4)
		        {
		            RemovePlayerAttachedObject(playerid,BagSlotObject[playerid]);
			        PlayerInfo[playerid][pBag] = 3;
			    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Magasin de vétements «{FFFFFF} Sac Czech Backpack acheté, aide: /sac");
			    	bag_Load(playerid);
		    	}
		    	else
		    	    {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez être VIP Diamant."); pay_Reset(playerid); return 1;}
		    }
		}
		else if(bizz[bizid][typeZ] == 3) // Tabac
		{
		    if(article==1)
		    {
                if(inventory_GetItemQuantity(playerid,2751) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà du tabac."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,2751,30)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tabac «{FFFFFF} Tabac acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==2)
		    {
                if(inventory_GetItemQuantity(playerid,328) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà des feuilles."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,328,30)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tabac «{FFFFFF} Feuilles achetés.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==3)
		    {
                if(inventory_GetItemQuantity(playerid,19897) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà des cigarettes."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,19897,20)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tabac «{FFFFFF} Cigarettes achetés.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==4)
		    {
                if(inventory_GetItemQuantity(playerid,2351) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un briquet."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,2351,30)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Tabac «{FFFFFF} Briquet acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==5)
		    {
		        ShowPlayerDialog(playerid,97,DIALOG_STYLE_INPUT,"{2B6AFF}» Tabac «{FFFFFF} Achats ticket de lotto","Entrez le numero du ticket de lotto que vous désirez : (Entre 1 et 50)","Valider","");
		    	player_Dialog[playerid] = 1;
		    }
		}
		else if(bizz[bizid][typeZ] == 4) // Epicerie
		{
		    if(article==1)
		    {
		        if(inventory_UpdateItem(playerid,1668,6)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Eau (x6) achetée.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==2)
		    {
		        if(inventory_UpdateItem(playerid,2601,6)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Soda (x6) acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==3)
		    {
		        if(inventory_UpdateItem(playerid,19563,3)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Jus de fruit (x3) acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==4)
		    {
		        if(inventory_UpdateItem(playerid,1486,6)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Bière (x6) achetée.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==5)
		    {
		        if(inventory_UpdateItem(playerid,19569,6)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Lait (x6) acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==6)
		    {
		        if(inventory_UpdateItem(playerid,19811 ,2)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Burger (x2) acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==7)
		    {
		        if(inventory_UpdateItem(playerid,19571,3)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Pizza (x3) achetée.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==8)
		    {
		        if(inventory_UpdateItem(playerid,2769,2)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Sandwich (x2) acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==9)
		    {
		        if(inventory_UpdateItem(playerid,2663,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Chips (x1) acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==10)
		    {
		        if(inventory_UpdateItem(playerid,2821,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Epicerie «{FFFFFF} Céréales (x1) acheté.");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		}
		else if(bizz[bizid][typeZ] == 5) // Donuts
		{
		    if(article==1)
		    {
		        PlayerInfo[playerid][pFaim]+=34;
		        format(string, sizeof(string), "* %s commande un donut et le mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==2)
		    {
		        PlayerInfo[playerid][pFaim]+=20;
		        format(string, sizeof(string), "* %s commande une cream glacé et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==3)
		    {
		        PlayerInfo[playerid][pFaim]+=15;
		        format(string, sizeof(string), "* %s commande une viennoiserie et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==4)
		    {
		        PlayerInfo[playerid][pSoif]+=40;
		        format(string, sizeof(string), "* %s commande un Soda et le boit en une gorgée.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,2);
		    }
		    else if(article==5)
		    {
		        PlayerInfo[playerid][pSoif]+=30;
		        format(string, sizeof(string), "* %s commande un cocktail et le boi en une gorgée.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,2);
		    }
		    LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(bizz[bizid][typeZ] == 6) // Pizza Stack
		{
		    if(article==1)
		    {
			    PlayerInfo[playerid][pFaim]+=40;
			    format(string, sizeof(string), "* %s commande une mini pizza et la mange.", PlayerInfo[playerid][pName]);
			  	UpdateStatsTextsPlayers(playerid,1);
		  	}
		  	else if(article==2)
		    {
		        PlayerInfo[playerid][pFaim]+=80;
		        format(string, sizeof(string), "* %s commande une pizza et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==3)
		    {
		        PlayerInfo[playerid][pFaim]+=80;
		        format(string, sizeof(string), "* %s commande une pizza 4 fromage et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==4)
		    {
		        PlayerInfo[playerid][pFaim]+=80;
		        format(string, sizeof(string), "* %s commande une pizza 4 saison et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==5)
		    {
		        PlayerInfo[playerid][pFaim]+=80;
		        format(string, sizeof(string), "* %s commande une pizza nature et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==6)
		    {
		        PlayerInfo[playerid][pFaim]+=80;
		        format(string, sizeof(string), "* %s commande la pizza du jour et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==7)
		    {
		        PlayerInfo[playerid][pSoif]+=45;
		        format(string, sizeof(string), "* %s commande un Soda et le boit.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,2);
		    }
		    LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(bizz[bizid][typeZ] == 7) // Burger Shot
		{
		    if(article==1)
		    {
			    PlayerInfo[playerid][pFaim]+=30;
			    format(string, sizeof(string), "* %s commande un hamburger et le mange.", PlayerInfo[playerid][pName]);
			  	UpdateStatsTextsPlayers(playerid,1);
		  	}
		  	else if(article==2)
		    {
		        PlayerInfo[playerid][pFaim]+=60;
		        format(string, sizeof(string), "* %s commande un double hamburger et le mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==3)
		    {
		        PlayerInfo[playerid][pFaim]+=30;
		        format(string, sizeof(string), "* %s commande un cheeseburger et le mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==4)
		    {
		        PlayerInfo[playerid][pFaim]+=10;
		        format(string, sizeof(string), "* %s commande une petite frites et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==5)
		    {
		        PlayerInfo[playerid][pFaim]+=15;
		        format(string, sizeof(string), "* %s commande une moyen frites et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==6)
		    {
		        PlayerInfo[playerid][pFaim]+=20;
		        format(string, sizeof(string), "* %s commande une gande frites et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==7)
		    {
		        PlayerInfo[playerid][pSoif]+=45;
		        format(string, sizeof(string), "* %s commande un Soda et le boit.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,2);
		    }
		    LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(bizz[bizid][typeZ] == 8) // Clukin'Bell
		{
		    if(article==1)
		    {
		        PlayerInfo[playerid][pFaim]+=20;
		        format(string, sizeof(string), "* %s commande une petite portion de nuggets et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==2)
		    {
		        PlayerInfo[playerid][pFaim]+=30;
		        format(string, sizeof(string), "* %s commande une moyen portion de nuggets et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==3)
		    {
		        PlayerInfo[playerid][pFaim]+=40;
		        format(string, sizeof(string), "* %s commande une grande portion de nuggets et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==4)
		    {
		        PlayerInfo[playerid][pFaim]+=10;
		        format(string, sizeof(string), "* %s commande une petite portion de frites et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==5)
		    {
		        PlayerInfo[playerid][pFaim]+=15;
		        format(string, sizeof(string), "* %s commande une moyen portion de frites et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==6)
		    {
		        PlayerInfo[playerid][pFaim]+=20;
		        format(string, sizeof(string), "* %s commande une grande portion de frites et la mange.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==7)
		    {
		        PlayerInfo[playerid][pSoif]+=45;
		        format(string, sizeof(string), "* %s commande un Soda et le boit.", PlayerInfo[playerid][pName]);
		  		UpdateStatsTextsPlayers(playerid,2);
		    }
		    LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if(bizz[bizid][typeZ] == 9) // Disquaire
		{
		    if(article==1)
		    {
		        msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Disquaire «{FFFFFF} MP3 acheté, aide: /mp3.");
		    }
		    else if(article==2)
		    {
		        msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Disquaire «{FFFFFF} Album de David Guetta acheté.");
		    }
		    else if(article==3)
		    {
		        msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Disquaire «{FFFFFF} Album de Sexion d'assault acheté.");
		    }
		    else if(article==4)
		    {
		        inventory_UpdateItem(playerid,2226,1);
		        msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Disquaire «{FFFFFF} BommeBox achetée, aide: /boombox.");
		    }
		}
		else if(bizz[bizid][typeZ] == 10) // Disquaire
		{
		    if(PlayerInfo[playerid][pGunLic] == 1)
		    {
			    if(article==1)
			    {
			        SafeGivePlayerWeapon(playerid, 22, 136);
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Ammunation «{FFFFFF} Colt 45 acheté.");
			    }
			    else if(article==2)
			    {
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Ammunation «{FFFFFF} Silencieux acheté.");
			    	SafeGivePlayerWeapon(playerid, 23, 136);
			    }
			    else if(article==3)
			    {
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Ammunation «{FFFFFF} Rifle acheté.");
			    	SafeGivePlayerWeapon(playerid, 33, 45);
			    }
			    else if(article==4)
			    {
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Ammunation «{FFFFFF} Point Américain acheté.");
			    	SafeGivePlayerWeapon(playerid, 1, 1);
			    }
			    else if(article==5)
			    {
			        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Ammunation «{FFFFFF} Gilet par balles acheté.");
			    	SafeSetPlayerArmour(playerid, 100);
			    }
			    else if(article==6)
			    {
			    	if(inventory_GetItemQuantity(playerid,18643) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà ce laser."); pay_Reset(playerid); return 1;}
		        	if(inventory_UpdateItem(playerid,18643,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Ammunation «{FFFFFF} Laser rouge acheté");}
					else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
			    }
			    else if(article>=7)
			    {
			        if(inventory_GetItemQuantity(playerid,19073+article) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà ce laser."); pay_Reset(playerid); return 1;}
		        	if(inventory_UpdateItem(playerid,19073+article,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Ammunation «{FFFFFF} Laser acheté");}
					else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
			    }
		    }
		    else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne disposez pas du permis de port d'arme.");pay_Reset(playerid);return 1;}
		}
		else if(bizz[bizid][typeZ] == 11) // Sexeshop
		{
		    if(article==1)
		    	{SafeGivePlayerWeapon(playerid, 10, 1);}
		    else if(article==2)
		    	{SafeGivePlayerWeapon(playerid, 11, 1);}
		    else if(article==3)
		    	{SafeGivePlayerWeapon(playerid, 12, 1);}
		    else if(article==3)
		    	{SafeGivePlayerWeapon(playerid, 12, 1);}
		    msg_Client(playerid, COLOR_BIZ, "{2B6AFF}» Sexe Shop «{FFFFFF} God  Acheté.");
		}
		else if(bizz[bizid][typeZ] == 12 || bizz[bizid][typeZ] == 13) //Bar & Discotheque
		{
		    if(article==1)
		    {
		        PlayerInfo[playerid][pSoif]+=10;
		        format(string, sizeof(string), "* %s commande une bouteille d'eau et la boit.", PlayerInfo[playerid][pName]);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    else if(article==2)
		    {
		        PlayerInfo[playerid][pSoif]+= 18;
		        format(string, sizeof(string), "* %s commande un café et le boi.", PlayerInfo[playerid][pName]);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    else if(article==3)
		    {
		        PlayerInfo[playerid][pSoif]+=18;
		        format(string, sizeof(string), "* %s commande un diabolo et le boi.", PlayerInfo[playerid][pName]);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    else if(article==4)
		    {
		        PlayerInfo[playerid][pSoif]+=20;
				PlayerDrunk[playerid] += 250;
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Saoul", 3500, 1); }
                format(string, sizeof(string), "* %s commande une biere et la boit.", PlayerInfo[playerid][pName]);
		  		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    else if(article==5)
		    {
		        PlayerInfo[playerid][pSoif]+=22;
				PlayerDrunk[playerid] += 250;
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Saoul", 3500, 1); }
                format(string, sizeof(string), "* %s commande un champagne et le boi.", PlayerInfo[playerid][pName]);
		  		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    else if(article==6)
		    {
		        PlayerInfo[playerid][pSoif]+=25;
				PlayerDrunk[playerid] += 500;
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Saoul", 3500, 1); }
                format(string, sizeof(string), "* %s commande un wisky et le boi.", PlayerInfo[playerid][pName]);
		  		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    else if(article==7)
		    {
		        PlayerInfo[playerid][pSoif]+=30;
				PlayerDrunk[playerid] += 500;
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Vous etes~n~~p~Saoul", 3500, 1); }
                format(string, sizeof(string), "* %s commande une vodka et la boit.", PlayerInfo[playerid][pName]);
		  		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    UpdateStatsTextsPlayers(playerid,2);
		}
		else if(bizz[bizid][typeZ] == 14) // Gym
		{
		    if(article==1)
		    {
		        PlayerInfo[playerid][pCombatStyle] = 0;
		        gym_SetCombatStyle(playerid, 0, true);
		        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Gym «{FFFFFF} Technique Elbow achetée.");
		    }
		    else if(article==2)
		    {
		        PlayerInfo[playerid][pCombatStyle] = 1;
		        gym_SetCombatStyle(playerid, 1, true);
		        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Gym «{FFFFFF} Technique Boxing achetée.");
		    }
		    else if(article==3)
		    {
		        PlayerInfo[playerid][pCombatStyle] = 2;
		        gym_SetCombatStyle(playerid, 2, true);
		        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Gym «{FFFFFF} Technique Grabkick achetée.");
		    }
		    else if(article==4)
		    {
		        PlayerInfo[playerid][pCombatStyle] = 3;
		        gym_SetCombatStyle(playerid, 3, true);
		        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Gym «{FFFFFF} Technique Kungfu achetée.");
		    }
		    else if(article==5)
		    {
		        PlayerInfo[playerid][pCombatStyle] = 4;
		        gym_SetCombatStyle(playerid, 4, true);
		        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Gym «{FFFFFF} Technique Kneehead achetée.");
		    }
		    player_Dialog[playerid] = 0;
		}
		else if(bizz[bizid][typeZ] == 20) // Restaurant
		{
		    if(article==1)
		    {
		        PlayerInfo[playerid][pFaim]+=60;
		        format(string, sizeof(string), "* %s commande une assiette de pâtes et la mange.", PlayerInfo[playerid][pName]);
		  		LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==2)
		    {
		        PlayerInfo[playerid][pFaim]+=40;
		        format(string, sizeof(string), "* %s commande un steck frites et le mange.", PlayerInfo[playerid][pName]);
		  		LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==3)
		    {
		        PlayerInfo[playerid][pFaim]+=40;
		        format(string, sizeof(string), "* %s commande un poulet frites et le mange.", PlayerInfo[playerid][pName]);
		  		LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==4)
		    {
		        PlayerInfo[playerid][pFaim]+=35;
		        format(string, sizeof(string), "* %s commande un poisson riz et le mange.", PlayerInfo[playerid][pName]);
		  		LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  		UpdateStatsTextsPlayers(playerid,1);
		    }
		    else if(article==5)
		    {
		        PlayerInfo[playerid][pSoif]+=45;
		        format(string, sizeof(string), "* %s commande un verre de vin et le boi.", PlayerInfo[playerid][pName]);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  		UpdateStatsTextsPlayers(playerid,2);
		    }
		    else if(article==6)
		    {
		        PlayerInfo[playerid][pSoif]+=45;
		        format(string, sizeof(string), "* %s commande un Soda et le boit.", PlayerInfo[playerid][pName]);
		  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		  		UpdateStatsTextsPlayers(playerid,2);
		    }
		}
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		bizz[bizid][fund] += artPrice;
		bizz[bizid][products] -= pay_tempProducts[playerid];
		bizz_Save(bizid);
	}
	else if(typePaiement==2) // Mairie
	{
        pay_Reset(playerid);
        return 1;
	}
	else if(typePaiement==3) // Ecole de tire
	{
	    if(article>=1)
	    {
		    skill_WeaponTrainning[playerid] = article;
			skill_WeaponPhase[playerid] = 1;
			msg_Client(playerid, COLOR_STATS, "|Ecole de tir| L'entrainement commence dans 3 secondes.");
			SetTimerEx("skill_Trainning", 3000, false, "i", playerid);
		}
	}
	else if(typePaiement==4) // Soin hopital
	{
	    pay_Reset(playerid);
        return 1;
	}
	else if(typePaiement==5) // Bizz Unique
	{
	    if(gPlayerInSBizz[playerid] < 0)
	    {
	        msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Vous n'êtes plus dans un biz.");
	        pay_Reset(playerid);
	        return 1;
		}
	    new bizid = gPlayerInSBizz[playerid]-1000;
		pay_Reset(playerid);
	    if(bizid >= 0 && bizid <= MAX_STATION)
	    {
		    if(article==1)
		    {
                if(inventory_GetItemQuantity(playerid,18875) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un GPS."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,18875,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Station Essence «{FFFFFF} GPS acheté, aide: /gps");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==2)
		    {
                if(inventory_GetItemQuantity(playerid,1650) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un Jerrican."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,1650,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Station Essence «{FFFFFF} Jerrican acheté, aide: /v Jerrican"); PlayerInfo[playerid][pJerricainFuel] = 0;}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
		    else if(article==3)
		    {
                if(inventory_GetItemQuantity(playerid,1719) > 0){msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un RadioFm."); pay_Reset(playerid); return 1;}
		        if(inventory_UpdateItem(playerid,1719,1)){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Station Essence «{FFFFFF} RadioFm acheté, aide: /v radio");}
				else{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible, votre sac est plein !"); pay_Reset(playerid);return 1;}
		    }
	    }
	    else if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING)
	    {
	        if(article==1)
		    {
		        if(PlayerInfo[playerid][pFormul] == 1 && PlayerInfo[playerid][pOperator]==1){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 1;
 		    	PlayerInfo[playerid][pFormul] = 1;
 		    	PlayerInfo[playerid][pPhoneTime] = 900;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez pris la formule: Forfait: sms $5 + appel 15mn");
		    }
		    else if(article==2)
		    {
		        if(PlayerInfo[playerid][pFormul] == 2 && PlayerInfo[playerid][pOperator]==1){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 1;
 		    	PlayerInfo[playerid][pFormul] = 2;
 		    	PlayerInfo[playerid][pPhoneTime] = 1200;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez pris la formule: Forfait: sms $2 + appel 20mn");
		    }
		    else if(article==3)
		    {
		        if(PlayerInfo[playerid][pFormul] == 3 && PlayerInfo[playerid][pOperator]==1){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 1;
 		    	PlayerInfo[playerid][pFormul] = 3;
 		    	PlayerInfo[playerid][pPhoneTime] = 1800;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez pris la formule: Forfait: sms $1 + appel 30mn");
		    }
		    else if(article==4)
		    {
		        if(PlayerInfo[playerid][pFormul] == 4 && PlayerInfo[playerid][pOperator]==1){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 1;
 		    	PlayerInfo[playerid][pFormul] = 4;
 		    	PlayerInfo[playerid][pPhoneTime] = 3600;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» BellSouth «{FFFFFF} Vous avez pris la formule: Forfait: sms illimité + appel 1h");
		    }
	    }
	    else if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+1)
	    {
	        if(article==1)
		    {
		        if(PlayerInfo[playerid][pFormul] == 1 && PlayerInfo[playerid][pOperator]==2){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		    	PlayerInfo[playerid][pOperator] = 2;
 		    	PlayerInfo[playerid][pFormul] = 1;
	    		PlayerInfo[playerid][pPhoneTime] = 600;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez pris la formule: Forfait: sms $4 + appel 10mn");
			}
			else if(article==2)
		    {
		        if(PlayerInfo[playerid][pFormul] == 2 && PlayerInfo[playerid][pOperator]==2){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 2;
 		    	PlayerInfo[playerid][pFormul] = 2;
 		    	PlayerInfo[playerid][pPhoneTime] = 1500;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez pris la formule: Forfait: sms $3 + appel 25mn");
		    }
		    else if(article==3)
		    {
		        if(PlayerInfo[playerid][pFormul] == 3 && PlayerInfo[playerid][pOperator]==2){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez déjà cette formule.");return 1;}
                PlayerInfo[playerid][pOperator] = 2;
 		    	PlayerInfo[playerid][pFormul] = 3;
 		    	PlayerInfo[playerid][pPhoneTime] = 1500;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez pris la formule: Forfait: sms $1 + 25mn");
		    }
		    else if(article==4)
		    {
		        if(PlayerInfo[playerid][pFormul] == 4 && PlayerInfo[playerid][pOperator]==2){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 2;
 		    	PlayerInfo[playerid][pFormul] = 4;
 		    	PlayerInfo[playerid][pPhoneTime] = 5400;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» AT&T Mobility «{FFFFFF} Vous avez pris la formule: Forfait: sms illimité + appel 1h30mn");
		    }
	    }
	    else if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+2)
	    {
	        if(article==1)
		    {
		        if(PlayerInfo[playerid][pFormul] == 1 && PlayerInfo[playerid][pOperator]==3){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 3;
 		    	PlayerInfo[playerid][pFormul] = 1;
 		    	PlayerInfo[playerid][pPhoneTime] = 420;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez pris la formule: Forfait: sms $3 + 7mn");
		    }
		    else if(article==2)
		    {
		        if(PlayerInfo[playerid][pFormul] == 2 && PlayerInfo[playerid][pOperator]==3){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 3;
 		    	PlayerInfo[playerid][pFormul] = 2;
 		    	PlayerInfo[playerid][pPhoneTime] = 1320;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez pris la formule: Forfait: sms $3 + appel 22mn");
		    }
		    else if(article==3)
		    {
		        if(PlayerInfo[playerid][pFormul] == 3 && PlayerInfo[playerid][pOperator]==3){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 3;
 		    	PlayerInfo[playerid][pFormul] = 3;
 		    	PlayerInfo[playerid][pPhoneTime] = 1680;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez pris la formule: Forfait: sms $1 + appel 28mn");
		    }
		    else if(article==4)
		    {
		        if(PlayerInfo[playerid][pFormul] == 4 && PlayerInfo[playerid][pOperator]==3){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 3;
 		    	PlayerInfo[playerid][pFormul] = 4;
 		    	PlayerInfo[playerid][pPhoneTime] = 9000;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» SBC Communications «{FFFFFF} Vous avez pris la formule: Forfait: sms illimité + appel 2h30mn");
		    }
	    }
	    else if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+3)
	    {
	        if(article==1)
		    {
		        if(PlayerInfo[playerid][pFormul] == 1 && PlayerInfo[playerid][pOperator]==4){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Verizon Communication «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 4;
    			PlayerInfo[playerid][pFormul] = 1;
 		    	PlayerInfo[playerid][pPhoneTime] = 1200;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Verizon Communication «{FFFFFF} Vous avez pris la formule: Forfait: sms illimité + 20mn");
		    }
		    else if(article==2)
		    {
		        if(PlayerInfo[playerid][pFormul] == 2 && PlayerInfo[playerid][pOperator]==4){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Verizon Communication «{FFFFFF} Vous avez déjà cette formule.");return 1;}
		        PlayerInfo[playerid][pOperator] = 4;
 		    	PlayerInfo[playerid][pFormul] = 2;
 		    	PlayerInfo[playerid][pPhoneTime] = 99999;
 		    	msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Verizon Communication «{FFFFFF} Vous avez pris la formule: Forfait: sms illimité + appel illimité");
		    }
	    }
	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		sbizz[bizid][ubCaisse] += artPrice;
		sbizz[bizid][ubProduits] -= pay_tempProducts[playerid];
		uniquebizz_Save(bizid);
	}
	else if(typePaiement==6) // Bizz Unique : Location voiture
	{
	    if(article==1)
	    {
	        msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} N'oublier pas votre ceinture. (pour délouer: /delouer vehicule)");
	        new engine,lights,alarm,doors,bonnet,boot,objective;
	        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	        SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	        TogglePlayerControllable(playerid, 1);
			vehicle[carid][cEngine] = true;
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			speedometer_Update(playerid,1,0);
			sbizz[28][ubCaisse] += artPrice;
			uniquebizz_Save(28);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    }
	}
	else if(typePaiement==7) // Bizz Unique : Location moto
	{
	    if(article==1)
	    {
	        msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} N'oublier pas votre casque. (pour délouer: /delouer vehicule)");
            new engine,lights,alarm,doors,bonnet,boot,objective;
         	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
            vehicle[carid][cEngine] = true;
			TogglePlayerControllable(playerid, 1);
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			sbizz[29][ubCaisse] += artPrice;
			speedometer_Update(playerid,1,0);
			uniquebizz_Save(29);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    }
	}
	else if(typePaiement==8) // Bizz Unique : Location vélo
	{
	    if(article==1)
	    {
	        msg_Client(playerid, COLOR_GREY, "{8BE2E2}» Véhicule «{FFFFFF} N'oublier pas votre casque. (pour délouer: /delouer vehicule)");
	        new engine,lights,alarm,doors,bonnet,boot,objective;
	        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	        SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	        TogglePlayerControllable(playerid, 1);
			vehicle[carid][cEngine] = true;
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			sbizz[30][ubCaisse] += artPrice;
			speedometer_Update(playerid,1,0);
			uniquebizz_Save(30);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    }
	}
	else if(typePaiement==9) // Bizz Unique : Tunning néon
	{
	    
	}
	else if(typePaiement==10) // Achats véhicule
	{
	    if(article==1)
    	{
    	    car_Buy(playerid,pay_tempProducts[playerid],artPrice);
		}
	}
	else if(typePaiement==11) // auto - école
	{
	    if(article==1)
	    	{ShowPlayerDialog(playerid,102,DIALOG_STYLE_MSGBOX,"{DE673A}» Auto-Ecole «{FFFFFF} Permis de conduire","Le passage du permis de conduire se passe dans cet ordre :\n- Le cour\n- Le test écrit\n- L'application","Continuer","");}
	    else if(article==2)
	    {
	        msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Félicitation, vous avez acheté le permis de moto.");
		 	governement[interiors[gPlayerInInterior[playerid]][city]][safe] += governement[interiors[gPlayerInInterior[playerid]][city]][license][1];
            PlayerInfo[playerid][pMotoLic] = 1;
	    }
	    else if(article==3)
	    	{ShowPlayerDialog(playerid,109,DIALOG_STYLE_MSGBOX,"{DE673A}» Auto-Ecole «{FFFFFF} Permis de vol","Le passage du permis de vol se passe dans cette ordre :\n-Le cour\n-Le test écrit","Continuer","Annuler");}
	    else if(article==4)
	    {
	        msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Félicitation, vous avez acheté le permis de navigation.");
		 	governement[interiors[gPlayerInInterior[playerid]][city]][safe] += governement[interiors[gPlayerInInterior[playerid]][city]][license][6];
            PlayerInfo[playerid][pBoatLic] = 1;
	    }
	    else if(article==5)
	    {
	        msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Félicitation, vous avez acheté le permis de poid lourd.");
		 	governement[interiors[gPlayerInInterior[playerid]][city]][safe] += governement[interiors[gPlayerInInterior[playerid]][city]][license][3];
            PlayerInfo[playerid][pLourdLic] = 1;
	    }
	    else if(article==6)
	    {
	        msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez racheté un point de permis.");
		 	governement[interiors[gPlayerInInterior[playerid]][city]][safe] += LICENSE_POINT;
            PlayerInfo[playerid][pPointPermis]++;
	    }
	    permis_Step[playerid] = 0;
	}
	else if(typePaiement==12) // Achats d'un bizz
	{
	    if(article==1)
	    {
	        if(PlayerInfo[playerid][pBizkey1] == -1){ PlayerInfo[playerid][pBizkey1] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pBizkey2] == -1){ PlayerInfo[playerid][pBizkey2] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pBizkey3] == -1){ PlayerInfo[playerid][pBizkey3] = pay_tempProducts[playerid];}
			else{ pay_Reset(playerid); return 1;}
			bizz[pay_tempProducts[playerid]][owned] = 1;
			bizz[pay_tempProducts[playerid]][lock] = 0;
			strmid(bizz[pay_tempProducts[playerid]][owner], sendername, 0, strlen(sendername), 255);
			msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Félicitation pour l'achat de votre biz. (Aide: /biz type et /biz gestion)");
			bizz_Save(pay_tempProducts[playerid]);
			bizz_UpdateInfos(pay_tempProducts[playerid]);
	    }
	    else if(article==2)
	    {
	        if(PlayerInfo[playerid][pBizkey1] == -1){ PlayerInfo[playerid][pBizkey1] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pBizkey2] == -1){ PlayerInfo[playerid][pBizkey2] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pBizkey3] == -1){ PlayerInfo[playerid][pBizkey3] = pay_tempProducts[playerid];}
			else{ pay_Reset(playerid); return 1;}
			sbizz[pay_tempProducts[playerid]-1000][ubOwned] = 1;
			sbizz[pay_tempProducts[playerid]-1000][ubLock] = 0;
			strmid(sbizz[pay_tempProducts[playerid]-1000][ubOwner], sendername, 0, strlen(sendername), 255);
			msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Félicitation pour l'achat de votre biz. (Aide: /biz gestion)");
			uniquebizz_Save(pay_tempProducts[playerid]-1000);
			uniquebizz_UpdateInfos(pay_tempProducts[playerid]-1000);
	    }
	}
	else if(typePaiement==13) // Achats d'une maison
	{
	    if(article==1)
	    {
	        if(PlayerInfo[playerid][pHousekey1] == -1){ PlayerInfo[playerid][pHousekey1] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pHousekey2] == -1){ PlayerInfo[playerid][pHousekey2] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pHousekey3] == -1){ PlayerInfo[playerid][pHousekey3] = pay_tempProducts[playerid];}
			else{ pay_Reset(playerid); return 1;}
			house[pay_tempProducts[playerid]][owned] = 1;
			strmid(house[pay_tempProducts[playerid]][owner], sendername, 0, strlen(sendername), 255);
			msg_Client(playerid, COLOR_HOUSE, "{00C600}» Maison «{FFFFFF} Félicitation pour l'achat de votre maison. (aide: /ma(ison))");
			house_Save(pay_tempProducts[playerid]);
			house_UpdateInfos(pay_tempProducts[playerid]);
	    }
	}
	else if(typePaiement==14) // Achats d'un garage
	{
	    if(article==1)
	    {
	        if(PlayerInfo[playerid][pGarageKey1] == -1){ PlayerInfo[playerid][pGarageKey1] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pGarageKey2] == -1){ PlayerInfo[playerid][pGarageKey2] = pay_tempProducts[playerid];}
			else if(PlayerInfo[playerid][pGarageKey3] == -1){ PlayerInfo[playerid][pGarageKey3] = pay_tempProducts[playerid];}
			else{ pay_Reset(playerid); return 1;}
			garage[pay_tempProducts[playerid]][owned] = 1;
			strmid(garage[pay_tempProducts[playerid]][owner], sendername, 0, strlen(sendername), 32);
			msg_Client(playerid,COLOR_GARAGE,"{10ce96}» Garage «{FFFFFF} Félicitation pour l'achat de votre garage. (aide: /garage)");
			garage_Save(pay_tempProducts[playerid]);
			garage_UpdateInfos(pay_tempProducts[playerid]);
	    }
	}
	else if(typePaiement==15) // Ecole des langues
	{
	    if(article>=1)
	    {
	        if(PlayerInfo[playerid][pLangTrainTime] > 0)
	            {format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Il vous reste encore %d mins avant d'apprendre une nouvelle leçon.",PlayerInfo[playerid][pLangTrainTime]); msg_Client(playerid,COLOR_INFO,string); pay_Reset(playerid); return 1;}
	            
	        if(PlayerInfo[playerid][pLang1]==article && PlayerInfo[playerid][pLang1State] != 100 || PlayerInfo[playerid][pLang2]==article && PlayerInfo[playerid][pLang2State] != 100)
			{
			    if(PlayerInfo[playerid][pLang1]==article)
					{langLearn[playerid]=1;}
                else if(PlayerInfo[playerid][pLang2]==article)
					{langLearn[playerid]=2;}
				langTime[playerid]=60;
			    PlayerInfo[playerid][pLangTrainTime]=12;
				ShowPlayerDialog(playerid,49,DIALOG_STYLE_MSGBOX,"{FFFFFF}|Ecole de Langues| Apprentissage - {FF0000}60{FFFFFF} s","Vous êtes en train d'apprendre une langue,\nvous devez attendre que le compte à rebours soit terminé pour quitter.","Valider","");
			}
			else if(PlayerInfo[playerid][pLang1]==0 || PlayerInfo[playerid][pLang2]==0)
			{
			    if(PlayerInfo[playerid][pLang1]==0)
					{PlayerInfo[playerid][pLang1] = article; langLearn[playerid]=1;}
                else if(PlayerInfo[playerid][pLang2]==0)
					{PlayerInfo[playerid][pLang2] = article; langLearn[playerid]=2;}
					
                langTime[playerid]=60;
			    PlayerInfo[playerid][pLangTrainTime]=12;
				ShowPlayerDialog(playerid,49,DIALOG_STYLE_MSGBOX,"{FFFFFF}|Ecole de Langues| Apprentissage - {FF0000}60{FFFFFF} s","Vous êtes en train d'apprendre une langue,\nvous devez attendre que le compte à rebours soit terminé pour quitter.","Valider","");
			}
			else
				{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous connaissez déjà deux langues différentes.");pay_Reset(playerid);return 1;}
	    }
	}
	else if(typePaiement==16) // Fourrière
	{
	    if(article != -1)
	    {
	        new randSpawn = random(6);
	        SafeSetVehiclePos(article,four_pos[randSpawn][0],four_pos[randSpawn][1],four_pos[randSpawn][2]);
	        SetVehicleZAngle(article,four_pos[randSpawn][3]);
	        vehicle[article][cStatut]=0;
	        vehicle[article][cLocationx]=four_pos[randSpawn][0];
	        vehicle[article][cLocationy]=four_pos[randSpawn][1];
	        vehicle[article][cLocationz]=four_pos[randSpawn][2];
	        vehicle[article][cAngle]=four_pos[randSpawn][3];
	        SetPlayerCheckpoint(playerid,four_pos[randSpawn][0],four_pos[randSpawn][1],four_pos[randSpawn][2],8.0);
	        msg_Client(playerid,COLOR_WHITE,"{8BE2E2}» Véhicule «{FFFFFF} Votre véhicule a été marqué sur votre radar.");
	        vehicle_Save(article,0,0);
	    }
	}
	else if(typePaiement==17) // Meubles
	{
	    if(article >= 1 && article <=8)
	    {
	        PlayerInfo[playerid][pMobi][0]=pay_tempOther[playerid];
	        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Chaîne Hifi acheté.");
	    }
	    else if(article >= 9 && article <=12)
	    {
	        PlayerInfo[playerid][pMobi][1]=pay_tempOther[playerid];
	        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Armoire acheté.");
	    }
	    else if(article >= 13 && article <=14)
	    {
	        PlayerInfo[playerid][pMobi][2]=pay_tempOther[playerid];
	        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Micro Ondes acheté.");
	    }
	    else if(article >= 15 && article <=17)
	    {
	        PlayerInfo[playerid][pMobi][3]=pay_tempOther[playerid];
	        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Frigo acheté.");
	    }
	    else if(article == 18)
	    {
	        PlayerInfo[playerid][pMobi][4]=pay_tempOther[playerid];
	        msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Coffre fort acheté.");
	    }
	    sbizz[16][ubCaisse] += artPrice;
	    uniquebizz_Save(16);
	}
	else if(typePaiement==18) // Bizz Unique : Location bateau
	{
	    if(article==1)
	    {
	        new engine,lights,alarm,doors,bonnet,boot,objective;
	        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	        SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	        TogglePlayerControllable(playerid, 1);
			vehicle[carid][cEngine] = true;
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			sbizz[31][ubCaisse] += artPrice;
			uniquebizz_Save(31);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			speedometer_Update(playerid,1,0);
	    }
	}
	else if(typePaiement==19) // Bizz Unique : Location avion
	{
	    if(article==1)
	    {
	        new engine,lights,alarm,doors,bonnet,boot,objective;
	        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	        SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	        TogglePlayerControllable(playerid, 1);
			vehicle[carid][cEngine] = true;
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			sbizz[32][ubCaisse] += artPrice;
			uniquebizz_Save(32);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			speedometer_Update(playerid,1,0);
	    }
	}
	else if(typePaiement==20) // Achat du type de bizz
	{
	    bizz_Set(pay_tempProducts[playerid],pay_tempArticle[playerid]);
	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Votre entreprise a été créé.");
	}
	CancelSelectTextDraw(playerid);
	pay_Reset(playerid);
    if(moyen==1)
		{SafeGivePlayerMoney(playerid,-artPrice,"Payement en cash fonction : pay_ValidPay");}
	else if(moyen==2)
	{
	    format(sql,sizeof(sql),"INSERT INTO lvrp_log_pay (Date,SQLid,Reason,Somme,Ip)  VALUES (UNIX_TIMESTAMP(),'%d','Payement en CB fonction : pay_ValidPay','%d','%s')",PlayerInfo[playerid][pSQLID],artPrice,PlayerInfo[playerid][pIP]);
		mysql_pquery(MYSQL,sql);
		PlayerInfo[playerid][pAccount]-=artPrice;
		format(string,sizeof(string),"{AADD66}» Banque «{FFFFFF} Paiement par CB : $%d - Somme restante sur le compte : $%d",artPrice,PlayerInfo[playerid][pAccount]);
		msg_Client(playerid, COLOR_BANK, string);
	}
	else if(moyen==3)
	{
	    PlayerInfo[playerid][pCheckNumber]-=1;
	    if(PlayerInfo[playerid][pCheckNumber]==0)
	        {PlayerInfo[playerid][pCheck]=0;}
		PlayerInfo[playerid][pAccount]-=artPrice;
		format(string,sizeof(string),"{AADD66}» Banque «{FFFFFF} Paiement par chèque : $%d - Somme restante sur le compte : $%d",artPrice,PlayerInfo[playerid][pAccount]);
		msg_Client(playerid, COLOR_BANK, string);
	}
	if(player_IsAtActorPoint(playerid,1,2.5) != -1)
 	{
 	    new tmpId=player_IsAtActorPoint(playerid,1,3.5);
 	    ApplyDynamicActorAnimation(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
 	    SetActorChatBubble(tmpId,"Merci de votre achat.",0xFFFFFFDD,NAME_DISTANCE,5000);
 	}
	OnPlayerUpdateSQL(playerid);
	return 1;
}
stock pay_Reset(playerid)
{
    pay_tempPrice[playerid] = -1;
	pay_tempType[playerid] = -1;
	pay_tempArticle[playerid] = -1;
	pay_tempProducts[playerid] = 0;
	TextDrawHideForPlayer(playerid, pay_TextDesigne1);
	TextDrawHideForPlayer(playerid, pay_TextDesigne2);
	TextDrawHideForPlayer(playerid, pay_TextDesigne3);
	TextDrawHideForPlayer(playerid, pay_TextTitle);
	TextDrawHideForPlayer(playerid, pay_TextDesigne4);
	TextDrawHideForPlayer(playerid, pay_TextDesigne5);
	PlayerTextDrawHide(playerid, pay_TextArticle[playerid]);
	PlayerTextDrawHide(playerid, pay_TextPrice[playerid]);
	PlayerTextDrawHide(playerid, pay_TextBank[playerid]);
	PlayerTextDrawHide(playerid, pay_TextCash[playerid]);
	TextDrawHideForPlayer(playerid, pay_TextInfo);
	TextDrawHideForPlayer(playerid, pay_TextButton1);
	TextDrawHideForPlayer(playerid, pay_TextButton2);
	TextDrawHideForPlayer(playerid, pay_TextButton3);
	TextDrawHideForPlayer(playerid, pay_TextExit);
	TextDrawHideForPlayer(playerid, pay_TextDesigne6);
	TextDrawHideForPlayer(playerid, pay_TextDesigne7);
	TextDrawHideForPlayer(playerid, pay_TextDesigne8);
	CancelSelectTextDraw(playerid);
	return 1;
}

public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	if(player_Dialog[playerid]==5 || player_Dialog[playerid]==6)
	{
	    new obj=-1;
		for(new i=0;i<MAX_FURNITURES; i++)
		{
		    if(objectid==house[gPlayerInHouse[playerid]][hObject][i])
		        {obj=i; break;}
		}
		if(obj==-1)
		    {msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Cet objet ne peut pas être édité !"); SelectObject(playerid); return 1;}
		if(player_Dialog[playerid]==5)
		    {EditDynamicObject(playerid,objectid); player_Variable[playerid]=obj;}
        else if(player_Dialog[playerid]==6)
		{
			format(sql, sizeof(sql), "DELETE FROM lvrp_server_houses_furnitures WHERE id=%d LIMIT 1",house[gPlayerInHouse[playerid]][fFurSQLid][obj]);
			mysql_pquery(MYSQL,sql);
			house[gPlayerInHouse[playerid]][hItem][obj]=0;
			house[gPlayerInHouse[playerid]][fFurSQLid][obj]=-1;
			house_UpdateFurnitureInfos(gPlayerInHouse[playerid],obj);
			msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Objet vendu.");
		}
	}
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	new string[128];
	if(response)
    {
        if(player_Dialog[playerid] == 100)
        {
	        RemovePlayerAttachedObject(playerid,index);
	        accessory[playerid][pos_x][index]=fOffsetX;
	        accessory[playerid][pos_y][index]=fOffsetY;
	        accessory[playerid][pos_z][index]=fOffsetZ;
	        accessory[playerid][pos_rx][index]=fRotX;
	        accessory[playerid][pos_ry][index]=fRotY;
	        accessory[playerid][pos_rz][index]=fRotZ;
	        accessory[playerid][pos_ox][index]=fScaleX;
	        accessory[playerid][pos_oy][index]=fScaleY;
	        accessory[playerid][pos_oz][index]=fScaleZ;
	        SetPlayerAttachedObject(playerid, index, modelid, boneid, accessory[playerid][pos_x][index], accessory[playerid][pos_y][index], accessory[playerid][pos_z][index], accessory[playerid][pos_rx][index], accessory[playerid][pos_ry][index], accessory[playerid][pos_rz][index], accessory[playerid][pos_ox][index], accessory[playerid][pos_oy][index], accessory[playerid][pos_oz][index]);
	        accessory_Save(playerid,index);
	        format(string,sizeof(string),"{04B45F}» Accessoire «{FFFFFF} Edition de l'accessoire slot %d terminé et sauvegardé.",index);
	        msg_Client(playerid,COLOR_WHITE,string);
		}
    }
    else
    {
        if(player_Dialog[playerid] == 100)
        {
	        msg_Client(playerid,COLOR_WHITE,"{04B45F}» Accessoire «{FFFFFF} Vous avez annulé l'édition.");
	        RemovePlayerAttachedObject(playerid,index);
	        SetPlayerAttachedObject(playerid, index, modelid, boneid, accessory[playerid][pos_x][index], accessory[playerid][pos_y][index], accessory[playerid][pos_z][index], accessory[playerid][pos_rx][index], accessory[playerid][pos_ry][index], accessory[playerid][pos_rz][index], accessory[playerid][pos_ox][index], accessory[playerid][pos_oy][index], accessory[playerid][pos_oz][index]);
		}
	}
    return 1;
}


public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    new Float:oldX, Float:oldY, Float:oldZ,string[128],
		Float:oldRotX, Float:oldRotY, Float:oldRotZ;
    GetDynamicObjectPos(objectid, oldX, oldY, oldZ);
	GetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	MoveDynamicObject(objectid, x, y, z, 10.0, rx, ry, rz);
	if(player_Dialog[playerid] == 7)
		{MoveDynamicObject(ad_Object[player_Variable[playerid]][1], x, y, z+5.5, 10.0, rx, ry, rz+55);}
	/*if(!playerobject)
	{
	    if(!IsValidDynamicObject(objectid))
			{return 1;}
	    MoveDynamicObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
	}*/
	if(response == EDIT_RESPONSE_FINAL)
	{
		if(atm_DialogEdit[playerid]==3)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions de l'ATM sauvegardées.");
		    new i = atm_EditId[playerid];
		    atm[i][pos][0] = x;
		    atm[i][pos][1] = y;
		    atm[i][pos][2] = z;
		    atm[i][pos][3] = rz;
		    atm_Save(i);
		    atm_UpdateInfos(i);
		    atm_EditId[playerid]=-1;
		    atm_DialogEdit[playerid]=0;
		}
		if(admin_VarType[playerid]==1)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions de la grosse poubelle sauvegardées.");
		    new i = admin_EditId[playerid];
		    trash[i][pos][0] = x;
		    trash[i][pos][1] = y;
		    trash[i][pos][2] = z;
		    trash[i][pos][3] = rz;
		    trash_Save(i);
		    trash_UpdateInfos(i);
		}
		if(admin_VarType[playerid]==2)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions de la petite poubelle sauvegardées.");
		    new i = admin_EditId[playerid];
		    bin[i][pos][0] = x;
		    bin[i][pos][1] = y;
		    bin[i][pos][2] = z;
		    bin[i][pos][3] = rz;
		    bin_Save(i);
		    bin_UpdateInfos(i);
		}
		if(admin_VarType[playerid]==3)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions du radar sauvegardées.");
		    new i = player_Variable[playerid];
		    camera[i][pos][0] = x;
		    camera[i][pos][1] = y;
		    camera[i][pos][2] = z;
		    camera[i][pos][3] = rz;
		    camera_Save(i);
		    camera_UpdateInfos(i);
		    player_Variable[playerid]=-1;
		    player_Dialog[playerid]=0;
		}
		if(admin_VarType[playerid]==5)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions fermées de la porte sauvegardées.");
		    new i = player_Variable[playerid];
		    gate[i][pos][0] = x;
		    gate[i][pos][1] = y;
		    gate[i][pos][2] = z;
		    gate[i][pos][3] = rx;
		    gate[i][pos][4] = ry;
		    gate[i][pos][5] = rz;
		    gate_Save(i);
		    gate_Update(i);
		    gate_Dialog(playerid);
		}
		if(admin_VarType[playerid]==4)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions ouvertes de la porte sauvegardées.");
		    new i = player_Variable[playerid];
		    gate[i][pos][6] = x;
		    gate[i][pos][7] = y;
		    gate[i][pos][8] = z;
		    gate[i][pos][9] = rx;
		    gate[i][pos][10] = ry;
		    gate[i][pos][11] = rz;
		    gate_Save(i);
		    gate_Update(i);
		    gate_Dialog(playerid);
		}
		if(stop_DialogEdit[playerid]==3)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions de l'arrêt sauvegardées.");
		    new i = stop_EditPlayer[playerid];
		    stop[i][pos][0] = x;
		    stop[i][pos][1] = y;
		    stop[i][pos][2] = z;
		    stop[i][pos][3] = rz;
		    stop_Save(i);
		    stop_UpdateInfos(i);
		    stop_EditPlayer[playerid]=-1;
		    stop_DialogEdit[playerid]=0;
		}
		if(sign_DialogEdit[playerid]==20)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions du panneau sauvegardées.");
		    new i = sign_EditId[playerid];
		    sign[i][pos][0] = x;
		    sign[i][pos][1] = y;
		    sign[i][pos][2] = z;
		    sign[i][pos][3] = rx;
		    sign[i][pos][4] = ry;
		    sign[i][pos][5] = rz;
		    sign_Save(i);
		    sign_UpdateInfos(i);
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_LIST,"|Panneau| Edit","Positions\nModel\nTexte\nMaterial Index\nMaterial Taille\nPolice d'écriture\nTaille Texte\nBold Texte\nCouleur Texte\nCouleur de fond\nAlignement","Valider","Annuler");
			sign_DialogEdit[playerid]=1;
		}
		if(phonecab_DialogEdit[playerid]==1)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions de la cabine téléphonique sauvegardées.");
		    new i = phonecab_EditId[playerid];
		    phone[i][pos][0] = x;
		    phone[i][pos][1] = y;
		    phone[i][pos][2] = z;
		    phone[i][pos][3] = rz;
		    phonecab_Save(i);
		    phonecab_UpdateInfos(i);
		    phonecab_EditId[playerid]=-1;
		    phonecab_DialogEdit[playerid]=0;
		}
		if(map_DialogEdit[playerid]==1)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions de la carte sauvegardées.");
		    new i = map_EditId[playerid];
		    map[i][pos][0] = x;
		    map[i][pos][1] = y;
		    map[i][pos][2] = z;
		    map[i][pos][3] = rz;
		    map_Save(i);
		    map_UpdateInfos(i);
		    map_EditId[playerid]=-1;
		    map_DialogEdit[playerid]=0;
		}
		if(distrib_DialogEdit[playerid]==1)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions du distributeur sauvegardées.");
		    new i = distrib_EditId[playerid];
		    distributor[i][pos][0] = x;
		    distributor[i][pos][1] = y;
		    distributor[i][pos][2] = z;
		    distributor[i][pos][3] = rz;
		    distrib_Save(i);
		    distrib_UpdateInfos(i);
		    distrib_EditId[playerid]=-1;
		    distrib_DialogEdit[playerid]=0;
		}
		if(tree_Edit[playerid]==1)
		{
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions du sapin sauvegardées.");
		    new i = tree_EditId[playerid];
		    distributor[i][pos][0] = x;
		    distributor[i][pos][1] = y;
		    distributor[i][pos][2] = z;
		    tree_Save(i);
		    tree_Update(i,x,y,z);
		    tree_EditId[playerid]=-1;
		    tree_Edit[playerid]=0;
		}
		if(player_Dialog[playerid]==5)
		{
		    new ma = gPlayerInHouse[playerid];
		    new id = player_Variable[playerid];
		    format(string,sizeof(string),"{00C600}» Maison «{FFFFFF} Positions du mobilier sauvegardées. (Emp. %d)",id+1);
		    msg_Client(playerid,COLOR_HOUSE,string);
		    house[ma][hFurPos_x][id] = x;
		    house[ma][hFurPos_y][id] = y;
		    house[ma][hFurPos_z][id] = z;
		    house[ma][hFurPos_rx][id] = rx;
		    house[ma][hFurPos_ry][id] = ry;
		    house[ma][hFurPos_rz][id] = rz;
		    house_SaveFurniture(ma,id);
		    house_UpdateFurnitureInfos(ma,id);
		    player_Dialog[playerid]=0; player_Variable[playerid]=-1;
		}
		if(player_Dialog[playerid] == 6)
		{
		    new id = player_Variable[playerid];
		    msg_Client(playerid,COLOR_WHITE,"{006500}» Gang «{FFFFFF} Positions du tag sauvegardées.");
		    tag[id][pos][0] = x;
		    tag[id][pos][1] = y;
		    tag[id][pos][2] = z;
		    tag[id][pos][3] = rx;
		    tag[id][pos][4] = ry;
		    tag[id][pos][5] = rz;
		    tag_Save(id);
		    tag_Update(id);
		    player_Dialog[playerid]=0; player_Variable[playerid]=-1;
		}
		if(player_Dialog[playerid] == 7)
		{
		    new id = player_Variable[playerid];
		    msg_Client(playerid,COLOR_WHITE,"{FF2727}» Admin «{FFABAD} Positions du panneau publicitaire sauvegardées.");
		    ad[id][pos][0] = x;
		    ad[id][pos][1] = y;
		    ad[id][pos][2] = z;
		    ad[id][pos][3] = rx;
		    ad[id][pos][4] = ry;
		    ad[id][pos][5] = rz;
		    ad_Save(id);
		    ad_Update(id);
		    player_Dialog[playerid]=0; player_Variable[playerid]=-1;
		}
		admin_VarType[playerid]=0;
		admin_EditId[playerid]=-1;
		admin_Dialog[playerid]=0;
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
	    if(player_Dialog[playerid] == 6)
	    	{tag_Remove(player_Variable[playerid]); player_Dialog[playerid]=0; player_Variable[playerid]=-1;}
	    SetDynamicObjectPos(objectid, oldX, oldY, oldZ);
	    SetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	    if(player_Dialog[playerid] == 7)
		    {ad_Update(player_Variable[playerid]); player_Dialog[playerid]=0; player_Variable[playerid]=-1;}
	}
	return 1;
}

stock permis_End(playerid,type,reason[])
{
	new carid = GetPlayerVehicleID(playerid);
	new string[256];
	if(type==0)
	{
	    format(string,sizeof(string),"{DE673A}» Auto-Ecole «{FFFFFF} Vous avez échoué votre permis, raison : %s.",reason);
	    msg_Client(playerid,COLOR_WHITE,string);
	    GameTextForPlayer(playerid,"~w~Permis voiture :~n~~r~echouer",3000,4);
		SafeSetPlayerPos(playerid, 1494.325195,1304.942871,1093.289062);
		server_SetPlayerInterior(playerid, 3);
		server_SetPlayerVirtualWorld(playerid,0);
		permis_Player[playerid] = 0;
		permis_Step[playerid] = 0;
	}
	else if(type==2)
	{
	    msg_Client(playerid,COLOR_WHITE,"{DE673A}» Auto-Ecole «{FFFFFF} Félicitation, vous avez reçu votre permis de conduire.");
	    permis_Player[playerid] = 0;
	    permis_Step[playerid] = 0;
	    GameTextForPlayer(playerid,"~w~Permis voiture :~n~~g~reussi",3000,4);
	    PlayerInfo[playerid][pCarLic] = 1;
		PlayerInfo[playerid][pPointPermis] = 12;
	}
	SetVehicleToRespawn(carid);
	vehicle[carid][cEngine]=false;
	permis_CheckPoints[playerid] = 0;
    permis_City[playerid]=-1;
	DisablePlayerCheckpoint(playerid);
	return 1;
}

public WalkAnim(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if (WalkStyle[playerid] == WALK_NORMAL)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_PED)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
 	else if (WalkStyle[playerid] == WALK_GANGSTA)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_GANGSTA2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_FAT_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_FAT)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_LADY)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_LADY2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_WHORE)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_WHORE2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_DRUNK)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (WalkStyle[playerid] == WALK_BLIND)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	return 1;
}

public RunAnim(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if (RunStyle[playerid] == 1)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","run_player",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","run_player",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 2)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","run_civi",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","run_civi",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
 	else if (RunStyle[playerid] == 3)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","run_gang1",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","run_gang1",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 4)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","run_old",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","run_old",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 5)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","run_fatold",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","run_fatold",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 6)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","run_fat",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","run_fat",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 7)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","woman_run",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","woman_run",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 8)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_runbusy",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_runbusy",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 9)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 10)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT || keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_runsexy",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_runsexy",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	else if (RunStyle[playerid] == 11)
	{
 	 	if (keys &&  updown & KEY_UP || keys &&  updown & KEY_DOWN || keys && leftright & KEY_LEFT ||keys && leftright & KEY_RIGHT)
		{
		   	KillTimer(runtime[playerid]);
			ApplyAnimation(playerid,"PED","Run_Wuzi",4.1,1,1,1,1,1);
			runtime[playerid] = SetTimerEx("RunAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","Run_Wuzi",4.0,0,0,0,0,1), KillTimer(runtime[playerid]);
	}
	return 1;
}

public defreeze(playerid)
{
	if(player_ActiveDM[playerid]!=0)
		{player_ActiveDM[playerid]=0;}
		
    if(player_Cuffed[playerid] > 0 || medic_PlayerNeedMedic[playerid] > 0)
		{return 1;}

	ClearAnimations(playerid);
	TogglePlayerControllable(playerid,true);
	return 1;
}

public server_TimerArmour(playerid)
{
    player_ArmourVip[playerid]=0;
}

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
		{return -1.00;}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

stock GetDistanceToPoint(playerid,Float:x2,Float:y2,Float:z2)
{
	new Float:dis;
	new Float:x1,Float:y1,Float:z1;
	if (!IsPlayerConnected(playerid)) return -1;
	GetPlayerPos(playerid,x1,y1,z1);
	dis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
	return floatround(dis);
}

stock GetGangColor(colorid)
{
	if(colorid != -1)
	{
	    if(FactionInfo[colorid][fColor] == 1)
	    	{return COLOR_GANG_1;}
	    else if(FactionInfo[colorid][fColor] == 2)
	    	{return COLOR_GANG_2;}
	    else if(FactionInfo[colorid][fColor] == 3)
	    	{return COLOR_GANG_3;}
	    else if(FactionInfo[colorid][fColor] == 4)
	    	{return COLOR_GANG_4;}
	    else if(FactionInfo[colorid][fColor] == 5)
	    	{return COLOR_GANG_5;}
	    else if(FactionInfo[colorid][fColor] == 6)
	    	{return COLOR_GANG_6;}
	    else if(FactionInfo[colorid][fColor] == 7)
	    	{return COLOR_GANG_7;}
	    else if(FactionInfo[colorid][fColor] == 8)
	    	{return COLOR_GANG_8;}
	    else if(FactionInfo[colorid][fColor] == 9)
	    	{return COLOR_GANG_9;}
	    else if(FactionInfo[colorid][fColor] == 10)
	    	{return COLOR_GANG_10;}
	    else if(FactionInfo[colorid][fColor] == 11)
	    	{return COLOR_GANG_11;}
		else
		    {return COLOR_DEFAULT;}
	}
    return COLOR_DEFAULT;
}

stock GetLocationName(id)
{
	new name[32]="Aucune";
	switch (id)
	{
	    case 1: {name="Moto";}
	    case 2: {name="Voiture";}
	    case 3: {name="Vélo";}
	    case 4: {name="Bateau";}
	    case 5: {name="Avion";}
	}
    return name;
}

stock GetFactionName(id)
{
	new name[32]="Aucune";
	switch (id)
	{
	    case 1: {name="LSPD";}
	    case 2: {name="SFPD";}
	    case 3: {name="LVPD";}
	    case 4: {name="SASD";}
	    case 5: {name="FBI";}
	    case 6: {name="Gouvernement LS";}
	    case 7: {name="Gouvernement SF";}
	    case 8: {name="Gouvernement LV";}
	    case 9: {name="Gouvernement SA";}
	    case 10: {name="San News";}
	    case 200 .. 250: {strmid(name, FactionInfo[id-200][fName], 0,  32, 32);}
	}
    return name;
}

stock GetFactionRank(id,rank)
{
	new name[32]="Aucun";
	if(id>=1 && id <= 4)
 	{
	 	switch(rank)
	 	{
	 	    case 1: strmid(name, police[id-1][rank1], 0,  32, 32);
	 	    case 2: strmid(name, police[id-1][rank2], 0,  32, 32);
	 	    case 3: strmid(name, police[id-1][rank3], 0,  32, 32);
	 	    case 4: strmid(name, police[id-1][rank4], 0,  32, 32);
	 	    case 5: strmid(name, police[id-1][rank5], 0,  32, 32);
	 	    case 6: strmid(name, police[id-1][rank6], 0,  32, 32);
	 	    case 7: strmid(name, police[id-1][rank7], 0,  32, 32);
	 	    case 8: strmid(name, police[id-1][rank8], 0,  32, 32);
	 	}
	}
    if(id==5)
    {
	}
    if(id>=6 && id <= 9)
	{
	    switch(rank)
	 	{
	 	    case 1: strmid(name, governement[id-6][rank1], 0,  32, 32);
	 	    case 2: strmid(name, governement[id-6][rank2], 0,  32, 32);
	 	    case 3: strmid(name, governement[id-6][rank3], 0,  32, 32);
	 	    case 4: strmid(name, governement[id-6][rank4], 0,  32, 32);
	 	    case 5: strmid(name, governement[id-6][rank5], 0,  32, 32);
	 	    case 6: strmid(name, governement[id-6][rank6], 0,  32, 32);
	 	}
	}
    if(id==10)
	{
	    switch(rank)
	 	{
	 	    case 1: strmid(name, sanNews[rank1], 0,  32, 32);
	 	    case 2: strmid(name, sanNews[rank2], 0,  32, 32);
	 	    case 3: strmid(name, sanNews[rank3], 0,  32, 32);
	 	    case 4: strmid(name, sanNews[rank4], 0,  32, 32);
	 	    case 5: strmid(name, sanNews[rank5], 0,  32, 32);
	 	    case 6: strmid(name, sanNews[rank6], 0,  32, 32);
	 	}
	}
   	if(id>=200)
   	{
   	    switch(rank)
	 	{
	 	    case 1: strmid(name, FactionInfo[id-200][fRank1], 0,  32, 32);
	 	    case 2: strmid(name, FactionInfo[id-200][fRank2], 0,  32, 32);
	 	    case 3: strmid(name, FactionInfo[id-200][fRank3], 0,  32, 32);
	 	    case 4: strmid(name, FactionInfo[id-200][fRank4], 0,  32, 32);
	 	    case 5: strmid(name, FactionInfo[id-200][fRank5], 0,  32, 32);
	 	    case 6: strmid(name, FactionInfo[id-200][fRank6], 0,  32, 32);
	 	}
   	}
    return name;
}

stock GetOriginName(id)
{
    new name[32]="Aucune";
    switch (id)
	{
	    case 1: name = "Vice City";
	    case 2: name = "Liberty City";
	    case 3: name = "Chinatown";
	    case 4: name = "Los Santos";
	    case 5: name = "San Fierro";
	    case 6: name = "Las Venturas";
	    case 7: name = "Fort Carson";
	}
	return name;
}

stock GetLangName(id)
{
	new name[32]="Aucune";
	switch (id)
	{
	    case 1: {name="Japonais";}
	    case 2: {name="Espagnol";}
	    case 3: {name="Russe";}
	    case 4: {name="Arabe";}
	    case 5: {name="Italien";}
	    case 6: {name="Allemand";}
	    case 7: {name="Français";}
	    case 8: {name="Chinois";}
	    case 9: {name="Portugais";}
	    case 10: {name="Turc";}
	    case 11: {name="Antillais";}
	    case 12: {name="Mexicain";}
	    case 13: {name="Créole";}
	    case 14: {name="Jamaicain";}
	    case 15: {name="Coréen";}
	    case 16: {name="Cantonais";}
	    case 17: {name="Ukrainien";}
	}
    return name;
}

stock GetJobName(id)
{
	new name[32]="Aucun";
	switch (id)
	{
	    case 1:  {name="Livreur de Pizza";}
	    case 2:  {name="Fermier";}
	    case 3:  {name="Mineur";}
	    case 4:  {name="Eboueur";}
	    case 5:  {name="Ouvrier";}
	    case 6:  {name="Pilote de Ligne";}
	    case 7:  {name="Facteur";}
	    case 8:  {name="Pecheur";}
	    case 9:  {name="Voiturier";}
	    case 10: {name="Camionneur";}
	    case 11: {name="Medecin";}
	    case 12: {name="Bagagiste";}
	    case 13: {name="Déménageur";}
	    case 14: {name="Bucheron";}
	    case 15: {name="Jardinier";}
	    case 16: {name="Pompier";}
	    case 17: {name="Mécanicien";}
	    case 18: {name="Récupérateur de Carcasse";}
	    case 19: {name="Convoyeur de fond";}
	    case 20: {name="Chauffeur de taxi";}
	    case 21: {name="Avocat";}
	}
    return name;
}

stock GetAdminName(id)
{
	new name[32]="Modérateur";
	switch (id)
	{
	    case 1: {name="Modérateur en Test";}
	    case 2: {name="Modérateur";}
	    case 3: {name="Administrateur";}
	    case 4: {name="Admin Général";}
	}
    return name;
}

stock GetSexName(id)
{
    new name[32];
	switch (id)
	{
	    case 1: {name="Homme";}
	    case 2: {name="Femme";}
	}
	return name;
}

stock GetCityName(id)
{
    new name[32];
	switch (id)
	{
	    case 0: {name="Los Santos";}
	    case 1: {name="San Fierro";}
	    case 2: {name="Las Venturas";}
	    case 3: {name="Fort Carson";}
	    case 4: {name="Bayside";}
	    case 5: {name="Angel Pine";}
	    case 6: {name="Dillimore";}
	    case 7: {name="Blueberry";}
	    case 8: {name="Montgomery";}
	    case 9: {name="Palomino Creek";}
	    case 10: {name="Las Payasdas";}
	    case 11: {name="Las Barbancas";}
	    case 12: {name="El Quebrados";}
	    default: {name="San Andreas";}
	}
	return name;
}

stock GetKeyJobName(id)
{
    new name[32];
	switch (id)
	{
	    case 0: {name="Espace";}
	    case 1: {name="Sauter";}
	    case 2: {name="Entrer";}
	    case 3: {name="N";}
	}
	return name;
}

stock GetInteriorName(id)
{
    new name[32];
	switch (id)
	{
	    case 1: {name="Auto-Ecole";}
	    case 2: {name="A.N.P.E";}
	    case 3: {name="Hopital";}
	    case 4: {name="La Poste";}
	    case 5: {name="Banque";}
	    case 6: {name="Ecole des Langues";}
	    case 7: {name="Eglise";}
	    case 8: {name="Tribunal";}
	}
	return name;
}


stock GetDealerShipName(id)
{
    new name[32];
	switch (id)
	{
	    case 1: {name="Sport";}
	    case 2: {name="Auto";}
	    case 3: {name="4X4 & Utilitaires";}
	    case 4: {name="2 roues";}
	    case 5: {name="Bateau";}
	    case 6: {name="Avion";}
	}
	return name;
}

stock GetInteriorInfo(id, &Int, &Float:x, &Float:y, &Float:z, &Float:a)
{
    switch(id)
	{
	    case 1:
	    	{Int=3; x=1494.2778; y=1303.7288; z=1093.2891; a=0;}
        case 2:
	    	{Int=1; x=1199.4508; y=-74.6475; z=1006.2589; a=180;}
        case 3:
	    	{Int=1; x=-3436.12891; y=472.92865; z=57.61317; a=0;}
        case 4:
	    	{Int=5; x=316.7042; y=294.6810; z=998.4849; a=0;}
        case 5:
	    	{Int=0; x=2305.688964; y=-16.088100; z=26.7495994; a=0;}
        case 6:
	    	{Int=3; x=-1032.7937; y=1967.4984; z=3001.0859; a=270;}
        case 7:
	    	{Int=1; x=1964.0809; y=-349.6421; z=1092.9454; a=180;}
        case 8:
	    	{Int=1; x=-774.6643; y=550.3431; z=2001.0859; a=270;}
	}
}

stock GetCityPlayer(playerid)
{
    new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	#pragma unused z

    if(x >= -994.2332 && x < 2932.5674 && y >= -2964.7822 && y < 499.1327)
	    {return 0;} // LS
	else if(x >= -2977.2312 && x < -994.2332 && y >= -2964.7822 && y < 2973.1956)
	    {return 1;} // SF
	else if(x >= -994.2332 && x < 2932.5674 && y >= 499.1327 && y < 2973.1956)
	    {return 2;} // LV
    else if(x >= -374.3679 && x < 178.0175 && y >= 981.3533 && y < 1257.3018)
	    {return 3;} // FC
    else if(x >= -2694.2791 && x < -2016.9351 && y >= 2163.9771 && y < 2570.9529)
		{return 4;} // BS
    else if(x >= -2426.371582 && x < -1922.371582 && y >= -2566.000000 && y < -2160.000000)
		{return 5;} // AP
    else if(x >= 544.628540 && x < 852.628540 && y >= -681.026611 && y < -387.026611)
		{return 6;} // Dilli
    else if(x >= -127.371459 && x < 502.628540 && y >= -465.323486 && y < 178.676513)
		{return 7;} // Blue
    else if(x >= 1108.769165 && x < 1528.769165 && y >= 144.676513 && y < 424.676513)
		{return 8;} // Mont
    else if(x >= 2118.000000 && x < 2608.000000 && y >= -169.323486 && y < 292.676513)
		{return 9;} // Palo
    else if(x >= -400.824707 && x < -78.824707 && y >= 2552.000000 && y < 2804.000000)
		{return 10;} // LP
    else if(x >= -904.961669 && x < -694.961669 && y >= 1416.254882 && y < 1668.254882)
		{return 11;} // LB
    else if(x >= -1628.000000 && x < -1250.000000 && y >= 2475.192382 && y < 2769.192382)
		{return 12;} // EQ
	else return -1;
}

stock GetCityPos(Float:x, Float:y)
{
    if(x >= -994.2332 && x < 2932.5674 && y >= -2964.7822 && y < 499.1327)
	    {return 0;} // LS
	else if(x >= -2977.2312 && x < -994.2332 && y >= -2964.7822 && y < 2973.1956)
	    {return 1;} // SF
	else if(x >= -994.2332 && x < 2932.5674 && y >= 499.1327 && y < 2973.1956)
	    {return 2;} // LV
    else if(x >= -374.3679 && x < 178.0175 && y >= 981.3533 && y < 1257.3018)
	    {return 3;} // FC
    else if(x >= -2694.2791 && x < -2016.9351 && y >= 2163.9771 && y < 2570.9529)
		{return 4;} // BS
    else if(x >= -2426.371582 && x < -1922.371582 && y >= -2566.000000 && y < -2160.000000)
		{return 5;} // AP
    else if(x >= 544.628540 && x < 852.628540 && y >= -681.026611 && y < -387.026611)
		{return 6;} // Dilli
    else if(x >= -127.371459 && x < 502.628540 && y >= -465.323486 && y < 178.676513)
		{return 7;} // Blue
    else if(x >= 1108.769165 && x < 1528.769165 && y >= 144.676513 && y < 424.676513)
		{return 8;} // Mont
    else if(x >= 2118.000000 && x < 2608.000000 && y >= -169.323486 && y < 292.676513)
		{return 9;} // Palo
    else if(x >= -400.824707 && x < -78.824707 && y >= 2552.000000 && y < 2804.000000)
		{return 10;} // LP
    else if(x >= -904.961669 && x < -694.961669 && y >= 1416.254882 && y < 1668.254882)
		{return 11;} // LB
    else if(x >= -1628.000000 && x < -1250.000000 && y >= 2475.192382 && y < 2769.192382)
		{return 12;} // EQ
	else return -1;
}

stock GetCountyPos(Float:x, Float:y)
{
	if((x >= 81.405517 && x < 2944.000000 && y >= -2834.340332 && y < 511.659667) || (x >= -976.656982 && x < 87.343017 && y >= -344.465240 && y < 369.534759))
	    {return 0;} // Comté de LS
    else if((x >= -2916.000000 && x < 24.000000 && y >= -2922.114746 && y < -346.114746) || (x >= -2958.000000 && x < -1188.421875 && y >= -347.052337 && y < 1528.947631))
	    {return 1;} // Comté de SF
    else if((x >= -1187.146728 && x < 2944.000000 && y >= 520.494506 && y < 2958.000000) || (x >= -2944.000000 && x < -1124.000000 && y >= 1586.000000 && y < 2958.000000))
	    {return 2;} // Comté de LV
    else return -1;
}

stock GetCountyPlayer(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	#pragma unused z
	return GetCountyPos(x, y);
}

stock GetCityCounty(playerid)
{
	if(PlayerInfo[playerid][pCity] == 0 || PlayerInfo[playerid][pCity] == 6 || PlayerInfo[playerid][pCity] == 7 || PlayerInfo[playerid][pCity] == 8 || PlayerInfo[playerid][pCity] == 9)
		{return 0;}
    else if(PlayerInfo[playerid][pCity] == 1 || PlayerInfo[playerid][pCity] == 5)
		{return 1;}
    else if(PlayerInfo[playerid][pCity] == 2 || PlayerInfo[playerid][pCity] == 3 || PlayerInfo[playerid][pCity] == 4 || PlayerInfo[playerid][pCity] == 10 || PlayerInfo[playerid][pCity] == 11 || PlayerInfo[playerid][pCity] == 12)
		{return 2;}
	else return 3;
}

stock UnderscoreToSpace(nameTmp[])
{
	new posTmp = strfind(nameTmp,"_", true);
	if( posTmp != -1 )
		{nameTmp[posTmp] = ' ';}
	return 1;
}

stock MinNumber(...)
{
	new count = numargs(), minnum=99999, argMin;
	for(new i; i < count; i ++)
	{
	    new temp = getarg(i);
	    if(temp !=0 && temp < minnum) {minnum = temp; argMin = i;}
	}
	return argMin;
}

stock player_GetNearHospital(playerid)
{
	new tmpHospital=0, tmpD[10], tmpId[10], idx;
	for(new d=0; d<totalInteriors; d++)
	{
	    if(interiors[d][used] == 1 && interiors[d][typeZ] == 3)
	        {tmpD[idx] = floatround(GetPlayerDistanceFromPoint(playerid, interiors[d][pos][0], interiors[d][pos][1], interiors[d][pos][2])); tmpId[idx]=d; idx++;}
	}
	tmpHospital = MinNumber(tmpD[0],tmpD[1],tmpD[2],tmpD[3],tmpD[4],tmpD[5],tmpD[6],tmpD[7],tmpD[8],tmpD[9]);
	return tmpId[tmpHospital];
}

stock player_IsNearHouse(playerid)
{
    for(new i = 0; i<totalHouses; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,house[i][pos][0],house[i][pos][1],house[i][pos][2]))
			{return i;}
        if(IsPlayerInRangeOfPoint(playerid, 1.5 ,house[i][pos][3],house[i][pos][4],house[i][pos][5]))
			{return i;}
	}
	return -1;
}

stock player_IsNearBizz(playerid)
{
    for(new i = 0; i<totalBizz; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,bizz[i][pos][0],bizz[i][pos][1],bizz[i][pos][2]))
			{return i;}
        if(IsPlayerInRangeOfPoint(playerid, 1.5 ,bizz[i][pos][3],bizz[i][pos][4],bizz[i][pos][5]))
			{return i;}
	}
	return -1;
}

stock player_IsNearGarage(playerid)
{
    for(new i = 0; i<totalGarages; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,garage[i][pos][0],garage[i][pos][1],garage[i][pos][2]))
			{return i;}
        if(IsPlayerInRangeOfPoint(playerid, 1.5 ,garage[i][pos][3],garage[i][pos][4],garage[i][pos][5]))
			{return i;}
	}
	return -1;
}

stock player_IsNearAtm(playerid)
{
    for(new i = 0; i<totalATMs; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,atm[i][pos][0],atm[i][pos][1],atm[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsNearPhone(playerid)
{
    for(new i = 0; i<totalPhoneCabs; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,phone[i][pos][0],phone[i][pos][1],phone[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsNearMap(playerid)
{
    for(new i = 0; i<totalMaps; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,map[i][pos][0],map[i][pos][1],map[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsNearDistributor(playerid)
{
    for(new i = 0; i<totalDistribs; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,distributor[i][pos][0],distributor[i][pos][1],distributor[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsNearBody(playerid)
{
    for(new i = 0; i<totalBodies; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,body[i][pos][0],body[i][pos][1],body[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsNearSign(playerid)
{
    for(new i = 0; i<totalSigns; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,sign[i][pos][0],sign[i][pos][1],sign[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsNearBin(playerid)
{
    for(new i = 0; i<totalBins; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,bin[i][pos][0],bin[i][pos][1],bin[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsNearDealerShip(playerid)
{
    for(new i = 0; i<totalDealerShip; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5 ,dealerShip[i][pos][0],dealerShip[i][pos][1],dealerShip[i][pos][2]))
			{return i;}
	}
	return -1;
}

stock player_IsAtNpcPoint(playerid, type, Float:cercle)
{
    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerNPC(i) && npc[i][typeZ] == type && GetDistanceBetweenPlayers(playerid,i) <= cercle)
	        {return i;}
	}
	return -1;
}

stock player_IsAtActorPoint(playerid, type, Float:cercle)
{
    for(new i=0; i<Streamer_CountItems(STREAMER_TYPE_ACTOR)+1; i++)
	{
	    if(IsValidDynamicActor(i) && actor[i][typeZ] == type && IsPlayerInRangeOfPoint(playerid, cercle, actor[i][pos][0], actor[i][pos][1], actor[i][pos][2]))
	        {return i;}
	}
	return -1;
}

stock player_IsAtBedPoint(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,1.0,-3441.3567,478.4872,57.6132)) 		return 0;
    else if(IsPlayerInRangeOfPoint(playerid,1.0,-3441.2600,474.9741,57.6132)) 	return 1;
    else if(IsPlayerInRangeOfPoint(playerid,1.0,-3447.6213,478.0588,57.6132)) 	return 2;
    else if(IsPlayerInRangeOfPoint(playerid,1.0,-3449.8757,475.9037,57.6132)) 	return 3;
	return -1;
}

stock job_GetRandomVar(var, cityid)
{
	switch(var)
	{
	    case 1:
	    {
	        new hId = random(totalHouses);
	        if(GetCityPos(house[hId][pos][0],house[hId][pos][1]) == cityid)
	            {return hId;}
			else
				{job_GetRandomVar(var,cityid);}
	    }
	    case 2:
	    {
	        new trashid = random(totalTrash);
	        if(GetCityPos(trash[trashid][pos][0],trash[trashid][pos][1]) == cityid)
	            {return trashid;}
			else
				{job_GetRandomVar(var,cityid);}
	    }
	}
	return job_GetRandomVar(var, cityid);
}

stock job_SetSkin(playerid,jobid)
{
	new tmpGenre=PlayerInfo[playerid][pSex];
	
	if(IsPlayerNPC(playerid))
	    {tmpGenre=1;}
		
	switch(jobid)
	{
	    case 1:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,155);}
		}
		case 2:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,158);}
			else
			    {SetPlayerSkin(playerid,157);}
		}
		case 3,5:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,260);}
		}
		case 4:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,262);}
            else
			    {SetPlayerSkin(playerid,131);}
		}
		case 6:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,61);}
		}
		case 7:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,43);}
		}
		case 8:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,35);}
		}
		case 9:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,189);}
		}
		case 10:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,133);}
		}
		case 11:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,274);}
            else
			    {SetPlayerSkin(playerid,308);}
		}
		case 17:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,50);}
		}
		case 19:
	    {
	        if(tmpGenre==1)
	            {SetPlayerSkin(playerid,71);}
		}
	}
	
	return 1;
}

stock player_Divorce(playerid)
{
	new connected=-1;
	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i) && PlayerInfo[i][pSQLID] == PlayerInfo[playerid][pMarriedTo])
	        {connected=i; break;}
	}
	if(connected != -1)
		{PlayerInfo[connected][pMarried]=0;PlayerInfo[connected][pMarriedTo]=-1;}
	else
		{format(sql,sizeof(sql),"UDPATE lvrp_users SET Married=0, MarriedTo=-1 WHERE id = %d",PlayerInfo[playerid][pMarriedTo]); mysql_tquery(MYSQL,sql);}
	PlayerInfo[playerid][pMarried]=0;
	PlayerInfo[playerid][pMarriedTo]=-1;
	return 1;
}

stock player_Mask(playerid,bool:showName)
{
    for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	        {ShowPlayerNameTagForPlayer(i,playerid,showName);}
	}
	return 1;
}

public mariage_Step(playerid,giveplayerid,botid,stepid)
{
	new string[256];
	switch(stepid)
	{
	    case 0: // Annulé
	    {
	        msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le marriage a été annulé.");
	        msg_Client(giveplayerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le marriage a été annulé.");
	        SetActorChatBubble(botid,"Peuple de San Andreas, je déclare ce marrage annulé.",0xFFFFFFDD,NAME_DISTANCE,4000);
            ProxDetector(30.0, botid, "Prêtre: Peuple de San Andreas, je déclare ce marrage annulé.", COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
	        ApplyAnimation(botid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
	        TogglePlayerControllable(playerid,true);
	        TogglePlayerControllable(giveplayerid,true);
	        MariageBot[playerid]=-1; MariageBot[giveplayerid]=-1;
	        MariageStep[playerid]=0; MariageStep[giveplayerid]=0;
	        MariageOffer[playerid]=-1; MariageOffer[giveplayerid]=-1;
	    }
	    case 1:
	    {
	        ApplyAnimation(botid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
			SetActorChatBubble(botid,"Le mariage suppose que les époux sengagent lun envers lautre sans y être forcés et se promettent fidélité toute leur vie.",0xFFFFFFDD,NAME_DISTANCE,7000);
            ProxDetector(30.0, botid, "Prêtre: Le mariage suppose que les époux sengagent lun envers lautre sans y être forcés et se promettent fidélité toute leur vie.", COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
            SetTimerEx("mariage_Step",7000,0,"dddd",playerid,MariageOffer[playerid],botid,2);
	    }
	    case 2:
	    {
	        ApplyAnimation(botid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
	        SetActorChatBubble(botid,"Est-ce bien ainsi que vous lentendez ?",0xFFFFFFDD,NAME_DISTANCE,4000);
            ProxDetector(30.0, botid, "Prêtre: Est-ce bien ainsi que vous lentendez ?", COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
            msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Répondez par 'Oui' (Acceptez) ou 'Non' (Annule le marriage) dans le chat, touche 'T'.");
            msg_Client(giveplayerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Répondez par 'Oui' (Acceptez) ou 'Non' (Annule le marriage) dans le chat, touche 'T'.");
            MariageStep[playerid] = 1; MariageStep[giveplayerid] = 1;
	    }
	    case 3:
	    {
	        format(string,sizeof(string),"%s, voulez vous prendre %s pour épouse, de l'aimer, la chérir, dans la richesse comme dans la pauvreté jusqu'à ce que la mort vous sépare ?");
	        ApplyAnimation(botid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
	        SetActorChatBubble(botid,string,0xFFFFFFDD,NAME_DISTANCE,8000);
	        format(string,sizeof(string),"Prêtre: %s, voulez vous prendre %s pour épouse, de l'aimer, la chérir, dans la richesse comme dans la pauvreté jusqu'à ce que la mort vous sépare ?");
            ProxDetector(30.0, botid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
            msg_Client(MariageOffer[playerid],COLOR_INFO,"{CF9756}» Info «{FFFFFF} Répondez par 'Oui' (Acceptez) ou 'Non' (Annule le marriage) dans le chat, touche 'T'.");
            MariageStep[MariageOffer[playerid]] = 3;
	    }
	    case 4:
	    {
	        format(string,sizeof(string),"%s, voulez vous prendre %s pour époux, de l'aimer, le chérir, dans la richesse comme dans la pauvreté jusqu'à ce que la mort vous sépare ?");
	        ApplyAnimation(botid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
	        SetActorChatBubble(botid,string,0xFFFFFFDD,NAME_DISTANCE,8000);
	        format(string,sizeof(string),"Prêtre: %s, voulez vous prendre %s pour époux, de l'aimer, le chérir, dans la richesse comme dans la pauvreté jusqu'à ce que la mort vous sépare ?");
            ProxDetector(30.0, botid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
            msg_Client(MariageOffer[playerid],COLOR_INFO,"{CF9756}» Info «{FFFFFF} Répondez par 'Oui' (Acceptez) ou 'Non' (Annule le marriage) dans le chat, touche 'T'.");
            MariageStep[MariageOffer[playerid]] = 5;
	    }
	    case 5:
	    {
	        ApplyAnimation(botid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
			SetActorChatBubble(botid,"Peuple de San Andreas, par leurs consentements mutuels, je les déclare unis aux yeux de tous par les liens sacrés du mariage.",0xFFFFFFDD,NAME_DISTANCE,5000);
            ProxDetector(30.0, botid, "Prêtre: Peuple de San Andreas, par leurs consentements mutuels, je les déclare unis aux yeux de tous par les liens sacrés du mariage.", COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,true);
            SetTimerEx("mariage_Step",5000,0,"dddd",MariageOffer[playerid],playerid,botid,6);
	    }
	    case 6:
	    {
	        format(string,sizeof(string),"» %s et %s sont maintenant unis par les liens du marriage !",PlayerInfo[playerid][pRealName],PlayerInfo[giveplayerid][pRealName]);
	        msg_City(interiors[GetPlayerVirtualWorld(playerid)-1][city],COLOR_WHITE,string);
	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Félicitation, vous voilà marrié à %s.",PlayerInfo[giveplayerid][pRealName]);
	        msg_Client(playerid,COLOR_INFO,string);
	        format(string,sizeof(string),"{CF9756}» Info «{FFFFFF} Félicitation, vous voilà marriée à %s.",PlayerInfo[playerid][pRealName]);
	        msg_Client(giveplayerid,COLOR_INFO,string);
	        PlayerInfo[playerid][pMarried]=1; PlayerInfo[giveplayerid][pMarried]=1;
	        PlayerInfo[playerid][pMarriedTo]=PlayerInfo[giveplayerid][pSQLID];
			PlayerInfo[giveplayerid][pMarriedTo]=PlayerInfo[playerid][pSQLID];
	        ClearAnimations(playerid);ClearAnimations(giveplayerid);
			SetPlayerFacingPlayer(playerid, giveplayerid);
			SetPlayerFacingPlayer(giveplayerid, playerid);
			LoopingAnim(playerid, "KISSING", "Grlfrd_Kiss_02", 3.0, 0, 0, 0, 0, 0);
			TogglePlayerControllable(playerid,true);
	        TogglePlayerControllable(giveplayerid,true);
	        MariageBot[playerid]=-1; MariageBot[giveplayerid]=-1;
	        MariageStep[playerid]=0; MariageStep[giveplayerid]=0;
	        MariageOffer[playerid]=-1; MariageOffer[giveplayerid]=-1;
	    }
	}
	return 1;
}

public job_Apply(playerid, jobid, stepid)
{
	if(job_Start[playerid] != 1)
	    {return 1;}
	new string[128];
	switch(jobid)
	{
	    case 3:
	    {
	        if(stepid==1)
	        {
	            if(job_City[playerid]==4)
				{
					TogglePlayerControllable(playerid,true);
					RemovePlayerAttachedObject(playerid,job_HoldingObjectSlot[playerid]);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
					if(player_GetSlotObject(playerid) != -1)
                		{job_HoldingObjectSlot[playerid]=player_GetSlotObject(playerid); SetPlayerAttachedObject( playerid, job_HoldingObjectSlot[playerid], 2936, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 0.476124, 0.468181, 0.470769 );}
					SetPlayerCheckpoint(playerid,-1364.0155,2451.7180,89.8348,3.0);
					msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez au CheckPoint pour déposé le minerai. (Point rouge minimap)");
		        }
		        else
				{
				    job_ObjectN[playerid]=random(4);
			        format(string,sizeof(string),"~y~Appuyez sur la touche : ~n~~w~%s",GetKeyJobName(job_ObjectN[playerid]));
					GameTextForPlayer(playerid,string,5000,6);
		        }
	        }
	    }
	    case 4:
	    {
	        if(stepid==1)
       	 		{AttachDynamicObjectToVehicle(trash_Object[job_ObjectN[playerid]], GetPlayerVehicleID(playerid), 0.000000, -4.399998, 1.300000, 113.000000, 0.000000, 180.000000 ); SetTimerEx("job_Apply",1000,0,"iii",playerid,4,2);}
            else if(stepid==2)
	        	{AttachDynamicObjectToVehicle(trash_Object[job_ObjectN[playerid]], GetPlayerVehicleID(playerid), 0.000000, -4.399998, 0.000000, 0.000000, 0.000000, 180.000000 ); SetTimerEx("job_Apply",1000,0,"iii",playerid,4,3);}
			else if(stepid==3)
			{
			    trash[job_ObjectN[playerid]][quantity]=0;
				trash_UpdateInfos(job_ObjectN[playerid]);
			    TogglePlayerControllable(playerid,true);
			    job_TempVar[playerid]++;
			    if(job_TempVar[playerid]==3)
			    	{job_TakePay(playerid,PlayerInfo[playerid][pJob]); job_TempVar[playerid]=0;}
                job_ObjectN[playerid] = job_GetRandomVar(2,job_City[playerid]);
				SetPlayerCheckpoint(playerid,trash[job_ObjectN[playerid]][pos][0],trash[job_ObjectN[playerid]][pos][1],trash[job_ObjectN[playerid]][pos][2],5.0);
		        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez vider les poubelles. (Point rouge minimap)");
		        job_CheckPoints[playerid]=1;
			}
	    }
	    case 9:
	    {
	        if(stepid==1)
	        {
				new rand = random (2);
				format(string,sizeof(string),"jobValetBot_%d",playerid);
				if(rand == 1)
				{
				    job_TempVar[playerid]=1;
				    rand = random(3);
					msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Un véhicule va arriver préparer vous.");
					if(job_City[playerid] == 0)
				    {
				        if(rand == 0)		ConnectNPC(string,"jobValetBot1_Ls");
						else if(rand == 1)	ConnectNPC(string,"jobValetBot2_Ls");
						else if(rand == 2)	ConnectNPC(string,"jobValetBot3_Ls");
				    }
				    else
				    {
						if(rand == 0)		ConnectNPC(string,"jobValetBot1_Sf");
						else if(rand == 1)	ConnectNPC(string,"jobValetBot2_Sf");
						else if(rand == 2)	ConnectNPC(string,"jobValetBot3_Sf");
					}
					SetTimerEx("job_Apply", 25000, false, "ddd", playerid,9,2);
				}
				else
				{
				    rand = random(6);
				    job_TempVar[playerid]=2;
				    if(job_City[playerid] == 0)
				    {
				        ConnectNPC(string,"jobValetPed_Ls");
						SetPlayerCheckpoint(playerid, gValetPointsLs[rand][0],gValetPointsLs[rand][1],gValetPointsLs[rand][2], 5.0);
				    }
				    else
				    {
					    ConnectNPC(string,"jobValetPed_Sf");
						SetPlayerCheckpoint(playerid, gValetPointsSf[rand][0],gValetPointsSf[rand][1],gValetPointsSf[rand][2], 5.0);
					}
			        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Quelqu'un veut recuperer son véhicule rammener le ici.");
                    for(new car = 1; car <= totalVehicles; car++)
					{
					 	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
						{
						    if(!IsPlayerInVehicle(i,car) && vehicle[car][cType]==CAR_VALET)
						    {
						        if(job_City[playerid] == 0)
						            {SetVehiclePos(car, gValetPointsLs[rand][0],gValetPointsLs[rand][1],gValetPointsLs[rand][2]); SetVehicleZAngle(car, gValetPointsLs[rand][3]);}
						        else
		        					{SetVehiclePos(car, gValetPointsSf[rand][0],gValetPointsSf[rand][1],gValetPointsSf[rand][2]); SetVehicleZAngle(car, gValetPointsSf[rand][3]);}
								job_CarId[playerid]=car;
								return 1;
							}
						}
					}
				}
			}
			else if(stepid==2)
	        {
	            format(string,sizeof(string),"jobValetBot_%d",playerid);
	            for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	            {
	                if(strfind(PlayerInfo[i][pName], string, true) != -1)
					{
					    if(IsPlayerInAnyVehicle(i))
							{job_CarId[playerid] = GetPlayerVehicleID(i);}
						Kick(i);
						break;
					}
	            }
	        }
	    }
	    case 10:
	    {
	        if(stepid==1)
	        {
		        TogglePlayerControllable(playerid,true);
		        msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Allez décharger la cargaison.");
		        if(job_City[playerid] == 0) SetPlayerCheckpoint(playerid,2493.6907,-2090.1719,13.5469,8.0);
		        else if(job_City[playerid] == 1) SetPlayerCheckpoint(playerid,-1833.9839,147.3690,15.1172,8.0);
		        else if(job_City[playerid] == 2) SetPlayerCheckpoint(playerid,2825.8853,912.2676,10.7500,8.0);
	        }
	        else if(stepid==2)
	        {
	            TogglePlayerControllable(playerid,true);
	            SetVehicleToRespawn(job_TempVar[playerid]);
	            job_CheckPoints[playerid]=0; job_TempVar[playerid] = 0;
	            msg_Client(playerid,COLOR_JOB,"{78769D}» Job «{FFFFFF} Utiliser une des remorques pour commencer votre travail.");
	        }
	    }
	}
	return 1;
}

stock GetInvalidCreateModel(modelid)
{
    switch(modelid)
	{
	    case 594, 590, 570, 569, 538, 537, 501, 565, 564, 449, 441: {return 1;}
	}
	return 0;
}

stock GetItemName(modelid)
{
	new name[32]="Aucun";
	switch(modelid)
	{
	    case 1 .. 49 :{GetWeaponName(modelid,name,sizeof(name));}
	    case 1212 :{name="Argent";}
		case 1575 :{name="Weed";}
        case 1576 :{name="Matériaux";}
        case 1577 :{name="Graine";}
        case 1578 :{name="Cocaïne";}
        case 1579 :{name="Heroïne";}
        case 1580 :{name="Ecstasy";}
        case 1950 :{name="Morphine";}
        case 19039 .. 19053 :{name="Montre";}
        case 18926 .. 18935, 19093, 18636, 19160, 18939 .. 18943, 18955 .. 18959 :{name="Casquette";}
        case 18944 .. 18951, 18970 .. 18971, 18969, 19095 .. 19098, 18639, 18962, 19099, 19100 :{name="Chapeau";}
        case 18921 .. 18924 : {name="Beret";}
        case 18634 :{name="Pied de biche";}
        case 18645, 18976 .. 18979 :{name="Casque Moto";}
        case 19006 .. 19035, 19138 .. 19140 :{name="Lunette";}
        case 18891 .. 18920 :{name="Bandana";}
		case 19421 .. 19424:{name="Casque Stereo";}
        case 18875 :{name="GPS";}
        case 1946 :{name="Ball de Basket";}
        case 1650 :{name="Jerricain";}
        case 1485 :{name="Joint";}
        case 1210 :{name="Malette";}
        case 18643, 19080 .. 19084 :{name="Laser";}
        case 1718 :{name="Decodeur";}
        case 2226 :{name="BoomBox";}
        case 2966 :{name="Talkie Walkie";}
        case 2351 :{name="Briquet";}
        case 2751 :{name="Tabac";}
        case 19897 :{name="Cigarettes";}
        case 19087 :{name="Corde";}
        case 18974 :{name="Cagoule";}
        case 1851 :{name="Dé";}
        case 1719 :{name="RadioFm";}
        case 328 :{name="Feuilles";}
        case 2894 :{name="Annuaire";}
        case 2601 :{name="Soda";}
        case 1486 :{name="Bière";}
        case 19563 :{name="Jus de fruit";}
        case 1668 :{name="Eau";}
        case 19569 :{name="Lait";}
		case 19811 :{name="Burger";}
		case 19571 :{name="Pizza";}
		case 2821 :{name="Céréales";}
		case 2769 :{name="Sandwich";}
		case 2663 :{name="Chips";}
	}
	return name;
}

stock GetWepName(modelid)
{
	new name[32]="Aucune";
    switch(modelid)
	{
		case 0:{name="Poing";}
		case 1:{name="Poing Américain";}
		case 2:{name="Club de Golf";}
		case 3:{name="Matraque";}
		case 4:{name="Coûteau";}
		case 5:{name="Batte";}
		case 6:{name="Pell";}
		case 7:{name="ueue de Billard";}
		case 8:{name="Katana";}
		case 9:{name="Tronçonneuse";}
		case 10:{name="God Mauve";}
		case 11:{name="God";}
		case 12:{name="Vibromasseur";}
		case 13:{name="Vibromasseur Gris";}
		case 14:{name="Fleurs";}
		case 15:{name="Canne";}
		case 16:{name="Grenade";}
		case 17:{name="Gaz Lacrymogène";}
		case 18:{name="Cocktail Molotov ";}
		case 22:{name="Colt47 9mm";}
		case 23:{name="Colt47 9mm Silencieux";}
		case 24:{name="Desert Eagle";}
		case 25:{name="Fusil à Pompe";}
		case 26:{name="Fusil à Canon Scié";}
		case 27:{name="Fusil de Cmmbat";}
		case 28:{name="Micro Uzi";}
		case 29:{name="MP5";}
		case 30:{name="AK-47";}
		case 31:{name="M4";}
		case 32:{name="TEC-9";}
		case 33:{name="Fusil";}
		case 34:{name="Sniper";}
		case 35:{name="RPG";}
		case 36:{name="Lance Roquette";}
		case 37:{name="Lance Flammes";}
		case 38:{name="MiniGun";}
		case 39:{name="Charge Explosive";}
		case 40:{name="Detonateur";}
		case 41:{name="Bombe Lacrymogène";}
		case 42:{name="Extincteur";}
		case 43:{name="Appareil Photo";}
		case 44:{name="Vision noctune";}
		case 45:{name="Vision thermale";}
		case 46:{name="Parachute";}
	}
	return name;
}

stock ConvertirTexte (Texte[])
{
	new coriginal[22] = {192, 199, 200, 201, 202, 203, 207, 217, 219, 220, 224, 226, 231, 232, 233, 234, 235, 238, 239, 249, 251, 252};
    new cconvertis[22] = {128, 133, 134, 135, 136, 137, 141, 146, 148, 149, 151, 153, 156, 157, 158, 159, 160, 163, 164, 169, 171, 172};
    new len = strlen(Texte);
    for (new i; i < len; i++)
    {
        for(new j;j < 22;j++)
        {
             if(Texte[i] == coriginal[j])
             {
                  Texte[i] = cconvertis[j];
                  break;
             }
        }
    }
}

stock CreateShamalInt(vehicleid, Float:X, Float:Y, Float:Z)
{
        CreateDynamicObject(14404, X, Y, Z, 0.0, 0.0, 0.0);
        CreateDynamicObject(1562, floatadd(X, difc[0][0]), floatadd(Y, difc[0][1]), floatsub(Z, difc[0][2]), 0.0, 0.0, difc[0][3]);
        CreateDynamicObject(1562, floatadd(X, difc[1][0]), floatsub(Y, difc[1][1]), floatsub(Z, difc[1][2]), 0.0, 0.0, difc[1][3]);
        CreateDynamicObject(1562, floatadd(X, difc[2][0]), floatsub(Y, difc[2][1]), floatsub(Z, difc[2][2]), 0.0, 0.0, difc[2][3]);
        CreateDynamicObject(1562, floatsub(X, difc[3][0]), floatsub(Y, difc[3][1]), floatsub(Z, difc[3][2]), 0.0, 0.0, difc[3][3]);
        CreateDynamicObject(1562, floatsub(X, difc[4][0]), floatsub(Y, difc[4][1]), floatsub(Z, difc[4][2]), 0.0, 0.0, difc[4][3]);
        CreateDynamicObject(1562, floatsub(X, difc[5][0]), floatsub(Y, difc[5][1]), floatsub(Z, difc[5][2]), 0.0, 0.0, difc[5][3]);
        CreateDynamicObject(1563, floatadd(X, difc[6][0]), floatadd(Y, difc[6][1]), floatsub(Z, difc[6][2]), 0.0, 0.0, difc[6][3]);
        CreateDynamicObject(1563, floatadd(X, difc[7][0]), floatsub(Y, difc[7][1]), floatsub(Z, difc[7][2]), 0.0, 0.0, difc[7][3]);
        CreateDynamicObject(1563, floatadd(X, difc[8][0]), floatsub(Y, difc[8][1]), floatsub(Z, difc[8][2]), 0.0, 0.0, difc[8][3]);
        CreateDynamicObject(1563, floatsub(X, difc[9][0]), floatsub(Y, difc[9][1]), floatsub(Z, difc[9][2]), 0.0, 0.0, difc[9][3]);
        CreateDynamicObject(1563, floatsub(X, difc[10][0]), floatsub(Y, difc[10][1]), floatsub(Z, difc[10][2]), 0.0, 0.0, difc[10][3]);
        CreateDynamicObject(1563, floatsub(X, difc[11][0]), floatsub(Y, difc[11][1]), floatsub(Z, difc[11][2]), 0.0, 0.0, difc[11][3]);
        CreateDynamicObject(14405, X, floatsub(Y, difc[12][1]), floatsub(Z, difc[12][2]), 0.0, 0.0, difc[12][3]);
        ShamalPos[vehicleid][0] = X, ShamalPos[vehicleid][1] = Y, ShamalPos[vehicleid][2] = Z;
}

stock CreateAndroInt(vehicleid, Float:X, Float:Y, Float:Z)
{
        CreateDynamicObject(14548, X, Y, Z, 0.0, 0.0, 0.0);
        CreateDynamicObject(14550, floatadd(X, difc[0][0]), floatadd(Y, difc[0][1]), floatsub(Z, difc[0][2]), 0.0, 0.0, difc[0][3]);
        AndroPos[vehicleid][0] = X, AndroPos[vehicleid][1] = Y, AndroPos[vehicleid][2] = Z;
}

stock SetPlayerPosInShamal(playerid, shamalid)
{
        SafeSetPlayerPos(playerid, ShamalPos[shamalid][0],
        floatsub(ShamalPos[shamalid][1], 5.87),
        floatsub(ShamalPos[shamalid][2], 0.75));
        SetPlayerFacingAngle(playerid, 0.0);
        SetCameraBehindPlayer(playerid);
}

stock SetPlayerPosInAndro(playerid, android)
{
        SafeSetPlayerPos(playerid, AndroPos[android][0],
        floatsub(AndroPos[android][1], 5.87),
        floatsub(AndroPos[android][2], 0.75));
        SetPlayerFacingAngle(playerid, 0.0);
        SetCameraBehindPlayer(playerid);
}

stock ShamalExists(vehicleid)
{
        if (floatsqroot(floatadd(ShamalPos[vehicleid][0], floatadd(ShamalPos[vehicleid][1], ShamalPos[vehicleid][2]))))
        	{return 1;}
        return 0;
}

stock AndroExists(vehicleid)
{
        if (floatsqroot(floatadd(AndroPos[vehicleid][0], floatadd(AndroPos[vehicleid][1], AndroPos[vehicleid][2]))))
        	{return 1;}
        return 0;
}

stock randomEx(randval)
{
        new rand1 = random(2), rand2;
        if (!rand1) rand2 -= random(randval);
        else rand2 += random(randval);
        return rand2;
}

stock tuning_RemoveComponent(carid, component)
{
	switch(component)
	{
		case 0 : // Pot d'échapement
		{
			vehicle[carid][tExhausts]=0;
			RemoveVehicleComponent(carid, 1034); RemoveVehicleComponent(carid, 1046); RemoveVehicleComponent(carid, 1065);
			RemoveVehicleComponent(carid, 1064); RemoveVehicleComponent(carid, 1028); RemoveVehicleComponent(carid, 1089);
			RemoveVehicleComponent(carid, 1037); RemoveVehicleComponent(carid, 1045); RemoveVehicleComponent(carid, 1066);
			RemoveVehicleComponent(carid, 1059); RemoveVehicleComponent(carid, 1029); RemoveVehicleComponent(carid, 1092);
		}
		case 1 : // Tablier avant
		{
			vehicle[carid][tFrontBumper]=0;
			RemoveVehicleComponent(carid, 1171); RemoveVehicleComponent(carid, 1153); RemoveVehicleComponent(carid, 1160);
			RemoveVehicleComponent(carid, 1155); RemoveVehicleComponent(carid, 1169); RemoveVehicleComponent(carid, 1166);
			RemoveVehicleComponent(carid, 1172); RemoveVehicleComponent(carid, 1152); RemoveVehicleComponent(carid, 1173);
			RemoveVehicleComponent(carid, 1157); RemoveVehicleComponent(carid, 1170); RemoveVehicleComponent(carid, 1165);
		}
		case 2 : // Tablier arrière
		{
			vehicle[carid][tRearBumper]=0;
			RemoveVehicleComponent(carid, 1149); RemoveVehicleComponent(carid, 1150); RemoveVehicleComponent(carid, 1159);
			RemoveVehicleComponent(carid, 1154); RemoveVehicleComponent(carid, 1141); RemoveVehicleComponent(carid, 1168);
			RemoveVehicleComponent(carid, 1148); RemoveVehicleComponent(carid, 1151); RemoveVehicleComponent(carid, 1161);
			RemoveVehicleComponent(carid, 1156); RemoveVehicleComponent(carid, 1140); RemoveVehicleComponent(carid, 1167);
		}
		case 3 : // Toit
		{
			vehicle[carid][tRoof]=0;
			RemoveVehicleComponent(carid, 1038); RemoveVehicleComponent(carid, 1054); RemoveVehicleComponent(carid, 1067);
			RemoveVehicleComponent(carid, 1055); RemoveVehicleComponent(carid, 1032); RemoveVehicleComponent(carid, 1088);
			RemoveVehicleComponent(carid, 1035); RemoveVehicleComponent(carid, 1053); RemoveVehicleComponent(carid, 1068);
			RemoveVehicleComponent(carid, 1061); RemoveVehicleComponent(carid, 1033); RemoveVehicleComponent(carid, 1091);
		}
		case 4 : // Ailleron
		{
			vehicle[carid][tSpoilers]=0;
			RemoveVehicleComponent(carid, 1147); RemoveVehicleComponent(carid, 1049); RemoveVehicleComponent(carid, 1162);
			RemoveVehicleComponent(carid, 1058); RemoveVehicleComponent(carid, 1138); RemoveVehicleComponent(carid, 1164);
			RemoveVehicleComponent(carid, 1146); RemoveVehicleComponent(carid, 1050); RemoveVehicleComponent(carid, 1158);
			RemoveVehicleComponent(carid, 1060); RemoveVehicleComponent(carid, 1139); RemoveVehicleComponent(carid, 1163);
		}
		case 5 : // Tablier latéraux
		{
			vehicle[carid][tSideBumper]=0;
			vehicle[carid][tSideBumper2]=0;
			RemoveVehicleComponent(carid, 1036); RemoveVehicleComponent(carid, 1040); RemoveVehicleComponent(carid, 1047);
			RemoveVehicleComponent(carid, 1051); RemoveVehicleComponent(carid, 1069); RemoveVehicleComponent(carid, 1071);
			RemoveVehicleComponent(carid, 1056); RemoveVehicleComponent(carid, 1062); RemoveVehicleComponent(carid, 1026);
			RemoveVehicleComponent(carid, 1027); RemoveVehicleComponent(carid, 1090); RemoveVehicleComponent(carid, 1094);

			RemoveVehicleComponent(carid, 1039); RemoveVehicleComponent(carid, 1041); RemoveVehicleComponent(carid, 1072);
			RemoveVehicleComponent(carid, 1052); RemoveVehicleComponent(carid, 1070); RemoveVehicleComponent(carid, 1162);
			RemoveVehicleComponent(carid, 1057); RemoveVehicleComponent(carid, 1063); RemoveVehicleComponent(carid, 1030);
			RemoveVehicleComponent(carid, 1031); RemoveVehicleComponent(carid, 1093); RemoveVehicleComponent(carid, 1095);

		}
		case 6 : // Jantes
		{
			vehicle[carid][tWheels]=0;
			RemoveVehicleComponent(carid, 1079); RemoveVehicleComponent(carid, 1075); RemoveVehicleComponent(carid, 1074);
			RemoveVehicleComponent(carid, 1081); RemoveVehicleComponent(carid, 1080); RemoveVehicleComponent(carid, 1073);
			RemoveVehicleComponent(carid, 1077); RemoveVehicleComponent(carid, 1083); RemoveVehicleComponent(carid, 1082);
			RemoveVehicleComponent(carid, 1085);
		}
		case 7 : // Hidrolics
		{
			vehicle[carid][tHydraulics]=0;
			RemoveVehicleComponent(carid, 1087);
		}
		case 8 : // Nitro
		{
			vehicle[carid][tNitro]=0;
			RemoveVehicleComponent(carid, 1009); RemoveVehicleComponent(carid, 1008); RemoveVehicleComponent(carid, 1010);
		}
	}
}

public OnVehicleDeath(vehicleid, killerid)
{
    if(IsACar(vehicleid))
	{
	    new Float:x, Float:y, Float:z, Float:a;
		GetVehiclePos(vehicleid, x, y, z);
		GetVehicleZAngle(vehicleid,a);
    	trashcar_Create(x,y,z,a);
		/*if(vehicle[vehicleid][cType] == CAR_OWN)
		{
		    vehicle[vehicleid][cVW] = CAR_INT_DEATH;
		    LinkVehicleToInterior(vehicleid,vehicle[vehicleid][cVW]);
		}*/
    	for(new i=0; i<MAX_PLAYERS_CURRENT+1;i++)
    	{
    	    if(IsPlayerConnected(i) && PlayerInfo[i][pJob] == 17 && mecano_Duty[i]==1)
    	        {msg_Client(i,COLOR_LIGHTBLUE,"» Carcasse « Une carcass de véhicule vient d'être localisé. (Point rouge minimap)");SetPlayerCheckpoint(i,z,y,z,8.0);}
    	}
    }
    if(GetVehicleModel(vehicleid) == 497)
    {
        for(new i=0; i<MAX_PLAYERS_CURRENT+1;i++)
        {
            if(PlayerInfo[i][pLastCar] == vehicleid && police_PlayerIsRoped[i] == true)
            {
                DisablePlayerCheckpoint(i);
                police_PlayerIsRoped[i]=false;
                ClearAnimations(i);
                TogglePlayerControllable(i,true);
                for(new a=0;a<50;a++)
                	{DestroyDynamicObject(police_Rope[i][a]);}
			}
        }
    }
    if(IsValidDynamic3DTextLabel(VME[vehicleid]))
		{DestroyDynamic3DTextLabel(VME[vehicleid]);}
  	vehicle[vehicleid][cPanels]=encode_panels(0,0,0,0,0,0,0);
  	vehicle[vehicleid][cDoors]=encode_doors(0,0,0,0,0,0);
	vehicle[vehicleid][cLights]=encode_lights(0,0,0,0);
	vehicle[vehicleid][cTires]=encode_tires(0,0,0,0);
	vehicle[vehicleid][cHealth]=1000.0;
    SetVehicleToRespawn(vehicleid);
    if(B_IsTrailer(vehicleid))
    {
        new veh;
        if((veh = TrailerVehicle[vehicleid]) != 0)
        {
            if(IsCarBlinking(veh))
            {
                if(IsValidDynamicObject(Blink[veh][1]))
                	{DestroyDynamicObject(Blink[veh][1]);}
                Blink[veh][1] = -1;
            }
        }
    }
    else DisableCarBlinking(vehicleid);
	return 1;
}

stock B_IsTrailer(vehicleid) {
    switch(GetVehicleModel(vehicleid))
    {
        case 435, 450, 584, 591, 606: return 1;
    }
    return 0;
}

stock SetCarBlinking(veh, bool:side)
{
    if(IsCarBlinking(veh))
		{return DisableCarBlinking(veh);}
    new id = GetVehicleModel(veh)-400, trailer;
    BlinkSide[veh] = side;
    GetVehicleZAngle(veh, BlinkR[veh]);

    if(id > -1)
    {
        if(BlinkOffset[id][bX] != 0.0)
        	{Blink[veh][0] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);}
        if((trailer = GetVehicleTrailer(veh)) != 0)
        {
            if(B_IsTrailer(trailer))
            	{Blink[veh][1] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);}
        }
        else
        {
            if(BlinkOffset[id][brX] != 0.0)
            	{Blink[veh][1] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);}
        }

        if(side) //left
        {
            if(Blink[veh][0] != 0)
				{AttachDynamicObjectToVehicle(Blink[veh][0], veh, BlinkOffset[id][bX],BlinkOffset[id][bY],BlinkOffset[id][bZ], 0.0, 0.0, 0.0);}
            if(trailer != 0)
            {
                id = GetVehicleModel(trailer)-400;
                AttachDynamicObjectToVehicle(Blink[veh][1], trailer, BlinkOffset[id][brX],BlinkOffset[id][brY],BlinkOffset[id][brZ], 0.0, 0.0, 0.0);
            }
            else
            {
                if(Blink[veh][1] != 0)
					{AttachDynamicObjectToVehicle(Blink[veh][1], veh, BlinkOffset[id][brX],BlinkOffset[id][brY],BlinkOffset[id][brZ], 0.0, 0.0, 0.0);}
            }
        }
        else
        {
            if(Blink[veh][0] != 0) AttachDynamicObjectToVehicle(Blink[veh][0], veh, -BlinkOffset[id][bX],BlinkOffset[id][bY],BlinkOffset[id][bZ], 0.0, 0.0, 0.0);
            if(trailer != 0)
            {
                id = GetVehicleModel(trailer)-400;
                AttachDynamicObjectToVehicle(Blink[veh][1], trailer, -BlinkOffset[id][brX],BlinkOffset[id][brY],BlinkOffset[id][brZ], 0.0, 0.0, 0.0);
            }
            else
            {
                if(Blink[veh][1] != 0) AttachDynamicObjectToVehicle(Blink[veh][1], veh, -BlinkOffset[id][brX],BlinkOffset[id][brY],BlinkOffset[id][brZ], 0.0, 0.0, 0.0);
            }
        }
    }
    return 1;
}

stock DisableCarBlinking(veh)
{
	if(!IsCarBlinking(veh))
		{return 1;}
    if(Blink[veh][0] != -1)
	{
	    if(IsValidDynamicObject(Blink[veh][0]))
			{DestroyDynamicObject(Blink[veh][0]);}
	}
    if(Blink[veh][1] != -1)
	{
		if(IsValidDynamicObject(Blink[veh][1]))
			{DestroyDynamicObject(Blink[veh][1]);}
	}

    Blink[veh][0] = -1;
    Blink[veh][1] = -1;
    return 1;
}

stock IsCarBlinking(vehicleid)
{
    if(Blink[vehicleid][0] == -1 && Blink[vehicleid][1] == -1)
		{return 0;}
    return 1;
}

public OnVehicleSpawn(vehicleid)
{
    tuning_Load(vehicleid);
    tCount[vehicleid] = false;
	vehicle[vehicleid][cEngine] = false;
    vehicle[vehicleid][cWindows][0] = false; vehicle[vehicleid][cWindows][1] = false; vehicle[vehicleid][cWindows][2] = false; vehicle[vehicleid][cWindows][3] = false;
    vehicle[vehicleid][cLight]=false;
    if(police_Siren[vehicleid] !=0)
    {
        if(IsValidDynamicObject(police_Siren[vehicleid]))
			{DestroyDynamicObject(police_Siren[vehicleid]);}
        police_Siren[vehicleid]=0;
    }
    if(vehicle[vehicleid][cType] == CAR_OWN)
		{SafeSetVehicleHealth(vehicleid,vehicle[vehicleid][cHealth]); UpdateVehicleDamageStatus(vehicleid,vehicle[vehicleid][cPanels],vehicle[vehicleid][cDoors],vehicle[vehicleid][cLights],vehicle[vehicleid][cTires]);}
	return 1;
}

public ExplodeShamal(vehicleid)
{
        KillTimer(sExplode[vehicleid]);
        if (tCount[vehicleid])
        {
                CreateExplosion(ShamalPos[vehicleid][0], ShamalPos[vehicleid][1], ShamalPos[vehicleid][2], 2, 15.0);
                sExplode[vehicleid] = SetTimerEx("ExplodeShamal", random(1300)+100, 1, "d", vehicleid);
        }
}

public Decodage(playerid)
{
    new string[128];
    new DecodageChance;
    DecodageChance = random(6);
    switch(DecodageChance)
    {
    	case 0,1,2,3,4:
     	{
			format(string,sizeof(string),"{AADD66}» Banque «{FFFFFF} Le mot de passe du coffre est %d.",mdpbanque);
			msg_Client(playerid,COLOR_LIGHTRED,string);
		    msg_Client(playerid, COLOR_BANK, "{AADD66}» Banque «{FFFFFF} /code <code> pour ouvrir la porte.");
     	}
     	case 5:
     		{msg_Client(playerid, COLOR_INFO, "{CF9756}» Info «{FFFFFF} Votre décodeur a rencontré une erreur, veuillez recommencer.");}
	}
}

stock bizz_ShowDialogGestion(playerid)
{
	new bizid = gPlayerInBizz[playerid];
    new bigstring[512];
    new totoprods = bizz[bizid][prodMax]-bizz[bizid][products];
    new prixprods = totoprods*bizz[bizid][prodCost];
    
    new dore[16];
    if(bizz[bizid][lock]==0)
		{dore="Ouverte";}
    else
		{dore="Fermée";}
		
    format(bigstring,sizeof(bigstring),"Infos sur le biz\nChanger le nom du biz (%s)\nChanger le prix d'entrée ($%d)\nChanger le prix des articles\nPorte (%s)\nDéposer de l'argent dans la caisse ($%d)\nRetirer de l'argent dans la caisse ($%d)\nAcheter des produits (%d pour $%d)",
	bizz[bizid][description],bizz[bizid][enterCost],dore,PlayerInfo[playerid][pCash],bizz[bizid][fund],totoprods,prixprods);
	ShowPlayerDialog(playerid,98,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion",bigstring,"Valider","Quitter");
	player_Dialog[playerid] = 0;
	return 1;
}

stock uniquebizz_ShowDialogGestion(playerid,bizid)
{
    new bigstring[512];
    new totoprods = sbizz[bizid][ubMaxProduits]-sbizz[bizid][ubProduits];
    new prixprods = totoprods*sbizz[bizid][ubPrix_Prod];
    new dore[16],prices[20],special[128];
    
    if(sbizz[bizid][ubHasInt]==1)
    {
	    if(sbizz[bizid][ubLock]==0){dore="Ouverte";}
	    else{dore="Fermée";}
	    format(prices,sizeof(prices),"$%d",sbizz[bizid][ubEnterPrice]);
	}
	else
	{
		dore="Aucune";
		format(prices,sizeof(prices),"Aucun");
	}
	
	if(bizid >= 0 && bizid < MAX_STATION) format(special,sizeof(special),"\n[Spécial] Prix du litre ($%d)",sbizz[bizid][ubPriceArticle][0]);
    else if(bizid >= MAX_STATION && bizid < MAX_STATION+MAX_SPRAY) format(special,sizeof(special),"\n[Spécial] Prix du Spray ($%d)",sbizz[bizid][ubEnterPrice]);
	else if(bizid >= MAX_STATION+MAX_SPRAY+MAX_TUNING+MAX_OPERATOR) format(special,sizeof(special),"\n[Spécial] Prix location ($%d)",sbizz[bizid][ubEnterPrice]);
	
    format(bigstring,sizeof(bigstring),"Infos sur le biz\nChanger le nom du biz (%s)\nDéposer de l'argent dans la caisse ($%d)\nRetirer de l'argent dans la caisse ($%d)\nAcheter des produits (%d pour $%d)\n[Si Int.] Changer le prix des articles\n[Si Int.] Porte (%s)\n[Si Int.] Prix d'entré (%s)%s",
	sbizz[bizid][ubMessage],PlayerInfo[playerid][pCash],sbizz[bizid][ubCaisse],totoprods,prixprods,dore,prices,special);
	ShowPlayerDialog(playerid,103,DIALOG_STYLE_LIST,"{2B6AFF}» Biz «{FFFFFF} Gestion",bigstring,"Valider","Quitter");
	player_Dialog[playerid] = 0;
	return 1;
}

stock gang_ShowDialogEdit(playerid)
{
    new facID = PlayerInfo[playerid][pMember]-200;
	new string[512];
    Dialogue_Gestion_Faction_Gang[playerid] = 0;
	format(string, sizeof(string),"{FFFFFF}- Nom Faction ({FF00FF}%s{FFFFFF}) \n- Qg Position \n- Coffre Position \n- Couleur Faction \n- Rang 1 (%s) \n- Rang 2 (%s) \n- Rang 3 (%s) \n- Rang 4 (%s) \n- Rang 5 (%s) \n- Rang 6 (%s)",FactionInfo[facID][fName],FactionInfo[facID][fRank1],FactionInfo[facID][fRank2],FactionInfo[facID][fRank3],FactionInfo[facID][fRank4],FactionInfo[facID][fRank5],FactionInfo[facID][fRank6]);
	ShowPlayerDialog(playerid,89,DIALOG_STYLE_LIST,"{006500}» Gang «{FFFFFF} Gestion",string,"Valider","Quitter");
	return 1;
}

stock faction_ShowDialogSafe(playerid)
{
    new facID = PlayerInfo[playerid][pMember]-200;
	new string[512];
	format(string, sizeof(string),"{FFFFFF}- Déposer un objet ...\n- Déposer une arme ..\n- Retirer un(e) objet/arme ..\n- Déposer de l'argent (Max: {00FF00}$%d{FFFFFF})\n- Retirer de l'argent (Max: {00FF00}$%d{FFFFFF})\n- Déposer du gilet par balles (Max: {00FF00}%0.0f{FFFFFF})\n- Retirer du gilet par balles (Max: {00FF00}%0.0f{FFFFFF})",
	PlayerInfo[playerid][pCash],FactionInfo[facID][fCash],PlayerInfo[playerid][pArmour],FactionInfo[facID][fArmour]);
	ShowPlayerDialog(playerid,90,DIALOG_STYLE_LIST,"{FFFFFF}» Faction « Coffre",string,"Valider","Quitter");
	player_Dialog[playerid] = 0;
	return 1;
}

stock mafia_ShowDialogGestion(playerid)
{
    new id = PlayerInfo[playerid][pLeader]-200;
    new Megastring[512];
    format(Megastring,sizeof(Megastring),"Changer le nom (%s)\nQG position\nNom rang 1 (%s)\nNom rang 2 (%s)\nNom rang 3 (%s)\nNom rang 4 (%s)\nNom rang 5 (%s)\nNom rang 6 (%s)",FactionInfo[id][fName],FactionInfo[id][fRank1],FactionInfo[id][fRank2],
	FactionInfo[id][fRank3],FactionInfo[id][fRank4],FactionInfo[id][fRank5],FactionInfo[id][fRank6]);
	ShowPlayerDialog(playerid,117,DIALOG_STYLE_LIST,"{717171}» Mafia «{FFFFFF} Gestion",Megastring,"Valider","Annuler");
	mafia_DialogGestion[playerid] = 0;
	return 1;
}

stock body_ShowDialog(playerid,bodyid)
{
    player_Variable[playerid] = bodyid; player_Dialog[playerid] = 0;
    ShowPlayerDialog(playerid,140,DIALOG_STYLE_LIST,"» Cadavre «","{FFFFFF}- Déplacer le cadavre ..\n- Bruler le cadavre\n- Enterrer le cadavre\n[Légale] Inspecter le cadavre\n[Légale] Enlever le cadavre","Valider","Annuler");
    return 1;
}

public StopCameraEffect(playerid)
{
    return SetPlayerDrunkLevel(playerid, 0), 1;
}

stock bizz_ShowDialogTuning(playerid)
{
    vehicle_Save(GetPlayerVehicleID(playerid),1,0);
	new string[512];
	format(string,sizeof(string),"- Couleur\n- Pots\n- Tablier avant\n- Tablier arrère\n- Tablier lateraux\n- Ailleron\n- Toit\n- Jantes\n- Nitro\n- Hydrauliques ($1000)\n- PaintJob\n- Néon");
    ShowPlayerDialog(playerid,134,DIALOG_STYLE_LIST,"{2B6AFF}» Tuning «{FFFFFF}",string,"Valider","Quitter");
    player_Dialog[playerid]=0;
	return 1;
}

stock bag_Load(playerid)
{
	if(PlayerInfo[playerid][pBag] == 0 || bag[playerid][statut]==1 || bag[playerid][show] == 0)
	    {return 1;}
	if(player_GetSlotObject(playerid) != -1)
	{
	    BagSlotObject[playerid]=player_GetSlotObject(playerid);
	    if(PlayerInfo[playerid][pBag] == 1)
	    	{SetPlayerAttachedObject(playerid, BagSlotObject[playerid], 3026, 1, -0.172720, -0.086289, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000,-16730675,0);}
	    else if(PlayerInfo[playerid][pBag] == 2)
	        {SetPlayerAttachedObject(playerid, BagSlotObject[playerid], 3026, 1, -0.172720, -0.086289, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000,-8092540,0);}
	    else if(PlayerInfo[playerid][pBag] == 3)
	        {SetPlayerAttachedObject(playerid, BagSlotObject[playerid], 3026, 1, -0.172720, -0.086289, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000,HexToInt("0xFFFF0000"),0);}
	}
	return 1;
}

stock bag_ShowDialog(playerid,targetid)
{
	if(IsPlayerConnected(targetid))
	{
	    new title[64];
	    DeletePVar(playerid,"bag_ItemSlot");
	    format(title,sizeof(title),"{969696}» Sac «{FFFFFF} %s",PlayerInfo[targetid][pName]);
	    ShowPlayerDialog(playerid,35,DIALOG_STYLE_LIST,title,"{FFFFFF}- Retirer un objet ..\n- Déposer un objet ..\n- Retirer une arme ..\n- Déposer une arme","Valider","Quitter");
	    bag_Dialog[playerid]=0;
	    bag_Target[playerid]=targetid;
	}
	return 1;
}

stock car_Buy(playerid,carid, priceZ)
{
    if(PlayerInfo[playerid][pCar][0] == -1 || PlayerInfo[playerid][pCar][1] == -1 || PlayerInfo[playerid][pCar][2] == -1 || PlayerInfo[playerid][pCar][3] == -1 && PlayerInfo[playerid][pCarDev4] == 1 || PlayerInfo[playerid][pCar][4] == -1 && PlayerInfo[playerid][pCarDev5] == 1 || PlayerInfo[playerid][pCar][5] == -1 && PlayerInfo[playerid][pCarDev6] == 1)
	{
	    if (totalVehicles>MAX_CAR)
			{msg_Client(playerid, COLOR_WHITE, "{FF0069}» Erreur «{FFFFFF} MAX. Veh. Contactez le scripteur !"); return 1;}

		new thiscar = CreateVehicle(carid,vehicle[thiscar][cLocationx],vehicle[thiscar][cLocationy],vehicle[thiscar][cLocationz],vehicle[thiscar][cAngle],1,1,-1);
        format(sql, sizeof(sql), "INSERT INTO lvrp_server_vehicles SET Model=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Description='%s', Owned=1, Color1=1, Color2=1, License='N/A'",
		carid, Car_Reserve_x, Car_Reserve_y, Car_Reserve_z, vehName[carid-400]);
		mysql_query(MYSQL,sql);
		vehicle[thiscar][SQLID] = cache_insert_id();
		totalVehicles++;

		/*for(new i=0; i<=totalVehicles; i++)
		{
		    if(vehicle[i][cType]==CAR_RESERVED) // Si un véicule est en réserve
		    	{thiscar=i; break;}
		}*/
	    if (IsAPlane(carid) || IsAHelicopter(carid))
 		{
 		    SafeSetVehiclePos(thiscar,buyplane_pos[GetCountyPlayer(playerid)][0],buyplane_pos[GetCountyPlayer(playerid)][1],buyplane_pos[GetCountyPlayer(playerid)][2]);
 		    SetVehicleZAngle(thiscar,buyplane_pos[GetCountyPlayer(playerid)][3]);
			vehicle[thiscar][cLocationx] = buyplane_pos[GetCountyPlayer(playerid)][0];
		 	vehicle[thiscar][cLocationy] = buyplane_pos[GetCountyPlayer(playerid)][1];
			vehicle[thiscar][cLocationz] = buyplane_pos[GetCountyPlayer(playerid)][2];
			vehicle[thiscar][cAngle] = buyplane_pos[GetCountyPlayer(playerid)][3];
			SetPlayerCheckpoint(playerid,buyplane_pos[GetCountyPlayer(playerid)][0], buyplane_pos[GetCountyPlayer(playerid)][1], buyplane_pos[GetCountyPlayer(playerid)][2],10.0);
			msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Fécilicitation, votre avion vous attends (Point rouge minimap).");
 		}
 		else if (IsABoat(carid))
   		{
   		    SafeSetVehiclePos(thiscar,buyboat_pos[GetCountyPlayer(playerid)][0],buyboat_pos[GetCountyPlayer(playerid)][1],buyboat_pos[GetCountyPlayer(playerid)][2]);
   		    SetVehicleZAngle(thiscar,buyboat_pos[GetCountyPlayer(playerid)][3]);
            vehicle[thiscar][cLocationx] = buyboat_pos[GetCountyPlayer(playerid)][0];
			vehicle[thiscar][cLocationy] = buyboat_pos[GetCountyPlayer(playerid)][1];
			vehicle[thiscar][cLocationz] = buyboat_pos[GetCountyPlayer(playerid)][2];
			vehicle[thiscar][cAngle] = buyboat_pos[GetCountyPlayer(playerid)][3];
			SetPlayerCheckpoint(playerid,buyboat_pos[GetCountyPlayer(playerid)][0], buyboat_pos[GetCountyPlayer(playerid)][1], buyboat_pos[GetCountyPlayer(playerid)][2],10.0);
			msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Fécilicitation, votre bateau vous attends (Point rouge minimap).");
   		}
   		else if (IsAMoto(carid))
   		{
   		    SafeSetVehiclePos(thiscar,buycar_pos[GetCountyPlayer(playerid)][0],buycar_pos[GetCountyPlayer(playerid)][1],buycar_pos[GetCountyPlayer(playerid)][2]);
   		    SetVehicleZAngle(thiscar,buycar_pos[GetCountyPlayer(playerid)][3]);
            vehicle[thiscar][cLocationx] = buycar_pos[GetCountyPlayer(playerid)][0];
			vehicle[thiscar][cLocationy] = buycar_pos[GetCountyPlayer(playerid)][1];
			vehicle[thiscar][cLocationz] = buycar_pos[GetCountyPlayer(playerid)][2];
			vehicle[thiscar][cAngle] = buycar_pos[GetCountyPlayer(playerid)][3];
			SetPlayerCheckpoint(playerid,buycar_pos[GetCountyPlayer(playerid)][0], buycar_pos[GetCountyPlayer(playerid)][1], buycar_pos[GetCountyPlayer(playerid)][2],10.0);
			msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Fécilicitation, votre moto vous attends (Point rouge minimap).");
		}
		else
  		{
  		    SafeSetVehiclePos(thiscar,buycar_pos[GetCountyPlayer(playerid)][0],buycar_pos[GetCountyPlayer(playerid)][1],buycar_pos[GetCountyPlayer(playerid)][2]);
  		    SetVehicleZAngle(thiscar,buycar_pos[GetCountyPlayer(playerid)][3]);
            vehicle[thiscar][cLocationx] = buycar_pos[GetCountyPlayer(playerid)][0];
			vehicle[thiscar][cLocationy] = buycar_pos[GetCountyPlayer(playerid)][1];
			vehicle[thiscar][cLocationz] = buycar_pos[GetCountyPlayer(playerid)][2];
			vehicle[thiscar][cAngle] = buycar_pos[GetCountyPlayer(playerid)][3];
			SetPlayerCheckpoint(playerid,buycar_pos[GetCountyPlayer(playerid)][0], buycar_pos[GetCountyPlayer(playerid)][1], buycar_pos[GetCountyPlayer(playerid)][2],10.0);
			msg_Client(playerid, COLOR_WHITE, "{8BE2E2}» Véhicule «{FFFFFF} Fécilicitation, votre véhicule vous attends (Point rouge minimap).");
		}
 		vehicle[thiscar][cColorOne] = 1;
 		vehicle[thiscar][cColorTwo] = 1;
 		vehicle[thiscar][cOwned] = 1;
 		vehicle[thiscar][used] = 1;
 		vehicle[thiscar][cHealth] = 1000.0;
		vehicle[thiscar][cModel] = carid;
		strmid(vehicle[thiscar][cOwner], PlayerInfo[playerid][pRealName], 0, strlen(PlayerInfo[playerid][pRealName]), 32);
		format(vehicle[thiscar][cDescription], 32, "%s",vehName[carid-400]);
		format(vehicle[thiscar][cLicense], 32 ,"%s - %d",NICK_NAME,thiscar);
		vehicle[thiscar][cValue] = priceZ;
		vehicle[thiscar][cType] = CAR_OWN;
		vehicle[thiscar][cBrid] = car_GetBridVehicle(thiscar);
		vehicle_Save(thiscar,0,0);
		tuning_Load(thiscar);
		
		vehicle[thiscar][cGas] = 100;
		TogglePlayerControllable(playerid, 1);
		RemovePlayerFromVehicle(playerid);
							
		if(PlayerInfo[playerid][pCar][0] == -1) { PlayerInfo[playerid][pCar][0] = vehicle[thiscar][SQLID]; }
		else if(PlayerInfo[playerid][pCar][1] == -1) { PlayerInfo[playerid][pCar][1] = vehicle[thiscar][SQLID]; }
		else if(PlayerInfo[playerid][pCar][2] == -1) { PlayerInfo[playerid][pCar][2] = vehicle[thiscar][SQLID]; }
		else if(PlayerInfo[playerid][pCar][3] == -1 && PlayerInfo[playerid][pCarDev4] == 1) { PlayerInfo[playerid][pCar][3] = vehicle[thiscar][SQLID]; }
		else if(PlayerInfo[playerid][pCar][4] == -1 && PlayerInfo[playerid][pCarDev5] == 1) { PlayerInfo[playerid][pCar][4] = vehicle[thiscar][SQLID]; }
		else if(PlayerInfo[playerid][pCar][5] == -1 && PlayerInfo[playerid][pCarDev6] == 1) { PlayerInfo[playerid][pCar][5] = vehicle[thiscar][SQLID]; }
		else { return 1; }
		OnPlayerUpdateSQL(playerid);
	}
	return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(AdminDuty[playerid] == 1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	        {SetVehiclePos(GetPlayerVehicleID(playerid),fX,fY,fZ);}
		else
			{SafeSetPlayerPos(playerid,fX,fY,fZ);}
        ResetPlayerIntVar(playerid);
	}
	else
	{
	    new Float:x, Float:y, Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    if(IsPlayerInRangeOfPoint(playerid,5.0,fX,fY,fZ))
	    	{OnPlayerCheat(playerid,17);}
	}
    return 1;
}

stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	    case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 33..45:
		    return weaponid+324;

		case 46:
		    return 371;
	}
	return 0;
}

stock player_CheckEnter(playerid)
{
    new string[64];
	if(PlayerInfo[playerid][pMember] == 10 || AdminDuty[playerid] == 1)
    	{server_Link(playerid,1.0,1570.3828,-1333.8882,16.4844,0.0,0,0,0,"~w~Building San News",1548.7045,-1363.8790,326.2183,0.0,0,0,0,MAP_NAME,1);}
    server_Link(playerid,1.0,224.1463,69.1794,1005.0391,0.0,6,0,0,"~w~Interrogatoire",227.5003,66.7387,1005.0391,0.0,6,0,0,"~w~L.S.P.D",1);
    //server_Link(playerid,1.0,1426.8406,-968.6021,37.4268,0.0,0,0,1,"~w~Magasin",1494.3840,-939.7247,-10.5861,0.0,0,0,1,"~w~Magasin",1);
    //server_Link(playerid,1.0,1512.1113,-942.3927,-7.0812,0.0,0,0,1,"~w~Toit Banque",1423.8717,-971.8007,46.9375,0.0,1,1,1,"~w~Toit Banque",1);
    //server_Link(playerid,1.0,1462.1520,-1007.1535,57.5132,0.0,0,0,1,"~w~Escalier Banque",1463.9150,-977.8880,-27.5934,0.0,0,0,1,"~w~Escalier Banque",1);
    //server_Link(playerid,1.0,2168.2263,1618.6057,999.9782,0.0,0,0,1,"~w~Escalier Banque",1462.8584,-970.0491,-50.1841,0.0,1,1,1,"~w~Escalier Banque",1);
    //server_Link(playerid,1.0,2315.4529,0.3478,26.7422,0.0,1,-1,0,"~w~Salle des coffres",2157.6169,1596.9044,999.9712,0.0,0,-1,0,"~w~Banque",1);
    server_Link(playerid,1.0,2290.1350,-1795.9376,13.5469,270.0,0,0,1,"~w~HLM Ganton",2246.7029, -1815.1901, 2021.5798,0.0,0,0,1,"~w~Los Santos",1);
    server_Link(playerid,1.0,1958.7234,-1560.5118,13.5947,223.9503,0,0,1,"~w~HLM Idlewood",1796.7156,-1299.4781,2132.6875,270.0,0,0,1,"~w~Los Santos",1);
    server_Link(playerid,1.0,943.1296, -2406.0750, 13.2669,0.9503,0,0,0,"~w~Cours",940.5402, -2407.4331, 13.2669,0.0,0,0,0,"~w~Garage",1);
    if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4 || AdminDuty[playerid] == 1)
    {
	    server_Link(playerid,1.0,1524.4834,-1677.8984,6.2188,0.0,6,0,1,"~w~L.S.P.D",210.1814,62.0021,1105.6499,0.0,-1,-1,0,"~w~San Andreas",0);
	    server_Link(playerid,1.0,1565.0078,-1663.8328,28.3956,0.0,6,0,1,"~w~L.S.P.D",210.1814,62.0021,1105.6499,0.0,-1,-1,0,"~w~San Andreas",0);
	    server_Link(playerid,1.0,-1606.3068,672.0677,-4.9063,0.0,6,0,1,"~w~S.F.P.D",-1611.2024,691.5895,14.4749,0.0,-1,-1,0,"~w~San Andreas",0);
	    server_Link(playerid,1.0,-1663.3287,689.3226,24.8906,0.0,6,0,1,"~w~S.F.P.D",-1611.2024,691.5895,14.4749,0.0,-1,-1,0,"~w~San Andreas",0);
	    server_Link(playerid,1.0,611.0023,-583.8382,18.0547,0.0,6,0,1,"~w~S.A.S.D",617.9194,-540.5110,2997.5996,0.0,-1,-1,0,"~w~San Andreas",0);
	    server_Link(playerid,1.0,621.3574,-569.6011,26.1432,0.0,6,0,1,"~w~S.A.S.D",617.9194,-540.5110,2997.5996,0.0,-1,-1,0,"~w~San Andreas",0);
	    //server_Link(playerid,1.0,2509.0774,-1542.7053,24.4796,0.0,6,0,1,"~w~S.A.S.D",210.1854,61.9285,1105.6499,0.0,0,0,0,"~w~San Andreas",0);
    }
    server_Link(playerid,1.0,FBIInfo[Entrance][0],FBIInfo[Entrance][1],FBIInfo[Entrance][2],FBIInfo[Entrance][3],FBIInfo[Interior],0,0,"~w~FBI",FBIInfo[Exit][0],FBIInfo[Exit][1],FBIInfo[Exit][2],FBIInfo[Exit][3],0,0,0,MAP_NAME,1);
    server_Link(playerid,1.0,FireInfo[Entrance][0],FireInfo[Entrance][1],FireInfo[Entrance][2],FireInfo[Entrance][3],FireInfo[Interior],FireInfo[VW],1,"~w~LSFD",FireInfo[Exit][0],FireInfo[Exit][1],FireInfo[Exit][2],FireInfo[Exit][3],0,0,0,MAP_NAME,1);
    server_Link(playerid,1.0,BikerInfo[Entrance][0],BikerInfo[Entrance][1],BikerInfo[Entrance][2],BikerInfo[Entrance][3],BikerInfo[Interior],0,0,"~w~Biker'z",BikerInfo[Exit][0],BikerInfo[Exit][1],BikerInfo[Exit][2],BikerInfo[Exit][3],0,0,0,MAP_NAME,1);
	server_Link(playerid,1.0,MecanoInfo[Entrance][0],MecanoInfo[Entrance][1],MecanoInfo[Entrance][2],MecanoInfo[Entrance][3],MecanoInfo[Interior],MecanoInfo[VW],1,"~w~Mecano",MecanoInfo[Exit][0],MecanoInfo[Exit][1],MecanoInfo[Exit][2],MecanoInfo[Exit][3],0,0,0,MAP_NAME,1);

	// Polices
	server_Link(playerid,1.0,police[0][pos][0],police[0][pos][1],police[0][pos][2],police[0][pos][3],police[0][interior],0,1,"~w~LSPD Centre",police[0][pos][4],police[0][pos][5],police[0][pos][6],police[0][pos][7],0,0,0,MAP_NAME,1);
	server_Link(playerid,1.0,police[1][pos][0],police[1][pos][1],police[1][pos][2],police[1][pos][3],police[1][interior],0,1,"~w~SFPD",police[1][pos][4],police[1][pos][5],police[1][pos][6],police[1][pos][7],0,0,0,MAP_NAME,1);
	server_Link(playerid,1.0,police[2][pos][0],police[2][pos][1],police[2][pos][2],police[2][pos][3],police[2][interior],0,1,"~w~LVPD",police[2][pos][4],police[2][pos][5],police[2][pos][6],police[2][pos][7],0,0,0,MAP_NAME,1);
	server_Link(playerid,1.0,police[3][pos][0],police[3][pos][1],police[3][pos][2],police[3][pos][3],police[3][interior],0,1,"~w~SASD",police[3][pos][4],police[3][pos][5],police[3][pos][6],police[3][pos][7],0,0,0,MAP_NAME,1);

	// Gouvernements
	server_Link(playerid,1.0,governement[0][pos][0],governement[0][pos][1],governement[0][pos][2],governement[0][pos][3],governement[0][interior],1,1,"~w~Gouvernement LS",governement[0][pos][4],governement[0][pos][5],governement[0][pos][6],governement[0][pos][7],0,0,0,MAP_NAME,1);
	server_Link(playerid,1.0,governement[1][pos][0],governement[1][pos][1],governement[1][pos][2],governement[1][pos][3],governement[1][interior],2,1,"~w~Gouvernement SF",governement[1][pos][4],governement[1][pos][5],governement[1][pos][6],governement[1][pos][7],0,0,0,MAP_NAME,1);
	server_Link(playerid,1.0,governement[2][pos][0],governement[2][pos][1],governement[2][pos][2],governement[2][pos][3],governement[2][interior],3,1,"~w~Gouvernement LV",governement[2][pos][4],governement[2][pos][5],governement[2][pos][6],governement[2][pos][7],0,0,0,MAP_NAME,1);
	server_Link(playerid,1.0,governement[3][pos][0],governement[3][pos][1],governement[3][pos][2],governement[3][pos][3],governement[3][interior],4,1,"~w~Gouvernement SA",governement[3][pos][4],governement[3][pos][5],governement[3][pos][6],governement[3][pos][7],0,0,0,MAP_NAME,1);

	for(new i = 0; i < totalInteriors; i++)
	{
	    if(PlayerToPoint(1, playerid,interiors[i][pos][0],interiors[i][pos][1],interiors[i][pos][2]) && interiors[i][used] == 1)
		{
		    if(interiors[i][typeZ] == 5 && GetPlayerWeapon(playerid) > 21 && 33 < GetPlayerWeapon(playerid))
		    {
		        msg_Radio(1, TEAM_RADIO_COLOR, "[Sécurité Banque] Les détecteurs de la banque ont détecté des choses étranges.");
		        msg_Radio(2, TEAM_RADIO_COLOR, "[Sécurité Banque] Les détecteurs de la banque ont détecté des choses étranges.");
		        msg_Radio(3, TEAM_RADIO_COLOR, "[Sécurité Banque] Les détecteurs de la banque ont détecté des choses étranges.");
		        msg_Radio(4, TEAM_RADIO_COLOR, "[Sécurité Banque] Les détecteurs de la banque ont détecté des choses étranges.");
		    }
		    server_SetPlayerVirtualWorld(playerid, i+1);
			format(string,sizeof(string),"~w~%s",GetInteriorName(interiors[i][typeZ]));
			GameTextForPlayer(playerid, string, 3000, 1);
			server_SetPlayerInterior(playerid, interiors[i][interior]);
			gPlayerInInterior[playerid] = i;
			SetTimerEx("chargement",3000,0,"i",playerid);
			TogglePlayerControllable(playerid, 0);
			SafeSetPlayerPos(playerid,interiors[i][pos][4],interiors[i][pos][5],interiors[i][pos][6]);
			SetPlayerFacingAngle(playerid,interiors[i][pos][7]);
		}
	}
	for(new i = 0; i < totalFactions; i++)
	{
		if(PlayerToPoint(1, playerid,FactionInfo[i][fEntrance][0],FactionInfo[i][fEntrance][1],FactionInfo[i][fEntrance][2]))
		{
			if(PlayerInfo[playerid][pMember] == i+200 || PlayerInfo[playerid][pLeader] == i+200 || AdminDuty[playerid]==1)
			{
				server_SetPlayerVirtualWorld(playerid, FactionInfo[i][fWV]);
				format(string,sizeof(string),"~w~%s",FactionInfo[i][fName]);
			 	GameTextForPlayer(playerid, string, 3000, 1);
				server_SetPlayerInterior(playerid, FactionInfo[i][fInt]);
				gPlayerInFaction[playerid] = i;
				SafeSetPlayerPos(playerid,FactionInfo[i][fExit][0],FactionInfo[i][fExit][1],FactionInfo[i][fExit][2]);
			}
			else if(FactionInfo[i][fLock] == 0)
			{
			    server_SetPlayerVirtualWorld(playerid, FactionInfo[i][fWV]);
				format(string,sizeof(string),"~w~%s",FactionInfo[i][fName]);
				GameTextForPlayer(playerid, string, 3000, 1);
				server_SetPlayerInterior(playerid, FactionInfo[i][fInt]);
				gPlayerInFaction[playerid] = i;
				SafeSetPlayerPos(playerid,FactionInfo[i][fExit][0],FactionInfo[i][fExit][1],FactionInfo[i][fExit][2]);
			}
			else
			    {GameTextForPlayer(playerid, "~r~Fermer", 5000, 1);}
			return 1;
		}
	}
	for(new ma = 0; ma < totalHouses; ma++)
	{
		if(PlayerToPoint(1, playerid,house[ma][pos][0],house[ma][pos][1],house[ma][pos][2]))
		{
			if(house[ma][owned] == 1)
			{
				if(PlayerInfo[playerid][pHousekey1]==ma || PlayerInfo[playerid][pHousekey2]==ma || PlayerInfo[playerid][pHousekey3]==ma || AdminDuty[playerid]==1)
				{
			 		server_SetPlayerVirtualWorld(playerid, house[ma][world]);
					server_SetPlayerInterior(playerid, house[ma][interior]);
					gPlayerInHouse[playerid] = ma;
					SafeSetPlayerPos(playerid,house[ma][pos][3],house[ma][pos][4],house[ma][pos][5]);
					SetTimerEx("chargement",3000,0,"i",playerid); TogglePlayerControllable(playerid,false);
				}
				else if(house[ma][lock] == 0)
				{
					server_SetPlayerVirtualWorld(playerid, house[ma][world]);
					server_SetPlayerInterior(playerid, house[ma][interior]);
					gPlayerInHouse[playerid] = ma;
					SafeSetPlayerPos(playerid,house[ma][pos][3],house[ma][pos][4],house[ma][pos][5]);
					SetTimerEx("chargement",3000,0,"i",playerid); TogglePlayerControllable(playerid,false);
				}
				else
				    {GameTextForPlayer(playerid, "~r~Fermer", 5000, 1);}
			}
			else
			{
				msg_Client(playerid,COLOR_HOUSE,"{00C600}» Maison «{FFFFFF} Vous visitez la maison.");
		  		server_SetPlayerVirtualWorld(playerid, house[ma][world]);
				server_SetPlayerInterior(playerid, house[ma][interior]);
				gPlayerInHouse[playerid] = ma;
				SafeSetPlayerPos(playerid,house[ma][pos][3],house[ma][pos][4],house[ma][pos][5]);
				SetTimerEx("chargement",3000,0,"i",playerid); TogglePlayerControllable(playerid,false);
			}
			return 1;
		}
	}
	for(new biz = 0; biz < totalBizz; biz++)
	{
		if(PlayerToPoint(1, playerid,bizz[biz][pos][0],bizz[biz][pos][1],bizz[biz][pos][2]))
		{
			if(bizz[biz][variable]==0)
			    {msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Impossible d'entrer dans ce biz."); break;}
			if(PlayerInfo[playerid][pBizkey1]==biz || PlayerInfo[playerid][pBizkey2]==biz || PlayerInfo[playerid][pBizkey3]==biz || AdminDuty[playerid]==1 || bizz[biz][lock] == 0)
			{
   				if(PlayerInfo[playerid][pCash]< bizz[biz][enterCost])
					{return msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas assez d'argent.");}
				if(bizz[biz][typeZ] >= 21 && bizz[biz][typeZ] <= 24)
				    {SetTimerEx("chargement",3000,0,"i",playerid); TogglePlayerControllable(playerid, 0);}
				server_SetPlayerVirtualWorld(playerid, biz);
   				server_SetPlayerInterior(playerid, bizz[biz][interior]);
				gPlayerInBizz[playerid] = biz;
				SafeSetPlayerPos(playerid,bizz[biz][pos][3],bizz[biz][pos][4],bizz[biz][pos][5]);
				SafeGivePlayerMoney(playerid, -bizz[biz][enterCost],"Entré dans un biz");
				bizz[biz][fund] += bizz[biz][enterCost];
				bizz_Save(biz);
			}
			else
				{GameTextForPlayer(playerid, "~r~Fermer", 5000, 1);}
			return 1;
		}
	}
	for(new biz = 0; biz < MAX_SBIZZ; biz++)
	{
		if(PlayerToPoint(1, playerid,sbizz[biz][ubEntrance_x],sbizz[biz][ubEntrance_y],sbizz[biz][ubEntrance_z]))
		{
			if(sbizz[biz][ubHasInt] == 0)
	   			{msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Ce biz n'a pas d'interrieur.");return 1;}
	   		if(PlayerInfo[playerid][pBizkey1]==biz+1000 || PlayerInfo[playerid][pBizkey2]==biz+1000 || PlayerInfo[playerid][pBizkey3]==biz+1000 || AdminDuty[playerid]==1)
			{
			    if(biz>=MAX_STATION+MAX_SPRAY+MAX_TUNING && biz<=MAX_STATION+MAX_SPRAY+MAX_TUNING+3){SetTimerEx("chargement",3000,0,"i",playerid); TogglePlayerControllable(playerid,false);}
		   		server_SetPlayerVirtualWorld(playerid, biz+1000);
		   		server_SetPlayerInterior(playerid, sbizz[biz][ubInt]);
				gPlayerInSBizz[playerid] = biz+1000;
				SafeSetPlayerPos(playerid,sbizz[biz][ubExit_x],sbizz[biz][ubExit_y],sbizz[biz][ubExit_z]);
			}
			else if(sbizz[biz][ubLock] == 0)
			{
			    if(biz>=MAX_STATION+MAX_SPRAY+MAX_TUNING && biz<=MAX_STATION+MAX_SPRAY+MAX_TUNING+3){SetTimerEx("chargement",3000,0,"i",playerid); TogglePlayerControllable(playerid,false);}
			    if(PlayerInfo[playerid][pCash]< sbizz[biz][ubEnterPrice]){msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Vous n'avez pas assez d'argent."); return 1;}
			    server_SetPlayerVirtualWorld(playerid, biz+1000);
		   		server_SetPlayerInterior(playerid, sbizz[biz][ubInt]);
				gPlayerInSBizz[playerid] = biz+1000;
				SafeSetPlayerPos(playerid,sbizz[biz][ubExit_x],sbizz[biz][ubExit_y],sbizz[biz][ubExit_z]);
				SafeGivePlayerMoney(playerid, -sbizz[biz][ubEnterPrice],"Entré dans un BizUnique");
				sbizz[biz][ubCaisse] += sbizz[biz][ubEnterPrice];
				uniquebizz_Save(biz);
			}
			else
				{GameTextForPlayer(playerid, "~r~Fermer", 5000, 1);}
			return 1;
		}
	}
	if(gPlayerInInterior[playerid] != -1)
	{
	    new intId = gPlayerInInterior[playerid];
	    if(PlayerToPoint(1, playerid,interiors[intId][pos][4],interiors[intId][pos][5],interiors[intId][pos][6]))
		{
		    server_SetPlayerVirtualWorld(playerid, 0);
			format(string,sizeof(string),"~w~%s",GetCityName(playerid));
			GameTextForPlayer(playerid, string, 3000, 1);
			server_SetPlayerInterior(playerid, 0);
			gPlayerInInterior[playerid] = -1;
			SetTimerEx("chargement",3000,0,"i",playerid);
			TogglePlayerControllable(playerid, 0);
			SafeSetPlayerPos(playerid,interiors[intId][pos][0],interiors[intId][pos][1],interiors[intId][pos][2]);
			SetPlayerFacingAngle(playerid,interiors[intId][pos][3]);
			ResetPlayerIntVar(playerid);
		}
	}
	if(gPlayerInBizz[playerid] != -1)
	{
		new bizid = gPlayerInBizz[playerid];
		if(PlayerToPoint(1, playerid,bizz[bizid][pos][3],bizz[bizid][pos][4],bizz[bizid][pos][5]))
		{
				if(gang_PlayerIsBrakeBizz[playerid] == 1)
				{
			        gang_PlayerIsBrakeBizz[playerid] = 0; gang_TimerPlayerVoleBizz[playerid] = 0;
			        bizz_IsRob[bizid]=false;
			        msg_Client(playerid,COLOR_GANG,"{006500}» Gang «{FFFFFF} Vous êtes sorti, vous avez échoué le cambriolage.");
			        ClearDynamicActorAnimations(bizz[bizid][actorId][0]);
			    }
			    SetTimerEx("chargement",3000,0,"i",playerid);
				TogglePlayerControllable(playerid,false);
			    server_SetPlayerVirtualWorld(playerid, 0);
			    GameTextForPlayer(playerid, MAP_NAME, 5000, 1);
			    server_SetPlayerInterior(playerid, 0);
			    SafeSetPlayerPos(playerid,bizz[bizid][pos][0],bizz[bizid][pos][1],bizz[bizid][pos][2]);
			    gPlayerInBizz[playerid] = -1;
			    ResetPlayerIntVar(playerid);
		}
	}
	if(gPlayerInSBizz[playerid] != -1)
	{
		new bizid = gPlayerInSBizz[playerid]-1000;
		if(PlayerToPoint(1, playerid,sbizz[bizid][ubExit_x],sbizz[bizid][ubExit_y],sbizz[bizid][ubExit_z]))
		{
		    SetTimerEx("chargement",3000,0,"i",playerid);
			TogglePlayerControllable(playerid,false);
		    server_SetPlayerVirtualWorld(playerid, 0);
		    GameTextForPlayer(playerid, MAP_NAME, 5000, 1);
		    server_SetPlayerInterior(playerid, 0);
		    gPlayerInSBizz[playerid] = -1;
		    msg_Client(playerid,COLOR_BIZ,"{2B6AFF}» Biz «{FFFFFF} Merci pour votre visite, à bientôt!");
		    SafeSetPlayerPos(playerid,sbizz[bizid][ubEntrance_x],sbizz[bizid][ubEntrance_y],sbizz[bizid][ubEntrance_z]);
		    ResetPlayerIntVar(playerid);
		}
	}
	if(gPlayerInFaction[playerid] != -1)
	{
	    new intid = gPlayerInFaction[playerid];
	    if(PlayerToPoint(1, playerid,FactionInfo[intid][fExit][0],FactionInfo[intid][fExit][1],FactionInfo[intid][fExit][2]))
		{
		    SetTimerEx("chargement",3000,0,"i",playerid);
			TogglePlayerControllable(playerid,false);
		    server_SetPlayerVirtualWorld(playerid, 0);
		    GameTextForPlayer(playerid, MAP_NAME, 5000, 1);
		    server_SetPlayerInterior(playerid, 0);
		    gPlayerInFaction[playerid] = -1;
		    SafeSetPlayerPos(playerid,FactionInfo[intid][fEntrance][0],FactionInfo[intid][fEntrance][1],FactionInfo[intid][fEntrance][2]);
		    ResetPlayerIntVar(playerid);
		}
	}
	if(gPlayerInHouse[playerid] != -1)
	{
	    new intid = gPlayerInHouse[playerid];
	    if(PlayerToPoint(1, playerid,house[intid][pos][3],house[intid][pos][4],house[intid][pos][5]))
		{
		    SetTimerEx("chargement",3000,0,"i",playerid);
			TogglePlayerControllable(playerid,false);
		    server_SetPlayerVirtualWorld(playerid, 0);
		    GameTextForPlayer(playerid, MAP_NAME, 5000, 1);
		    server_SetPlayerInterior(playerid, 0);
		    gPlayerInHouse[playerid] = -1;
		    SafeSetPlayerPos(playerid,house[intid][pos][0],house[intid][pos][1],house[intid][pos][2]);
		    ResetPlayerIntVar(playerid);
		}
	}
	return 1;
}

stock player_CheckInteraction(playerid)
{
	if(GetPlayerState(playerid) != 1)
	    {return 1;}

	new string[512],
		tmpId=-1;
		
  	gate_Check(playerid,2,"None");
		
	if(player_CarryBody[playerid] != -1)
	    {body_StopCarry(playerid,0);}

	// MISC
	if(player_IsNearAtm(playerid) != -1)
	{
	    tmpId=player_IsNearAtm(playerid);
	    if(atm[tmpId][rob]>=1)
		    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Cet ATM a été vandalisé, il est inutilisable !");}
        format(string, sizeof(string), "Max dans l'atm : $%d\nMax sur votre compte : $%d\nEntrer le montant que vous désirez retirer :",atm[tmpId][cash], PlayerInfo[playerid][pAccount]);
		ShowPlayerDialog(playerid,79,DIALOG_STYLE_INPUT,"» Atm « Retrait",string,"Retirer","Annuler");
	}
	else if(player_IsNearDistributor(playerid) != -1)
		{ShowPlayerDialog(playerid,16,DIALOG_STYLE_TABLIST,"{2B6AFF}» Distributeur «{FFFFFF} Achats","{AFAFAF}Boisson\t{AFAFAF}$2\t{AFAFAF}+20 de soif{FFFFFF}\nCoca Cola\nFanta\nOrangina\nOasis\nCafé\nEau\nChocolat Chaud\n{AFAFAF}Gâteau\t{AFAFAF}$2\t{AFAFAF}+20 de faim{FFFFFF}\nKinder\nTwix\nMars\nLion\nChips\nBonBon","Acheter","Annuler");}
	else if(player_IsNearMap(playerid) != -1)
	{
	    tmpId=player_IsNearMap(playerid);
	    ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"» GPS/Carte « Ville","{FFFFFF}- Los Santos\n- San Fierro\n- Las Venturas\n- Fort Carson\n- Bay Side\n- Angel Pine\n- Dillimore\n- Blueberry\n- Montgomery\n- Palomino Creek\n- Las Payasdas\n- Las Barbancas\n- El Quebrados","Valider","Eteindre");
	    player_Dialog[playerid]=0;
	}
	else if(player_IsNearBody(playerid) != -1)
	{
	    if(player_CarryBody[playerid] !=-1)
	        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Impossible d'interagire avec ce cadavre, vous en avez déjà un en main.");}
	    tmpId=player_IsNearBody(playerid);
	    if(body[tmpId][fire] == true)
			{return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Le cadavre est déjà en train d'être brûlé ou enterré.");}
		body_ShowDialog(playerid,tmpId);
	}
	else if(player_IsNearBin(playerid) != -1)
	{
	    tmpId=player_IsNearBin(playerid);
	    bin_ShowDialog(playerid,tmpId);
	}
	else if(player_IsNearDealerShip(playerid) != -1)
	{
	    tmpId=player_IsNearDealerShip(playerid);
	    format(sql,sizeof(sql),"SELECT * FROM lvrp_server_vehicles_prices WHERE dealerShip=%d",dealerShip[tmpId][typeZ]);
	    mysql_tquery(MYSQL,sql,"dealerShip_ShowDialog","ii",playerid,tmpId);
	}
	else if(player_IsAtBedPoint(playerid) != -1)
	{
	    if(PlayerInfo[playerid][pHealth] > 100)
	        {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous ne pouvez pas vous allonger.");}
		if(player_Lie[playerid] !=0)
		    {return msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous êtes déjà allongé.");}
		    
		TogglePlayerControllable(playerid,false);
		tmpId=player_IsAtBedPoint(playerid);
		player_Lie[playerid]=1;
		SafeSetPlayerPos(playerid,gBedPoints[tmpId][0],gBedPoints[tmpId][1],gBedPoints[tmpId][2]);
		SetPlayerFacingAngle(playerid,gBedPoints[tmpId][3]);
		ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 1, 0, 0, 0, 0, 1);
		msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous vous êtes allongé.");
	}
	else if(player_IsAtActorPoint(playerid,3,2.0) != -1)
	{
	    tmpId=player_IsAtActorPoint(playerid,3,2.0);
	    if(PlayerInfo[playerid][pJob] != 0)
	        {msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous avez déjà un job !"); SetActorChatBubble(tmpId,"T'as pas déjà un job toi ?!",0xFFFFFFDD,NAME_DISTANCE,5000); LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0); return 1;}
        SetActorChatBubble(tmpId,"Tiens, dis moi ce que tu penses de ce contrat.",0xFFFFFFDD,NAME_DISTANCE,5000);
        ApplyDynamicActorAnimation(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
		GettingJob[playerid] = actor[tmpId][variable];
		format(string,sizeof(string),"Vous êtes sur le point d'être embauché en tant que %s.",GetJobName(actor[tmpId][variable]));
		ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job",string,"Accepter","Refuser");
		format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
	}
	else if(player_IsAtActorPoint(playerid,2,3.0) != -1 && gPlayerInInterior[playerid] != -1)
	{
	    tmpId=player_IsAtActorPoint(playerid,2,3.0);
	    SetActorChatBubble(tmpId,"Bonjour, que désirez-vous ?",0xFFFFFFDD,NAME_DISTANCE,5000);
        ApplyDynamicActorAnimation(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
        if(actor[tmpId][variable] == 1)
        {
            if(permis_Player[playerid]!=0)
				{return 1;}
			format(string,sizeof(string),"Permis\tPrix\nConduire\t$%d\nMoto\t$%d\nVol\t$%d\nNavigation\t$%d\nPoid lourd\t$%d\nRecupération d'un point\t$%d",
			governement[interiors[gPlayerInInterior[playerid]][city]][license][0],governement[interiors[gPlayerInInterior[playerid]][city]][license][1],
			governement[interiors[gPlayerInInterior[playerid]][city]][license][2],governement[interiors[gPlayerInInterior[playerid]][city]][license][6],
			governement[interiors[gPlayerInInterior[playerid]][city]][license][3],LICENSE_POINT);
			ShowPlayerDialog(playerid, 71, DIALOG_STYLE_TABLIST_HEADERS,"{DE673A}» Auto-Ecole «{FFFFFF} Choix du permis",string,"Valider", "Quitter");
        }
        else if(actor[tmpId][variable] == 2)
        {
            if(PlayerInfo[playerid][pJob] != 0 || PlayerInfo[playerid][pMember] != 0)
                {SetActorChatBubble(tmpId,"Désolé, mais vous faites déjà partie d'une organisation.",0xFFFFFFDD,NAME_DISTANCE,5000); LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0); return 1;}
            SetActorChatBubble(tmpId,"Dans quelle ville recherchez-vous un travail ?",0xFFFFFFDD,NAME_DISTANCE,5000);
			LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
			player_Dialog[playerid] = 0;
			new tmpstring[128]="{FFFFFF}";
			for(new i=0; i<MAX_CITY; i++)
			{
			    format(tmpstring,sizeof(tmpstring),"- %s\n",GetCityName(i));
			    strins(string,tmpstring,strlen(string),sizeof(string));
			}
			ShowPlayerDialog(playerid,145,DIALOG_STYLE_LIST,"» Job « Villes",string,"Valider","Annuler");
		}
        else if(actor[tmpId][variable] == 3)
        {
            SetActorChatBubble(tmpId,"Des lits sont à votre disposition.",0xFFFFFFDD,NAME_DISTANCE,5000);
			LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
        }
        else if(actor[tmpId][variable] == 4)
        {
            SetActorChatBubble(tmpId,"Désolé, nous sommes en rupture de stock.",0xFFFFFFDD,NAME_DISTANCE,5000);
			LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
        }
        else if(actor[tmpId][variable] == 5)
        {
            player_Variable[playerid] = 0;
	 		format(string,sizeof(string),"Infos sur le compte \nDéposer du liquide (MAX:$%d) \nRetirer du liquide (MAX:$%d)\nVirement Bancaire\nDemander un chéquier",PlayerInfo[playerid][pCash],PlayerInfo[playerid][pAccount]);
			ShowPlayerDialog(playerid,86,DIALOG_STYLE_LIST,"{AADD66}» Banque «{FFFFFF} Opérations disponibles",string,"Valider","Quitter");
        }
        else if(actor[tmpId][variable] == 6)
        {
            format(string,sizeof(string),"Japonais\nEspagnol\nRusse\nArabe\nItalien\nAllemand\nFrançais\nChinois\nPortugais\nTurc\nAntillais\nMexicain\nCréole\nJamaicain\nCoréen\nCantonais\nUkrainien");
	  		ShowPlayerDialog(playerid, 8, DIALOG_STYLE_LIST,"|Ecole des Langues| Prix leçon : $75",string,"Acheter", "Quitter");
        }
        else if(actor[tmpId][variable] == 7)
        {
        }
   	}
	else if(player_IsAtNpcPoint(playerid,2,1.5) != -1)
	{
	    tmpId=player_IsAtNpcPoint(playerid,4,3.5);
	    SetActorChatBubble(tmpId,"Bonjour, que désirez-vous ?",0xFFFFFFDD,NAME_DISTANCE,5000);
        LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
        ShowPlayerDialog(playerid,144,DIALOG_STYLE_MSGBOX,"{FFFFFF}» Ticket «","{FFFFFF} Le prix d'achat d'un ticket de train est de {00FF00}$50{FFFFFF}.","Acheter","Annuler");
	}
	else if(player_IsAtNpcPoint(playerid,5,1.5) != -1)
	{
	    tmpId=player_IsAtNpcPoint(playerid,5,3.5);
	    SetActorChatBubble(tmpId,"Hey, t'as de la bonne ?",0xFFFFFFDD,NAME_DISTANCE,5000);
        LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
        format(string,sizeof(string),"{FFFFFF} Le prix de revente d'un gramme est de $%d.\nVous disposez de %d gramme(s).\n\nEntrez le montant que vous désirez vendre :",DEALER_PRICE,inventory_GetItemQuantity(playerid,1575));
        ShowPlayerDialog(playerid,146,DIALOG_STYLE_INPUT,"{FFFFFF}» Dealer «",string,"Acheter","Annuler");
	}
	else if(player_IsAtActorPoint(playerid,4,3.5) != -1)
	{
	    tmpId=player_IsAtActorPoint(playerid,4,3.5);
	    SetActorChatBubble(tmpId,"Bonjour, que désirez-vous ?",0xFFFFFFDD,NAME_DISTANCE,5000);
        LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
        ShowPlayerDialog(playerid,149,DIALOG_STYLE_INPUT,"{FFFFFF}» Accueil «","{FFFFFF} Que désirez-vous ? (Entrez une raison IC)","Valider","Annuler");
	}
	else if(player_IsAtActorPoint(playerid,5,2.0) != -1)
	{
	    if(actor[tmpId][variable] == 1)
	    {
		    new var=-1;
		    if(PlayerInfo[playerid][pCar][0] !=-1 && vehicle[vehicle_GetId(PlayerInfo[playerid][pCar][0])][cStatut] ==1){ var=PlayerInfo[playerid][pCar][0];}
			else if(PlayerInfo[playerid][pCar][1] !=-1 && vehicle[vehicle_GetId(PlayerInfo[playerid][pCar][1])][cStatut] ==1){ var=PlayerInfo[playerid][pCar][1];}
			else if(PlayerInfo[playerid][pCar][2] !=-1 && vehicle[vehicle_GetId(PlayerInfo[playerid][pCar][2])][cStatut] ==1){ var=PlayerInfo[playerid][pCar][2];}
			else if(PlayerInfo[playerid][pCar][3] !=-1 && vehicle[vehicle_GetId(PlayerInfo[playerid][pCar][3])][cStatut] ==1){ var=PlayerInfo[playerid][pCar][3];}
			else if(PlayerInfo[playerid][pCar][4] !=-1 && vehicle[vehicle_GetId(PlayerInfo[playerid][pCar][4])][cStatut] ==1){ var=PlayerInfo[playerid][pCar][4];}
			else if(PlayerInfo[playerid][pCar][5] !=-1 && vehicle[vehicle_GetId(PlayerInfo[playerid][pCar][5])][cStatut] ==1){ var=PlayerInfo[playerid][pCar][5];}

			if(var!=-1)
			{
				pay_tempPrice[playerid] = FOUR_PRICE;
				pay_tempType[playerid] = 16;
				pay_tempArticle[playerid] = vehicle_GetId(var);
				pay_showDialog(playerid, pay_tempPrice[playerid]);
			}
			else
			{
			    SetActorChatBubble(tmpId,"Vous n'avez pas de véhicule à la fourière.",0xFFFFFFDD,NAME_DISTANCE,5000);
	        	LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
			}
		}
		else
	    {
	        SetActorChatBubble(tmpId,"Contactez la police pour récuperer votre véhicule.",0xFFFFFFDD,NAME_DISTANCE,5000);
	        LoopingAnim(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
	    }
	}
	else if(player_IsAtNpcPoint(playerid,7,1.5) != -1)
	{
	    tmpId=player_IsAtNpcPoint(playerid,7,3.5);
	    SetActorChatBubble(tmpId,"Vous n'aurez pas une petite pièce svp ?",0xFFFFFFDD,NAME_DISTANCE,5000);
    }
	else if(player_IsAtActorPoint(playerid,1,2.0) != -1 && gPlayerInBizz[playerid] != -1)
	{
	    tmpId=player_IsAtActorPoint(playerid,1,2.0);
		new BizString[512],
			bizid = gPlayerInBizz[playerid];
        player_Dialog[playerid]=0;
		if(actor[tmpId][variable] == 1) // 24/7
		{
			format(BizString, sizeof(BizString),"{FFFFFF}Produit\t{FFFFFF}Quantité\t{FFFFFF}Prix\nTéléphone\tx1\t$%d\nMalette\tx1\t$%d\nAnnuaire\tx1\t$%d\nDé\tx1\t$%d\nPréservatif\tx6\t$%d\nCagoule\tx1\t$%d\nCorde\tx3\t$%d\nBombe Lacrimo\tx1\t$%d\nBriquet\tx1\t$%d\nBoomBox\tx1\t$%d\nTalkie Walkie\tx1\t$%d\nBouquet de Fleures\tx1\t$%d\nBatte\tx1\t$%d\nPied de biche\tx1\t$%d\nAppareil Photo\tx1\t$%d\nBallon de basket\tx1\t$%d\nPelle\tx1\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],
			bizz[bizid][itemCost][9],bizz[bizid][itemCost][10],bizz[bizid][itemCost][11],bizz[bizid][itemCost][12],bizz[bizid][itemCost][13],bizz[bizid][itemCost][14],bizz[bizid][itemCost][15],bizz[bizid][itemCost][16],bizz[bizid][itemCost][17],bizz[bizid][itemCost][18]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» 24/7 «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 2 || actor[tmpId][variable] == 15 || actor[tmpId][variable] == 16 || actor[tmpId][variable] == 17 || actor[tmpId][variable] == 18 || actor[tmpId][variable] == 19)// Vêtements
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Produit\t{FFFFFF}Prix\nVétement\t$%d\nPaire de lunette\t$%d\nBandana\t$%d\nCasque de moto\t$%d\nCasquette\t$%d\nChâpeau\t$%d\nBerêt\t$%d\nCasque stereo\t$%d\nMontre\t$%d\nSac ..\nObjets VIP",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8]);
			ShowPlayerDialog(playerid, 37, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Magasin de vétements «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 3) //tabac
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Produit\t{FFFFFF}Quantité\t{FFFFFF}Prix\nTabac\tx30\t$%d\nFeuilles\tx30\t$%d\nCigarettes\tx20\t$%d\nBriquet\tx1\t$%d\nTicket de lotto\tx1\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Tabac «{FFFFFF} Achats",BizString,"Valider","Annuler");
			player_Dialog[playerid] = 0;
		}
		else if(actor[tmpId][variable] == 4) // épicerie
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Produit\t{FFFFFF}Quantité\t{FFFFFF}Prix\nEau\tx6\t$%d\nSoda\tx6\t$%d\nJus de fuit\tx3\t$%d\nBière\tx6\t$%d\nLait\tx6\t$%d\nBurger\tx2\t$%d\nPizza\tx3\t$%d\nSandwich\tx2\t$%d\nChips\tx1\t$%d\nCéréales\tx1\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Epicerie «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 5)//Donuts
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Produit\t{FFFFFF}Prix\nDonut\t$%d\nCreame glacé\t$%d\nViennoiserie\t$%d\nSoda\t$%d\nCocktail\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Donut «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 6)//Pizza stack
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Menu\t{FFFFFF}Prix\nMini pizza\t$%d\nPizza\t$%d\nPizza 4 fromages\t$%d\nPizza 4 saisons\t$%d\nPizza nature\t$%d\nPizza du jour\t$%d\nSoda\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Pizza Stack «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 7)//Burger shot
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Menu\t{FFFFFF}Prix\nHamburger\t$%d\nDouble hamburger\t$%d\nCheeseBurger\t$%d\nPetite frites\t$%d\nMoyen frites\t$%d\nGrande frites\t$%d\nSoda\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Burger Shot «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
	 	else if(actor[tmpId][variable] == 8)//Clukin'bell
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Menu\t{FFFFFF}Prix\nPetite portion nuggets\t$%d\nMoyen portion de nuggets\t$%d\nGrande portion de nuggets\t$%d\nPetite frites\t$%d\nMoyen frites\t$%d\nGrande frites\t$%d\nSoda\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Clukin'Bell «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 9)//Disquaire
		{
			format(BizString, sizeof(BizString), "1. MP3 ($%d)\n2. Album 1 David Guetta ($%d)\n3. Album 2 Sexion d'assault ($%d)\n4. BoomBox ($%d)",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Disquaire «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 10)//Ammunation
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Arme\t{FFFFFF}Balle(s)\t{FFFFFF}Prix\nColt 45\t130\t$%d\nSilencieux\t130\t$%d\nRifle\t45\t$%d\nPoing américain\t/\t$%d\nGilet par balles\t/\t$%d\nLaser rouge\t/\t$%d\nLaser bleu\t/\t$%d\nLaser rose\t/\t$%d\nLaser orange\t/\t$%d\nLaser vert\t/\t$%d\nLaser jaune\t/\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6],bizz[bizid][itemCost][7],bizz[bizid][itemCost][8],bizz[bizid][itemCost][9],bizz[bizid][itemCost][10]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Ammunation «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 11)//Sexe shop
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Produit\t{FFFFFF}Prix\nGod Mauve\t$%d\nGod Blanc\t$%d\nLong God Blanc\t$%d\nGod Blanc #2\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Sexe Shop «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		else if(actor[tmpId][variable] == 12 || actor[tmpId][variable] == 13)//Bar & Discotheque
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Boisson\t{FFFFFF}Prix\nEau\t$%d\nCafé\t$%d\nDiabolo\t$%d\nBiere\t$%d\nChampagne\t$%d\nWisky\t$%d\nVodka\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5],bizz[bizid][itemCost][6]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Bar «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
	    else if(actor[tmpId][variable] == 14) // Gym
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Technique\t{FFFFFF}Prix\nElbow\t$%d\nBoxing\t$%d\nGrabkick\t$%d\nKneehead\t$%d\nKungfu\t$%d\nNormal\tGratuit",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5]);
			ShowPlayerDialog(playerid, 85, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Gym «{FFFFFF} Test de technique",BizString,"Valider","Annuler");
			player_Dialog[playerid] = 0;
		}
	    else if(actor[tmpId][variable] == 20) // Restaurant
		{
			format(BizString, sizeof(BizString), "{FFFFFF}Menu\t{FFFFFF}Prix\nAssiette de pâtes\t$%d\nSteck Frites\t$%d\nPoulet Frites\t$%d\nPoisson riz\t$%d\nVin\t$%d\nSoda\t$%d",
			bizz[bizid][itemCost][0],bizz[bizid][itemCost][1],bizz[bizid][itemCost][2],bizz[bizid][itemCost][3],bizz[bizid][itemCost][4],bizz[bizid][itemCost][5]);
			ShowPlayerDialog(playerid, 97, DIALOG_STYLE_TABLIST_HEADERS,"{2B6AFF}» Restaurant «{FFFFFF} Achats",BizString,"Valider","Annuler");
		}
		SetActorChatBubble(tmpId,"Bonjour, que désirez-vous ?",0xFFFFFFDD,NAME_DISTANCE,5000);
		ApplyDynamicActorAnimation(tmpId, "GANGS", "prtial_gngtlkA",4.0,0,0,1,0,0);
	}
	for(new cab = 0; cab<totalPhoneCabs; cab++)
	{
		if(PlayerToPoint(1.0, playerid,phone[cab][pos][0],phone[cab][pos][1],phone[cab][pos][2]))
		{
			if(phonecab_Ring[cab]==1)
			{
				if(Mobile[playerid] != -1)
					{msg_Client(playerid, COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} Vous êtes déjà en train de téléphoner.");return 1;}
				for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Mobile[i] == cab)
						{
							Mobile[playerid] = i; //caller connecting
							Mobile[i] = playerid;
							msg_Client(i,  COLOR_YELLOW, "{8B8B00}» Tel «{FFFFFF} La ligne décroche.");
							format(string, sizeof(string), "* %s décroche le téléphone de la cabine téléphonique.", PlayerInfo[playerid][pName]);
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							RingTone[playerid] = 0;
							phonecab_Ring[cab]=0;
						}
					}
				}
			}
			else
				{ShowPlayerDialog(playerid,139,DIALOG_STYLE_INPUT,"|Cabine téléphonique|","{00FF00}2${FFFFFF} la minute.\n{FFFFFF}Entrez le numéro de téléphone :","Valider","Annuler");}
		}
	}
 	if (GetPlayerState(playerid) == 1 && PlayerToPoint(1, playerid,1806.1897,-1294.9735,13.5411)) // Publicité
		{ShowPlayerDialog(playerid,23,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Publicité","Ecrivez votre publicté de façon RP :","Valider","Annuler");}
	else if (GetPlayerState(playerid) == 1 && (PlayerToPoint(1, playerid,-1111.2820,-1637.3197,76.3672) || PlayerToPoint(1, playerid,-1028.1726,-1183.2521,129.2188))) // Achats graine
	{
		if(PlayerInfo[playerid][pMember] >= 200)
		{
			format(string,sizeof(string),"Prix de la graine : $%d.\nArgent sur vous : $%d\n\nEntrer le nombre de graine que vous désirez acheter :",SEED_PRICE,PlayerInfo[playerid][pCash]);
			ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"{006500}» Achats «{FFFFFF} Graine",string,"Acheter","Annuler");
		}
	}
	/*if(PlayerInfo[playerid][pJob] == 0 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0)
	{
	    if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,2115.6763,-1788.6963,13.5387)) // Livreur de Pizza
		{
			GettingJob[playerid] = 1;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && (PlayerToPoint(2.0, playerid,-381.3588,-1426.1780,25.9125) || PlayerToPoint(2.0, playerid, -58.4875,82.9363,3.1172))) // Fermier
		{
		    if(PlayerInfo[playerid][pCarLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de conduire pour ce job.");return 1;}
			GettingJob[playerid] = 2;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1615.8364,-1893.7744,13.5482)) // Balayeur de rues
		{
		    if(PlayerInfo[playerid][pCarLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de conduire pour ce job.");return 1;}
			GettingJob[playerid] = 3;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,2274.8787,-2230.4817,13.6062)) // Eboueur
		{
		    if(PlayerInfo[playerid][pLourdLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de poid lourd pour ce job.");return 1;}
			GettingJob[playerid] = 4;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,827.3839,856.9607,12.2437)) // Ouvrier
		{
		    if(PlayerInfo[playerid][pLourdLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de poid lourd pour ce job.");return 1;}
			GettingJob[playerid] = 5;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1969.2666,-2186.0972,13.5469)) // Pilote de ligne
		{
			if(PlayerInfo[playerid][pFlyLic] == 0)
			  	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de vol pour ce job.");return 1;}
			GettingJob[playerid] = 6;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1743.5208,-1587.6700,13.5523)) // Facteur
		{
			GettingJob[playerid] = 7;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,896.7977,-1895.2848,1.2672)) // Pêcheur
		{
		    if(PlayerInfo[playerid][pBoatLic] == 0)
		    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de navigation pour ce job.");return 1;}
		    GettingJob[playerid] = 8;
		    ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1515.6515,-1024.7803,23.8186)) // Transporteur de fonds
		{
		    if(PlayerInfo[playerid][pLourdLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de poid lourd pour ce job.");return 1;}
			GettingJob[playerid] = 9;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1792.4077,-2072.6865,13.5772)) // Livreur marchandises
		{
			if(PlayerInfo[playerid][pLourdLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de poid lourd pour ce job.");return 1;}
			GettingJob[playerid] = 10;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,1703.2473,-1944.2960,13.5574)) // Pilote de train
		{
		    if(PlayerInfo[playerid][pTrainLic] != 1)
		    	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de train pour ce job.");return 1;}
		    GettingJob[playerid] = 11;
		    ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,783.6038,-1327.6260,13.5469)) // Chauffeur de bus
		{
		    if(PlayerInfo[playerid][pLourdLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de poid lourd pour ce job.");return 1;}
			GettingJob[playerid] = 12;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
       else if (GetPlayerState(playerid) == 1 && PlayerToPoint(2.0, playerid,772.4321,-1327.3684,13.5469)) // Chauffeur de taxi
		{
		    if(PlayerInfo[playerid][pCarLic] == 0)
			 	{msg_Client(playerid,COLOR_INFO,"{CF9756}» Info «{FFFFFF} Vous devez posseder le permis de conduire pour ce job.");return 1;}
			GettingJob[playerid] = 13;
			ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"{78769D}» Job «{FFFFFF} Prendre un job","Vous êtes sur le point d'être embauché.","Accepter","Refuser");
			format(string, sizeof(string), "* %s observe le contrat.", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		}
	}*/
	if(gPlayerInSBizz[playerid] != -1)
	{
		    new BizString[512];
	        new bizid = gPlayerInSBizz[playerid]-1000;
	        if (GetPlayerState(playerid) == 1 && PlayerToPoint(1, playerid,664.2013,-568.3502,16.3433)) //Station essence
			{
		        if(gPlayerInSBizz[playerid] >= 1000 || gPlayerInSBizz[playerid] <= 1004)//Station essence
				{
				    format(BizString, sizeof(BizString), "1. Gps ($%d)\n2. Jerrican ($%d)\n3. RadioFM ($%d)",
				    sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
				    ShowPlayerDialog(playerid, 104, DIALOG_STYLE_LIST,"{2B6AFF}» Station Essence «{FFFFFF} Achats",BizString,"Acheter","Annuler");
				}
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(1, playerid,296.2780,1281.3855,1082.2899)) //Opérateurs
			{
				if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING)
				{
				    format(BizString, sizeof(BizString), "1. Forfait: sms $5 + appel 15mn ($%d)\n2. Forfait: sms $2 + appel 20mn ($%d)\n3. Forfait sms $1 + appel 30mn ($%d)\n4. Forfait: sms illimité + appel 1h ($%d)",
				 	sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
				    ShowPlayerDialog(playerid, 126, DIALOG_STYLE_LIST,"{2B6AFF}» BellSouth «{FFFFFF} Achats forfaits",BizString,"Selectionner","Annuler");
				}
				else if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+1)
				{
	        	    format(BizString, sizeof(BizString), "1. Forfait: sms $4 + appel 10mn ($%d)\n2. Forfait: sms $3 + appel 25mn ($%d)\n3. Forfait sms $1 + 25mn ($%d)\n4. Forfait: sms illimité + appel 1h30mn ($%d)",
					sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
				    ShowPlayerDialog(playerid, 126, DIALOG_STYLE_LIST,"{2B6AFF}» AT&T Mobility «{FFFFFF} Achats forfaits",BizString,"Selectionner","Annuler");
				}
				else if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+2)
				{
	        	    format(BizString, sizeof(BizString), "1. Forfait: sms $3 + 7mn ($%d)\n2. Forfait: sms $3 + appel 22mn ($%d)\n3. Forfait sms $1 + appel 28mn ($%d)\n4. Forfait: sms illimité + appel 2h30mn ($%d)",
					sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1],sbizz[bizid][ubPriceArticle][2],sbizz[bizid][ubPriceArticle][3]);
				    ShowPlayerDialog(playerid, 126, DIALOG_STYLE_LIST,"{2B6AFF}» SBC Communications «{FFFFFF} Achats forfaits",BizString,"Selectionner","Annuler");
				}
				else if(bizid == MAX_STATION+MAX_SPRAY+MAX_TUNING+3)
				{
	        	    format(BizString, sizeof(BizString), "1. Forfait: sms illimité + 20mn ($%d)\n2. Forfait: sms illimité + appel illimité ($%d)",
					sbizz[bizid][ubPriceArticle][0],sbizz[bizid][ubPriceArticle][1]);
				    ShowPlayerDialog(playerid, 126, DIALOG_STYLE_LIST,"{2B6AFF}» Verizon Communication «{FFFFFF} Achats forfaits",BizString,"Selectionner","Annuler");
				}
			}
	}
	for(new i=0; i<4; i++)
	{
	    // Factions : Polices
        if(PlayerInfo[playerid][pMember]>=1 && PlayerInfo[playerid][pMember] <= 4)
		{
		    if (PlayerToPoint(1, playerid,police[i][cmds][0],police[i][cmds][1],police[i][cmds][2]))
		    {
		        if(police_Duty[playerid]==0)
			    {
			    	if(PlayerInfo[playerid][pDutyTime] < DUTY_TIME)
			    	{
						format(string,sizeof(string),"{007AFF}» Police «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",DUTY_TIME-PlayerInfo[playerid][pDutyTime]);
				    	msg_Client(playerid,COLOR_POLICE,string);
			    	}
			    	format(string, sizeof(string), "* L'Officier %s ouvre son Casier et prend son Badge.", PlayerInfo[playerid][pName]);
					police_Duty[playerid] = 1;
					Flicservice ++;
    			}
				else if(police_Duty[playerid]==1)
			    {
					format(string, sizeof(string), "* L'Officier %s a remis son Badge de police et son calibre dans son Casier.", PlayerInfo[playerid][pName]);
				    SafeResetPlayerWeapons(playerid);
					SafeSetPlayerArmour(playerid, 0);
					SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
					police_Duty[playerid] = 0;
					Flicservice --;
			    }
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
		    }
		    else if (PlayerToPoint(1, playerid,police[i][cmds][3],police[i][cmds][4],police[i][cmds][5]))
		    {
                if(police_Duty[playerid]==0)
			    	{msg_Client(playerid,COLOR_POLICE,"{007AFF}» Police «{FFFFFF} Vous devez être en service."); return 1;}
				ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"{007AFF}» Police «{FFFFFF} Equipement","1. Normal\n2. Convoyeur\n3. Motar\n4. Swat ShotGun\n5. Swat M4\n6. Swat Sniper\n7. Vie + Armure\n8. Appareil photo","Equiper","Quitter");
			}
		}
		// Faction : Gouvernements
		if (PlayerToPoint(1, playerid,governement[i][cmds][3],governement[i][cmds][4],governement[i][cmds][5]) && GetPlayerVirtualWorld(playerid) == i+1) // EditStats
		{
			format(string,sizeof(string),"{FFFFFF}- Changer votre mot de passe\n- Changer votre adresse email\n- Changer de ville\n- Changer votre nom [Renames disponible(s): %d]\n- Changer votre numéro de tel [disponible(s): %d]\n- Changer de Sexe [disponible(s): %d]\n- Changer d'âge [disponible(s): %d]",
			PlayerInfo[playerid][pRename],PlayerInfo[playerid][pChangeNum],PlayerInfo[playerid][pChangeSex],PlayerInfo[playerid][pChangeAge]);
			ShowPlayerDialog(playerid,121,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Changer vos stats",string,"Valider","Annuler");
			gouv_DialogGestion[playerid] = 0;
		}
		else if (PlayerToPoint(1, playerid,governement[i][cmds][0],governement[i][cmds][1],governement[i][cmds][2]) && GetPlayerVirtualWorld(playerid) == i+1) // Achats
		{
			format(string,sizeof(string),"{FFFFFF}- Récupérer sa carte d'identité\n- Plaque véhicule [ChangePlaque disponible: %d]\n- Divorcer",PlayerInfo[playerid][pChangePlaque]);
		    ShowPlayerDialog(playerid,120,DIALOG_STYLE_LIST,"{FF6E00}» Mairie «{FFFFFF} Achats",string,"Acheter","Annuler");
			gouv_DialogGestion[playerid] = 0;
		}
		if(PlayerInfo[playerid][pMember]>=6 && PlayerInfo[playerid][pMember] <= 9)
		{
		    if (PlayerToPoint(1, playerid,governement[i][cmds][6],governement[i][cmds][7],governement[i][cmds][8]) && GetPlayerVirtualWorld(playerid) == i+1)
		    {
		        if(gouv_Duty[playerid] == 1)
				{
					msg_Client(playerid, COLOR_MAIRIE, "{FF6E00}» Gouvernement «{FFFFFF} Vous n'êtes plus en service.");
					gouv_Duty[playerid] = 0;
					SafeSetPlayerHealth(playerid, 100); SafeSetPlayerArmour(playerid, 0);
					SafeResetPlayerWeapons(playerid);
					SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid,0xFFFFFF00);
				}
				else
				{
					if(PlayerInfo[playerid][pDutyTime] < DUTY_TIME)
			    	{
						format(string,sizeof(string),"{FF6E00}» Gouvernement «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",DUTY_TIME-PlayerInfo[playerid][pDutyTime]);
				    	msg_Client(playerid,COLOR_MAIRIE,string);
			        }
					msg_Client(playerid, COLOR_MAIRIE, "{FF6E00}» Gouvernement «{FFFFFF} Vous êtes en service.");
					gouv_Duty[playerid] = 1;
			    	SetPlayerColor(playerid,0xFFFFFF00);
				}
		    }
		    else if (PlayerToPoint(1, playerid,governement[i][cmds][9],governement[i][cmds][10],governement[i][cmds][11]) && GetPlayerVirtualWorld(playerid) == i+1)
		    {
                if(gouv_Duty[playerid]==0)
			    	{msg_Client(playerid,COLOR_MAIRIE,"{FF6E00}» Gouvernement «{FFFFFF} Vous devez être en service."); return 1;}

                SafeResetPlayerWeapons(playerid);
      			SetPlayerSkin(playerid, governement[i][skin][PlayerInfo[playerid][pRank]-1]);
				SafeGivePlayerWeapon(playerid,23,150);
				SafeSetPlayerHealth(playerid, 100);
				SafeSetPlayerArmour(playerid, 50);
				if(PlayerInfo[playerid][pRank] ==1)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], governement[i][rank1]);}
                else if(PlayerInfo[playerid][pRank] ==2)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], governement[i][rank2]);}
                else if(PlayerInfo[playerid][pRank] ==3)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], governement[i][rank3]);}
                else if(PlayerInfo[playerid][pRank] ==4)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], governement[i][rank4]);}
                else if(PlayerInfo[playerid][pRank] ==5)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], governement[i][rank5]);}
                else if(PlayerInfo[playerid][pRank] ==6)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], governement[i][rank6]);}
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
		}
	}
	// Faction : Pompier
	if (PlayerToPoint(1, playerid,FireInfo[Bell][0],FireInfo[Bell][1],FireInfo[Bell][2]) && GetPlayerVirtualWorld(playerid) == FireInfo[VW]) // Sonnette
		{ShowPlayerDialog(playerid,55,DIALOG_STYLE_INPUT,"{FFFFFF}» Sonnette «","Ecrivez la raison pour la-quelle vous sonner :","Envoyer","Annuler");}
    /*if(PlayerInfo[playerid][pMember]==5)
	{
	    if (PlayerToPoint(1, playerid,FireInfo[Duty][0],FireInfo[Duty][1],FireInfo[Duty][2]) && GetPlayerVirtualWorld(playerid) == FireInfo[VW])
		    {
		        if(fire_Duty[playerid] == 1)
				{
					msg_Client(playerid, COLOR_POMPIER, "{C7006C}» Pompier «{FFFFFF} Vous n'êtes plus en service.");
					fire_Duty[playerid] = 0;
					SafeSetPlayerHealth(playerid, 100); SafeSetPlayerArmour(playerid, 0);
					SafeResetPlayerWeapons(playerid);
					SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid,0xFFFFFF00);
				}
				else
				{
					if(PlayerInfo[playerid][pDutyTime] < DUTY_TIME)
			    	{
						format(string,sizeof(string),"{C7006C}» Pompier «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",DUTY_TIME-PlayerInfo[playerid][pDutyTime]);
				    	msg_Client(playerid,COLOR_MAIRIE,string);
			        }
					msg_Client(playerid, COLOR_POMPIER, "{C7006C}» Pompier «{FFFFFF} Vous êtes en service.");
					fire_Duty[playerid] = 1;
			    	SetPlayerColor(playerid,0xFFFFFF00);
				}
		    }
		    else if (PlayerToPoint(1, playerid,FireInfo[Equip][0],FireInfo[Equip][1],FireInfo[Equip][2]) && GetPlayerVirtualWorld(playerid) == FireInfo[VW])
		    {
                if(fire_Duty[playerid]==0)
			    	{msg_Client(playerid,COLOR_POMPIER,"{C7006C}» Pompier «{FFFFFF} Vous devez être en service."); return 1;}

      			SetPlayerSkin(playerid, FireInfo[skin][PlayerInfo[playerid][pRank]-1]);
				SafeGivePlayerWeapon(playerid,42,2000);
				SafeSetPlayerHealth(playerid, 100);
				SafeSetPlayerArmour(playerid, 50);
				if(PlayerInfo[playerid][pRank] ==1)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], FireInfo[rank1]);}
                else if(PlayerInfo[playerid][pRank] ==2)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], FireInfo[rank2]);}
                else if(PlayerInfo[playerid][pRank] ==3)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], FireInfo[rank3]);}
                else if(PlayerInfo[playerid][pRank] ==4)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], FireInfo[rank4]);}
                else if(PlayerInfo[playerid][pRank] ==5)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], FireInfo[rank5]);}
                else if(PlayerInfo[playerid][pRank] ==6)
	    			{format(string, sizeof(string), "* %s prend son équipement de %s.", PlayerInfo[playerid][pName], FireInfo[rank6]);}
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
			}
	}
    // Faction : Mécanicien
	if (PlayerToPoint(1, playerid,MecanoInfo[Bell][0],MecanoInfo[Bell][1],MecanoInfo[Bell][2]) && GetPlayerVirtualWorld(playerid) == MecanoInfo[VW]) // Sonnette
		{ShowPlayerDialog(playerid,59,DIALOG_STYLE_INPUT,"{FFFFFF}» Sonnette «","Ecrivez la raison pour la-quelle vous sonner :","Envoyer","Annuler");}
    if(PlayerInfo[playerid][pMember]==9)
	{
	    if (PlayerToPoint(1, playerid,MecanoInfo[Duty][0],MecanoInfo[Duty][1],MecanoInfo[Duty][2]) && GetPlayerVirtualWorld(playerid) == MecanoInfo[VW])
		{
			if(mecano_Duty[playerid] == 1)
			{
		        msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous n'êtes plus en service, vous ne recevrez plus d'appel.");
		        mecano_Duty[playerid] = 0;
		        Mechanics -= 1;
		        SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
		    }
		    else
		    {
		        if(PlayerInfo[playerid][pDutyTime] < DUTY_TIME)
			    {
					format(string,sizeof(string),"{FF8282}» Médecin «{FFFFFF} Vous devez encore travailler %d minute(s) pour obtenir la paye.",DUTY_TIME-PlayerInfo[playerid][pDutyTime]);
				    msg_Client(playerid,COLOR_JOB,string);
			    }
		        msg_Client(playerid, COLOR_JOB, "{78769D}» Mécanicien «{FFFFFF} Vous êtes en service, vous recevrez les appels des personnes qui ont besoin de vous.");
		        mecano_Duty[playerid] = 1;
		        Mechanics += 1;
		        SetPlayerSkin(playerid, MecanoInfo[skin][PlayerInfo[playerid][pRank]-1]);
   				format(string, sizeof(string), "|Pub| Le mecanicien %s est en service, appeler le 555 pour appeler un mecanicien.", PlayerInfo[playerid][pName]);
	   			msg_OOCNews(0x2993EDAA,string);
		    }
		}
	}*/
	// Faction : San News
	if (GetPlayerState(playerid) == 1 && PlayerToPoint(1, playerid,1806.1897,-1294.9735,13.5411)) // Publicité
	{
		ShowPlayerDialog(playerid,23,DIALOG_STYLE_INPUT,"{00673A}» San News «{FFFFFF} Publicité","Ecrivez votre publicté de façon RP :","Valider","Annuler");
	}
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid,pickupid)
{
	return 1;
}

stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	}
	else
	{
		format(string, 30, "%d:%02d", mins, secs);
	}
	return string;
}

stock drop_Throw(playerid, item, amo, times)
{
	if(IsABadWeapon(item))
	    {return 1;}
	new droped=-1, Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);

	for(new i=0; i<totalDrops; i++)
	{
		if(drop[i][model] == -1)
			{droped = i;break;}
	}
	if(droped == -1)
	{
		format(sql, sizeof(sql), "SELECT * FROM lvrp_server_drops");
		mysql_query(MYSQL,sql);
	 	cache_get_row_count(droped);
		format(sql, sizeof(sql), "INSERT INTO lvrp_server_drops SET id=%d",droped+1);
		mysql_pquery(MYSQL,sql);
		totalDrops++;
	}
    drop[droped][pos][0] = x;
    drop[droped][pos][1] = y;
    drop[droped][pos][2] = z;
    drop[droped][model] = item;
    drop[droped][quantity] = amo;
    drop[droped][time] = times;
    drop_Update(droped);
 	drop_Save(droped);
	return 1;
}
stock drop_Remove(aDropSlotId)
{
	drop[aDropSlotId][pos][0] = 0.0;
	drop[aDropSlotId][pos][1] = 0.0;
	drop[aDropSlotId][pos][2] = 0.0;
	drop[aDropSlotId][model] = -1;
	drop[aDropSlotId][quantity] = -1;
	drop[aDropSlotId][time] = -1;
	drop_Update(aDropSlotId);
	drop_Save(aDropSlotId);
}

stock drop_PlayerOnPickup(p)
{
 	for(new i=0; i<totalDrops; i++)
 	{
  		if(PlayerToPoint(1, p, drop[i][pos][0], drop[i][pos][1], drop[i][pos][2]))
	  	{
	  	    new string[64];
	  	    if(drop[i][model] == 1212) // Argent
				{SafeGivePlayerMoney(p, drop[i][quantity],"Gagne argent à terre");}
            else if(drop[i][model] > 1 && drop[i][model] < 50) // Arme
				{SafeGivePlayerWeapon(p, drop[i][model], drop[i][quantity]);}
			else 
				{inventory_UpdateItem(p,drop[i][model],drop[i][quantity]);}
			drop_Remove(i);
			format(string, sizeof(string), "* %s ramasse un objet à terre.", PlayerInfo[p][pName]);
		    SetPlayerChatBubble(p, string, COLOR_PURPLE, 30.0, 5000);
			break;
	  	}
 	}
}

stock drop_PlayerWeapon(playerid)
{
    new playerweapons[13][2];
	for(new i=0;i<13;i++)
	{
    	GetPlayerWeaponData(playerid, i, playerweapons[i][0], playerweapons[i][1]);
    	new modelid=playerweapons[i][0];
    	new ammo = playerweapons[i][1];
    	if(playerweapons[i][1]!=0)
		{
			if(modelid!=-1)
			{
				if(drop_Throw(playerid, modelid, ammo, DROP_TIME))
				{}
			}
		}
	}
	return 1;
}

stock drop_PlayerCash(playerid)
{
	new Cash = PlayerInfo[playerid][pCash]/6;
	if(PlayerInfo[playerid][pCash] > 10000) { Cash = 1000; }
	if(drop_Throw(playerid, 1212, Cash,DROP_TIME))
		{SafeGivePlayerMoney(playerid, -Cash,"Perd argent par terre");}
	return 1;
}

stock tag_Remove(tagId)
{
	tag[tagId][pos][0] = 0.0;
	tag[tagId][pos][1] = 0.0;
	tag[tagId][pos][2] = 0.0;
	tag[tagId][pos][3] = 0.0;
	tag[tagId][pos][4] = 0.0;
	tag[tagId][pos][5] = 0.0;
	tag[tagId][faction] = -1;
	tag[tagId][fontSize] = 12;
	tag[tagId][used] = 0;
	tag_Update(tagId);
	tag_Save(tagId);
}

public MeteoAleatoire()
{
	new Aleatoire = random(sizeof(DescriptionIdMeteo));
	new string[96];
	format(string, sizeof(string), "» Annonce Météo « %s", DescriptionIdMeteo[Aleatoire][DescriptionMeteo]);
	SetWeather(DescriptionIdMeteo[Aleatoire][IDMeteo]);
	SendClientMessageToAll(COLOR_WHITE,string);
	print(string);
}

public ClearAnim(playerid)
{
	ClearAnimations(playerid);
	return 1;
}

stock static removeDriveBy(playerid)
{
    new Float:fX,Float:fY,Float:fZ;

	GetPlayerPos(playerid, fX, fY, fZ);
	SetPlayerPos(playerid, fX, fY, floatadd(fZ, 2.0));

	gPlayerDriveBy[playerid]=false;
	SetTimerEx("placeVehicle", 200, false, "dddd", playerid, GetPlayerVehicleID(playerid), GetPlayerVehicleSeat(playerid), GetPlayerWeapon(playerid));
}

forward placeVehicle(playerid, vehicleid, seatid, weaponid);
public placeVehicle(playerid, vehicleid, seatid, weaponid)
{
	if (!IsPlayerConnected(playerid) || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
	    {return 0;}

	PutPlayerInVehicle(playerid, vehicleid, seatid);
	SetPlayerArmedWeapon(playerid, weaponid);
	return 1;
}

forward BallDown(playerid, Float:oldz, ballid);
public BallDown(playerid, Float:oldz, ballid)
{
	new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(basket[ballid][object], x, y, z);
	new Float:a;
	new Float:x2, Float:y2;
	GetPlayerPos(playerid, x2, y2, a);
	GetPlayerFacingAngle(playerid, a);
	x2 += (16 * floatsin(-a, degrees));
	y2 += (16 * floatcos(-a, degrees));
	MoveDynamicObject(basket[ballid][object], x2, y2, oldz-0.8, 10.0+random(3));
	basket[ballid][owner]=-1;
	basket[ballid][shooting] = 0;
	basket[ballid][bounce] = 1;
	return 1;
}

forward BallDown2(playerid,ballid);
public BallDown2(playerid,ballid)
{
	MoveDynamicObject(basket[ballid][object], 2795.5237,-2019.6152,13.5547-0.8, 10.0+random(3));
	basket[ballid][owner] = 999;
	basket[ballid][shooting] = 0;
	GameTextForPlayer(playerid, "Encesta!", 3000, 3);
	basket[ballid][bounce] = 1;
	return 1;
}

forward BallDown3(playerid,ballid);
public BallDown3(playerid,ballid)
{
	MoveDynamicObject(basket[ballid][object], 2768.3669,-2019.6644,13.5547-0.8, 10.0+random(3));
	basket[ballid][owner] = 999;
	basket[ballid][shooting] = 0;
	GameTextForPlayer(playerid, "Encesta!", 3000, 3);
	basket[ballid][bounce] = 1;
	return 1;
}

forward BallDown4(playerid,ballid);
public BallDown4(playerid,ballid)
{
	MoveDynamicObject(basket[ballid][object], 2795.5237+random(5),-2019.6152+random(5),13.5547-0.8, 10.0+random(3));
	basket[ballid][owner] = 999;
	basket[ballid][shooting] = 0;
	GameTextForPlayer(playerid, "Pelota Mala!", 3000, 3);
	basket[ballid][bounce] = 1;
	return 1;
}

forward BallDown5(playerid,ballid);
public BallDown5(playerid,ballid)
{
	MoveDynamicObject(basket[ballid][object], 2768.3669+random(5),-2019.6644+random(5),13.5547-0.8, 10.0+random(3));
	basket[ballid][owner] = 999;
	basket[ballid][shooting] = 0;
	GameTextForPlayer(playerid, "Pelota Mala!", 3000, 3);
	basket[ballid][bounce] = 1;
	return 1;
}

public CreateDynamicLvrpActor(modelid, Float:X, Float:Y, Float:Z, Float:Rotation, vworld, bool:vulnera, type, varia, labelHead[])
{
	new tmpId = CreateDynamicActor(modelid, X, Y, Z, Rotation);
	SetDynamicActorVirtualWorld(tmpId,vworld);
	SetDynamicActorInvulnerable(tmpId,vulnera);
	actor[tmpId][pos][0]=X;
	actor[tmpId][pos][1]=Y;
	actor[tmpId][pos][2]=Z;
	actor[tmpId][world]=vworld;
	actor[tmpId][typeZ]=type;
	actor[tmpId][variable]=varia;
	actor[tmpId][label] = CreateDynamic3DTextLabel(labelHead,0xFFFFFFDD,actor[tmpId][pos][0], actor[tmpId][pos][1], actor[tmpId][pos][2]+1.05,NAME_DISTANCE,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, actor[tmpId][world], -1, -1, 100.0);
	return tmpId;
}

public DestroyDynamicLvrpActor(actorid)
{
	if(IsValidDynamicActor(actorid))
	{
		DestroyDynamicActor(actorid);
		DestroyDynamic3DTextLabel(actor[actorid][label]);
	    actor[actorid][pos][0]=0;
		actor[actorid][pos][1]=0;
		actor[actorid][pos][2]=0;
		actor[actorid][typeZ]=-1;
		actor[actorid][variable]=0;
		actor[actorid][world]=0;
	}
	return 1;
}

public SetActorChatBubble(playerid, text[], color, Float:drawdistance, expiretime)
{
    KillTimer(actorChatTimer[playerid]);
    DestroyDynamic3DTextLabel(actorChatLabel[playerid]);
	actorChatLabel[playerid] = CreateDynamic3DTextLabel(text, color, actor[playerid][pos][0], actor[playerid][pos][1], actor[playerid][pos][2]+1.2, drawdistance, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, actor[playerid][world], -1, -1, 100.0);
	actorChatTimer[playerid] = SetTimerEx("DestroyActorChatBubble",expiretime,0,"i",playerid);
	return 1;
}

forward DestroyActorChatBubble(playerid);
public DestroyActorChatBubble(playerid)
{
	DestroyDynamic3DTextLabel(actorChatLabel[playerid]);
	return 1;
}

stock IsPlayerFacingPlayer(playerid, targetid, Float:dOffset)
{
        new
                Float:pX,
                Float:pY,
                Float:pZ,
                Float:pA,
                Float:X,
                Float:Y,
                Float:Z,
                Float:ang;

        if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
        GetPlayerPos(targetid, pX, pY, pZ);
        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, pA);

        if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
        else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
        else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);

        if(AngleInRangeOfAngle(-ang, pA, dOffset)) return true;
        return false;
}

stock AngleInRangeOfAngle(Float:a1, Float:a2, Float:rangeZ)
{

        a1 -= a2;
        if((a1 < rangeZ) && (a1 > -rangeZ)) return true;

        return false;

}

stock msg_Vip(color, string[])
{
    for(new i; i<MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pDonateRank] >= 1)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock msg_Wt(channel, color, string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerFreq[i] == channel)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock server_CheckEmail(email[]) // verification de l'adresse email
{
    new bool:ValideMail=true;
    if(strlen(email) < 6 || strlen(email) > 31)
 		{ValideMail=false;}
  	else if(strfind(email,"²",true) != -1 || strfind(email,",",true) != -1 || strfind(email,";",true) != -1)
 		{ValideMail=false;}
   	else if(strfind(email,"!",true) != -1 || strfind(email,"?",true) != -1 || strfind(email,"¤",true) != -1)
    	{ValideMail=false;}
   	else if(strfind(email,"§",true) != -1 || strfind(email,"+",true) != -1 || strfind(email,"=",true) != -1)
    	{ValideMail=false;}
   	else if(strfind(email,")",true) != -1 || strfind(email,"°",true) != -1 || strfind(email,"^",true) != -1)
		{ValideMail=false;}
  	else if(strfind(email,"(",true) != -1 || strfind(email,"/",true) != -1 || strfind(email,"&",true) != -1)
   		{ValideMail=false;}
   	else if(strfind(email,"~",true) != -1 || strfind(email,"%",true) != -1 || strfind(email,"}",true) != -1)
    	{ValideMail=false;}
   	else if(strfind(email,"",true) != -1 || strfind(email,"$",true) != -1 || strfind(email,"*",true) != -1)
    	{ValideMail=false;}
	else if(strfind(email,"@",true) == -1)
	    {ValideMail=false;}
    else if(strfind(email,".it",true) == -1 && strfind(email,".fr",true) == -1 && strfind(email,".com",true) == -1 && strfind(email,".eu",true) == -1 && strfind(email,".ca",true) == -1 && strfind(email,".be",true) == -1 && strfind(email,".net",true) == -1)
	    {ValideMail=false;}

	if(ValideMail)
	    {return true;}
	return false;
}

stock msg_Newbie(color, string[])
{
	for(new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if (PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pLevel] == 1 || PlayerInfo[i][pHelper] == 1)
		    	{msg_Client(i, color, string);}
		}
	}
}

stock IsValidSkin(skinid)
{
	for(new i=0; i<6; i++)
 	{
 		if(skinid==police[0][skin][i] || skinid==police[1][skin][i] || skinid==police[2][skin][i] || skinid==police[3][skin][i])
 		    {return false;}
        if(skinid==governement[0][skin][i] || skinid==governement[1][skin][i] || skinid==governement[2][skin][i] || skinid==governement[3][skin][i])
 		    {return false;}
        else if(skinid==FBIInfo[skin][i])
 		    {return false;}
 	}
    return 1;
}

public chargement(playerid)
{
	return TogglePlayerControllable(playerid, 1), 1;
}

forward KickAll();
public KickAll()
{
	for (new i = 0; i <MAX_PLAYERS_CURRENT+1; i++)
	{
 		if (IsPlayerConnected(i))
			{Kick(i);}
	}
}

stock tel_generateNewNumber()
{
	new randphone=0;
	for(new i=0; i<30; i++)
	{
	    randphone = 1000 + random(8999);
	    if(!tel_IsUsed(randphone))
			{return randphone;}
	}
	return randphone;
}

stock tel_IsUsed(number)
{
	format(sql, sizeof(sql), "SELECT id FROM lvrp_users WHERE PhoneNr=%d", number);
	mysql_query(MYSQL,sql);
	new numbertel;
 	cache_get_row_count(numbertel);
 	return numbertel;
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	if(PlayerInfo[playerid][pInt] == 0 && PlayerInfo[playerid][pVirWorld] == 0)
	{
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
	 	for(new i = 0; i != sizeof(sanAndreasZone); i++)
	 	{
	 	    if(x >= sanAndreasZone[i][pos][0] && x <= sanAndreasZone[i][pos][3] && y >= sanAndreasZone[i][pos][1] && y <= sanAndreasZone[i][pos][4])
				{return format(zone, len, sanAndreasZone[i][tmpName], 0);}
		}
	}
	else
	{
	    if(gPlayerInHouse[playerid] != -1)
		    {return format(zone, len, "Maison id %d",gPlayerInHouse[playerid]);}
        else if(gPlayerInBizz[playerid] != -1)
		    {return format(zone, len, "Biz id %d",gPlayerInBizz[playerid]);}
        else if(gPlayerInSBizz[playerid] != -1)
		    {return format(zone, len, "SBiz id %d",gPlayerInSBizz[playerid]);}
        else if(gPlayerInGarage[playerid] != -1)
		    {return format(zone, len, "Garage id %d",gPlayerInGarage[playerid]);}
  		else if(gPlayerInFaction[playerid] != -1)
		    {return format(zone, len, "%s QG",FactionInfo[gPlayerInFaction[playerid]][fName]);}
        else if(gPlayerInInterior[playerid] != -1)
		    {return format(zone, len, "%s",GetInteriorName(interiors[gPlayerInInterior[playerid]][typeZ]));}
	}
	return 0;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    switch(componentid)
    {
        case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid))
		{
			RemoveVehicleComponent(vehicleid, componentid);
			OnPlayerCheat(playerid,13);
			return 0;
		}
    }
   	if(!IsComponentidCompatible(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
	{
	    RemoveVehicleComponent(vehicleid, componentid);
        OnPlayerCheat(playerid,13);
        return 0;
    }
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

stock IsPlayerInInvalidNosVehicle(playerid)
{
        new vehicleid = GetPlayerVehicleID(playerid);
        #define MAX_INVALID_NOS_VEHICLES 52
        new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
        {
                581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
                509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
                452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
        };
        if(IsPlayerInAnyVehicle(playerid))
        {
            for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
        	{
                if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i]) return true;
        	}
        }
        return false;
}

stock IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return true;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return false;
}

stock HexToInt(string[])
{
  if (string[0]==0) return 0;
  new i;
  new cur=1;
  new res=0;
  for (i=strlen(string);i>0;i--) {
    if (string[i-1]<58) res=res+cur*(string[i-1]-48); else res=res+cur*(string[i-1]-65+10);
    cur=cur*16;
  }
  return res;
}
stock RGB( red, green, blue, alpha )
{
	return (red * 16777216) + (green * 65536) + (blue * 256) + alpha;
}
//==============================================================================

stock vehicle_GetId(player_sqlid)
{
    for(new i=1; i<=totalVehicles; i++)
	{
	    if(vehicle[i][used] == 1 && vehicle[i][SQLID] == player_sqlid && vehicle[i][SQLID] != -1)
	        {return i;}
	}
	return -1;
}

public beta_CheckKey(playerid,betaKey)
{
	new bool:tmpUse=true;
	new count = 0, tmp = 0;
	if(cache_get_row_count(count) && count > 0)
		{
			cache_get_value_index_int(0,0, tmp);
			tmpUse = !!tmp;
		}
	if(betaKey == 19082014)
	{
	    ShowPlayerDialog(playerid,81,DIALOG_STYLE_MSGBOX,"» Beta Fermée «","{FFFFFF}Votre clée beta a été validée, cliquez sur 'Valider' pour commencer l'inscription.","Valider","");
		inscription_Step[playerid]=0;
	    return 1;
	}
	if(tmpUse == false)
	{
	    format(sql,sizeof(sql),"UPDATE lvrp_server_betakeys SET used=1 WHERE serial=%d",betaKey);
	    mysql_pquery(MYSQL,sql);
	    
		ShowPlayerDialog(playerid,81,DIALOG_STYLE_MSGBOX,"» Beta Fermée «","{FFFFFF}Votre clée beta a été validée, cliquez sur 'Valider' pour commencer l'inscription.","Valider","");
		inscription_Step[playerid]=0;
	    return 1;
	}
	return ShowPlayerDialog(playerid,45,DIALOG_STYLE_INPUT,"» Beta Fermée «","{FF0000}Cette clée est invalide !\n\n{FFFFFF}Entrez votre clée beta pour vous inscrire :","Valider","");
}

forward vehicle_DeletePlayer(player_sqlid,vehicle_sqlid);
public vehicle_DeletePlayer(player_sqlid,vehicle_sqlid)
{
    new vehicleid = vehicle_GetId(vehicle_sqlid);
	if(vehicleid == -1) // Le joueur s'est reconnecté ou le véh n'est pas crée IG
	    {return 1;}
	new bool:reconnect=false;
	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i) && PlayerInfo[i][pSQLID] == player_sqlid)
	        {reconnect=true; break;}
	}
	if(reconnect == false)
	{
	    if(vehicleid == totalVehicles)
	        {totalVehicles--;}
	    if(IsValidDynamicObject(car_Neon1[vehicleid]))
			{DestroyDynamicObject(car_Neon1[vehicleid]);}
		if(IsValidDynamicObject(car_Neon2[vehicleid]))
			{DestroyDynamicObject(car_Neon2[vehicleid]);}
		car_Neon1[vehicleid] = 0;
		car_Neon2[vehicleid] = 0;
	    vehicle_Save(vehicle_sqlid,1,1);
	    vehicle[vehicleid][cVW]=0;
	    vehicle[vehicleid][cInt]=0;
	    vehicle[vehicleid][cLock]=0;
	    vehicle[vehicleid][used]=0;
	    vehicle[vehicleid][SQLID]=-1;
	    vehicle[vehicleid][sabot] = false;
	    strmid(vehicle[vehicleid][sabotDesc],"Aucun",0,64,64);
	    vehicle[vehicleid][cEngine] = false;
		for(new i=0; i<9; i++)
			{tuning_RemoveComponent(vehicleid,i);}
	    DestroyVehicle(vehicleid);
		printf("[Vehicule Dyn] Suppression IG | ID:SAMP %d - ID:MYSQL %d",vehicleid,vehicle_sqlid);
	}
	return 1;
}

forward vehicle_LoadPlayer(playerid);
public vehicle_LoadPlayer(playerid)
{
	new mod, Float:x,Float:y,Float:z,Float:a,string[145];
	cache_get_value_name_int(0,"Model", mod);
	cache_get_value_name_float(0,"Pos_x", x);
	cache_get_value_name_float(0,"Pos_y", y);
	cache_get_value_name_float(0,"Pos_z", z);
	cache_get_value_name_float(0,"Angle", a);
	
	new vehicleid = CreateVehicle(mod,x,y,z,a,255,255,-1);
	
	cache_get_value_name_int(0,"id", vehicle[vehicleid][SQLID]);
	vehicle[vehicleid][cModel] = mod;
	vehicle[vehicleid][cLocationx] = x;
	vehicle[vehicleid][cLocationy] = y;
	vehicle[vehicleid][cLocationz] = z;
	vehicle[vehicleid][cAngle] = a;
	cache_get_value_name_int(0,"Color1", vehicle[vehicleid][cColorOne]);
	cache_get_value_name_int(0,"Color2", vehicle[vehicleid][cColorTwo]);
	cache_get_value_name(0,"Owner",vehicle[vehicleid][cOwner], 32);
	cache_get_value_name_int(0,"SQLID", vehicle[vehicleid][ownerSQLID]);
	cache_get_value_name(0,"Description",vehicle[vehicleid][cDescription], 32);
	cache_get_value_name_int(0,"Price", vehicle[vehicleid][cValue]);
	cache_get_value_name(0,"License",vehicle[vehicleid][cLicense], 24);
	cache_get_value_name_int(0,"Owned", vehicle[vehicleid][cOwned]);
	cache_get_value_name_int(0,"Locked", vehicle[vehicleid][cLock]);
	cache_get_value_name_int(0,"Statut", vehicle[vehicleid][cStatut]);
	cache_get_value_name_int(0,"Type", vehicle[vehicleid][cType]);
	cache_get_value_name_float(0,"Armour", vehicle[vehicleid][cArmour]);
	cache_get_value_name_int(0,"Rob", vehicle[vehicleid][cRob]);
	cache_get_value_name_int(0,"Neon", vehicle[vehicleid][cNeon]);
	cache_get_value_name_int(0,"Gas", vehicle[vehicleid][cGas]);
	cache_get_value_name_int(0,"Mod1", vehicle[vehicleid][tExhausts]);
	cache_get_value_name_int(0,"Mod2", vehicle[vehicleid][tFrontBumper]);
	cache_get_value_name_int(0,"Mod3", vehicle[vehicleid][tRearBumper]);
	cache_get_value_name_int(0,"Mod4", vehicle[vehicleid][tRoof]);
	cache_get_value_name_int(0,"Mod5", vehicle[vehicleid][tSpoilers]);
	cache_get_value_name_int(0,"Mod6", vehicle[vehicleid][tSideBumper]);
	cache_get_value_name_int(0,"Mod7", vehicle[vehicleid][tWheels]);
	cache_get_value_name_int(0,"Mod8", vehicle[vehicleid][tHydraulics]);
	cache_get_value_name_int(0,"Mod9", vehicle[vehicleid][tNitro]);
	cache_get_value_name_int(0,"Mod10", vehicle[vehicleid][tSideBumper2]);
	cache_get_value_name_int(0,"PaintJob", vehicle[vehicleid][paintjob]);
	cache_get_value_name_int(0,"Interior", vehicle[vehicleid][cInt]);
	cache_get_value_name_int(0,"VW", vehicle[vehicleid][cVW]);
	cache_get_value_name_int(0,"Meter", vehicle[vehicleid][cMeter]);
	cache_get_value_name_int(0,"KiloMeter", vehicle[vehicleid][cKiloMeter]);
	cache_get_value_name_int(0,"Cash", vehicle[vehicleid][cCash]);
 	cache_get_value_name_int(0,"Rank", vehicle[vehicleid][cRank]);
	cache_get_value_name_int(0,"JobCity", vehicle[vehicleid][cJobCity]);
	cache_get_value_name_int(0,"Brid", vehicle[vehicleid][cBrid]);
	cache_get_value_name_int(0,"Tires", vehicle[vehicleid][cTires]);
	cache_get_value_name_int(0,"Panels", vehicle[vehicleid][cPanels]);
	cache_get_value_name_int(0,"Doors", vehicle[vehicleid][cDoors]);
	cache_get_value_name_int(0,"Lights", vehicle[vehicleid][cLights]);
	cache_get_value_name_float(0,"Health", vehicle[vehicleid][cHealth]);
	cache_get_value_name_int(0,"Wep1", vehicle[vehicleid][cWep][0]);
	cache_get_value_name_int(0,"Ammo1", vehicle[vehicleid][cAmmo][0]);
	cache_get_value_name_int(0,"Wep2", vehicle[vehicleid][cWep][1]);
	cache_get_value_name_int(0,"Ammo2", vehicle[vehicleid][cAmmo][1]);
	cache_get_value_name_int(0,"Wep3", vehicle[vehicleid][cWep][2]);
	cache_get_value_name_int(0,"Ammo3", vehicle[vehicleid][cAmmo][2]);
	cache_get_value_name_int(0,"Wep4", vehicle[vehicleid][cWep][3]);
	cache_get_value_name_int(0,"Ammo4", vehicle[vehicleid][cAmmo][3]);
	cache_get_value_name_int(0,"Wep5", vehicle[vehicleid][cWep][4]);
	cache_get_value_name_int(0,"Ammo5", vehicle[vehicleid][cAmmo][4]);
	cache_get_value_name_int(0,"Wep6", vehicle[vehicleid][cWep][5]);
	cache_get_value_name_int(0,"Ammo6", vehicle[vehicleid][cAmmo][5]);
	cache_get_value_name_int(0,"Wep7", vehicle[vehicleid][cWep][6]);
	cache_get_value_name_int(0,"Ammo7", vehicle[vehicleid][cAmmo][6]);
	cache_get_value_name_int(0,"Wep8", vehicle[vehicleid][cWep][7]);
	cache_get_value_name_int(0,"Ammo8", vehicle[vehicleid][cAmmo][7]);
	cache_get_value_name_int(0,"Wep9", vehicle[vehicleid][cWep][8]);
	cache_get_value_name_int(0,"Ammo9", vehicle[vehicleid][cAmmo][8]);
	cache_get_value_name_int(0,"Wep10", vehicle[vehicleid][cWep][9]);
	cache_get_value_name_int(0,"Ammo10", vehicle[vehicleid][cAmmo][9]);
	cache_get_value_name_int(0,"iM1", vehicle[vehicleid][cItemM][0]);
	cache_get_value_name_int(0,"iQ1", vehicle[vehicleid][cItemQ][0]);
	cache_get_value_name_int(0,"iM2", vehicle[vehicleid][cItemM][1]);
	cache_get_value_name_int(0,"iQ2", vehicle[vehicleid][cItemQ][1]);
	cache_get_value_name_int(0,"iM3", vehicle[vehicleid][cItemM][2]);
	cache_get_value_name_int(0,"iQ3", vehicle[vehicleid][cItemQ][2]);
	cache_get_value_name_int(0,"iM4", vehicle[vehicleid][cItemM][3]);
	cache_get_value_name_int(0,"iQ4", vehicle[vehicleid][cItemQ][3]);
	cache_get_value_name_int(0,"iM5", vehicle[vehicleid][cItemM][4]);
	cache_get_value_name_int(0,"iQ5", vehicle[vehicleid][cItemQ][4]);
	cache_get_value_name_int(0,"iM6", vehicle[vehicleid][cItemM][5]);
	cache_get_value_name_int(0,"iQ6", vehicle[vehicleid][cItemQ][5]);
	cache_get_value_name_int(0,"iM7", vehicle[vehicleid][cItemM][6]);
	cache_get_value_name_int(0,"iQ7", vehicle[vehicleid][cItemQ][6]);
	cache_get_value_name_int(0,"iM8", vehicle[vehicleid][cItemM][7]);
	cache_get_value_name_int(0,"iQ8", vehicle[vehicleid][cItemQ][7]);
	cache_get_value_name_int(0,"iM9", vehicle[vehicleid][cItemM][8]);
	cache_get_value_name_int(0,"iQ9", vehicle[vehicleid][cItemQ][8]);
	cache_get_value_name_int(0,"iM10", vehicle[vehicleid][cItemM][9]);
	cache_get_value_name_int(0,"iQ10", vehicle[vehicleid][cItemQ][9]);
	cache_get_value_name_int(0,"iM11", vehicle[vehicleid][cItemM][10]);
	cache_get_value_name_int(0,"iQ10", vehicle[vehicleid][cItemQ][10]);
	cache_get_value_name_int(0,"iM12", vehicle[vehicleid][cItemM][11]);
	cache_get_value_name_int(0,"iQ12", vehicle[vehicleid][cItemQ][11]);
	cache_get_value_name_int(0,"iM13", vehicle[vehicleid][cItemM][12]);
	cache_get_value_name_int(0,"iQ13", vehicle[vehicleid][cItemQ][12]);
	cache_get_value_name_int(0,"iM14", vehicle[vehicleid][cItemM][13]);
	cache_get_value_name_int(0,"iQ14", vehicle[vehicleid][cItemQ][13]);
	cache_get_value_name_int(0,"iM15", vehicle[vehicleid][cItemM][14]);
	cache_get_value_name_int(0,"iQ15", vehicle[vehicleid][cItemQ][14]);
	vehicle[vehicleid][cBody]=-1;
	vehicle[vehicleid][used] = 1;
	
	if(vehicle[vehicleid][cVW] == CAR_INT_DEATH)
		{vehicle[vehicleid][cVW]=0;}
	totalVehicles++;
	tuning_Load(vehicleid);
	ChangeVehicleColor(vehicleid,vehicle[vehicleid][cColorOne],vehicle[vehicleid][cColorTwo]);
	SafeSetVehicleHealth(vehicleid,vehicle[vehicleid][cHealth]);
	UpdateVehicleDamageStatus(vehicleid,vehicle[vehicleid][cPanels],vehicle[vehicleid][cDoors],vehicle[vehicleid][cLights],vehicle[vehicleid][cTires]);
	SetPlayerCheckpoint(playerid,x,y,z,5.0);
	format(vehicle[vehicleid][stream],256,"Aucun");
	format(string,sizeof(string),"{8BE2E2}» Véhicule «{FFFFFF} Votre véhicule a bien été spawn. [ID:SAMP %d - ID:SQL %d] (Point rouge minimap)",vehicleid,vehicle[vehicleid][SQLID]);
	msg_Client(playerid,COLOR_INFO,string);
	if(IsABike(vehicleid) || IsAMoto(vehicleid))
		{vehicle[vehicleid][cLock]=0;}
	for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
	{
		if(IsPlayerConnected(i))
		    {SetVehicleParamsForPlayer(vehicleid,i,0,vehicle[vehicleid][cLock]);}
	}
	return 1;
}

forward vehicle_Load();
public vehicle_Load()
{
	new tmpVehicles=1;
 	cache_get_row_count(tmpVehicles);
	for (new i=0; i<tmpVehicles; i++)
	{
	    /*if(cache_get_value_name_int(i,"Type") == CAR_OWN) // Véhicules joueurs
		    {continue;}*/
        cache_get_value_name_int(i,"id", vehicle[totalVehicles][SQLID]);
 		cache_get_value_name_int(i,"Model", vehicle[totalVehicles][cModel]);
		cache_get_value_name_float(i,"Pos_x", vehicle[totalVehicles][cLocationx]);
		cache_get_value_name_float(i,"Pos_y", vehicle[totalVehicles][cLocationy]);
		cache_get_value_name_float(i,"Pos_z", vehicle[totalVehicles][cLocationz]);
	 	cache_get_value_name_float(i,"Angle", vehicle[totalVehicles][cAngle]);
		cache_get_value_name_int(i,"Color1", vehicle[totalVehicles][cColorOne]);
		cache_get_value_name_int(i,"Color2", vehicle[totalVehicles][cColorTwo]);
		cache_get_value_name(i,"Owner",vehicle[totalVehicles][cOwner], 32);
		cache_get_value_name_int(i,"SQLID", vehicle[totalVehicles][ownerSQLID]);
		cache_get_value_name(i,"Description",vehicle[totalVehicles][cDescription], 128);
		cache_get_value_name_int(i,"Price", vehicle[totalVehicles][cValue]);
		cache_get_value_name(i,"License",vehicle[totalVehicles][cLicense], 24);
		cache_get_value_name_int(i,"Owned", vehicle[totalVehicles][cOwned]);
		cache_get_value_name_int(i,"Locked", vehicle[totalVehicles][cLock]);
		cache_get_value_name_int(i,"Statut", vehicle[totalVehicles][cStatut]);
		cache_get_value_name_int(i,"Type", vehicle[totalVehicles][cType]);
		cache_get_value_name_float(i,"Armour", vehicle[totalVehicles][cArmour]);
		cache_get_value_name_int(i,"Rob", vehicle[totalVehicles][cRob]);
		cache_get_value_name_int(i,"Neon", vehicle[totalVehicles][cNeon]);
		cache_get_value_name_int(i,"Gas", vehicle[totalVehicles][cGas]);
		cache_get_value_name_int(i,"Mod1", vehicle[totalVehicles][tExhausts]);
		cache_get_value_name_int(i,"Mod2", vehicle[totalVehicles][tFrontBumper]);
		cache_get_value_name_int(i,"Mod3", vehicle[totalVehicles][tRearBumper]);
		cache_get_value_name_int(i,"Mod4", vehicle[totalVehicles][tRoof]);
		cache_get_value_name_int(i,"Mod5", vehicle[totalVehicles][tSpoilers]);
		cache_get_value_name_int(i,"Mod6", vehicle[totalVehicles][tSideBumper]);
		cache_get_value_name_int(i,"Mod7", vehicle[totalVehicles][tWheels]);
		cache_get_value_name_int(i,"Mod8", vehicle[totalVehicles][tHydraulics]);
		cache_get_value_name_int(i,"Mod9", vehicle[totalVehicles][tNitro]);
		cache_get_value_name_int(i,"Mod10", vehicle[totalVehicles][tSideBumper2]);
		cache_get_value_name_int(i,"PaintJob", vehicle[totalVehicles][paintjob]);
		cache_get_value_name_int(i,"Interior", vehicle[totalVehicles][cInt]);
		cache_get_value_name_int(i,"VW", vehicle[totalVehicles][cVW]);
		cache_get_value_name_int(i,"Meter", vehicle[totalVehicles][cMeter]);
		cache_get_value_name_int(i,"KiloMeter", vehicle[totalVehicles][cKiloMeter]);
		cache_get_value_name_int(i,"Cash", vehicle[totalVehicles][cCash]);
		cache_get_value_name_int(i,"Rank", vehicle[totalVehicles][cRank]);
		cache_get_value_name_int(i,"JobCity", vehicle[totalVehicles][cJobCity]);
		cache_get_value_name_int(i,"Brid", vehicle[totalVehicles][cBrid]);
		cache_get_value_name_int(i,"Tires", vehicle[totalVehicles][cTires]);
		cache_get_value_name_int(i,"Panels", vehicle[totalVehicles][cPanels]);
		cache_get_value_name_int(i,"Doors", vehicle[totalVehicles][cDoors]);
		cache_get_value_name_int(i,"Lights", vehicle[totalVehicles][cLights]);
		cache_get_value_name_float(i,"Health", vehicle[totalVehicles][cHealth]);
		cache_get_value_name_int(i,"Wep1", vehicle[totalVehicles][cWep][0]);
		cache_get_value_name_int(i,"Ammo1", vehicle[totalVehicles][cAmmo][0]);
		cache_get_value_name_int(i,"Wep2", vehicle[totalVehicles][cWep][1]);
		cache_get_value_name_int(i,"Ammo2", vehicle[totalVehicles][cAmmo][1]);
		cache_get_value_name_int(i,"Wep3", vehicle[totalVehicles][cWep][2]);
		cache_get_value_name_int(i,"Ammo3", vehicle[totalVehicles][cAmmo][2]);
		cache_get_value_name_int(i,"Wep4", vehicle[totalVehicles][cWep][3]);
		cache_get_value_name_int(i,"Ammo4", vehicle[totalVehicles][cAmmo][3]);
		cache_get_value_name_int(i,"Wep5", vehicle[totalVehicles][cWep][4]);
		cache_get_value_name_int(i,"Ammo5", vehicle[totalVehicles][cAmmo][4]);
		cache_get_value_name_int(i,"Wep6", vehicle[totalVehicles][cWep][5]);
		cache_get_value_name_int(i,"Ammo6", vehicle[totalVehicles][cAmmo][5]);
		cache_get_value_name_int(i,"Wep7", vehicle[totalVehicles][cWep][6]);
		cache_get_value_name_int(i,"Ammo7", vehicle[totalVehicles][cAmmo][6]);
		cache_get_value_name_int(i,"Wep8", vehicle[totalVehicles][cWep][7]);
		cache_get_value_name_int(i,"Ammo8", vehicle[totalVehicles][cAmmo][7]);
		cache_get_value_name_int(i,"Wep9", vehicle[totalVehicles][cWep][8]);
		cache_get_value_name_int(i,"Ammo9", vehicle[totalVehicles][cAmmo][8]);
		cache_get_value_name_int(i,"Wep10", vehicle[totalVehicles][cWep][9]);
		cache_get_value_name_int(i,"Ammo10", vehicle[totalVehicles][cAmmo][9]);

		cache_get_value_name_int(i,"iM1", vehicle[totalVehicles][cItemM][0]);
		cache_get_value_name_int(i,"iQ1", vehicle[totalVehicles][cItemQ][0]);
		cache_get_value_name_int(i,"iM2", vehicle[totalVehicles][cItemM][1]);
		cache_get_value_name_int(i,"iQ2", vehicle[totalVehicles][cItemQ][1]);
		cache_get_value_name_int(i,"iM3", vehicle[totalVehicles][cItemM][2]);
		cache_get_value_name_int(i,"iQ3", vehicle[totalVehicles][cItemQ][2]);
		cache_get_value_name_int(i,"iM4", vehicle[totalVehicles][cItemM][3]);
		cache_get_value_name_int(i,"iQ4", vehicle[totalVehicles][cItemQ][3]);
		cache_get_value_name_int(i,"iM5", vehicle[totalVehicles][cItemM][4]);
		cache_get_value_name_int(i,"iQ5", vehicle[totalVehicles][cItemQ][4]);
		cache_get_value_name_int(i,"iM6", vehicle[totalVehicles][cItemM][5]);
		cache_get_value_name_int(i,"iQ6", vehicle[totalVehicles][cItemQ][5]);
		cache_get_value_name_int(i,"iM7", vehicle[totalVehicles][cItemM][6]);
		cache_get_value_name_int(i,"iQ7", vehicle[totalVehicles][cItemQ][6]);
		cache_get_value_name_int(i,"iM8", vehicle[totalVehicles][cItemM][7]);
		cache_get_value_name_int(i,"iQ8", vehicle[totalVehicles][cItemQ][7]);
		cache_get_value_name_int(i,"iM9", vehicle[totalVehicles][cItemM][8]);
		cache_get_value_name_int(i,"iQ9", vehicle[totalVehicles][cItemQ][8]);
		cache_get_value_name_int(i,"iM10", vehicle[totalVehicles][cItemM][9]);
		cache_get_value_name_int(i,"iQ10", vehicle[totalVehicles][cItemQ][9]);
		cache_get_value_name_int(i,"iM11", vehicle[totalVehicles][cItemM][10]);
		cache_get_value_name_int(i,"iQ11", vehicle[totalVehicles][cItemQ][10]);
		cache_get_value_name_int(i,"iM12", vehicle[totalVehicles][cItemM][11]);
		cache_get_value_name_int(i,"iQ12", vehicle[totalVehicles][cItemQ][11]);
		cache_get_value_name_int(i,"iM13", vehicle[totalVehicles][cItemM][12]);
		cache_get_value_name_int(i,"iQ13", vehicle[totalVehicles][cItemQ][12]);
		cache_get_value_name_int(i,"iM14", vehicle[totalVehicles][cItemM][13]);
		cache_get_value_name_int(i,"iQ14", vehicle[totalVehicles][cItemQ][13]);
		cache_get_value_name_int(i,"iM15", vehicle[totalVehicles][cItemM][14]);
		cache_get_value_name_int(i,"iQ15", vehicle[totalVehicles][cItemQ][14]);
		vehicle[totalVehicles][cBody]=-1;
		vehicle[totalVehicles][used] = 1;
		vehicle[totalVehicles][cWindows][0]=false;
		vehicle[totalVehicles][cWindows][1]=false;
		vehicle[totalVehicles][cWindows][2]=false;
		vehicle[totalVehicles][cWindows][3]=false;
		
		if(vehicle[totalVehicles][cHealth] < 350)
		    {vehicle[totalVehicles][cHealth]=1000;}
		
		if(vehicle[totalVehicles][cType] == CAR_OWN)
		{
            SafeSetVehicleHealth(totalVehicles,vehicle[totalVehicles][cHealth]);
            UpdateVehicleDamageStatus(totalVehicles,vehicle[totalVehicles][cPanels],vehicle[totalVehicles][cDoors],vehicle[totalVehicles][cLights],vehicle[totalVehicles][cTires]);
		}
		else
			{vehicle[totalVehicles][cGas] = 100;}

        if(vehicle[totalVehicles][cVW] == CAR_INT_DEATH)
			{vehicle[totalVehicles][cVW]=0;}
		format(vehicle[totalVehicles][stream],256,"Aucun");
        if(vehicle[totalVehicles][cType] > 0 && vehicle[totalVehicles][cType] < 10 ) // Siren sur le véhicule
            {AddStaticVehicleEx(vehicle[totalVehicles][cModel],vehicle[totalVehicles][cLocationx],vehicle[totalVehicles][cLocationy],vehicle[totalVehicles][cLocationz]+1.0,vehicle[totalVehicles][cAngle],vehicle[totalVehicles][cColorOne],vehicle[totalVehicles][cColorTwo],-1,1);}
		else
			{AddStaticVehicleEx(vehicle[totalVehicles][cModel],vehicle[totalVehicles][cLocationx],vehicle[totalVehicles][cLocationy],vehicle[totalVehicles][cLocationz]+1.0,vehicle[totalVehicles][cAngle],vehicle[totalVehicles][cColorOne],vehicle[totalVehicles][cColorTwo],-1);}
        if(IsABike(totalVehicles) || IsAMoto(totalVehicles))
			{vehicle[totalVehicles][cLock]=0;}
		tuning_Load(totalVehicles);
        totalVehicles++;
	}
	return 1;
}

stock vehicle_Save(id,tunning,trunk)
{
    new esc_owner[32],message[64],licence[16];
	mysql_escape_string(vehicle[id][cOwner], esc_owner, sizeof(esc_owner), MYSQL);
    mysql_escape_string(vehicle[id][cDescription], message, sizeof(message), MYSQL);
    mysql_escape_string(vehicle[id][cLicense], licence, sizeof(licence), MYSQL);

    format(sql, sizeof(sql), "UPDATE lvrp_server_vehicles SET Model=%d, Pos_x=%f, Pos_y=%f, Pos_z=%f, Angle=%f, Color1=%d, Color2=%d, Owner='%s', SQLID=%d, Description='%s', Price=%d, License='%s', Owned=%d, Locked=%d, Statut=%d, Type=%d, Brid=%d, Tires=%d, Panels=%d, Doors=%d, Lights=%d, Rob=%d, Gas=%d, Interior=%d, VW=%d, Meter=%d, KiloMeter=%d, Rank=%d, Health=%f, JobCity=%d WHERE id=%d",
    vehicle[id][cModel],vehicle[id][cLocationx],vehicle[id][cLocationy],vehicle[id][cLocationz],vehicle[id][cAngle],vehicle[id][cColorOne],vehicle[id][cColorTwo],esc_owner,vehicle[id][ownerSQLID],message,vehicle[id][cValue],licence,vehicle[id][cOwned],vehicle[id][cLock],vehicle[id][cStatut],vehicle[id][cType],vehicle[id][cBrid],vehicle[id][cTires],vehicle[id][cPanels],vehicle[id][cDoors],vehicle[id][cLights],
	vehicle[id][cRob],vehicle[id][cGas],vehicle[id][cInt],vehicle[id][cVW],vehicle[id][cMeter],vehicle[id][cKiloMeter],vehicle[id][cRank],vehicle[id][cHealth],vehicle[id][cJobCity],vehicle[id][SQLID]);
  	mysql_pquery(MYSQL,sql);
  	
  	if(tunning)
  	{
	  	format(sql, sizeof(sql), "UPDATE lvrp_server_vehicles SET Mod1=%d, Mod2=%d, Mod3=%d, Mod4=%d, Mod5=%d, Mod6=%d, Mod7=%d, Mod8=%d, Mod9=%d, Mod10=%d, PaintJob=%d, Neon=%d WHERE id=%d",
	  	vehicle[id][tExhausts],vehicle[id][tFrontBumper],vehicle[id][tRearBumper],vehicle[id][tRoof],vehicle[id][tSpoilers],vehicle[id][tSideBumper],vehicle[id][tWheels],vehicle[id][tHydraulics],vehicle[id][tNitro],vehicle[id][tSideBumper2],vehicle[id][paintjob],vehicle[id][cNeon],vehicle[id][SQLID]);
	  	mysql_pquery(MYSQL,sql);
  	}
  	if(trunk)
  	{
  	    format(sql, sizeof(sql), "UPDATE lvrp_server_vehicles SET iM1=%d, iQ1=%d, iM2=%d, iQ2=%d, iM3=%d, iQ3=%d, iM4=%d, iQ4=%d, iM5=%d, iQ5=%d, iM6=%d, iQ6=%d, iM7=%d, iQ7=%d, iM8=%d, iQ8=%d, iM9=%d, iQ9=%d, iM10=%d, iQ10=%d, iM11=%d, iQ11=%d, iM12=%d, iQ12=%d, iM13=%d, iQ13=%d, iM14=%d, iQ14=%d, iM15=%d, iQ15=%d WHERE id=%d",
		vehicle[id][cItemM][0],vehicle[id][cItemQ][0],vehicle[id][cItemM][1],vehicle[id][cItemQ][1],vehicle[id][cItemM][2],vehicle[id][cItemQ][2],vehicle[id][cItemM][3],vehicle[id][cItemQ][3],vehicle[id][cItemM][4],vehicle[id][cItemQ][4],vehicle[id][cItemM][5],vehicle[id][cItemQ][5],vehicle[id][cItemM][6],
		vehicle[id][cItemQ][6],vehicle[id][cItemM][7],vehicle[id][cItemQ][7],vehicle[id][cItemM][8],vehicle[id][cItemQ][8],vehicle[id][cItemM][9],vehicle[id][cItemQ][9],vehicle[id][cItemM][10],vehicle[id][cItemQ][10],vehicle[id][cItemM][11],vehicle[id][cItemQ][11],vehicle[id][cItemM][12],vehicle[id][cItemQ][12],
		vehicle[id][cItemM][13],vehicle[id][cItemQ][13],vehicle[id][cItemM][14],vehicle[id][cItemQ][14],vehicle[id][SQLID]);
	  	mysql_pquery(MYSQL,sql);
	  	
	  	format(sql, sizeof(sql), "UPDATE lvrp_server_vehicles SET Wep1=%d, Ammo1=%d, Wep2=%d, Ammo2=%d, Wep3=%d, Ammo3=%d, Wep4=%d, Ammo4=%d, Wep5=%d, Ammo5=%d, Wep6=%d, Ammo6=%d, Wep7=%d, Ammo7=%d, Wep8=%d, Ammo8=%d, Wep9=%d, Ammo9=%d, Wep10=%d, Ammo10=%d, Armour=%f, Cash=%d WHERE id=%d",
		vehicle[id][cWep][0],vehicle[id][cAmmo][0],vehicle[id][cWep][1],vehicle[id][cAmmo][1],vehicle[id][cWep][2],vehicle[id][cAmmo][2],vehicle[id][cWep][3],vehicle[id][cAmmo][3],vehicle[id][cWep][4],vehicle[id][cAmmo][4],vehicle[id][cWep][5],vehicle[id][cAmmo][5],
		vehicle[id][cWep][6],vehicle[id][cAmmo][6],vehicle[id][cWep][7],vehicle[id][cAmmo][7],vehicle[id][cWep][8],vehicle[id][cAmmo][8],vehicle[id][cWep][9],vehicle[id][cAmmo][9],vehicle[id][cArmour],vehicle[id][cCash],vehicle[id][SQLID]);
	  	mysql_pquery(MYSQL,sql);
  	}
}


stock tuning_Load(vehicleid)
{
	SetVehicleVirtualWorld(vehicleid, vehicle[vehicleid][cVW]);
	LinkVehicleToInterior(vehicleid, vehicle[vehicleid][cInt]);
	SetVehicleNumberPlate(vehicleid,vehicle[vehicleid][cLicense]);
		
	if(!(0 < vehicle[vehicleid][cType] < 200) || vehicle[vehicleid][cOwned] != 3)
	{
        if(vehicle[vehicleid][paintjob] != -1)    {ChangeVehiclePaintjob(vehicleid, vehicle[vehicleid][paintjob]);}
		if(vehicle[vehicleid][tExhausts] != 0)    {AddVehicleComponent(vehicleid, vehicle[vehicleid][tExhausts]);}
		if(vehicle[vehicleid][tFrontBumper] != 0) {AddVehicleComponent(vehicleid, vehicle[vehicleid][tFrontBumper]);}
		if(vehicle[vehicleid][tRearBumper] != 0)  {AddVehicleComponent(vehicleid, vehicle[vehicleid][tRearBumper]);}
		if(vehicle[vehicleid][tRoof] != 0)        {AddVehicleComponent(vehicleid, vehicle[vehicleid][tRoof]);}
		if(vehicle[vehicleid][tSpoilers] != 0)    {AddVehicleComponent(vehicleid, vehicle[vehicleid][tSpoilers]);}
		if(vehicle[vehicleid][tSideBumper] != 0)  {AddVehicleComponent(vehicleid, vehicle[vehicleid][tSideBumper]);}
		if(vehicle[vehicleid][tWheels] != 0)      {AddVehicleComponent(vehicleid, vehicle[vehicleid][tWheels]);}
		if(vehicle[vehicleid][tHydraulics] != 0)  {AddVehicleComponent(vehicleid, vehicle[vehicleid][tHydraulics]);}
		if(vehicle[vehicleid][tNitro] != 0)       {AddVehicleComponent(vehicleid, vehicle[vehicleid][tNitro]);}
		if(vehicle[vehicleid][tSideBumper2] != 0) {AddVehicleComponent(vehicleid, vehicle[vehicleid][tSideBumper2]);}
    }
    return 1;
}

stock server_TogglePlayerSpectating(playerid,toggle)
{
	PlayerInfo[playerid][pSpetacte]=toggle;
	return TogglePlayerSpectating(playerid,toggle);
}

stock server_PlayerSpectatePlayer(playerid, targetplayerid, mode = SPECTATE_MODE_NORMAL)
{
	PlayerInfo[playerid][pSpetacte]=1;
	return PlayerSpectatePlayer(playerid, targetplayerid, mode);
}

stock server_PlayerSpectateVehicle(playerid, targetvehicleid, mode = SPECTATE_MODE_NORMAL)
{
	PlayerInfo[playerid][pSpetacte]=1;
    return PlayerSpectateVehicle(playerid, targetvehicleid, mode);
}

stock server_SetPlayerInterior(playerid,id)
{
	SetPlayerInterior(playerid,id);
	PlayerInfo[playerid][pInt]=id;
	if(WatchingTV[playerid]==0)
	{
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(Spectate[i]==playerid)
				{server_SetPlayerInterior(i,id);}
		}
	}
	return 1;
}

stock server_SetPlayerVirtualWorld(playerid,id)
{
	SetPlayerVirtualWorld(playerid,id);
	PlayerInfo[playerid][pVirWorld]=id;
	if(WatchingTV[playerid]==0)
	{
		for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
		{
			if(Spectate[i]==playerid)
				{server_SetPlayerVirtualWorld(i,id);}
		}
	}
	return 1;
}

public camera_Update(a)
{
	new string[256];
	if(!IsPlayerInAnyVehicle(a))
		{return 1;}
		
	// Speedometer
    vehicle[GetPlayerVehicleID(a)][cMeter] += (GetVehicleSpeed(GetPlayerVehicleID(a))*10)/36;
    if(vehicle[GetPlayerVehicleID(a)][cMeter] > 999)
        {vehicle[GetPlayerVehicleID(a)][cKiloMeter] += 1;vehicle[GetPlayerVehicleID(a)][cMeter] = 0;}
    speedometer_Update(a,9,0);
    
    // Choc accident
    new Float:Healt;
    GetVehicleHealth(GetPlayerVehicleID(a), Healt);
    if(LastSpeed[a] - GetVehicleSpeed(GetPlayerVehicleID(a)) >= 40 && LastHealth[a] - Healt >= 150)
    {
		if(ceinture[a] == 1)
        {
           	SetPlayerDrunkLevel(a, 50000);
           	SetTimerEx("StopCameraEffect", 10000, 0, "i", a);
		}
		else
		{
			new Float:x,Float:y,Float:z;
	        GetPlayerPos(a,x,y,z);
	        SetPlayerPos(a,x,y,z + 5);
	        GetVehicleVelocity(GetPlayerVehicleID(a),x,y,z);
	        SetPlayerVelocity(a,x *2,y*2,z + 3);
           	SetPlayerDrunkLevel(a, 50000);
           	SetTimerEx("StopCameraEffect", 25000, 0, "i", a);
		}
    }
    LastHealth[a] = Healt;
    LastSpeed[a] = GetVehicleSpeed(GetPlayerVehicleID(a));
    
    // Début check radar
	if(GetPVarInt(a,"PlayerHasBeenFlashed") == 1)
		{return 1;}
	else if (GetPVarInt(a,"PlayerHasBeenFlashed") == 2)
		{DeletePVar(a,"PlayerHasBeenFlashed");return 1;}
	for(new i = 0;i<totalCameras;i++)
	{
		if(camera[i][used] == 1)
		{
			if(IsPlayerInRangeOfPoint(a,camera[i][range],camera[i][pos][0],camera[i][pos][1],camera[i][pos][2]))
	        {
	            new speed = floatround(GetVehicleSpeed(GetPlayerVehicleID(a)));
	            new lim = camera[i][limit];
	            if(speed > lim+4)
	            {
                   	if(GetVehicleModel(GetPlayerVehicleID(a)) == 596 || GetVehicleModel(GetPlayerVehicleID(a)) == 597 || GetVehicleModel(GetPlayerVehicleID(a)) == 598
					|| GetVehicleModel(GetPlayerVehicleID(a)) == 599 || GetVehicleModel(GetPlayerVehicleID(a)) == 544 || GetVehicleModel(GetPlayerVehicleID(a)) == 523
					|| GetVehicleModel(GetPlayerVehicleID(a)) == 490 || GetVehicleModel(GetPlayerVehicleID(a)) == 427 || GetVehicleModel(GetPlayerVehicleID(a)) == 416
					|| GetVehicleModel(GetPlayerVehicleID(a)) == 407)
						{return 1;}
					if(IsABike(GetPlayerVehicleID(a)) || IsAPlane(GetPlayerVehicleID(a)) || IsABoat(GetPlayerVehicleID(a)))
						{return 1;}
						
					if(PlayerInfo[a][pMember] >= 1 || PlayerInfo[a][pMember] <= 6)
					{
					    if(police_Duty[a]==1)
					    {
					        format(string, sizeof(string), "* %s vient de se faire flasher à %d Km/h.", PlayerInfo[a][pName], speed);
							ProxDetector(30.0, a, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
					        return 1;
					    }
					}
	                TextDrawShowForPlayer(a,flash);
	                SetPVarInt(a,"PlayerHasBeenFlashed",1);
	                SetTimerEx("camera_RemoveFlash",600,false,"i",a);
					if(GetPlayerState(a) == PLAYER_STATE_DRIVER)
					{
					    if(PlayerInfo[a][pAdmin] >= 1 && AdminDuty[a] == 1)
						{
						    format(string, sizeof(string), "* L'admin %s vient de se faire flasher à %d Km/h.", PlayerInfo[a][pRealName], speed);
							ProxDetector(30.0, a, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
							return 1;
						}
						format(string,sizeof(string),"{FFFF00}» Radar «{FFFFE0} Flashé à %d Km/h, vitesse maximum autorisée %d Km/h. Coût : $%d et vous perdez 1 point.",speed,lim,camera[i][price]);
						msg_Client(a,COLOR_YELLOW,string);
						format(string, sizeof(string), "* %s vient de se faire flasher à %d Km/h.", PlayerInfo[a][pName], speed);
						ProxDetector(30.0, a, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,true);
						PlayerPlaySound(a,1132,0.0,0.0,0.0);
						governement[3][safe]+=camera[i][price]; // Gouvernement de SA
						governement_Save(3,false,false,false,false,false,false);
						if(PlayerInfo[a][pCarLic] ==1)
						{
							PlayerInfo[a][pPointPermis] --;
							if(PlayerInfo[a][pPointPermis] == 0)
								{PlayerInfo[a][pCarLic] = 0;msg_Client(a,COLOR_INFO,"» Info « Vous venez de perdre votre permis de conduite.");}
						}
						if(PlayerInfo[a][pCash] > camera[i][price])
							{SafeGivePlayerMoney(a, -camera[i][price],"Amende Radar");}
						else
							{PlayerInfo[a][pAccount]-=camera[i][price];MySQLUpdatePlayerIntSingle(PlayerInfo[a][pSQLID], "Bank", PlayerInfo[a][pAccount]);}
					}
	            }
	        }
	    }
	}
	return 1;
}

public camera_RemoveFlash(playerid)
{
	TextDrawHideForPlayer(playerid,flash);
	SetPVarInt(playerid,"PlayerHasBeenFlashed",2);
}


stock anticheat_Ping(i)
{
	if(gPlayerSpawn[i] != 0)
		{return 1;}
	if(GetPlayerPing(i) > PING_KICK)
 		{anticheat_Warn[i][6]++;}
	if(anticheat_Warn[i][6] >= 3)
	{
		new string[128];
		format(string, sizeof(string), "{6E6E6E}» AntiCheat «{AAAAAA} %s a été kické, raison : Ping élevé (%d/%d).",PlayerInfo[i][pRealName],GetPlayerPing(i),PING_KICK);
		SendClientMessageToAll(COLOR_RED,string);
		MySQLKick(i,-2,"Ping trop élevé");
	}
	return 1;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
        new Float:a;
        GetPlayerPos(playerid, x, y, a);
        GetPlayerFacingAngle(playerid, a);
        if (GetPlayerVehicleID(playerid))
        {
            GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
        }
        x += (distance * floatsin(-a, degrees));
        y += (distance * floatcos(-a, degrees));
}

stock Elevator_Initialize()
{
	Obj_Elevator 			= CreateDynamicObject(18755, 1786.678100, -1303.459472, GROUND_Z_COORD + ELEVATOR_OFFSET, 0.000000, 0.000000, 270.000000,-1,-1,-1,STREAM_DISTANCE);
	Obj_ElevatorDoors[0] 	= CreateDynamicObject(18757, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000,-1,-1,-1,STREAM_DISTANCE);
	Obj_ElevatorDoors[1] 	= CreateDynamicObject(18756, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000,-1,-1,-1,STREAM_DISTANCE);
	Label_Elevator          = CreateDynamic3DTextLabel("Appuyer sur 'F' pour utiliser l'ascensseur", 0xFFFFDD, 1784.9822, -1302.0426, 13.6491, 4.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
	new string[128],
		Float:z;

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    Obj_FloorDoors[i][0] 	= CreateDynamicObject(18757, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000,-1,-1,-1,STREAM_DISTANCE);
		Obj_FloorDoors[i][1] 	= CreateDynamicObject(18756, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000,-1,-1,-1,STREAM_DISTANCE);
		format(string, sizeof(string), "%s\nAppuyer sur 'F' pour descendre", FloorNames[i]);

		if(i == 0)
		    z = 13.4713;
		else
		    z = 13.4713 + 8.7396 + ((i-1) * 5.45155);

		Label_Floors[i]         = CreateDynamic3DTextLabel(string, 0xFFFFDD, 1783.9799, -1300.7660, z, 10.5, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1,LABEL_STREAM_DISTANCE);
		// Label_Elevator, Text3D:Label_Floors[21];
	}
	Floor_OpenDoors(0);
	Elevator_OpenDoors();
	return 1;
}

stock Elevator_Destroy()
{
	if(IsValidDynamicObject(Obj_Elevator)) DestroyDynamicObject(Obj_Elevator);
	if(IsValidDynamicObject(Obj_ElevatorDoors[0]))DestroyDynamicObject(Obj_ElevatorDoors[0]);
	if(IsValidDynamicObject(Obj_ElevatorDoors[1]))DestroyDynamicObject(Obj_ElevatorDoors[1]);
	if(IsValidDynamic3DTextLabel(Label_Elevator))DestroyDynamic3DTextLabel(Label_Elevator);
	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    if(IsValidDynamicObject(Obj_FloorDoors[i][0]))DestroyDynamicObject(Obj_FloorDoors[i][0]);
		if(IsValidDynamicObject(Obj_FloorDoors[i][1]))DestroyDynamicObject(Obj_FloorDoors[i][1]);
		if(IsValidDynamic3DTextLabel(Label_Floors[i]))DestroyDynamic3DTextLabel(Label_Floors[i]);
	}
	return 1;
}

stock Elevator_OpenDoors()
{
	new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_L_OPENED, y, z, DOORS_SPEED);
	MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_R_OPENED, y, z, DOORS_SPEED);
	return 1;
}

stock Elevator_CloseDoors()
{
    if(ElevatorState == ELEVATOR_STATE_MOVING)
	    return 0;

    new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, y, z, DOORS_SPEED);
	MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, y, z, DOORS_SPEED);
	return 1;
}

stock Floor_OpenDoors(floorid)
{
    MoveDynamicObject(Obj_FloorDoors[floorid][0], X_DOOR_L_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[floorid][1], X_DOOR_R_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	return 1;
}

stock Floor_CloseDoors(floorid)
{
    MoveDynamicObject(Obj_FloorDoors[floorid][0], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[floorid][1], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	return 1;
}

stock Elevator_MoveToFloor(floorid)
{
	ElevatorState = ELEVATOR_STATE_MOVING;
	ElevatorFloor = floorid;

	MoveDynamicObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), 0.5);
    MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.5);
    MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.5);
    DestroyDynamic3DTextLabel(Label_Elevator);
	ElevatorBoostTimer = SetTimerEx("Elevator_Boost", 2000, 0, "i", floorid);
	return 1;
}

public Elevator_Boost(floorid)
{
	// Increases the elevator's speed until it reaches 'floorid'

	MoveDynamicObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveDynamicObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveDynamicObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
	return 1;
}

public Elevator_TurnToIdle()
{
	ElevatorState = ELEVATOR_STATE_IDLE;
	ReadNextFloorInQueue();
	return 1;
}

stock RemoveFirstQueueFloor()
{
	// Removes the data in ElevatorQueue[0], and reorders the queue accordingly.

	for(new i; i < sizeof(ElevatorQueue) - 1; i ++)
	    ElevatorQueue[i] = ElevatorQueue[i + 1];

	ElevatorQueue[sizeof(ElevatorQueue) - 1] = INVALID_FLOOR;
	return 1;
}

stock AddFloorToQueue(floorid)
{
	new slot = -1;
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(ElevatorQueue[i] == INVALID_FLOOR)
	    	{slot = i;break;}
	}

	if(slot != -1)
	{
	    ElevatorQueue[slot] = floorid;
     	
	    if(ElevatorState == ELEVATOR_STATE_IDLE)
	        ReadNextFloorInQueue();
	        
	    return 1;
	}
	return 0;
}

stock ResetElevatorQueue()
{
	// Resets the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    ElevatorQueue[i] 	= INVALID_FLOOR;
	    FloorRequestedBy[i] = INVALID_PLAYER_ID;
	}
	return 1;
}

stock IsFloorInQueue(floorid)
{
	// Checks if the specified floor is currently part of the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	    if(ElevatorQueue[i] == floorid)
	        return 1;
	return 0;
}

stock ReadNextFloorInQueue()
{
	// Reads the next floor in the queue, closes doors, and goes to it.

	if(ElevatorState != ELEVATOR_STATE_IDLE || ElevatorQueue[0] == INVALID_FLOOR)
	    return 0;

	Elevator_CloseDoors();
	Floor_CloseDoors(ElevatorFloor);
	return 1;
}

stock DidPlayerRequestElevator(playerid)
{
	for(new i; i < sizeof(FloorRequestedBy); i ++)
	    if(FloorRequestedBy[i] == playerid)
	        return 1;
	return 0;
}

stock ShowElevatorDialog(playerid)
{
	new string[512];
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(FloorRequestedBy[i] != INVALID_PLAYER_ID)
	        strcat(string, "{FF0000}");

	    strcat(string, FloorNames[i]);
	    strcat(string, "\n");
	}

	ShowPlayerDialog(playerid, DIALOG_ID, DIALOG_STYLE_LIST, "|Ascensseur|", string, "Accepter", "Annuler");
	return 1;
}

stock CallElevator(playerid, floorid)
{
	// Calls the elevator (also used with the elevator dialog).

	if(FloorRequestedBy[floorid] != INVALID_PLAYER_ID || IsFloorInQueue(floorid))
	    return 0;

	FloorRequestedBy[floorid] = playerid;
	AddFloorToQueue(floorid);
	return 1;
}

stock Float:GetElevatorZCoordForFloor(floorid)
    return (GROUND_Z_COORD + FloorZOffsets[floorid] + ELEVATOR_OFFSET); // A small offset for the elevator object itself.

stock Float:GetDoorsZCoordForFloor(floorid)
	return (GROUND_Z_COORD + FloorZOffsets[floorid]);

stock GetVehicleRotation (vehicleid, &Float: heading,  &Float: attitude,  &Float: bank)
{
    new Float: quat_w, Float: quat_x, Float: quat_y, Float: quat_z;
    GetVehicleRotationQuat (vehicleid, quat_w, quat_x, quat_y, quat_z);
    ConvertNonNormaQuatToEuler (quat_w, quat_x, quat_z, quat_y,  heading,  attitude,  bank);
    bank = -1 * bank;
    return 1;
}

stock ConvertNonNormaQuatToEuler(Float: qw, Float: qx, Float: qy, Float: qz, &Float: heading, &Float: attitude, &Float: bank)
{
    new Float: sqw = qw * qw;
    new Float: sqx = qx * qx;
    new Float: sqy = qy * qy;
    new Float: sqz = qz * qz;
    new Float: unit = sqx + sqy + sqz + sqw;
    new Float: test = qx * qy + qz * qw;
    heading = atan2 (2 * qy * qw - 2 * qx * qz, sqx - sqy - sqz + sqw);
    attitude = asin (2 * test / unit);
    bank = atan2(2 * qx * qw - 2 * qy * qz, -sqx + sqy - sqz + sqw);
    return 1;
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) || (anim == 1643) || (anim == 1453) || (anim == 220))
		{return 1;}
	return 0;
	
}

stock msg_Client(playerid, color, const msg[])
{
	return SendClientMessage(playerid,color,msg);
}

stock msg_Box(playerid, color[], prefixInfo[], msg[], timeclose)
{

	KillTimer(infoBoxTimer[playerid]);
	new string[256];
	TextDrawShowForPlayer(playerid,infoBox[0]);
	TextDrawShowForPlayer(playerid,infoBox[1]);
	PlayerTextDrawShow(playerid,infoText[playerid]);
	ConvertirTexte(msg);
	ConvertirTexte(prefixInfo);
	format(string,sizeof(string),"%s %s :~w~ %s",color,prefixInfo,msg);
	PlayerTextDrawSetString(playerid,infoText[playerid],string);
	infoBoxTimer[playerid] = SetTimerEx("infoBoxClose",timeclose,false,"i",playerid);
	return 1;
}

forward infoBoxClose(playerid);
public infoBoxClose(playerid)
{
	TextDrawHideForPlayer(playerid,infoBox[0]);
	TextDrawHideForPlayer(playerid,infoBox[1]);
	PlayerTextDrawHide(playerid,infoText[playerid]);
	return 1;
}

stock msg_cFormated(playerid, color, const msg[], {Float,_}:...)
{
	new len = strlen(msg),d=0,posArg = 3;
	new dest[512];
	for(new i=0;i<len;i++)
	{
		if(msg[i] == '%')
		{
			switch (msg[i+1])
			{
				case 's':
				{
					new poss,arg,tmppos;
					new str[128];
					while(getarg(posArg,poss)!='\0')
					{
						arg=getarg(posArg,poss++);
						str[tmppos]=arg;
						tmppos++;
					}
					strins(dest,str,d,strlen(str));
					d+=strlen(str);
					posArg++;
					i++;
				}
				case 'i', 'd':
				{
					new str[128];
					format(str,sizeof(str),"%d",getarg(posArg));
					strins(dest,str,d,strlen(str));
					d+=strlen(str);
					posArg++;
					i++;
				}
				case 'f':
				{
					new str[128];
					format(str,sizeof(str),"%f",getarg(posArg));
					strins(dest,str,d,strlen(str));
					d+=strlen(str);
					posArg++;
					i++;
				}
				case '.':
				{
					new len2 = msg[i+2];
					if(len2 == 0)
					{
						dest[d] = msg[i];
						d++;
					}
					else
					{
						new str[32],formatting[5];
						formatting[0] = '%';
						formatting[1] = '.';
						formatting[2] = len2;
						formatting[3] = 'f';
						format(str,sizeof(str),formatting,getarg(posArg));
						strins(dest,str,d,len2);
						d+=len;
						posArg++;
						i+= 2;
					}
				}
				default:
				{
					dest[d] = msg[i];
					d++;
				}
			}
		}
		else
		{
			dest[d] = msg[i];
			d++;
		}
	}
	//printf("[DEBUG] %s",dest);
	return msg_Client(playerid,color,dest);
}


stock msg_aFormated(color, const msg[], {Float,_}:...)
{
	new len = strlen(msg),d=0,posArg = 2;
	new dest[128];
	for(new i=0;i<len;i++)
	{
		if(msg[i] == '%')
		{
			switch (msg[i+1])
			{
				case 's':
				{
					new poss,arg,tmppos;
					new str[128];
					while(getarg(posArg,poss)!='\0')
					{
						arg=getarg(posArg,poss++);
						str[tmppos]=arg;
						tmppos++;
					}
					strins(dest,str,d,strlen(str));
					d+=strlen(str);
					posArg++;
					i++;
				}
				case 'i', 'd':
				{
					new str[128];
					format(str,sizeof(str),"%d",getarg(posArg));
					strins(dest,str,d,strlen(str));
					d+=strlen(str);
					posArg++;
					i++;
				}
				case 'f':
				{
					new str[128];
					format(str,sizeof(str),"%f",getarg(posArg));
					strins(dest,str,d,strlen(str));
					d+=strlen(str);
					posArg++;
					i++;
				}
				case '.':
				{
					new len2 = msg[i+2];
					if(len2 == 0)
					{
						dest[d] = msg[i];
						d++;
					}
					else
					{
						new str[32],formatting[5];
						formatting[0] = '%';
						formatting[1] = '.';
						formatting[2] = len2;
						formatting[3] = 'f';
						format(str,sizeof(str),formatting,getarg(posArg));
						strins(dest,str,d,len2);
						d+=len;
						posArg++;
						i+= 2;
					}
				}
				default:
				{
					dest[d] = msg[i];
					d++;
				}
			}
		}
		else
		{
			dest[d] = msg[i];
			d++;
		}
	}
	//printf("[DEBUG] %s",dest);
	return SendClientMessageToAll(color,dest);
}

stock ConvertToColor(RR,GG,BB,AA)return (RR*16777216)+(GG*65536)+(BB*256)+AA;
stock _UpdateOPA(playerid=INVALID_PLAYER_ID) //my version of foreach (I made it before Y_Less did! publicly anyway)
{
	_OnlinePlayers=0;
	for(new ply;ply<MAX_PLAYERS;ply++)
	{
		if(IsPlayerConnected(ply)&&(ply!=playerid))
		{
			_OPArray[_OnlinePlayers]=ply;
			_OnlinePlayers++;
		}
	}
}

forward FadeColorForPlayer(playerid,RR1,GG1,BB1,AA1,RR2,GG2,BB2,AA2,steps,hold);
public FadeColorForPlayer(playerid,RR1,GG1,BB1,AA1,RR2,GG2,BB2,AA2,steps,hold)
{
	_pStep[playerid]=steps;//countdown, sorta
	new tmpsteps; //This will have to be added to incase the math is messed up (programming annoyance)
	_pHold[playerid]=hold;//How long the last color is held before disappearing (Divide this by UPDATERATE to get the time Ex:hold=10, in milliseconds that's 1000)
	_pEndColor[playerid][0]=RR2;
	_pEndColor[playerid][1]=GG2;
	_pEndColor[playerid][2]=BB2;
	_pEndColor[playerid][3]=AA2;
	_pCurrentColor[playerid][0]=RR1;
	_pCurrentColor[playerid][1]=GG1;
	_pCurrentColor[playerid][2]=BB1;
	_pCurrentColor[playerid][3]=AA1;
	_pRateColor[playerid][0]=(RR1-RR2)/steps;
	_pRateColor[playerid][1]=(GG1-GG2)/steps;
	_pRateColor[playerid][2]=(BB1-BB2)/steps;
	_pRateColor[playerid][3]=(AA1-AA2)/steps;
	//No dividing by 0!
	if(_pRateColor[playerid][0]!=0)if(((RR1-RR2)/_pRateColor[playerid][0])>steps)tmpsteps=((RR1-RR2)/_pRateColor[playerid][0])-steps;
	if(_pRateColor[playerid][1]!=0)if(((GG1-GG2)/_pRateColor[playerid][1])>steps+tmpsteps)tmpsteps=((GG1-GG2)/_pRateColor[playerid][1])-steps;
	if(_pRateColor[playerid][2]!=0)if(((BB1-BB2)/_pRateColor[playerid][2])>steps+tmpsteps)tmpsteps=((BB1-BB2)/_pRateColor[playerid][2])-steps;
	if(_pRateColor[playerid][3]!=0)if(((AA1-AA2)/_pRateColor[playerid][3])>steps+tmpsteps)tmpsteps=((AA1-AA2)/_pRateColor[playerid][3])-steps;
	if(tmpsteps)_pStep[playerid]+=tmpsteps;
}
FadeInit()
{
	_text=TextDrawCreate(0.0,0.0,"~r~");
	TextDrawTextSize(_text,640,480);
	TextDrawLetterSize(_text,0.0,50.0);
	TextDrawUseBox(_text,1);
	SetTimer("_UpdateFadeTimer",_UPDATERATE,1);
	_UpdateOPA();
	return 1;
}
FadeExit()
{
	TextDrawDestroy(_text);
	return 1;
}
FadePlayerConnect(playerid)
{
	_UpdateOPA();
	_pHold[playerid]=-1;
	_pStep[playerid]=-1;
	return 1;
}
FadePlayerDisconnect(playerid)
{
	_UpdateOPA(playerid);
	return 1;
}
stock StopPlayerFade(playerid)
{
	_pStep[playerid]=0;
	_pHold[playerid]=0;
}
public _UpdateFadeTimer()
{
	new playerid;
	for(new opa;opa<_OnlinePlayers;opa++)
	{
		playerid=_OPArray[opa];
		if(_pStep[playerid])
		{
			_pStep[playerid]--;
			for(new color;color<4;color++)
			{
				_pCurrentColor[playerid][color]-=_pRateColor[playerid][color];
				if(_pRateColor[playerid][color]>0)
				{
					if(_pCurrentColor[playerid][color]<_pEndColor[playerid][color])_pCurrentColor[playerid][color]=_pEndColor[playerid][color];
				}
				if(_pRateColor[playerid][color]<0)
				{
					if(_pCurrentColor[playerid][color]>_pEndColor[playerid][color])_pCurrentColor[playerid][color]=_pEndColor[playerid][color];
				}
				if(_pCurrentColor[playerid][color]<0)_pCurrentColor[playerid][color]=0;
				if(_pCurrentColor[playerid][color]>255)_pCurrentColor[playerid][color]=255;
			}
			TextDrawBoxColor(_text,ConvertToColor(_pCurrentColor[playerid][0],_pCurrentColor[playerid][1],_pCurrentColor[playerid][2],_pCurrentColor[playerid][3]));
			TextDrawShowForPlayer(playerid,_text);
		}
		else if(_pStep[playerid]==0)
		{
			_pStep[playerid]=-1;
			CallLocalFunction("OnFadeComplete","ii",playerid,1);
		}
		else if(_pHold[playerid])
		{
			_pHold[playerid]--;
		}
		else if(_pHold[playerid]==0)
		{
			_pHold[playerid]=-1;
			TextDrawHideForPlayer(playerid,_text);
			CallLocalFunction("OnFadeComplete","ii",playerid,0);
		}
	}
}

stock date( UnixTimestamp,  _form=0 )
{

	new timestamp=UnixTimestamp+3600; // Decalage de 1h
	new year=1970, day=0, month=0, hour=0, mins=0, sec=0;

	new days_of_month[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
	new names_of_month[12][10] = {"Janvier","Fevrier","Mars","Avris","Mai","Juin","Juillet","Aout","Septembre","Octobre","Novembre","Decembre"};
	new returnstring[32];

	while(timestamp>31622400){
		timestamp -= 31536000;
		if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) )  timestamp -= 86400;
		year++;
	}

	if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) )
		days_of_month[1] = 29;
	else
		days_of_month[1] = 28;


	while(timestamp>86400)
	{
		timestamp -= 86400, day++;
		if(day==days_of_month[month]) day=0, month++;
	}

	if(_form<4)
	{
		while(timestamp>60)
		{
			timestamp -= 60, mins++;
			if( mins == 60) mins=0, hour++;
		}

		sec=timestamp;
	}
	switch( _form )
	{
		case 1: format(returnstring, 31, "%02d/%02d/%d %02d:%02d:%02d", day+1, month+1, year, hour, mins, sec);
		case 2: format(returnstring, 31, "%s %02d, %d, %02d:%02d:%02d", names_of_month[month],day+1,year,  hour, mins, sec);
		case 3: format(returnstring, 31, "%d %c%c%c %d, %02d:%02d", day+1,names_of_month[month][0],names_of_month[month][1],names_of_month[month][2],  year,hour,mins);
        case 4: format(returnstring, 31, "%d %s %d", day+1,names_of_month[month],  year);
        case 5: format(returnstring, 31, "%02d/%02d/%d", day+1, month+1, year);
        case 6: format(returnstring, 31, "%02d:%02d", hour, mins);

		default: format(returnstring, 31, "%02d.%02d.%d-%02d:%02d:%02d", day+1, month+1, year, hour, mins, sec);
	}

	return returnstring;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
        printf("[RCON AC] Echec de %s : %s",ip, password);
        new pip[16];
        for(new i=0; i<MAX_PLAYERS_CURRENT+1; i++)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
            {
                if(tentativeconexionrcon != 3)
                	{tentativeconexionrcon++;}
                else
                {
                    msg_Client(i, 0xFFFFFFFF, "Vous avez été banni pour tentative de conexion en RCON.");
                    MySQLBan(i,-1,"3 Echec RCON",-1);
                }
            }
        }
    }
    else
    	{tentativeconexionrcon = 0;}
    return 1;
}
AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}

//===============================FIN DU SCRIPT==================================
